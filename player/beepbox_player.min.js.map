{"version":3,"names":["TypePresets","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","samplesFailed","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","console","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","value","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","effectsIncludeRM","effectsIncludePhaser","effectsIncludeNoteRange","effectsIncludeInvertWave","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","jsonFormat","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","phaserMixRange","phaserFeedbackRange","phaserFreqRange","phaserMinFreq","phaserMaxFreq","phaserMinStages","phaserMaxStages","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","ringModRange","ringModHzRange","rmHzOffsetCenter","rmHzOffsetMax","rmHzOffsetMin","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","newEnvelopes","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","unisonVoicesMin","unisonVoicesMax","unisonSpreadMin","unisonSpreadMax","unisonOffsetMin","unisonOffsetMax","unisonExpressionMin","unisonExpressionMax","unisonSignMin","unisonSignMax","sineWaveMask","sineWave","generateSineWave","perEnvelopeSpeedIndices","perEnvelopeSpeedToIndices","perEnvelopeBoundMin","perEnvelopeBoundMax","randomEnvelopeSeedMax","randomEnvelopeStepsMax","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateQuasiSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","invertSliderIndicator","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","getComputed","noiseChannels","Number","modChannels","pitchChannels","regex","secondaryChannel","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","getComputedStyle","_styleElement","getPropertyValue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","has","get","pitchChannelCount","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","noiseChannelCount","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","setThemeProperty","_a","sheet","cssRules","getThemeProperties","cssText","getFullTheme","textContent","setTheme","theme","themes","undefined","currentSetTheme","themeColor","querySelector","trim","usesPianoScheme","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","Map","Skeuomorphic","woodland","Blurple","Glyde","AWeebyssBox","Scratch","Undertale","Slushie","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","blutonium","zefbox","harrybox","brucebox","shitbox4","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","WeebBox","Protanopia","Tritanopia","Deuteranopia","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","sampleFailed","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","thirdNote","dimmedArea","pitch1Background","pitch2Background","pitch3Background","pitch5Background","pitch6Background","pitch8Background","pitch9Background","pitch10Background","pitch11Background","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","songPlayerMargin","progressBar","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","scrollbarColor","scrollbarBackground","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","showSongDetailsAlert","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","volume","eqFilterType","eqSimpleCut","eqSimplePeak","envelopeSpeed","discreteEnvelope","pan","panDelay","decimalOffset","isDrum","algorithm","feedbackType","feedbackAmplitude","operators","frequency","waveform","eqSubFilters0","eqSubFilters1","pitchShiftSemitones","target","envelope","perEnvelopeSpeed","perEnvelopeLowerBound","perEnvelopeUpperBound","clicklessTransition","cutoffHz","linearGain","noteFilterType","noteSimpleCut","noteSimplePeak","noteFilter","noteSubFilters0","distortion","aliases","bitcrusherOctave","bitcrusherQuantization","phaserMix","phaserFreq","phaserFeedback","phaserStages","reverb","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","noteSubFilters1","echoSustain","echoDelayBeats","dynamism","shape","harmonics","stringSustain","detuneCents","vibrato","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","chorus","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","filterResonance","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","PRIME32_1","PRIME32_2","PRIME32_3","PRIME32_4","PRIME32_5","encoder","xxHash32","input","seed","buffer","TextEncoder","encode","acc","accN","limit","lane","laneN0","laneN1","laneNP","acc0","acc1","epsilon","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","o","e","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","interval","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","format","toLowerCase","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","oldMin","newMin","old","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","spectrum","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","isNoiseEnvelope","tempEnvelopeSpeed","steps","pitchEnvelopeStart","pitchEnvelopeEnd","envelopeObject","isTremolo2","Boolean","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","unisonBuzzes","arpeggioSpeed","fastTwoNoteArp","legacyTieOver","supersawDynamism","supersawSpread","supersawShape","stringSustainType","ringModulation","ringModulationHz","rmWaveformIndex","rmPulseWidth","rmHzOffset","bitcrusherFreq","echoDelay","invertWave","algorithm6Op","feedbackType6Op","customAlgorithm","customFeedbackType","customChipWave","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","modEnvelopeNumbers","invalidModulators","upperNoteLimit","lowerNoteLimit","isNoiseInstrument","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","filterEnvelope","legacyPulseEnv","pulseEnvelope","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","feedbackEnvelope","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","potentialPitchShift","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","synthboxLegacyFeedbacks","synthboxFeedbackType","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","envelopeInverse","getLargestControlPointCount","forNoteFilter","largest","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","loopType","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","author","description","showSongDetails","setSongTheme","pattern","bar","toBase64String","bits","_variant","_latestAbyssBoxVersion","encodedSongTitle","encodeURIComponent","encodedAuthorTitle","encodedDescriptionTitle","encodedSongTheme","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","modEnvelope","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","fromAbyssBox","fromSlarmoosBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_latestUltraBoxVersion","_oldestUltraBoxVersion","_latestSlarmoosBoxVersion","_oldestSlarmoosBoxVersion","_oldestAbyssBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","songAuthorLength","songDescriptionLength","songThemeLength","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","oldToNewEnvelope","envTypeIndex","pitchEnvelopeCompact","pre3To3g","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","shouldCorrectTempoMods","jummboxTempoMin","jumfive","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","noteIsForTempoMod","tempoOffset","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","alert","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsStartUnscaled","noteSecondsEnd","noteSecondsEndUnscaled","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsStartUnscaled","prevNoteSecondsEnd","prevNoteSecondsEndUnscaled","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","tickTimeEnd","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","startPinTickAbsolute","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","secondsPerTickUnscaled","atNoteStart","forceContinueAtStart","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","computeTicksSinceStart","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","globalEnvelopeSpeed","timeSinceStart","boundsCorrect","secondsPerTickScaled","defaultPitch","getPitchValue","computePitchEnvelope","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","unspedTime","beats","noteSize","isDrumset","notePinStart","boundAdjust","noteSizeToVolumeMult","hashMax","step","timeHash","pitchHash","noteHash","weightedAverage","trap","saw","tri","attack","lin","calculateBends","arpTime","tonePitch","lastInterval","startNote","endNote","envelopeLowerBound","envelopeUpperBound","range","computeDrumsetEnvelopes","drumsetFilterEnvelope","beatsPerPart","partTimeStart","partTimeEnd","computeDrumsetEnvelope","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","noiseSample","noiseSampleA","noiseSampleB","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","vibratoTime","nextVibratoTime","envelopeTime","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","ringModMix","ringModMixDelta","ringModPhase","ringModPhaseDelta","ringModPhaseDeltaScale","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","phaserSamples","phaserPrevInputs","phaserFeedbackMult","phaserFeedbackMultDelta","phaserMixDelta","phaserBreakCoef","phaserBreakCoefDelta","phaserStagesDelta","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","getTicksIntoBar","getCurrentPart","envelopeSpeeds","useEnvelopeSpeed","isModActive","getModValue","isInteger","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","usesRingModulation","usesPhaser","useDistortionStart","useDistortionEnd","useDistortionEnvelopeStart","useDistortionEnvelopeEnd","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","freqSettingEnvelopeStart","freqSettingEnvelopeEnd","quantizationSettingStart","quantizationSettingEnd","quantizationSettingEnvelopeStart","quantizationSettingEnvelopeEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","panEnvelopeStart","panEnvelopeEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","chorusEnvelopeStart","chorusEnvelopeEnd","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","useRingModStart","useRingModEnd","useRingModEnvelopeStart","useRingModEnvelopeEnd","useRingModHzStart","useRingModHzEnd","useRingModHzEnvelopeStart","useRingModHzEnvelopeEnd","ringModMinHz","ringModMaxHz","ringModStart","ringModEnd","ringModPhaseDeltaStart","ringModPhaseDeltaEnd","maxEchoMult","averageEchoDelaySeconds","echoSustainEnvelopeStart","echoSustainEnvelopeEnd","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","phaserMinFeedback","phaserMaxFeedback","phaserFeedbackMultSlider","phaserFeedbackMultRawStart","phaserFeedbackMultRawEnd","phaserFeedbackMultStart","phaserFeedbackMultEnd","phaserMixSlider","phaserMixStart","phaserMixEnd","phaserBreakFreqSlider","phaserBreakFreqRawStart","phaserBreakFreqRawEnd","phaserBreakFreqRemappedStart","phaserBreakFreqRemappedEnd","phaserBreakFreqStart","phaserBreakFreqStartT","phaserBreakCoefStart","phaserBreakFreqEnd","phaserBreakFreqEndT","phaserBreakCoefEnd","phaserStagesEnvelopeStart","phaserStagesEnvelopeEnd","phaserStagesSlider","phaserStagesStart","phaserStagesEnd","reverbEnvelopeStart","reverbEnvelopeEnd","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBarStart","loopBarEnd","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","filteredPitches","filteredBassPitches","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","useStrumSpeed","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","prevPitchesForThisInstrument","nextPattern","nextPatternForcesContinueAtStart","nextPitchesForThisInstrument","strumOffsetParts","prevNoteForThisTone","noteForThisTone","pitchesForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetEnvelopeComputer","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","data","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","usesInvertWave","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","sawPhaseA","sawPhaseB","sawPhaseC","sawPhaseD","pulseWaveA","pulseWaveB","t","dynamismDelta","unisonDetunes","shapeDelta","phase","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilterA","pitchRelativefilterB","samplesInPeriod","findRandomZeroCrossing","waveSampleA","waveSampleB","referenceDelta","phaseInt","stereoBufferIndex","dotTarget","lerpEndRatio","envelopeTarget","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","ofBar","_b","SongPlayerLayout","setLayout","layout","_spLayoutMap","layoutLookup","classic","top","boxbeep","piano","vertical","middle","button","div","h1","canvas","form","label","h2","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","setSpLayout","animationRequest","prevHash","id","toString","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilascope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","closePrompt","class","_okayButton","_form","layoutContainer","titleText","layoutStuffs","editLink","copyLink","href","shareLink","fullscreenLink","shortenSongLink","draggingPlayhead","playButton","playButtonContainer","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","zoomIcon","cx","cy","r","stroke","zoomButton2","zoomButton","timeline","pianoContainer","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","timelineBarProgress","timelineBar","timelineBarContainer","volumeBarContainerDiv","promptContainer","songPlayerContainer","body","controlCenterId","getElementById","controlCenterRow3","flexDirection","flex","controlCenterRow1","alignItems","justifyContent","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onTimelineMouseMove","preventDefault","onTimelineCursorMove","elements","clientY","pageY","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","useVertical","useBoxBeep","bottom","right","left","onTimelineCursorUp","setSynthVolume","usePiano","useMiddle","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","kc","children","kf","noteStart","noteEnd","noteBar","p","isNoise","kf2","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","transform","gridTemplateRows","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","color","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","useClassic","useTop","useShitbox4","useMusicbox","pianoContainerBoundingRect","kw","kh","pitchNameIndex","renderPiano","radius","classList","add","renderZoomIcon","self","keyCode","shiftKey","visibilityState","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","share","open"],"sources":["../../synth/SynthConfig.ts","../../node_modules/imperative-html/src/elements-base.ts","../../node_modules/imperative-html/src/elements-strict.ts","../../editor/ColorConfig.ts","../../editor/EditorConfig.ts","../../synth/FFT.ts","../../synth/Deque.ts","../../global/Events.ts","../../synth/filtering.ts","../../node_modules/js-xxhash/dist/esm/xxHash32.js","../../synth/synth.ts","../../player/style.ts","../../player/Layout.ts","../../player/main.ts","../../global/Oscilascope.ts"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\nexport interface Dictionary<T> {\n    [K: string]: T;\n}\n\n// @TODO: Not ideal to make this writable like this.\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\nexport interface DictionaryArray<T> extends Array<T> {\n    dictionary: Dictionary<T>;\n}\n\nexport const enum FilterType {\n    lowPass,\n    highPass,\n    peak,\n    length,\n}\n\nexport const enum SustainType {\n\tbright,\n\tacoustic,\n\tlength,\n}\n\nexport const enum EnvelopeType {\n    none,\n    noteSize,\n    pitch, //slarmoo's box 0.9\n    pseudorandom, //slarmoo's box 1.3\n\tpunch,\n\tflare,\n\ttwang,\n\tswell,\n    lfo, //renamed from tremolo in slarmoo's box 1.3\n    tremolo2, //deprecated as of slarmoo's box 1.3; Kept for updating integrity and drumsets\n    decay,\n    wibble,\n    //hard,\n    linear,\n    rise,\n    blip,\n    fall, //slarmoo's box 1.2\n}\n\nexport const enum InstrumentType {\n    chip,\n    fm,\n    noise,\n    spectrum,\n    drumset,\n    harmonics,\n    pwm,\n    pickedString,\n    supersaw,\n    customChipWave,\n    mod,\n\tfm6op,\n    length,\n}\n\nexport const TypePresets: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\n\nexport const enum DropdownID {\n    Vibrato = 0,\n    Pan = 1,\n    Chord = 2,\n    Transition = 3,\n    FM = 4,\n    PulseWidth = 5,\n    Unison = 6,\n    Envelope = 7,\n    EnvelopeSettings = 8,\n}\n\nexport const enum EffectType {\n    reverb,\n    chorus,\n    panning,\n    distortion,\n    bitcrusher,\n    noteFilter,\n    echo,\n    pitchShift,\n    detune,\n    vibrato,\n    transition,\n    chord,\n    ringModulation,\n    phaser,\n    noteRange,\n    invertWave,\n    length,\n}\n\nexport const enum EnvelopeComputeIndex {\n    noteVolume,\n    noteFilterAllFreqs,\n    pulseWidth,\n    stringSustain,\n    unison,\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\n    feedbackAmplitude,\n    pitchShift,\n    detune,\n    vibratoDepth,\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\n    decimalOffset,\n    supersawDynamism,\n\tsupersawSpread,\n\tsupersawShape,\n    phaserFreq,\n    phaserMix,\n    phaserFeedback,\n    phaserStages,\n    ringModulation,\n    ringModulationHz,\n    invertWave,\n    distortion,\n    bitcrusherQuantization,\n    bitcrusherFrequency,\n    chorus,\n    echoSustain,\n    reverb,\n    panning,\n    arpeggioSpeed,\n    length,\n}\n\nexport const enum BaseWaveTypes {\n    sine,\n    square,\n    triangle,\n    sawtooth,\n    trapezoid,\n    steppedSaw,\n    steppedTri,\n    // ramp,\n    length,\n}\n\n\nexport const enum RandomEnvelopeTypes {\n    time,\n    pitch,\n    note,\n    timeSmooth,\n    length,\n}\n\n/*\nexport const enum InstrumentAutomationIndex {\n    mixVolume,\n    eqFilterAllFreqs,\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\n    distortion,\n    bitcrusherQuantization,\n    bitcrusherFrequency,\n    panning,\n    chorus,\n    echoSustain,\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\n    reverb,\n    length,\n}\n*/\n\nexport interface BeepBoxOption {\n    readonly index: number;\n    readonly name: string;\n}\n\nexport interface Scale extends BeepBoxOption {\n    readonly flags: ReadonlyArray<boolean>;\n    readonly realName: string;\n}\n\nexport interface Key extends BeepBoxOption {\n    readonly isWhiteKey: boolean;\n    readonly basePitch: number;\n}\n\nexport interface Rhythm extends BeepBoxOption {\n    readonly stepsPerBeat: number;\n    readonly roundUpThresholds: number[] | null;\n}\n\nexport interface ChipWave extends BeepBoxOption {\n    readonly expression: number;\n    samples: Float32Array;\n    isPercussion?: boolean;\n    isCustomSampled?: boolean;\n    isSampled?: boolean;\n    extraSampleDetune?: number;\n    rootKey?: number;\n    sampleRate?: number;\n}\n\nexport interface OperatorWave extends BeepBoxOption {\n    samples: Float32Array;\n}\n\nexport interface ChipNoise extends BeepBoxOption {\n    readonly expression: number;\n    readonly basePitch: number;\n    readonly pitchFilterMult: number;\n    readonly isSoft: boolean;\n    samples: Float32Array | null;\n}\n\nexport interface Transition extends BeepBoxOption {\n    readonly isSeamless: boolean;\n    readonly continues: boolean;\n    readonly slides: boolean;\n    readonly slideTicks: number;\n    readonly includeAdjacentPatterns: boolean;\n}\n\nexport interface Vibrato extends BeepBoxOption {\n    readonly amplitude: number;\n    readonly type: number;\n    readonly delayTicks: number;\n}\n\nexport interface VibratoType extends BeepBoxOption {\n    readonly periodsSeconds: number[];\n    readonly period: number;\n}\n\nexport interface Unison extends BeepBoxOption {\n    readonly voices: number;\n    readonly spread: number;\n    readonly offset: number;\n    readonly expression: number;\n    readonly sign: number;\n}\n\nexport interface Modulator extends BeepBoxOption {\n    readonly name: string; // name that shows up in song editor UI\n    readonly pianoName: string; // short name that shows up in mod piano UI\n    readonly maxRawVol: number; // raw\n    readonly newNoteVol: number; // raw\n    readonly forSong: boolean; // true - setting is song scope\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\n    invertSliderIndicator?: boolean; // for whether or not you want to invert the slider indicator\n\n}\n\nexport interface Chord extends BeepBoxOption {\n    readonly customInterval: boolean;\n    readonly arpeggiates: boolean;\n    readonly strumParts: number;\n    readonly singleTone: boolean;\n}\n\nexport interface Algorithm extends BeepBoxOption {\n    readonly carrierCount: number;\n    readonly associatedCarrier: ReadonlyArray<number>;\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface OperatorFrequency extends BeepBoxOption {\n    readonly mult: number;\n    readonly hzOffset: number;\n    readonly amplitudeSign: number;\n}\n\nexport interface Feedback extends BeepBoxOption {\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface Envelope extends BeepBoxOption {\n    readonly type: EnvelopeType;\n    readonly speed: number;\n}\n\nexport interface AutomationTarget extends BeepBoxOption {\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\n    readonly displayName: string;\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\n\t//readonly range: number | null; // set if automation is allowed.\n    readonly maxCount: number;\n    readonly effect: EffectType | null;\n    readonly compatibleInstruments: InstrumentType[] | null;\n}\n\nexport const enum SampleLoadingStatus {\n    loading,\n    loaded,\n    error,\n}\n\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\n    switch (status) {\n\tcase SampleLoadingStatus.loading: return \"loading\";\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\n\tcase SampleLoadingStatus.error: return \"error\";\n    }\n}\n\nexport class SampleLoadingState {\n    public statusTable: Dictionary<SampleLoadingStatus>;\n    public urlTable: Dictionary<string>;\n    public totalSamples: number;\n    public samplesLoaded: number;\n    public samplesFailed: number;\n\n    constructor() {\n\tthis.statusTable = {};\n\tthis.urlTable = {};\n\tthis.totalSamples = 0;\n\tthis.samplesLoaded = 0;\n    }\n}\n\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\n\nexport class SampleLoadedEvent extends Event {\n    public readonly totalSamples: number;\n    public readonly samplesLoaded: number;\n    public readonly samplesFailed: number;\n\n    constructor(totalSamples: number, samplesLoaded: number, samplesFailed: number) {\n\tsuper(\"sampleloaded\");\n\tthis.totalSamples = totalSamples;\n\tthis.samplesLoaded = samplesLoaded;\n    this.samplesFailed = samplesFailed;\n    }\n}\n\nexport interface SampleLoadEventMap {\n    \"sampleloaded\": SampleLoadedEvent;\n}\n\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n\tsuper();\n    }\n}\n\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\n\nexport async function startLoadingSample(url: string, chipWaveIndex: number, presetSettings: Dictionary<any>, rawLoopOptions: any, customSampleRate: number): Promise<void> {\n    // @TODO: Make parts of the code that expect everything to already be\n    // in memory work correctly.\n    // It would be easy to only instantiate `SongEditor` and company after\n    // everything is loaded, but if dynamic sample loading without a reload\n    // is deemed necessary, anything that involves chip waves has to be\n    // revisited so as to be able to work with a changing list of chip\n    // waves that may or may not be ready to be used.\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n    let closedSampleLoaderAudioContext: boolean = false;\n    const chipWave = Config.chipWaves[chipWaveIndex];\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n    if (OFFLINE) {\n        if (url.slice(0, 5) === \"file:\") {\n            const dirname = await getDirname();\n            const joined = await pathJoin(dirname, url.slice(5));\n            url = joined;\n        }\n    }\n    fetch(url).then((response) => {\n\tif (!response.ok) {\n\t    // @TODO: Be specific with the error handling.\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\n\t}\n\treturn response.arrayBuffer();\n    }).then((arrayBuffer) => {\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n    }).then((audioBuffer) => {\n\t// @TODO: Downmix.\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n\tconst integratedSamples = performIntegral(samples);\n\tchipWave.samples = integratedSamples;\n\trawChipWave.samples = samples;\n\trawRawChipWave.samples = samples;\n\tif (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n\t    presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n\t    presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n\t    presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n\t    presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n\t    presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n\t}\n\tsampleLoadingState.samplesLoaded++;\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t    sampleLoadingState.totalSamples,\n\t    sampleLoadingState.samplesLoaded,\n\t    sampleLoadingState.samplesFailed\n\t));\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    }).catch((error) => {\n\t//console.error(error);\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\tsampleLoadingState.samplesFailed++;\n    console.error(\"Failed to load \" + url + \":\\n\" + error);\n    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t    sampleLoadingState.totalSamples,\n\t    sampleLoadingState.samplesLoaded,\n\t    sampleLoadingState.samplesFailed\n\t));\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    });\n}\n\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\n    let value: T | string | null = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\n\n// @HACK: This just assumes these exist, regardless of whether they actually do\n// or not.\ndeclare global {\n    const OFFLINE: boolean; // for UB offline\n    const getDirname: () => Promise<string>; // for UB offline\n    const pathJoin: (...parts: string[]) => Promise<string>; // for UB offline\n    const kicksample: number[];\n    const snaresample: number[];\n    const pianosample: number[];\n    const WOWsample: number[];\n    const overdrivesample: number[];\n    const trumpetsample: number[];\n    const saxophonesample: number[];\n    const orchhitsample: number[];\n    const detatchedviolinsample: number[];\n    const synthsample: number[];\n    const sonic3snaresample: number[];\n    const comeonsample: number[];\n    const choirsample: number[];\n    const overdrivensample: number[];\n    const flutesample: number[];\n    const legatoviolinsample: number[];\n    const tremoloviolinsample: number[];\n    const amenbreaksample: number[];\n    const pizzicatoviolinsample: number[];\n    const timallengruntsample: number[];\n    const tubasample: number[];\n    const loopingcymbalsample: number[];\n    const kickdrumsample: number[];\n    const snaredrumsample: number[];\n    const closedhihatsample: number[];\n    const foothihatsample: number[];\n    const openhihatsample: number[];\n    const crashsample: number[];\n    const pianoC4sample: number[];\n    const liverpadsample: number[];\n    const marimbasample: number[];\n    const susdotwavsample: number[];\n    const wackyboxttssample: number[];\n    const peppersteak1: number[];\n    const peppersteak2: number[];\n    const vinyl: number[];\n    const slapbass: number[];\n    const hdeboverdrive: number[];\n    const sunsoftbass: number[];\n    const masculinechoir: number[];\n    const femininechoir: number[];\n    const southtololoche: number[];\n    const harp: number[];\n    const panflute: number[];\n    const krumhorn: number[];\n    const timpani: number[];\n    const crowdhey: number[];\n    const warioland4brass: number[];\n    const warioland4organ: number[];\n    const warioland4daow: number[];\n    const warioland4hourchime: number[];\n    const warioland4tick: number[];\n    const kirbykick: number[];\n    const kirbysnare: number[];\n    const kirbybongo: number[];\n    const kirbyclick: number[];\n    const funkkick: number[];\n    const funksnare: number[];\n    const funksnareleft: number[];\n    const funksnareright: number[];\n    const funktomhigh: number[];\n    const funktomlow: number[];\n    const funkhihatclosed: number[];\n    const funkhihathalfopen: number[];\n    const funkhihatopen: number[];\n    const funkhihatopentip: number[];\n    const funkhihatfoot: number[];\n    const funkcrash: number[];\n    const funkcrashtip: number[];\n    const funkride: number[];\n    const chronoperc1finalsample: number[];\n    const synthkickfmsample: number[];\n    const woodclicksample: number[];\n    const acousticsnaresample: number[];\n    const catpaintboxsample: number[];\n    const gameboypaintboxsample: number[];\n    const mariopaintboxsample: number[];\n    const drumpaintboxsample: number[];\n    const yoshipaintboxsample: number[];\n    const starpaintboxsample: number[];\n    const fireflowerpaintboxsample: number[];\n    const dogpaintbox: number[];\n    const oinkpaintbox: number[];\n    const swanpaintboxsample: number[];\n    const facepaintboxsample: number[];\n}\n\nfunction loadScript(url: string): Promise<void> {\n    const result: Promise<void> = new Promise((resolve, reject) => {\n\tif (!Config.willReloadForCustomSamples) {\n\t    const script = document.createElement(\"script\");\n\t    script.src = url;\n\t    document.head.appendChild(script);\n\t    script.addEventListener(\"load\", (event) => {\n\t\tresolve();\n\t    });\n\t} else {\n\t    // There's not really any errors that show up if the loading for\n\t    // this script is stopped early, but it won't really do anything\n\t    // particularly useful either in that case.\n\t}\n    });\n    return result;\n}\n\nexport function loadBuiltInSamples(set: number): void {\n    const defaultIndex: number = 0;\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n    if (set == 0) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n\t}\n\n\tloadScript(\"samples.js\")\n\t.then(() => loadScript(\"samples2.js\"))\n\t.then(() => loadScript(\"samples3.js\"))\n\t.then(() => loadScript(\"drumsamples.js\"))\n\t.then(() => loadScript(\"wario_samples.js\"))\n\t.then(() => loadScript(\"kirby_samples.js\"))\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(kicksample),\n\t\tcenterWave(snaresample),\n\t\tcenterWave(pianosample),\n\t\tcenterWave(WOWsample),\n\t\tcenterWave(overdrivesample),\n\t\tcenterWave(trumpetsample),\n\t\tcenterWave(saxophonesample),\n\t\tcenterWave(orchhitsample),\n\t\tcenterWave(detatchedviolinsample),\n\t\tcenterWave(synthsample),\n\t\tcenterWave(sonic3snaresample),\n\t\tcenterWave(comeonsample),\n\t\tcenterWave(choirsample),\n\t\tcenterWave(overdrivensample),\n\t\tcenterWave(flutesample),\n\t\tcenterWave(legatoviolinsample),\n\t\tcenterWave(tremoloviolinsample),\n\t\tcenterWave(amenbreaksample),\n\t\tcenterWave(pizzicatoviolinsample),\n\t\tcenterWave(timallengruntsample),\n\t\tcenterWave(tubasample),\n\t\tcenterWave(loopingcymbalsample),\n\t\tcenterWave(kickdrumsample),\n\t\tcenterWave(snaredrumsample),\n\t\tcenterWave(closedhihatsample),\n\t\tcenterWave(foothihatsample),\n\t\tcenterWave(openhihatsample),\n\t\tcenterWave(crashsample),\n\t\tcenterWave(pianoC4sample),\n\t\tcenterWave(liverpadsample),\n\t\tcenterWave(marimbasample),\n\t\tcenterWave(susdotwavsample),\n\t\tcenterWave(wackyboxttssample),\n\t\tcenterWave(peppersteak1),\n\t\tcenterWave(peppersteak2),\n\t\tcenterWave(vinyl),\n\t\tcenterWave(slapbass),\n\t\tcenterWave(hdeboverdrive),\n\t\tcenterWave(sunsoftbass),\n\t\tcenterWave(masculinechoir),\n\t\tcenterWave(femininechoir),\n\t\tcenterWave(southtololoche),\n\t\tcenterWave(harp),\n\t\tcenterWave(panflute),\n\t\tcenterWave(krumhorn),\n\t\tcenterWave(timpani),\n\t\tcenterWave(crowdhey),\n\t\tcenterWave(warioland4brass),\n\t\tcenterWave(warioland4organ),\n\t\tcenterWave(warioland4daow),\n\t\tcenterWave(warioland4hourchime),\n\t\tcenterWave(warioland4tick),\n\t\tcenterWave(kirbykick),\n\t\tcenterWave(kirbysnare),\n\t\tcenterWave(kirbybongo),\n\t\tcenterWave(kirbyclick),\n\t\tcenterWave(funkkick),\n\t\tcenterWave(funksnare),\n\t\tcenterWave(funksnareleft),\n\t\tcenterWave(funksnareright),\n\t\tcenterWave(funktomhigh),\n\t\tcenterWave(funktomlow),\n\t\tcenterWave(funkhihatclosed),\n\t\tcenterWave(funkhihathalfopen),\n\t\tcenterWave(funkhihatopen),\n\t\tcenterWave(funkhihatopentip),\n\t\tcenterWave(funkhihatfoot),\n\t\tcenterWave(funkcrash),\n\t\tcenterWave(funkcrashtip),\n\t\tcenterWave(funkride)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded,\n            sampleLoadingState.samplesFailed\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\n    }\n    else if (set == 1) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n\t}\n\n\tloadScript(\"nintaribox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(chronoperc1finalsample),\n\t\tcenterWave(synthkickfmsample),\n\t\tcenterWave(woodclicksample),\n\t\tcenterWave(acousticsnaresample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded,\n            sampleLoadingState.samplesFailed\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else if (set == 2) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n\t}\n\n\tloadScript(\"mario_paintbox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(catpaintboxsample),\n\t\tcenterWave(gameboypaintboxsample),\n\t\tcenterWave(mariopaintboxsample),\n\t\tcenterWave(drumpaintboxsample),\n\t\tcenterWave(yoshipaintboxsample),\n\t\tcenterWave(starpaintboxsample),\n\t\tcenterWave(fireflowerpaintboxsample),\n\t\tcenterWave(dogpaintbox),\n\t\tcenterWave(oinkpaintbox),\n\t\tcenterWave(swanpaintboxsample),\n\t\tcenterWave(facepaintboxsample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded,\n\t    sampleLoadingState.samplesFailed\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\n\nexport class Config {\n    // Params for post-processing compressor\n    public static thresholdVal: number = -10;\n    public static kneeVal: number = 40;\n    public static ratioVal: number = 12;\n    public static attackVal: number = 0;\n    public static releaseVal: number = 0.25;\n\n    public static willReloadForCustomSamples: boolean = false;\n\n    public static jsonFormat: string = \"AbyssBox\";\n    // public static thurmboxImportUrl: string = \"https://file.garden/ZMQ0Om5nmTe-x2hq/PandoraArchive%20Samples/\";\n\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\n\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\n        { name: \"Blues Major\", realName: \"blues major\", flags: [true, false, true, true, true,false, false, true, false, true, false, false] }, // Blues Major\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\n\t//modbox\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n\t// todbox\n\t{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\n\t//wackybox\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\n        //todbox\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\n\t]);\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\n\t\t//taken from todbox, called \"B#\" for some reason lol\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\n\t    //brucebox\n\t\t//g- isn't actually g-???\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\n\t\t//shitbox\n\t]);\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\n\tpublic static readonly tempoMin:                    number = 1;\n\tpublic static readonly tempoMax:                    number = 1000;\n\tpublic static readonly octaveMin:                   number = -3;\n\tpublic static readonly octaveMax:                   number = 3;\n    public static readonly echoDelayRange:              number = 24;\n    public static readonly echoDelayStepTicks:          number = 4;\n    public static readonly echoSustainRange:            number = 8;\n    public static readonly echoShelfHz:                 number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\n    public static readonly echoShelfGain:               number = Math.pow(2.0, -0.5);\n    public static readonly reverbShelfHz:               number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\n    public static readonly reverbShelfGain:             number = Math.pow(2.0, -1.5);\n\tpublic static readonly reverbRange:                 number = 32;\n    public static readonly reverbDelayBufferSize:       number = 16384; // TODO: Compute a buffer size based on sample rate.\n    public static readonly reverbDelayBufferMask:       number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\n    public static readonly phaserMixRange:              number = 32; \n    public static readonly phaserFeedbackRange:         number = 32; \n    public static readonly phaserFreqRange:             number = 32; \n    public static readonly phaserMinFreq:               number = 8.0; \n    public static readonly phaserMaxFreq:               number = 20000.0; \n    public static readonly phaserMinStages:             number = 0; \n    public static readonly phaserMaxStages:             number = 32; \n    public static readonly beatsPerBarMin:              number = 1;\n\tpublic static readonly beatsPerBarMax:              number = 64;\n\tpublic static readonly barCountMin:                 number = 1;\n\tpublic static readonly barCountMax:                 number = 1024;\n    public static readonly instrumentCountMin:          number = 1;\n    public static readonly layeredInstrumentCountMax:   number = 10;\n\t//this still hasn't been properly tested...\n    public static readonly patternInstrumentCountMax:   number = 10;\n\tpublic static readonly partsPerBeat:                number = 24;\n\tpublic static readonly ticksPerPart:                number = 2;\n\tpublic static readonly ticksPerArpeggio:            number = 3;\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷8 (32nd notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷12 (doudectuplets)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t]);\n\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false, false];\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\n    public static readonly fmBaseExpression: number = 0.03;\n    public static readonly noiseBaseExpression: number = 0.19;\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\n    public static readonly harmonicsBaseExpression: number = 0.025;\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\n   \t//normal\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n\t//modbox\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n      //cut\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \n\t//from sandbox, are these correct????\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n\t//brucebox\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\n//nerdbox\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n//from zefbox, are these correct????\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n        //wackybox\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    //from todbox\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n\t//I don't like this one.\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\n\t//from todbox beta (obviously)\n\t\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\n\t\n\t\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \n\t//search \"normie alert\" in beepcord\n]); \n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\n\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\n  \n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// technically these are from the pandorasbox beta but whatever\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// ultrabox noises\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t{ name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t]);\n\t\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\n    public static readonly filterFreqRange: number = 34;\n    public static readonly filterFreqReferenceSetting: number = 28;\n    public static readonly filterFreqReferenceHz: number = 8000.0;\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\n    public static readonly filterFreqMinHz: number = 8.0;\n    public static readonly filterGainRange: number = 15;\n    public static readonly filterGainCenter: number = 7;\n    public static readonly filterGainStep: number = 1.0 / 2.0;\n    public static readonly filterMaxPoints: number = 8;\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\n\n    public static readonly filterSimpleCutRange: number = 11;\n    public static readonly filterSimplePeakRange: number = 8;\n\n    public static readonly fadeInRange: number = 10;\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\n    public static readonly fadeOutNeutral: number = 4;\n    public static readonly drumsetFadeOutTicks: number = 48;\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n\t]);\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\n\t    //todbox vibratos\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\n\t\t//wackybox\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\n\t //too much wub breaks things just a little bit at it's original amplitude\n\t\t//sandbox\n\t]);\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\n\t]);\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n\t    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n\t\t\n\t //for modbox; voices = riffapp, spread = intervals, offset = offsets, expression = volume, and sign = signs\n\t]);\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"ring modulation\", \"phaser\", \"note range\", \"invert wave\"];\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb, EffectType.ringModulation, EffectType.phaser, EffectType.noteRange, EffectType.invertWave];\n    public static readonly noteSizeMax: number = 6;\n\tpublic static readonly volumeRange: number = 50;\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\n\tpublic static readonly volumeLogScale: number = 0.1428;\n\tpublic static readonly panCenter: number = 50;\n\tpublic static readonly panMax: number = Config.panCenter * 2;\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\n    public static readonly chorusRange: number = 8;\n    public static readonly ringModRange: number = 8;\n    public static readonly ringModHzRange: number = 64;\n    public static readonly rmHzOffsetCenter: number = 200;\n    public static readonly rmHzOffsetMax: number = 400;\n    public static readonly rmHzOffsetMin: number = 0;\n    public static readonly chorusPeriodSeconds: number = 2.0;\n    public static readonly chorusDelayRange: number = 0.0034;\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    ]);\n    public static readonly maxChordSize: number = 9;\n    public static readonly operatorCount: number = 4;\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n    ]);\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        //yoinked from SynthBox\n        //algortihm Section 1\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n        //Algorithm Section 2\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n        //Algorithm Section 3\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n        //Algorithm Section 3\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n        //Section 4 where we take our own previous ones for 4op and it gets weird\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n    ]);\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\n\tpublic static readonly operatorAmplitudeMax: number = 15;\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\n\t    //50 and 100 are from dogebox\n    ]);\n\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\n        { name: \"tremolo0\", type: EnvelopeType.lfo, speed: 8.0 },\n        { name: \"tremolo1\", type: EnvelopeType.lfo, speed: 4.0 },\n        { name: \"tremolo2\", type: EnvelopeType.lfo, speed: 2.0 },\n        { name: \"tremolo3\", type: EnvelopeType.lfo, speed: 1.0 },\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 128.0 },\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\n\t    //modbox\n        { name: \"flute 1\", type: EnvelopeType.wibble, speed: 16.0 },\n\t\t{ name: \"flute 2\", type: EnvelopeType.wibble, speed: 8.0 },\n\t\t{ name: \"flute 3\", type: EnvelopeType.wibble, speed: 4.0 },\n        // sandbox\n\t\t{ name: \"tripolo1\", type: EnvelopeType.lfo, speed: 9.0 },\n        { name: \"tripolo2\", type: EnvelopeType.lfo, speed: 6.0 },\n        { name: \"tripolo3\", type: EnvelopeType.lfo, speed: 3.0 },\n        { name: \"tripolo4\", type: EnvelopeType.tremolo2, speed: 9.0 },\n        { name: \"tripolo5\", type: EnvelopeType.tremolo2, speed: 6.0 },\n        { name: \"tripolo6\", type: EnvelopeType.tremolo2, speed: 3.0 },\n        { name: \"pentolo1\", type: EnvelopeType.lfo, speed: 10.0 },\n        { name: \"pentolo2\", type: EnvelopeType.lfo, speed: 5.0 },\n        { name: \"pentolo3\", type: EnvelopeType.lfo, speed: 2.5 },\n        { name: \"pentolo4\", type: EnvelopeType.tremolo2, speed: 10.0 },\n        { name: \"pentolo5\", type: EnvelopeType.tremolo2, speed: 5.0 },\n        { name: \"pentolo6\", type: EnvelopeType.tremolo2, speed: 2.5 },\t\n        // todbox\n\t    { name: \"flutter 1\", type: EnvelopeType.lfo, speed: 14.0 },\n        { name: \"flutter 2\", type: EnvelopeType.tremolo2, speed: 11.0 },\n        { name: \"water-y flutter\", type: EnvelopeType.lfo, speed: 9.0 },\n\t    // new jummbox\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\n    ]);\n\n    public static readonly newEnvelopes: DictionaryArray<Envelope> = toNameMap([\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\n        { name: \"pitch\", type: EnvelopeType.pitch, speed: 0.0 }, \n        { name: \"random\", type: EnvelopeType.pseudorandom, speed: 4.0 }, //Slarmoo's box 1.3\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\n        { name: \"flare\", type: EnvelopeType.flare, speed: 32.0 },\n        { name: \"twang\", type: EnvelopeType.twang, speed: 32.0 },\n        { name: \"swell\", type: EnvelopeType.swell, speed: 32.0 },\n        { name: \"lfo\", type: EnvelopeType.lfo, speed: 4.0 }, //replaced tremolo and tremolo2\n        { name: \"decay\", type: EnvelopeType.decay, speed: 10.0 },\n        { name: \"wibble\", type: EnvelopeType.wibble, speed: 24.0 },\n        { name: \"linear\", type: EnvelopeType.linear, speed: 32.0 },\n        { name: \"rise\", type: EnvelopeType.rise, speed: 32.0 },\n        { name: \"blip\", type: EnvelopeType.blip, speed: 6.0 },\n        { name: \"fall\", type: EnvelopeType.fall, speed: 2.0 }, \n    ]);\n\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\n    ]);\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n        { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n        { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n    ]);\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumBasePitch: number = 24;\n    public static readonly spectrumControlPoints: number = 30;\n    public static readonly spectrumControlPointsPerOctave: number = 7;\n    public static readonly spectrumControlPointBits: number = 3;\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\n    public static readonly harmonicsControlPoints: number = 28;\n    public static readonly harmonicsRendered: number = 64;\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\n    public static readonly harmonicsControlPointBits: number = 3;\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\n    public static readonly pulseWidthRange: number = 100;\n    public static readonly pulseWidthStepPower: number = 0.5;\n    public static readonly supersawVoiceCount: number = 7;\n\tpublic static readonly supersawDynamismMax: number = 6;\n\tpublic static readonly supersawSpreadMax: number = 12;\n\tpublic static readonly supersawShapeMax: number = 6;\n    public static readonly pitchChannelCountMin: number = 1;\n    public static readonly pitchChannelCountMax: number = 60;\n    public static readonly noiseChannelCountMin: number = 0;\n    public static readonly noiseChannelCountMax: number = 60;\n    public static readonly modChannelCountMin: number = 0;\n    public static readonly modChannelCountMax: number = 60;\n    public static readonly noiseInterval: number = 6;\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\n    public static readonly drumCount: number = 12;\n    public static readonly pitchOctaves: number = 8;\n    public static readonly modCount: number = 6;\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\n    public static readonly detuneCenter: number = 200;\n    public static readonly detuneMax: number = 400;\n    public static readonly detuneMin: number = 0;\n    public static readonly songDetuneMin: number = 0;\n    public static readonly songDetuneMax: number = 500;\n    public static readonly unisonVoicesMin: number = 1;\n    public static readonly unisonVoicesMax: number = 2;\n    public static readonly unisonSpreadMin: number = -96;\n    public static readonly unisonSpreadMax: number = 96; \n    public static readonly unisonOffsetMin: number = -96;\n    public static readonly unisonOffsetMax: number = 96; \n    public static readonly unisonExpressionMin: number = -2;\n    public static readonly unisonExpressionMax: number = 2; \n    public static readonly unisonSignMin: number = -2;\n    public static readonly unisonSignMax: number = 2; \n    public static readonly sineWaveLength: number = 1 << 8; // 256\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\n    public static readonly sineWave: Float32Array = generateSineWave();\n\n    public static readonly perEnvelopeSpeedIndices: number[] = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.2, 0.25, 0.3, 0.3333, 0.4, 0.5, 0.6, 0.6667, 0.7, 0.75, 0.8, 0.9, 1, 1.25, 1.3333, 1.5, 1.6667, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 40, 64, 128, 256];\n    public static readonly perEnvelopeSpeedToIndices: Dictionary<number> = {\n        0: 0,\n        0.01: 1,\n        0.02: 2,\n        0.03: 3,\n        0.04: 4,\n        0.05: 5,\n        0.06: 6,\n        0.07: 7,\n        0.08: 8,\n        0.09: 9,\n        0.1: 10,\n        0.2: 11,\n        0.25: 12,\n        0.3: 13,\n        0.3333: 14,\n        0.4: 15,\n        0.5: 16,\n        0.6: 17,\n        0.6667: 18,\n        0.7: 19,\n        0.75: 20,\n        0.8: 21,\n        0.9: 22,\n        1: 23,\n        1.25: 24,\n        1.3333: 25,\n        1.5: 26,\n        1.6667: 27,\n        1.75: 28,\n        2: 29,\n        2.25: 30,\n        2.5: 31,\n        2.75: 32,\n        3: 33,\n        3.5: 34,\n        4: 35,\n        4.5: 36,\n        5: 37,\n        5.5: 38,\n        6: 39,\n        6.5: 40,\n        7: 41,\n        7.5: 42,\n        8: 43,\n        8.5: 44,\n        9: 45,\n        9.5: 46,\n        10: 47,\n        11: 48,\n        12: 49,\n        13: 50,\n        14: 51,\n        15: 52,\n        16: 53,\n        17: 54,\n        18: 55,\n        19: 56,\n        20: 57,\n        24: 58,\n        32: 59,\n        40: 60,\n        64: 61,\n        128: 62,\n        256: 63,\n    }\n\n    public static readonly perEnvelopeBoundMin: number = 0;\n    public static readonly perEnvelopeBoundMax: number = 2;\n    public static readonly randomEnvelopeSeedMax: number = 63; //if you increase this you'll need to update the url to support it\n    public static readonly randomEnvelopeStepsMax: number = 24;\n\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\n\n    public static readonly distortionRange: number = 8;\n    public static readonly stringSustainRange: number = 15;\n    public static readonly stringDecayRate: number = 0.12;\n    public static readonly enableAcousticSustain: boolean = false;\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\n\n    public static readonly bitcrusherFreqRange: number = 14;\n    public static readonly bitcrusherOctaveStep: number = 0.5;\n    public static readonly bitcrusherQuantizationRange: number = 8;\n\n    public static readonly maxEnvelopeCount: number = 16;\n    public static readonly defaultAutomationRange: number = 13;\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\n        { name: \"none\",                   computeIndex: null,                                           displayName: \"none\",                interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: null },\n        { name: \"noteVolume\",             computeIndex: EnvelopeComputeIndex.noteVolume,                displayName: \"note volume\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: null },\n        { name: \"pulseWidth\",             computeIndex: EnvelopeComputeIndex.pulseWidth,                displayName: \"pulse width\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\n        { name: \"stringSustain\",          computeIndex: EnvelopeComputeIndex.stringSustain,             displayName: \"sustain\",             interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pickedString] },\n        { name: \"unison\",                 computeIndex: EnvelopeComputeIndex.unison,                    displayName: \"unison\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString, InstrumentType.customChipWave, InstrumentType.pwm, InstrumentType.noise, InstrumentType.spectrum] },\n        { name: \"operatorFrequency\",      computeIndex: EnvelopeComputeIndex.operatorFrequency0,        displayName: \"fm# freq\",            interleave: true,   isFilter: false,    maxCount: Config.operatorCount+2,   effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"operatorAmplitude\",      computeIndex: EnvelopeComputeIndex.operatorAmplitude0,        displayName: \"fm# volume\",          interleave: false,  isFilter: false,    maxCount: Config.operatorCount+2,   effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"feedbackAmplitude\",      computeIndex: EnvelopeComputeIndex.feedbackAmplitude,         displayName: \"fm feedback\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"pitchShift\",             computeIndex: EnvelopeComputeIndex.pitchShift,                displayName: \"pitch shift\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.pitchShift,      compatibleInstruments: null },\n        { name: \"detune\",                 computeIndex: EnvelopeComputeIndex.detune,                    displayName: \"detune\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.detune,          compatibleInstruments: null },\n        { name: \"vibratoDepth\",           computeIndex: EnvelopeComputeIndex.vibratoDepth,              displayName: \"vibrato range\",       interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.vibrato,         compatibleInstruments: null },\n        { name: \"noteFilterAllFreqs\",     computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs,        displayName: \"n. filter freqs\",     interleave: false,  isFilter: true,     maxCount: 1,                        effect: EffectType.noteFilter,      compatibleInstruments: null },\n        { name: \"noteFilterFreq\",         computeIndex: EnvelopeComputeIndex.noteFilterFreq0,           displayName: \"n. filter # freq\",    interleave: false,  isFilter: true,     maxCount: Config.filterMaxPoints,   effect: EffectType.noteFilter,      compatibleInstruments: null },\n        { name: \"decimalOffset\",          computeIndex: EnvelopeComputeIndex.decimalOffset,             displayName: \"decimal offset\",      interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\n        { name: \"supersawDynamism\",       computeIndex: EnvelopeComputeIndex.supersawDynamism,          displayName: \"dynamism\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{ name: \"supersawSpread\",         computeIndex: EnvelopeComputeIndex.supersawSpread,            displayName: \"spread\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{ name: \"supersawShape\",          computeIndex: EnvelopeComputeIndex.supersawShape,             displayName: \"saw↔pulse\",           interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},    \n        { name: \"phaserFreq\",             computeIndex: EnvelopeComputeIndex.phaserFreq,                displayName: \"phaser freq\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\n        { name: \"phaserMix\",              computeIndex: EnvelopeComputeIndex.phaserMix,                 displayName: \"phaser\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\n        { name: \"phaserFeedback\",         computeIndex: EnvelopeComputeIndex.phaserFeedback,            displayName: \"phaser feedback\",     interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\n        { name: \"phaserStages\",           computeIndex: EnvelopeComputeIndex.phaserStages,              displayName: \"phaser stages\",       interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\n        { name: \"ringModulation\",         computeIndex: EnvelopeComputeIndex.ringModulation,            displayName: \"ring mod\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.ringModulation,  compatibleInstruments: null },\n        { name: \"ringModulationHz\",       computeIndex: EnvelopeComputeIndex.ringModulationHz,          displayName: \"ring mod hz\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.ringModulation,  compatibleInstruments: null },\n        { name: \"distortion\",             computeIndex: EnvelopeComputeIndex.distortion,                displayName: \"distortion\",          interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.distortion,      compatibleInstruments: null },\n        { name: \"bitcrusherQuantization\", computeIndex: EnvelopeComputeIndex.bitcrusherQuantization,    displayName: \"bitcrush\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.bitcrusher,      compatibleInstruments: null},\n        { name: \"bitcrusherFrequency\",    computeIndex: EnvelopeComputeIndex.bitcrusherFrequency,       displayName: \"freq crush\",          interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.bitcrusher,      compatibleInstruments: null},\n        { name: \"chorus\",                 computeIndex: EnvelopeComputeIndex.chorus,                    displayName: \"chorus\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.chorus,          compatibleInstruments: null},\n        { name: \"echoSustain\",            computeIndex: EnvelopeComputeIndex.echoSustain,               displayName: \"echo sustain\",        interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.echo,            compatibleInstruments: null},\n        { name: \"reverb\",                 computeIndex: EnvelopeComputeIndex.reverb,                    displayName: \"reverb\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.reverb,          compatibleInstruments: null},\n        { name: \"panning\",                computeIndex: EnvelopeComputeIndex.panning,                   displayName: \"panning\",             interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.panning,         compatibleInstruments: null},\n        { name: \"arpeggioSpeed\",          computeIndex: EnvelopeComputeIndex.arpeggioSpeed,             displayName: \"arpeggio speed\",      interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.chord,           compatibleInstruments: null },\n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n        /*\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\n        */\n    ]);\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n\t\t{ name: \"sine\", samples: Config.sineWave },\n\t\t{ name: \"triangle\", samples: generateTriWave() },\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\n\t    { name: \"quasi-sine\", samples: generateQuasiSineWave() },\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\n    ]);\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n        { name: \"1%\", samples: generateSquareWave(0.01) },\n        { name: \"5%\", samples: generateSquareWave(0.05) },\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\n        { name: \"25%\", samples: generateSquareWave(0.25) },\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\n        { name: \"50%\", samples: generateSquareWave(0.5) },\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\n        { name: \"75%\", samples: generateSquareWave(0.75) },\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\n        { name: \"95%\", samples: generateSquareWave(0.95) },\n        { name: \"99%\", samples: generateSquareWave(0.99) },\n    ]);\n\n\n    // Height of the small editor column for inserting/deleting rows, in pixels.\n    public static readonly barEditorHeight: number = 10;\n\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\n        { name: \"none\", \n            pianoName: \"None\", \n            maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"No Mod Setting\", \n            promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\n        { name: \"song volume\", \n            pianoName: \"Volume\", \n            maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Song Volume\", \n            promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"tempo\", \n            pianoName: \"Tempo\", \n            maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\n            promptName: \"Song Tempo\", \n            promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\n        { name: \"song reverb\", \n            pianoName: \"Reverb\", \n            maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\n            promptName: \"Song Reverb\", \n            promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"next bar\", \n            pianoName: \"Next Bar\", \n            maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Go To Next Bar\", \n            promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\n        { name: \"note volume\", \n            pianoName: \"Note Vol.\", \n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Note Volume\", \n            promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"pan\", \n            pianoName: \"Pan\", \n            maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Instrument Panning\", \n            promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\n        { name: \"reverb\", \n            pianoName: \"Reverb\", \n            maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\n            promptName: \"Instrument Reverb\", \n            promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"distortion\", \n            pianoName: \"Distortion\", \n            maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\n            promptName: \"Instrument Distortion\", \n            promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"fm slider 1\", \n            pianoName: \"FM 1\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 1\", \n            promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 2\", \n            pianoName: \"FM 2\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 2\", \n            promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 3\", \n            pianoName: \"FM 3\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 3\", \n            promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 4\", \n            pianoName: \"FM 4\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 4\", \n            promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm feedback\", \n            pianoName: \"FM Feedback\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Feedback\", \n            promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"pulse width\", \n            pianoName: \"Pulse Width\", \n            maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Pulse Width\",\n            promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n        { name: \"detune\", \n            pianoName: \"Detune\", \n            maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\n            promptName: \"Instrument Detune\", \n            promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n        { name: \"vibrato depth\", \n            pianoName: \"Vibrato Depth\", \n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Depth\", \n            promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n        { name: \"song detune\", \n            pianoName: \"Detune\", \n            maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\n            promptName: \"Song Detune\", \n            promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[ADDITIVE] [$LO - $HI] [cents x4]\"] },\n        { name: \"vibrato speed\", \n            pianoName: \"Vibrato Speed\", \n            maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Speed\", \n            promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"vibrato delay\", \n            pianoName: \"Vibrato Delay\", \n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Delay\", \n            promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n        { name: \"arp speed\", \n            pianoName: \"Arp Speed\", \n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Arpeggio Speed\", \n            promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pan delay\", \n            pianoName: \"Pan Delay\", \n            maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Panning Delay\", \n            promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"reset arp\", \n            pianoName: \"Reset Arp\", \n            maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Reset Arpeggio\", \n            promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n        { name: \"eq filter\", \n            pianoName: \"EQFlt\", \n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter\", \n            promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filter\", \n            pianoName: \"N.Flt\", \n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter\", \n            promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"bit crush\", \n            pianoName: \"Bitcrush\", \n            maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Bit Crush\", \n            promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"freq crush\", \n            pianoName: \"Freq Crush\", \n            maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Frequency Crush\", \n            promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo\", \n            pianoName: \"Echo\", \n            maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\n            promptName: \"Instrument Echo Sustain\", \n            promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo delay\", \n            pianoName: \"Echo Delay\", \n            maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Instrument Echo Delay\",\n            promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\n        { name: \"chorus\", \n            pianoName: \"Chorus\", \n            maxRawVol: Config.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\n            promptName: \"Instrument Chorus\", \n            promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt cut\", \n            pianoName: \"EQFlt Cut\", \n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Cutoff Frequency\", \n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt peak\", \n            pianoName: \"EQFlt Peak\", \n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Peak Gain\", \n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt cut\", \n            pianoName: \"N.Flt Cut\", \n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Cutoff Frequency\", \n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt peak\", \n            pianoName: \"N.Flt Peak\", \n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Peak Gain\", \n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pitch shift\", \n            pianoName: \"Pitch Shift\", \n            maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\n            promptName: \"Pitch Shift\", \n            promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n        { name: \"sustain\", \n            pianoName: \"Sustain\", \n            maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Picked String Sustain\", \n            promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"mix volume\", \n            pianoName: \"Mix Vol.\", \n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Mix Volume\", \n            promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n        { name: \"fm slider 5\", \n            pianoName: \"FM 5\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 5\", \n            promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 6\", \n            pianoName: \"FM 6\", \n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 6\",\n            promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"decimal offset\", \n            pianoName: \"Decimal Offset\", \n            maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: EffectType.length,\n            promptName: \"Decimal Offset\", \n            promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\n        { name: \"envelope speed\", \n            pianoName: \"EnvelopeSpd\", \n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Envelope Speed\", \n            promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"dynamism\", \n            pianoName: \"Dynamism\", \n            maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Dynamism\", \n            promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"spread\", \n            pianoName: \"Spread\", \n            maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Spread\", \n            promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"saw shape\", \n            pianoName: \"Saw Shape\", \n            maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Shape\", \n            promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n        { name: \"song bitcrush\", \n            pianoName: \"Song Bit crush\", \n            maxRawVol: Config.bitcrusherQuantizationRange*2, newNoteVol: Config.bitcrusherQuantizationRange, forSong: true, convertRealFactor: -Config.bitcrusherQuantizationRange, associatedEffect: EffectType.length,\n            promptName: \"Song Bit crush\", \n            promptDesc: [ \"This setting affects the overall bitcrush of your song. It works by multiplying existing bitcrush for instruments, so those with no bitcrush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"song freqcrush\", \n            pianoName: \"Song freqcrush\", \n            maxRawVol: Config.bitcrusherFreqRange*2, newNoteVol: Config.bitcrusherFreqRange, forSong: true, convertRealFactor: -Config.bitcrusherFreqRange, associatedEffect: EffectType.length,\n            promptName: \"Song Freq crush\", \n            promptDesc: [ \"This setting affects the overall frequency crush of your song. It works by multiplying existing freq crush for instruments, so those with no bitcrush or freq crush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"song panning\", \n            pianoName: \"Song Panning\", \n            maxRawVol: Config.panMax*2, newNoteVol: Config.panMax, forSong: true, convertRealFactor: -Config.panMax, associatedEffect: EffectType.panning,\n            promptName: \"Song Panning\", \n            promptDesc: [ \"This setting affects the overall panning of your song. It works by adding to existing pan for instruments, so those with no panning set will be unaffected.\", \"At $MID, nothing will be added to the songs panning. At $HI, all instruments will have 100+ panning added, which would max out the panning. At $LO, -100+ panning added to it, which would make the panning as low as possible.\", \"[ADDITIVE] [$LO - $HI]\" ] },\n        { name: \"song chorus\", \n            pianoName: \"Song Chorus\", \n            maxRawVol: Config.chorusRange*2, newNoteVol: Config.chorusRange, forSong: true, convertRealFactor: -Config.chorusRange, associatedEffect: EffectType.length,\n            promptName: \"Song Chorus\", \n            promptDesc: [ \"This setting affects the overall chorus of your song. It works by multiplying existing chorus for instruments, so those with no chorus set will be unaffected.\", \"At $MID, all instruments' chorus will be unchanged from default. This increases up to double the set chorus value at $HI, or down to no chorus at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"song distortion\", \n            pianoName: \"Song Distortion\", \n            maxRawVol: Config.distortionRange*2, newNoteVol: Config.distortionRange, forSong: true, convertRealFactor: -Config.distortionRange, associatedEffect: EffectType.length,\n            promptName: \"Song Distortion\", \n            promptDesc: [ \"This setting affects the overall distortion of your song. It works by multiplying existing distortion for instruments, so those with no distortion set will be unaffected.\", \"At $MID, all instruments' distortion will be unchanged from default. This increases up to double the set distortion value at $HI, or down to no distortion at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"ring modulation\", \n            pianoName: \"Ring Modulation\", \n            maxRawVol: Config.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Ring Modulation\", \n            promptDesc: [ \"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"song ring modulation\", \n            pianoName: \"Songwide Ring Modulation\", \n            maxRawVol: Config.ringModRange*2, newNoteVol: Config.ringModRange, forSong: true, convertRealFactor: -Config.ringModRange, associatedEffect: EffectType.length,\n            promptName: \"Songwide Ring Modulation\", \n            promptDesc: [ \"This setting multiplies the Ring Modulation effect across all instruments.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"ring mod hertz\", \n            pianoName: \"Ring Modulation (Hertz)\", \n            maxRawVol: Config.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Ring Modulation (Hertz)\", \n            promptDesc: [ \"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"phaser\", \n            pianoName: \"Phaser\", \n            maxRawVol: Config.phaserMixRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\n            promptName: \"Instrument Phaser\", \n            promptDesc: [ \"This setting controls the Phaser Mix of your insturment, just like the Phaser slider.\", \"At $LO, your instrument will have no phaser. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"phaser frequency\", \n            pianoName: \"Phaser Frequency\", \n            maxRawVol: Config.phaserFreqRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\n            promptName: \"Phaser Frequency\", \n            promptDesc: [ \"This setting controls the phaser frequency of your insturment, just like the phaser freq slider.\", \"At $LO, your instrument will have no phaser freq. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] }, \n        { name: \"phaser feedback\", \n            pianoName: \"Phaser Feedback\", \n            maxRawVol: Config.phaserFeedbackRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\n            promptName: \"Phaser Feedback\", \n            promptDesc: [ \"This setting controls the phaser feedback of your insturment, just like the phaser feedback slider.\", \"At $LO, your instrument will have no phaser feedback. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },     \n        { name: \"phaser stages\", \n            pianoName: \"Phaser Stages\", \n            maxRawVol: Config.phaserMaxStages, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\n            promptName: \"Phaser Stages\", \n            promptDesc: [ \"This setting controls the number of phaser stages in your insturment, just like the phaser stages slider.\", \"At $LO, your instrument will have no phaser stages. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },                       \n        { name: \"song pitch shift\", \n            pianoName: \"Song Pitch Shift\", \n            maxRawVol: (Config.pitchShiftRange*2)-2, newNoteVol: Config.pitchShiftRange, forSong: true, convertRealFactor: -Config.pitchShiftRange+1, associatedEffect: EffectType.pitchShift,\n            promptName: \"Songwide Pitch Shift\", \n            promptDesc: [\"This setting controls the pitch offset of all instruments regardless of whether or not the instrument has the effect itself, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[ADDITIVE] [$LO - $HI] [pitch]\"] },\n        { name: \"individual envelope speed\", \n            pianoName: \"IndvEnvSpd\", \n            maxRawVol: 63, newNoteVol: 23, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Individual Envelope Speed\", \n            promptDesc: [\"This setting controls how fast the specified envelope of the instrument will play.\", \"At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:\",\"[0-4]: x0, x0.01, x0.02, x0.03, x0.04,\", \"[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,\", \"[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,\", \"[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,\", \"[20-24]: x0.75, x0.8, x0.9, x1, x1.25,\", \"[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,\", \"[30-34]: x2.25, x2.5, x2.75, x3, x3.5,\", \"[35-39]: x4, x4.5, x5, x5.5, x6,\", \"[40-44]: x6.5, x7, x7.5, x8, x8.5,\", \"[45-49]: x9, x9.5, x10, x11, x12\", \"[50-54]: x13, x14, x15, x16, x17\", \"[55-59]: x18, x19, x20, x24, x32\", \"[60-63]: x40, x64, x128, x256\", \"[OVERWRITING] [$LO - $HI]\"]},\n        ]);\n}\n\nfunction centerWave(wave: Array<number>): Float32Array {\n    let sum: number = 0.0;\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\n    const average: number = sum / wave.length;\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\n    performIntegral(wave);\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\n    let magn: number = 0.0;\n\n    centerWave(wave);\n\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg: number = magn / (wave.length - 1);\n\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n\n    return new Float32Array(wave);\n\n}\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\n    let cumulative: number = 0.0;\n    let newWave: Float32Array = new Float32Array(wave.length);\n    for (let i: number = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n\n    return newWave;\n}\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\n\tlet cumulative: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) {\n\t\tconst temp = wave[i];\n\t\twave[i] = cumulative;\n\t\tcumulative += temp;\n\t}\n}\n\nexport function getPulseWidthRatio(pulseWidth: number): number {\n    // BeepBox formula for reference\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\n\n    return pulseWidth / (Config.pulseWidthRange);\n}\n\n\n// The function arguments will be defined in FFT.ts, but I want\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n\n\t\tif (index == 0) {\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 1 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 1) {\n\t\t\t// White noise is just random values for each sample.\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\n\t\t\t}\n\t\t} else if (index == 2) {\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 2 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 3) {\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 4) {\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 5) {\n\t\t\t// \"Shine\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 6) {\n\t\t\t// \"Deep\" drums from modbox!\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 7) {\n\t\t\t// \"Cutter\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 15 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 8) {\n\t\t\t// \"Metallic\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer -= 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n            }\n        } else if (index == 9) {\n            // a noise more like old static than white noise\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n\t\t}\n\t\t\t\t\telse if (index == 10) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                    wave[i] = Math.round(Math.random());\n                }\n            }\n\t\t\t else if (index == 11) {\n                var drumBuffer = 1;\n                for (var i = 0; i < Config.chipNoiseLength; i++) {\n                    wave[i] = Math.round((drumBuffer & 1));\n                    var newBuffer = drumBuffer >> 1;\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\n                        newBuffer -= 10 << 2;\n                    }\n                    drumBuffer = newBuffer;\n                }\n            }\n\t\t\telse if (index == 12) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                   var ultraboxnewchipnoiserand = Math.random();\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n                }\n            }\n\t\t\telse if (index == 13) {\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\twave[i] *= 0.44;\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t\t// from https://github.com/zacharydenton/noise.js, MIT license soooo\n                }\n            }\n\t\t\telse if (index == 14) {\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\t\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = wave[i];\n\t\t\t\t\twave[i] *= 14;\n\t\t\t\t\t// this is also from noise.js\n                }\n            }\n\t\t\n\t\telse {\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\n\t\t}\n\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n\n    return wave;\n}\n\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\n    const referenceOctave: number = 11;\n    const referenceIndex: number = 1 << referenceOctave;\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave: Float32Array = getDrumWave(0, null, null);\n    let combinedAmplitude: number = 0.0;\n    for (let i: number = lowIndex; i < highIndex; i++) {\n\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n\n        combinedAmplitude += amplitude;\n\n        // Add two different sources of psuedo-randomness to the noise\n        // (individually they aren't random enough) but in a deterministic\n        // way so that live spectrum editing doesn't result in audible pops.\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\n        // LFSR retro wave (effectively random), and also rotate the phase\n        // of each sine wave based on the golden angle to disrupt the symmetry.\n        amplitude *= retroWave[i];\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\n\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n\n    return combinedAmplitude;\n}\n\nfunction generateSineWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\n    }\n    return wave;\n}\n\nfunction generateTriWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\n    }\n    return wave;\n}\n\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\n    }\n    return wave;\n}\n\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    const centerPoint: number = Config.sineWaveLength / 4;\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\n    }\n    return wave;\n}\n\nfunction generateSawWave(inverse: boolean = false): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\n        wave[i] = inverse ? -wave[i] : wave[i];\n    }\n    return wave;\n}\n\n\t// function generateWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.random() * 2.0 - 1.0;\n        // }\n        // return wave;\n    // }\n\t// function generateOneBitWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.round(Math.random());\n        // }\n        // return wave;\n    // }\n\tfunction generateQuasiSineWave() {\n        const wave = new Float32Array(Config.sineWaveLength + 1);\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\n        }\n        return wave;\n\t}\n\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    } else {\n        return arpeggio % pitchCount;\n    }\n}\n\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\n    const dictionary: Dictionary<T> = {};\n    for (let i: number = 0; i < array.length; i++) {\n        const value: any = array[i];\n        value.index = i;\n        dictionary[value.name] = <T>value;\n    }\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\n    result.dictionary = dictionary;\n    return result;\n}\n\nexport function effectsIncludeTransition(effects: number): boolean {\n    return (effects & (1 << EffectType.transition)) != 0;\n}\nexport function effectsIncludeChord(effects: number): boolean {\n    return (effects & (1 << EffectType.chord)) != 0;\n}\nexport function effectsIncludePitchShift(effects: number): boolean {\n    return (effects & (1 << EffectType.pitchShift)) != 0;\n}\nexport function effectsIncludeDetune(effects: number): boolean {\n    return (effects & (1 << EffectType.detune)) != 0;\n}\nexport function effectsIncludeVibrato(effects: number): boolean {\n    return (effects & (1 << EffectType.vibrato)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects: number): boolean {\n    return (effects & (1 << EffectType.noteFilter)) != 0;\n}\nexport function effectsIncludeDistortion(effects: number): boolean {\n    return (effects & (1 << EffectType.distortion)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects: number): boolean {\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\n}\nexport function effectsIncludePanning(effects: number): boolean {\n    return (effects & (1 << EffectType.panning)) != 0;\n}\nexport function effectsIncludeChorus(effects: number): boolean {\n    return (effects & (1 << EffectType.chorus)) != 0;\n}\nexport function effectsIncludeEcho(effects: number): boolean {\n    return (effects & (1 << EffectType.echo)) != 0;\n}\nexport function effectsIncludeReverb(effects: number): boolean {\n    return (effects & (1 << EffectType.reverb)) != 0;\n}\nexport function effectsIncludeRM(effects: number): boolean {\n    return (effects & (1 << EffectType.ringModulation)) != 0;\n}\nexport function effectsIncludePhaser(effects: number): boolean {\n    return (effects & (1 << EffectType.phaser)) != 0;\n}\nexport function effectsIncludeNoteRange(effects: number): boolean {\n    return (effects & (1 << EffectType.noteRange)) != 0;\n}\nexport function effectsIncludeInvertWave(effects: number): boolean {\n    return (effects & (1 << EffectType.invertWave)) != 0;\n}\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\n    const dictionary: Dictionary<ChipWave> = {};\n    for (let i: number = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value: any = newArray[i];\n        value.index = i;\n        dictionary[value.name] = <ChipWave>value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\n    result.dictionary = dictionary;\n    return result;\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nexport interface ChannelColors extends BeepBoxOption {\n    readonly secondaryChannel: string;\n    readonly primaryChannel: string;\n    readonly secondaryNote: string;\n    readonly primaryNote: string;\n}\n\nexport class ColorConfig {\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\n\tpublic static usesColorFormula: boolean = false;\n\tpublic static usesPianoScheme: boolean = false;\n\tpublic static currentSetTheme: string = \"Blurple\";\n    public static readonly themes: { [name: string]: string } = {\n      \"AbyssBox Classic\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t--pitch-background: #381d24; \t\t\n\t\t\t--tonic: #873a51; \t\t\n\t\t\t--fifth-note: #75001e; \t\n\t\t\t--third-note: #75002c;\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--mod-title: #bf2c5d;\n\t\t\t--progress-bar: #bf2c5d;\n\t\t\t--empty-sample-bar: #260b1b;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\n\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t}\n\t\t\n\t\t\t\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"./image_assets/stripesbg.gif\") !important;\n\t\t\tbackground-position: center;\n\t\t\tbackground-repeat: repeat;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t/*#Hotdog {\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\n\t\t\t} */\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.mobilePatternButton,\n\t\t\tbutton.mobileTrackButton,\n\t\t\tbutton.mobileSettingsButton,\n\t\t\tbutton.mobilePlayButton,\n\t\t\tbutton.mobilePauseButton,\n\t\t\tbutton.mobileNextBarButton,\n\t\t\tbutton.mobilePrevBarButton,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton, \n\t\t\tbutton.prevBarButton, \n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton, \n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\") !important;\n    \t\t\t\tborder-image-slice: 4 fill !important; \n   \t\t\t\tborder-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n    \t\t\t\t\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: #1e0915 !important;\n\t\t\t\tborder-image-source:none !important;\n\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t\n\n\t\t\t\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n  \"AbyssBox Competitive\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #000000; \t\t\n\t\t\t--editor-background: #000000; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #000000; \t\t\n\t\t\t--pitch-background: #240f15; \t\t\n\t\t\t--tonic: #a34b65; \t\t\n\t\t\t--fifth-note: #75001e; \t\n\t\t\t--third-note: #75002c;\t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--mod-title: #bf2c5d;\n\t\t\t--progress-bar: #bf2c5d;\n\t\t\t--empty-sample-bar: #0d0d0d;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\n\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t\t}\t\t\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t}\n\t\t\n\t\t\t\n\n\t\t\t\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.mobilePatternButton,\n\t\t\tbutton.mobileTrackButton,\n\t\t\tbutton.mobileSettingsButton,\n\t\t\tbutton.mobilePlayButton,\n\t\t\tbutton.mobilePauseButton,\n\t\t\tbutton.cancelButton,\n\t\t\tbutton.mobileNextBarButton,\n\t\t\tbutton.mobilePrevBarButton,\n\t\t\tbutton.insertChannelButton,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton,\n\t\t\tbutton.prevBarButton,\n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton,\n\t\t\tbutton.okayButton, \n\t\t\tbutton.songLoopButton,\n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\tborder-style: double !important;\n\t\t\t\t\tborder-radius: 0px !important;\n\t\t\t\t\t--ui-widget-background: black;\n\t\t\t}\n\n\t\t\tbutton.add-envelope::before,\n\t\t\tbutton.notesDownButton::before,\n\t\t\tbutton.notesUpButton::before,\n\t\t\tbutton.copyPatternButton::before,\n\t\t\tbutton.pastePatternButton::before,\n\t\t\tbutton.insertChannelButton::before,\n\t\t\tbutton.undoButton::before,\n\t\t\tbutton.redoButton::before,\n\t\t\tbutton.loopBarButton::before,\n\t\t\tbutton.duplicateButton::before,\n\t\t\tbutton.selectAllButton::before,\n\t\t\tbutton.deleteChannelButton::before, \n\t\t\tbutton.insertRowButton::before,\n\t\t\tbutton.okayButton::before, \n\t\t\tbutton.songLoopButton::before,\n\t\t\t.delete-envelope::before {\n\t\t\t\tleft: -3px !important;\n\t\t\t\ttop: -3px !important;\n\t\t\t}\n\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\tborder-image-source: none !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: black !important;\n\t\t\t\tborder-image-source:none !important;\n\t\t\t\tborder-style: none !important;\n\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\tborder-style: none !important;\n\t\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType';\n\t\t\t}\n\t\t\t\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n  \"AbyssBox Light\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #e0adbc; \t\t\n\t\t\t--editor-background: #e0adbc; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: #6110d9; \t\t\n\t\t\t--secondary-text: #cc1338;\t\t\n\t\t\t--inverted-text:  #e8bcc9;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t--loop-accent: #8c346a; \t\t\n\t\t\t--link-accent: #8c346a; \t\t\n\t\t\t--ui-widget-background: #f5e9f0;\t\t\n\t\t\t--ui-widget-focus: #f5e9f0; \t\t\n\t\t\t--pitch-background: #eddadf; \t\t\n\t\t\t--tonic: #f5f0f1; \t\t\n\t\t\t--fifth-note: #ffb5c9; \t\n\t\t\t--third-note: #ffa6f0;\t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #edbecc;\t\n\t\t\t--track-editor-bg-pitch-dim: #e0adbc; \t\t\n\t\t\t--track-editor-bg-noise: #edbecc;\t\t\n\t\t\t--track-editor-bg-noise-dim: #e0adbc;\t\t\n\t\t\t--track-editor-bg-mod: #edbecc; \t\t\n\t\t\t--track-editor-bg-mod-dim: #e0adbc;\t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--mod-title: #cc1338;\n\t\t\t--progress-bar: #cc1338;\n\t\t\t--empty-sample-bar: #d9a0b1;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 255; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 30; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 255; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 255; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 30; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 255; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 255; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 30; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 255; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 60; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 255; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 30; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 255; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 255; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 30; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 255; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 60; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 255; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 30; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 255; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 60; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\n\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\n\n\t\t\t\t/* sets background image */\n\t\t\t\tbody {\n\t\t\t\tbackground-image: url(\"./image_assets/stripesbg_light.gif\") !important;\n\t\t\t\tbackground-position: center;\n\t\t\t\tbackground-repeat: repeat;\n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\t\t\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t\t.beepboxEditor button,\n\t\t\t\tbutton.mobilePatternButton,\n\t\t\t\tbutton.mobileTrackButton,\n\t\t\t\tbutton.mobileSettingsButton,\n\t\t\t\tbutton.mobilePlayButton,\n\t\t\t\tbutton.mobilePauseButton,\n\t\t\t\tbutton.mobileNextBarButton,\n\t\t\t\tbutton.mobilePrevBarButton,\n\t\t\t\tbutton.playButton,\n\t\t\t\tbutton.pauseButton, \n\t\t\t\tbutton.recordButton, \n\t\t\t\tbutton.stopButton,\n\t\t\t\tbutton.nextBarButton, \n\t\t\t\tbutton.prevBarButton, \n\t\t\t\tbutton.copyButton, \n\t\t\t\tbutton.pasteButton, \n\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t.beepboxEditor select, \n\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\") !important;\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\n\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t}\n\t\t\n\t\t\t\n\n\t\t\t\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\tborder-image-source: none !important;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType';\n\t\t\t}\n\t\t\t\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n\t\"AbyssBox 0.8\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t--pitch-background: #381d24; \t\t\n\t\t\t--tonic: #873a51; \t\t\n\t\t\t--fifth-note: #75001e;\n\t\t\t--third-note: #75002c;\t \t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t--empty-sample-bar: #260b1b;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"AbyssBox Piano\": ` \n\t\t\t\t\t\t:root {\t\t\n\t\t\t--page-margin: #450320; \t\t\n\t\t\t--editor-background: #450320; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #762b4c;\n            --pitch-background: #5e2233;  \t\n            --use-piano-scheme: true;\t\n            --pitch-black-key: #4d1a28; \t\t\t\t\n            --pitch-white-key: #5e2233; \n            --tonic: #eb2859; \t\n\t\t\t--white-tonic: #873a51; \t\n            --black-tonic: #410019;\t\n\t\t\t--white-fifth-note: #aa002b; \t\n            --fifth-note: #aa002b; \n            --black-fifth-note: #550015; \t\n\t\t\t--white-third-note: #a80644;\t\n            --third-note: #a80644;\t\n            --black-third-note: #4e0014; \t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #57103c; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #300404; \t\t\n\t\t\t--track-editor-bg-noise: #530729; \t\t\n\t\t\t--track-editor-bg-noise-dim: #3a042b; \t\t\n\t\t\t--track-editor-bg-mod: #740250; \t\t\n\t\t\t--track-editor-bg-mod-dim: #55023b; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--mod-title: #bf2c5d;\n\t\t\t--progress-bar: #bf2c5d;\n\t\t\t--empty-sample-bar: #38021a;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\n\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t}\n\t\t\n\t\t\t\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stripespianobg.gif\") !important;\n\t\t\tbackground-position: center;\n\t\t\tbackground-repeat: repeat;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t/*#Hotdog {\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\n\t\t\t} */\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.mobilePatternButton,\n\t\t\tbutton.mobileTrackButton,\n\t\t\tbutton.mobileSettingsButton,\n\t\t\tbutton.mobilePlayButton,\n\t\t\tbutton.mobilePauseButton,\n\t\t\tbutton.mobileNextBarButton,\n\t\t\tbutton.mobilePrevBarButton,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton, \n\t\t\tbutton.prevBarButton, \n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton, \n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\") !important;\n    \t\t\t\tborder-image-slice: 4 fill !important; \n   \t\t\t\tborder-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n    \t\t\t\t\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: #450320 !important;\n\t\t\t\tborder-image-source:none !important;\n\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t\n\n\t\t\t\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t}\n\t\t\t`,\n\t\"Frutiger Aero\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #fff; \t\t\n\t\t\t--editor-background: #2e538c;\t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ceddff;\t\t\n\t\t\t--inverted-text: white;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #0a091e; \t\t\n\t\t\t--loop-accent: #6fafe8; \t\t\n\t\t\t--link-accent: #a2b0ff; \t\t\n\t\t\t--ui-widget-background: #84aef0; \t\t\n\t\t\t--ui-widget-focus: #2b5376; \t\t\n\t\t\t--pitch-background: #4671b5; \t\t\n\t\t\t--tonic: #fff; \t\t\n\t\t\t--fifth-note: #620297; \n\t\t\t--third-note: #bf2c78;\t\t\n\t\t\t--white-piano-key: #dbe5ec;\t\t\n\t\t\t--black-piano-key: #2f3a40;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t\t\t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: linear-gradient(#2782b0,#0c2b3e); \t\t\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#0c2b3e70,#05151fc4); \t\t\n\t\t\t--track-editor-bg-noise: linear-gradient(#2d4aa1,#08204f); \t\t\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#08204f70, #031029c4); \t\t\n\t\t\t--track-editor-bg-mod: linear-gradient(#46299e, #26145e); \t\t\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#26145e70,#110630c4); \t\t\n\t\t\t--multiplicative-mod-slider: #60769f; \t\t\n\t\t\t--overwriting-mod-slider: #343b9e; \t\t\n\t\t\t--indicator-primary: #499ab3; \t\t\n\t\t\t--indicator-secondary: #9db9c4; \t\t\n\t\t\t--select2-opt-group: #185f8a; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #97d4f9; \t\t\n\t\t\t--mute-button-mod: #8a5fff;\t\t\n\t\t\t--mod-label-primary: #341a7b; \t\t\n\t\t\t--mod-label-secondary-text: rgb(86, 93, 120);\n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #84aef0;\n\t\t\t--empty-sample-bar: #26477a;\n\n\t\t\t--pitch-secondary-channel-hue: 110; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 63; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 50; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: 120; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: 110; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 63.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 55; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: 120; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 90; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 80; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 90; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 60; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 80; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 62; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t--sample-failed: #bf2c78;\n\n\t\t}\n\n\t\t* {\n\t\t/*cursor: url(\"abyssbox_cursor.png\"), auto !important;*/\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\n\t\t}\n\t\n\n\t\t/* Frutiger Aero Icons */\n\n\t\tdiv.promptContainerBG {\n\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\tbackdrop-filter: unset !important;\n\t\t\topacity: 0 !important;\n\t\t}\n\n\t\tdiv.mute-button::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.mute-button.muted::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\t#text-content > section > h1 > font {\n\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\n\t\t\t}\n\n\t\tbutton.mobileEffectsButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tbutton.mobileInstButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tbutton.mobileEnvelopesButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tselect.trackSelectBox {\n\t\t\tborder-image: none !important;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"Frutiger\";\n\t\t   src:\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tcanvas#oscilascopeAll {\n\t\t\t\tbackground: #2e538c !important; \n\t\t\t\tborder: 2px solid #84aef000 !important;\n\t\t\t}\n\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 144px;\n\t\t\t\theight: 32px;\n\t\t\t  }\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: calc(144px + 4px);\n\t\t\t\theight: calc(32px + 4px);\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 1;\n\t\t\t  }\n\n\t\t\tdiv.prompt.noSelection{\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \n\t\t\t\topacity: 77;\n\t\t\t\tbackdrop-filter: blur(14px);\n\t\t\t}  \n\n\t\t\tsvg#firstImage {\n\t\t\t\topacity: 50%;\n\t\t\t\t--editor-background: #84aef0;\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/frutigerbg3.jpg\") !important;\n\t\t\tbackground-position: top;\n\t\t\tbackground-attachment: fixed;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: cover;\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \n\t\t\t\t}\n\n\t\t\t#beepboxEditorContainer {\n\t\t\t\tbackground: linear-gradient(#eef3ff80, #395eb380) !important;\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: lightblue;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t--inverted-text: black;\n\t\t\t\tbackdrop-filter: blur(14px);\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t}\n\t\t\t#text-content {\n\t\t\t\tbackground: linear-gradient(#395eb380, #03112f80);\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: lightblue;\n\t\t\t\t  backdrop-filter: blur(14px);\n\t\t\t\t  box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t}\n\n\t\t\t\tdiv.playback-bar-controls button.playButton, \n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \n\t\t\t\tdiv.playback-bar-controls button.recordButton, \n\t\t\t\tdiv.playback-bar-controls button.stopButton, \n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \n\t\t\t\tdiv.selectRow button.copyButton, \n\t\t\t\tdiv.selectRow button.pasteButton, \n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\n\t\t\t\tdiv.editor-controls div button.add-envelope,\n\t\t\t\tdiv.editor-controls div button.delete-envelope, \n\t\t\t\t.beepboxEditor .select2-selection__rendered,\n\t\t\t\t.beepboxEditor .instrument-bar button,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated,\n\t\t\t\t.beepboxEditor select  { \n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(79, 99, 204, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54;\n\t\t\t\t\t--ui-widget-background: linear-gradient(#b6cfffcc, #628ef2cc) !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor select:focus\n\t\t\t\t{\n\t\t\t\t\tborder-image-source: none;\n\t\t\t\t\t--ui-widget-background: linear-gradient(#2a3d6a, #2a3d6a) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, button\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #2a3d6a) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t\t\t.beepboxEditor button:focus,\n\t\t\t\tbutton:focus,\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor .filterEditor svg,\n\t\t\t\t.beepboxEditor .fadeInOut svg,\n\t\t\t\t.beepboxEditor .harmonics svg,\n\t\t\t\t.beepboxEditor .spectrum svg\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\theight: 16px !important;\n\t\t\t\t\twidth: 16px !important;\n\t\t\t\t\tborder-radius: 40px !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tborder: none !important;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\tborder-radius: 1px;\n\t\t\t\t\twidth: 1em !important;\n\t\t\t\t\theight: 1em !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\twidth: 1em;\n\t\t\t\t\theight: 1em;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\tcontent: \"✓\";\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'Frutiger';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'Frutiger' !important;\n\t\t\t}\n\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\n\n\t\t   div.beepboxEditor.load {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   div.noSelection {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .loopEditor {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .muteEditor {\n\t\t\tbackground: linear-gradient(#c4f0d1, #83c139) !important;\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\n\t\t\topacity: 65%;\n\t\t   }\n\n\t\t   div.muteEditor div {\n\t\t\tbackground: none !important;\n\t\t\t--track-editor-bg-pitch: #1b4079;\n\t\t\t--track-editor-bg-noise: #213779;\n\t\t\t--track-editor-bg-mod: #46299e;\n\t\n\t\t\t--track-editor-bg-pitch-dim: #0c2b3e; \t\t\n\t\t\t--track-editor-bg-noise-dim: #08204f; \t\t\t\n\t\t\t--track-editor-bg-mod-dim: #26145e; \n\n\t\t   }\n\n\t\t   div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.curChannelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\n\t\t\t`,\n\t\"Frutiger Aero Night\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #fff; \t\t\n\t\t\t--editor-background: #290f37;\t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #d7ceff;\t\t\n\t\t\t--inverted-text: #140111;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #0a091e; \t\t\n\t\t\t--loop-accent: #ab6fe8; \t\t\n\t\t\t--link-accent: #eba2ff; \t\t\n\t\t\t--ui-widget-background: #c03ed2; \t\t\n\t\t\t--ui-widget-focus: #582b76; \t\t\n\t\t\t--pitch-background: #26032b; \t\t\n\t\t\t--tonic: #8d46b5; \t\t\n\t\t\t--fifth-note: #0e0297; \n\t\t\t--third-note: #bf2c78;\t\t\n\t\t\t--white-piano-key: #dbe5ec;\t\t\n\t\t\t--black-piano-key: #2f3a40;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t\t\t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: linear-gradient(#7227b0,#2c0c3e); \t\t\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#260c3e70,#16051fc4); \t\t\n\t\t\t--track-editor-bg-noise: linear-gradient(#932da1,#47084f); \t\t\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#43084f70, #260329c4); \t\t\n\t\t\t--track-editor-bg-mod: linear-gradient(#9e2950, #5e143d); \t\t\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#5e143f70,#300616c4); \t\t\t\n\t\t\t--multiplicative-mod-slider: #60769f; \t\t\n\t\t\t--overwriting-mod-slider: #7d349e; \t\t\n\t\t\t--indicator-primary: #9149b3; \t\t\n\t\t\t--indicator-secondary: #b39dc4; \t\t\n\t\t\t--select2-opt-group: #185f8a; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #c597f9; \t\t\n\t\t\t--mute-button-mod: #da5fff;\t\t\n\t\t\t--mod-label-primary: #6b1a7b; \t\t\n\t\t\t--mod-label-secondary-text: rgb(86, 93, 120);\n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #ec84f0;\n\t\t\t--empty-sample-bar: #1d092f;\n\n\t\t\t--pitch-secondary-channel-hue: 110; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 63; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 50; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: 120; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: 110; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 63.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 55; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: 120; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 90; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 80; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 90; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 60; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 80; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 62; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t--sample-failed: #bf2c78;\n\n\t\t}\n\n\t\t* {\n\t\t/*cursor: url(\"abyssbox_cursor.png\"), auto !important;*/\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\n\t\t}\n\t\n\n\t\t/* Frutiger Aero Icons */\n\n\t\tdiv.promptContainerBG {\n\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\tbackdrop-filter: unset !important;\n\t\t\topacity: 0 !important;\n\t\t}\n\n\t\tdiv.mute-button::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.mute-button.muted::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\t#text-content > section > h1 > font {\n\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\n\t\t\t}\n\n\t\tbutton.mobileEffectsButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tbutton.mobileInstButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tbutton.mobileEnvelopesButton.deactivated {\n\t\tbox-shadow: none !important;\n\t\t}\n\n\t\tselect.trackSelectBox {\n\t\t\tborder-image: none !important;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"Frutiger\";\n\t\t   src:\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tcanvas#oscilascopeAll {\n\t\t\t\tbackground: #2e538c !important; \n\t\t\t\tborder: 2px solid #84aef000 !important;\n\t\t\t}\n\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 144px;\n\t\t\t\theight: 32px;\n\t\t\t  }\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: calc(144px + 4px);\n\t\t\t\theight: calc(32px + 4px);\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 1;\n\t\t\t  }\n\n\t\t\tdiv.prompt.noSelection{\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \n\t\t\t\topacity: 77;\n\t\t\t\tbackdrop-filter: blur(14px);\n\t\t\t}  \n\n\t\t\tsvg#firstImage {\n\t\t\t\topacity: 50%;\n\t\t\t\t--editor-background: #000000;\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"image_assets/frutigerbg3.png\") !important;\n\t\t\tbackground-position: top;\n\t\t\tbackground-attachment: fixed;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: 145%;\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \n\t\t\t\t}\n\n\t\t\t#beepboxEditorContainer {\n\t\t\t\tbackground: linear-gradient(#f5abfb80, #4839b380) !important;\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: #050428;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t--inverted-text: black;\n\t\t\t\tbackdrop-filter: blur(14px);\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(0, 0, 0, 0.5)\n\t\t\t}\n\t\t\t#text-content {\n\t\t\t\tbackground: linear-gradient(#4839b380, #22032f80);\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: #050428;\n\t\t\t\t  backdrop-filter: blur(14px);\n\t\t\t\t  box-shadow: inset 0 0 2000px rgba(0, 0, 0, 0.5)\n\t\t\t}\n\n\t\t\t\tdiv.playback-bar-controls button.playButton, \n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \n\t\t\t\tdiv.playback-bar-controls button.recordButton, \n\t\t\t\tdiv.playback-bar-controls button.stopButton, \n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \n\t\t\t\tdiv.selectRow button.copyButton, \n\t\t\t\tdiv.selectRow button.pasteButton, \n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\n\t\t\t\tdiv.editor-controls div button.add-envelope,\n\t\t\t\tdiv.editor-controls div button.delete-envelope, \n\t\t\t\t.beepboxEditor .select2-selection__rendered,\n\t\t\t\t.beepboxEditor .instrument-bar button,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated,\n\t\t\t\t.beepboxEditor select  { \n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54;\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor select:focus\n\t\t\t\t{\n\t\t\t\t\tborder-image-source: none;\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, button\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t\t\t.beepboxEditor button:focus,\n\t\t\t\tbutton:focus,\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor .filterEditor svg,\n\t\t\t\t.beepboxEditor .fadeInOut svg,\n\t\t\t\t.beepboxEditor .harmonics svg,\n\t\t\t\t.beepboxEditor .spectrum svg\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\theight: 16px !important;\n\t\t\t\t\twidth: 16px !important;\n\t\t\t\t\tborder-radius: 40px !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tborder: none !important;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\tborder-radius: 1px;\n\t\t\t\t\twidth: 1em !important;\n\t\t\t\t\theight: 1em !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\twidth: 1em;\n\t\t\t\t\theight: 1em;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\tcontent: \"✓\";\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'Frutiger';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'Frutiger' !important;\n\t\t\t}\n\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\n\n\t\t   div.beepboxEditor.load {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   div.noSelection {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .loopEditor {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .muteEditor {\n\t\t\tbackground: linear-gradient(#9a76aa, #3d2448) !important;\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\n\t\t\topacity: 65%;\n\t\t   }\n\n\t\t   div.muteEditor div {\n\t\t\tbackground: none !important;\n\t\t\t--track-editor-bg-pitch: #5f8fd6;\n\t\t\t--track-editor-bg-noise: #5f8fd6;\n\t\t\t--track-editor-bg-mod: #8a76c5;\n\t\n\t\t\t--track-editor-bg-pitch-dim: #2472a1; \t\t\n\t\t\t--track-editor-bg-noise-dim: #2472a1; \t\t\t\n\t\t\t--track-editor-bg-mod-dim: #4222a0; \n\n\t\t   }\n\n\t\t   div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.curChannelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\n\t\t\t`,\n\t\t\"Skeuomorphic\": `\n\t\t:root {\n\t\t\t--page-margin: #020202;\n\t\t\t--editor-background: #1e1e1e;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #848484;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #555;\n\t\t\t--pitch-background: #393e4f;\n\t\t\t--tonic: #725491;\n\t\t\t--fifth-note: #54547a;\n\t\t\t--third-note: #3b4b71;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #666;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: linear-gradient(#4b5164, #3e3f48);\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#3e3f48, #212530);\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\n\t\t\t--track-editor-bg-mod: linear-gradient(#283560,#0a101f);\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#05080f,#0a101f);\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #333;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #dda85d;\n\t\t\t--mute-button-mod: #886eae;\n\t\t\t--mod-label-primary: #282840;\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t--mod-label-primary-text: white;\n\n\t\t\t--pitch1-secondary-channel: #bb1111;\n\t\t\t--pitch1-primary-channel:   #ff5959;\n\t\t\t--pitch1-secondary-note:    #7c0404;\n\t\t\t--pitch1-primary-note:      #ffb6b6;\n\t\t\n\t\t\t--pitch2-secondary-channel: #bb5b11;\n\t\t\t--pitch2-primary-channel:   #ffa159;\n\t\t\t--pitch2-secondary-note:    #7c3804;\n\t\t\t--pitch2-primary-note:      #ffd5b6;\n\t\t\n\t\t\t--pitch3-secondary-channel: #bba411;\n\t\t\t--pitch3-primary-channel:   #ffe959;\n\t\t\t--pitch3-secondary-note:    #7c6c04;\n\t\t\t--pitch3-primary-note:      #fff5b6;\n\t\t\n\t\t\t--pitch4-secondary-channel: #88bb11;\n\t\t\t--pitch4-primary-channel:   #cdff59;\n\t\t\t--pitch4-secondary-note:    #587c04;\n\t\t\t--pitch4-primary-note:      #e9ffb6;\n\t\t\n\t\t\t--pitch5-secondary-channel: #3ebb11;\n\t\t\t--pitch5-primary-channel:   #85ff59;\n\t\t\t--pitch5-secondary-note:    #247c04;\n\t\t\t--pitch5-primary-note:      #c9ffb6;\n\t\t\n\t\t\t--pitch6-secondary-channel: #11bb2e;\n\t\t\t--pitch6-primary-channel:   #59ff75;\n\t\t\t--pitch6-secondary-note:    #047c18;\n\t\t\t--pitch6-primary-note:      #b6ffc2;\n\t\t\n\t\t\t--pitch7-secondary-channel: #11bb77;\n\t\t\t--pitch7-primary-channel:   #59ffbd;\n\t\t\t--pitch7-secondary-note:    #047c4c;\n\t\t\t--pitch7-primary-note:      #b6ffe2;\n\t\t\n\t\t\t--pitch8-secondary-channel: #11b5bb;\n\t\t\t--pitch8-primary-channel:   #59f9ff;\n\t\t\t--pitch8-secondary-note:    #04777c;\n\t\t\t--pitch8-primary-note:      #b6fcff;\n\t\t\n\t\t\t--pitch9-secondary-channel: #116bbb;\n\t\t\t--pitch9-primary-channel:   #59b1ff;\n\t\t\t--pitch9-secondary-note:    #04437c;\n\t\t\t--pitch9-primary-note:      #b6dcff;\n\t\t\n\t\t\t--pitch10-secondary-channel:#1826aa;\n\t\t\t--pitch10-primary-channel:  #5161f6;\n\t\t\t--pitch10-secondary-note:   #091370;\n\t\t\t--pitch10-primary-note:     #adb4fd;\n\t\t\n\t\t\t--pitch11-secondary-channel:#4918aa;\n\t\t\t--pitch11-primary-channel:  #8951f6;\n\t\t\t--pitch11-secondary-note:   #2c0970;\n\t\t\t--pitch11-primary-note:     #c8adfd;\n\t\t\n\t\t\t--pitch12-secondary-channel:#8818aa;\n\t\t\t--pitch12-primary-channel:  #d051f6;\n\t\t\t--pitch12-secondary-note:   #580970;\n\t\t\t--pitch12-primary-note:     #ebadfd;\n\t\t\n\t\t\t--pitch13-secondary-channel:#aa188c;\n\t\t\t--pitch13-primary-channel:  #f651d4;\n\t\t\t--pitch13-secondary-note:   #70095b;\n\t\t\t--pitch13-primary-note:     #fdadec;\n\t\t\n\t\t\t--pitch14-secondary-channel:#aa184d;\n\t\t\t--pitch14-primary-channel:  #f6518d;\n\t\t\t--pitch14-secondary-note:   #70092e;\n\t\t\t--pitch14-primary-note:     #fdadca; \n\t\t\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t}\n\t\t \n\t\t.channelBox {\n\t\t\t--pitch1-primary-channel:  linear-gradient(#ff7777, #ff5959);\n\t\t\t--pitch2-primary-channel:  linear-gradient(#ffaf71, #ffa159);\n\t\t\t--pitch3-primary-channel:  linear-gradient(#ffee7c, #ffe959);\n\t\t\t--pitch4-primary-channel:  linear-gradient(#d3fa7a, #cdff59);\n\t\t\t--pitch5-primary-channel:  linear-gradient(#a4ff83, #85ff59);\n\t\t\t--pitch6-primary-channel:  linear-gradient(#8aff9e, #59ff75);\n\t\t\t--pitch7-primary-channel:  linear-gradient(#81ffcc, #59ffbd);\n\t\t\t--pitch8-primary-channel:  linear-gradient(#59f9ff, #59f9ff);\n\t\t\t--pitch9-primary-channel:  linear-gradient(#87c7ff, #59b1ff);\n\t\t\t--pitch10-primary-channel: linear-gradient(#7a87ff, #5161f6);\n\t\t\t--pitch11-primary-channel: linear-gradient(#a476ff, #8951f6);\n\t\t\t--pitch12-primary-channel: linear-gradient(#df75ff, #d051f6);\n\t\t\t--pitch13-primary-channel: linear-gradient(#ff75e3, #f651d4);\n\t\t\t--pitch14-primary-channel: linear-gradient(#ff71a5, #f6518d);\n\t\t\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t\n\t\t.channelBoxLabel {\n\t\t\t--pitch1-primary-channel:   #ff5959;\n\t\t\t--pitch2-primary-channel:   #ffa159;\n\t\t\t--pitch3-primary-channel:   #ffe959;\n\t\t\t--pitch4-primary-channel:   #cdff59;\n\t\t\t--pitch5-primary-channel:   #85ff59;\n\t\t\t--pitch6-primary-channel:   #59ff75;\n\t\t\t--pitch7-primary-channel:   #59ffbd;\n\t\t\t--pitch8-primary-channel:   #59f9ff;\n\t\t\t--pitch9-primary-channel:   #59b1ff;\n\t\t\t--pitch10-primary-channel:  #5161f6;\n\t\t\t--pitch11-primary-channel:  #8951f6;\n\t\t\t--pitch12-primary-channel:  #d051f6;\n\t\t\t--pitch13-primary-channel:  #f651d4;\n\t\t\t--pitch14-primary-channel:  #f6518d;\n\t\t}\n\t\t\n\t\tbody {\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg.png?raw=true') !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tbackground-size: contain;\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t}\n\t\t\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\n\t\t\tbackground-color: #fff0 !important;\n\t\t} \n\t\t\n\t\t#pitchEditorBackground {\n\t\t\topacity: 0.5 !important;\n\t\t\tfilter: brightness(150%);\n\t\t}\n\t\t\n\t\tsvg#firstImage {\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg2.png?raw=true') !important;\n\t\t}\n\t\t\n\t\t#oscilascopeAll {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\tposition: static;\n\t\t}\n\t\t \n\t\t.beepboxEditor,\n\t\t.beepboxEditor select\n\t\t{\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\n\t\t}\n\t\t \n\t\t.beepboxEditor .piano-button {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .prompt\n\t\t{\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #2a2a2a, #1a1a1a) !important;\n\t\t}\n\t\t \n\t\t#beepboxEditorContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .loopEditor\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteEditor\n\t\t{\n\t\t\t--editor-background: #1e1e1e !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .pattern-area\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackContainer svg\n\t\t{\n\t\t\t--editor-background: #111 !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteEditor > :last-child {\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor #octaveScrollBarContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\n\t\t}\n\t\t \n\t\t.beepboxEditor {\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteButtonText {\n\t\t\ttransform: translate(0px, 1px) !important;\n\t\t\tcolor: #777 !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar {\n\t\t\t--text-color-lit: #eee;\n\t\t\t--text-color-dim: #777;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .deactivated {\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\tborder-color: var(--background-color-lit) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor select\n\t\t{\n\t\t\tbackground: #444 !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor select:focus\n\t\t{\n\t\t\tbackground: #333 !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-selection__rendered,\n\t\t.beepboxEditor button,\n\t\t.beepboxEditor .instrument-bar button,\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\n\t\t{\n\t\t\tbackground: linear-gradient(#444, #333) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t.beepboxEditor button:focus,\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t{\n\t\t\tbackground: linear-gradient(#333, #444) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .filterEditor svg,\n\t\t.beepboxEditor .fadeInOut svg,\n\t\t.beepboxEditor .harmonics svg,\n\t\t.beepboxEditor .spectrum svg\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"text\"],\n\t\t.beepboxEditor input[type=\"number\"]\n\t\t{\n\t\t\tborder: none !important;\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t{\n\t\t\tappearance: none;\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\tcolor: currentColor;\n\t\t\tborder-radius: 1px;\n\t\t\twidth: 1em !important;\n\t\t\theight: 1em !important;\n\t\t\tbox-shadow:\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t{\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t{\n\t\t\twidth: 1em;\n\t\t\theight: 1em;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 0.8em;\n\t\t\tcontent: \"✓\";\n\t\t\tcolor: currentColor;\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t}\n\t\t`,\t\t\t\t\n\t\t\"woodland\": `\n\t\t:root {\n\t\t\t--page-margin: #1d1b16;\n\t\t\t--editor-background: #1d1b16;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #ffe6d1;\n\t\t\t--secondary-text: #f0c4a1;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #c58f1cfc;\n\t\t\t--box-selection-fill: #942d04;\n\t\t\t--loop-accent: #a69186;\n\t\t\t--link-accent: #c4b044;\n\t\t\t--ui-widget-background: #3c3931;\n\t\t\t--ui-widget-focus: #514240;\n\t\t\t--pitch-background: #342e29;\n\t\t\t--tonic: #514129;\n\t\t\t--fifth-note: #735346;\n\t\t\t--third-note: #593439;\n\t\t\t--white-piano-key: #a69186;\n\t\t\t--black-piano-key: #423a34;\n\t\t\t--white-piano-key-text: #1f0d03;\n\t\t\t--black-piano-key-text: #ffe6d1;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: linear-gradient(#644b4b, #483e3e);\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#483e3e, #302121);\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\n\t\t\t--track-editor-bg-mod: linear-gradient(#603e28,#1f100a);\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#0f0705,#1f0d0a);\n\t\t\t--multiplicative-mod-slider: #966d3f;\n\t\t\t--overwriting-mod-slider: #b58650;\n\t\t\t--indicator-primary: #b58650;\n\t\t\t--indicator-secondary: #4f4139;\n\t\t\t--select2-opt-group: #3b0000;\n\t\t\t--input-box-outline: #200000;\n\t\t\t--mute-button-normal: #dda85d;\n\t\t\t--mute-button-mod: #adae6e;\n\t\t\t--mod-label-primary: #422a0f;\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--octave-scrollbar: #281f1a;\n\n\t\t\t--pitch1-secondary-channel: #bb1111;\n\t\t\t--pitch1-primary-channel:   #ff5959;\n\t\t\t--pitch1-secondary-note:    #7c0404;\n\t\t\t--pitch1-primary-note:      #ffb6b6;\n\t\t\n\t\t\t--pitch2-secondary-channel: #bb5b11;\n\t\t\t--pitch2-primary-channel:   #ffa159;\n\t\t\t--pitch2-secondary-note:    #7c3804;\n\t\t\t--pitch2-primary-note:      #ffd5b6;\n\t\t\n\t\t\t--pitch3-secondary-channel: #bba411;\n\t\t\t--pitch3-primary-channel:   #ffe959;\n\t\t\t--pitch3-secondary-note:    #7c6c04;\n\t\t\t--pitch3-primary-note:      #fff5b6;\n\t\t\n\t\t\t--pitch4-secondary-channel: #88bb11;\n\t\t\t--pitch4-primary-channel:   #cdff59;\n\t\t\t--pitch4-secondary-note:    #587c04;\n\t\t\t--pitch4-primary-note:      #e9ffb6;\n\t\t\n\t\t\t--pitch5-secondary-channel: #3ebb11;\n\t\t\t--pitch5-primary-channel:   #85ff59;\n\t\t\t--pitch5-secondary-note:    #247c04;\n\t\t\t--pitch5-primary-note:      #c9ffb6;\n\t\t\n\t\t\t--pitch6-secondary-channel: #11bb2e;\n\t\t\t--pitch6-primary-channel:   #59ff75;\n\t\t\t--pitch6-secondary-note:    #047c18;\n\t\t\t--pitch6-primary-note:      #b6ffc2;\n\t\t\n\t\t\t--pitch7-secondary-channel: #11bb77;\n\t\t\t--pitch7-primary-channel:   #59ffbd;\n\t\t\t--pitch7-secondary-note:    #047c4c;\n\t\t\t--pitch7-primary-note:      #b6ffe2;\n\t\t\n\t\t\t--pitch8-secondary-channel: #11b5bb;\n\t\t\t--pitch8-primary-channel:   #59f9ff;\n\t\t\t--pitch8-secondary-note:    #04777c;\n\t\t\t--pitch8-primary-note:      #b6fcff;\n\t\t\n\t\t\t--pitch9-secondary-channel: #116bbb;\n\t\t\t--pitch9-primary-channel:   #59b1ff;\n\t\t\t--pitch9-secondary-note:    #04437c;\n\t\t\t--pitch9-primary-note:      #b6dcff;\n\t\t\n\t\t\t--pitch10-secondary-channel:#1826aa;\n\t\t\t--pitch10-primary-channel:  #5161f6;\n\t\t\t--pitch10-secondary-note:   #091370;\n\t\t\t--pitch10-primary-note:     #adb4fd;\n\t\t\n\t\t\t--pitch11-secondary-channel:#4918aa;\n\t\t\t--pitch11-primary-channel:  #8951f6;\n\t\t\t--pitch11-secondary-note:   #2c0970;\n\t\t\t--pitch11-primary-note:     #c8adfd;\n\t\t\n\t\t\t--pitch12-secondary-channel:#8818aa;\n\t\t\t--pitch12-primary-channel:  #d051f6;\n\t\t\t--pitch12-secondary-note:   #580970;\n\t\t\t--pitch12-primary-note:     #ebadfd;\n\t\t\n\t\t\t--pitch13-secondary-channel:#aa188c;\n\t\t\t--pitch13-primary-channel:  #f651d4;\n\t\t\t--pitch13-secondary-note:   #70095b;\n\t\t\t--pitch13-primary-note:     #fdadec;\n\t\t\n\t\t\t--pitch14-secondary-channel:#aa184d;\n\t\t\t--pitch14-primary-channel:  #f6518d;\n\t\t\t--pitch14-secondary-note:   #70092e;\n\t\t\t--pitch14-primary-note:     #fdadca; \n\t\t\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t}\n\t\t \n\t\t.channelBox {\n\t\t\t--pitch1-primary-channel:  linear-gradient(#ff7777, #ff5959);\n\t\t\t--pitch2-primary-channel:  linear-gradient(#ffaf71, #ffa159);\n\t\t\t--pitch3-primary-channel:  linear-gradient(#ffee7c, #ffe959);\n\t\t\t--pitch4-primary-channel:  linear-gradient(#d3fa7a, #cdff59);\n\t\t\t--pitch5-primary-channel:  linear-gradient(#a4ff83, #85ff59);\n\t\t\t--pitch6-primary-channel:  linear-gradient(#8aff9e, #59ff75);\n\t\t\t--pitch7-primary-channel:  linear-gradient(#81ffcc, #59ffbd);\n\t\t\t--pitch8-primary-channel:  linear-gradient(#59f9ff, #59f9ff);\n\t\t\t--pitch9-primary-channel:  linear-gradient(#87c7ff, #59b1ff);\n\t\t\t--pitch10-primary-channel: linear-gradient(#7a87ff, #5161f6);\n\t\t\t--pitch11-primary-channel: linear-gradient(#a476ff, #8951f6);\n\t\t\t--pitch12-primary-channel: linear-gradient(#df75ff, #d051f6);\n\t\t\t--pitch13-primary-channel: linear-gradient(#ff75e3, #f651d4);\n\t\t\t--pitch14-primary-channel: linear-gradient(#ff71a5, #f6518d);\n\t\t\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t\n\t\t.channelBoxLabel {\n\t\t\t--pitch1-primary-channel:   #ff5959;\n\t\t\t--pitch2-primary-channel:   #ffa159;\n\t\t\t--pitch3-primary-channel:   #ffe959;\n\t\t\t--pitch4-primary-channel:   #cdff59;\n\t\t\t--pitch5-primary-channel:   #85ff59;\n\t\t\t--pitch6-primary-channel:   #59ff75;\n\t\t\t--pitch7-primary-channel:   #59ffbd;\n\t\t\t--pitch8-primary-channel:   #59f9ff;\n\t\t\t--pitch9-primary-channel:   #59b1ff;\n\t\t\t--pitch10-primary-channel:  #5161f6;\n\t\t\t--pitch11-primary-channel:  #8951f6;\n\t\t\t--pitch12-primary-channel:  #d051f6;\n\t\t\t--pitch13-primary-channel:  #f651d4;\n\t\t\t--pitch14-primary-channel:  #f6518d;\n\t\t}\n\t\t\n\t\tbody {\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t}\n\t\t\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\n\t\t\tbackground-color: #fff0 !important;\n\t\t} \n\t\t\n\t\t#pitchEditorBackground {\n\t\t\topacity: 0.5 !important;\n\t\t\tfilter: brightness(150%);\n\t\t}\n\t\t\n\t\t#oscilascopeAll {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\tposition: static;\n\t\t}\n\t\t \n\t\t.beepboxEditor,\n\t\t.beepboxEditor select\n\t\t{\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\n\t\t}\n\t\t \n\t\t.beepboxEditor .piano-button {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .prompt\n\t\t{\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #1d0700, #110400) !important;\n\t\t}\n\t\t \n\t\t#beepboxEditorContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .loopEditor\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .pattern-area\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackContainer svg\n\t\t{\n\t\t\t--editor-background: #33190a !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteEditor > :last-child {\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor #octaveScrollBarContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\n\t\t}\n\t\t \n\t\t.beepboxEditor {\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteButtonText {\n\t\t\ttransform: translate(0px, 1px) !important;\n\t\t\tcolor: #777 !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar {\n\t\t\t--text-color-lit: #eee;\n\t\t\t--text-color-dim: #777;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .deactivated {\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\tborder-color: var(--background-color-lit) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor select\n\t\t{\n\t\t\tbackground: #3c3931 !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -10px 20px 1px rgba(31, 11, 2, 0.4),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor select:focus\n\t\t{\n\t\t\tbackground: #201e1b !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-selection__rendered,\n\t\t.beepboxEditor button,\n\t\t.beepboxEditor .instrument-bar button,\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\n\t\t{\n\t\t\tbackground: linear-gradient(#3c3931, #201e1b) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t.beepboxEditor button:focus,\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t{\n\t\t\tbackground: linear-gradient(#201e1b, #3c3931) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .filterEditor svg,\n\t\t.beepboxEditor .fadeInOut svg,\n\t\t.beepboxEditor .harmonics svg,\n\t\t.beepboxEditor .spectrum svg\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"text\"],\n\t\t.beepboxEditor input[type=\"number\"]\n\t\t{\n\t\t\tborder: none !important;\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t{\n\t\t\tappearance: none;\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\tcolor: currentColor;\n\t\t\tborder-radius: 1px;\n\t\t\twidth: 1em !important;\n\t\t\theight: 1em !important;\n\t\t\tbox-shadow:\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t{\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t{\n\t\t\twidth: 1em;\n\t\t\theight: 1em;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 0.8em;\n\t\t\tcontent: \"✓\";\n\t\t\tcolor: currentColor;\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t}\n\t\t`,\n\t\t \"Blurple\": `\n\t\t:root {\n\t\t\t--page-margin: #020202;\n\t\t\t--editor-background: #1e1e1e;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #848484;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #005ab4;\n\t\t\t--box-selection-fill: #005ab4;\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #555;\n\t\t\t--pitch-background: #353654;\n\t\t\t--tonic: #76469b;\n\t\t\t--fifth-note: #40609b;\n\t\t\t--third-note: #586685;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #666;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: linear-gradient(#4b5164, #3e3f48);\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#3e3f48, #212530);\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\n\t\t\t--track-editor-bg-mod: linear-gradient(#283560,#0a101f);\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#05080f,#0a101f);\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #333;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #dda85d;\n\t\t\t--mute-button-mod: #886eae;\n\t\t\t--mod-label-primary: #282840;\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t--mod-label-primary-text: white;\n\n            --pitch1-secondary-channel: #5f3ea5; --pitch1-primary-channel: #c1a4ff; --pitch1-secondary-note: #794fd3; --pitch1-primary-note: #d8c6ff; --pitch2-secondary-channel: #4f44bf; --pitch2-primary-channel: #9287ff; --pitch2-secondary-note: #5e51d9; --pitch2-primary-note: #b6afff; --pitch3-secondary-channel: #374eb9; --pitch3-primary-channel: #8097ff; --pitch3-secondary-note: #445cc9; --pitch3-primary-note: #a0b2ff; --pitch4-secondary-channel: #2867cf; --pitch4-primary-channel: #6fa5ff; --pitch4-secondary-note: #2e6ed7; --pitch4-primary-note: #a6c7ff; --pitch5-secondary-channel: #3175a7; --pitch5-primary-channel: #7ec9ff; --pitch5-secondary-note: #367eb3; --pitch5-primary-note: #9fd7ff; --pitch6-secondary-channel: #3993a9; --pitch6-primary-channel: #8ce9ff; --pitch6-secondary-note: #386da3; --pitch6-primary-note: #9eecff; --pitch7-secondary-channel: #369d8a; --pitch7-primary-channel: #8bfce7; --pitch7-secondary-note: #1c93a7; --pitch7-primary-note: #abffef; --pitch8-secondary-channel: #00A170; --pitch8-primary-channel: #50FFC9; --pitch8-secondary-note: #00C78A; --pitch8-primary-note: #83FFD9; --pitch9-secondary-channel: #49b374; --pitch9-primary-channel: #8affa9; --pitch9-secondary-note: #26815f; --pitch9-primary-note: #c8ffde; --pitch10-secondary-channel: #58a747; --pitch10-primary-channel: #bbffaa; --pitch10-secondary-note: #1d7c48; --pitch10-primary-note: #c7ffbc;\n\t\t\n            --noise1-secondary-channel: #42829b; --noise1-primary-channel: #97d3fc; --noise1-secondary-note: #3f53b3; --noise1-primary-note: #97d3fc; --noise2-secondary-channel: #6354bb; --noise2-primary-channel: #9a89ff; --noise2-secondary-note: #5f4dcd; --noise2-primary-note: #c6bcff; --noise3-secondary-channel: #704a95; --noise3-primary-channel: #c285ff; --noise3-secondary-note: #ad5aff; --noise3-primary-note: #d3a6ff; --noise4-secondary-channel: #a53c65; --noise4-primary-channel: #f794bb; --noise4-secondary-note: #cb5080; --noise4-primary-note: #f794bb; --noise5-secondary-channel: #9b2d2d; --noise5-primary-channel: #ff7676; --noise5-secondary-note: #cb4444; --noise5-primary-note: #ff9999;\n            --mod1-secondary-channel: #b7613c; --mod1-primary-channel: #ff9f76; --mod1-secondary-note: #e77e52; --mod1-primary-note: #ffb99b; --mod2-secondary-channel: #916d34; --mod2-primary-channel: #fece80; --mod2-secondary-note: #c58b35; --mod2-primary-note: #ffdda5; --mod3-secondary-channel: #83761a; --mod3-primary-channel: #fdf68c; --mod3-secondary-note: #c18e00; --mod3-primary-note: #fdf68c; --mod4-secondary-channel: #a86436; --mod4-primary-channel: #c8a825; --mod4-secondary-note: #e8ba46; --mod4-primary-note: #c8a825;\n\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t}\n\t\t \n\t\t.channelBox {\n\t\t\t--pitch-primary-channel:  linear-gradient(#5365c3, #519ac0);\n\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\n\t\t}\n\t\t\n\t\t\n\t\tbody {\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg.png?raw=true') !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tbackground-size: contain;\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t}\n\t\t\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\n\t\t\tbackground-color: #fff0 !important;\n\t\t} \n\t\t\n\t\t#pitchEditorBackground {\n\t\t\topacity: 0.5 !important;\n\t\t\tfilter: brightness(150%);\n\t\t}\n\t\t\n\t\tsvg#firstImage {\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg2.png?raw=true') !important;\n\t\t}\n\t\t\n\t\t#oscilascopeAll {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\tposition: static;\n\t\t}\n\t\t \n\t\t.beepboxEditor,\n\t\t.beepboxEditor select\n\t\t{\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\n\t\t}\n\t\t \n\t\t.beepboxEditor .piano-button {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .prompt\n\t\t{\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #2a2a2a, #1a1a1a) !important;\n\t\t}\n\t\t \n\t\t#beepboxEditorContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\ttext-shadow: none;\n\t\t}\n\t\t \n\t\t.beepboxEditor .loopEditor\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteEditor\n\t\t{\n\t\t\t--editor-background: #1e1e1e !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .pattern-area\n\t\t{\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .trackContainer svg\n\t\t{\n\t\t\t--editor-background: #111 !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteEditor > :last-child {\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor #octaveScrollBarContainer {\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\n\t\t}\n\t\t \n\t\t.beepboxEditor {\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\n\t\t}\n\t\t \n\t\t.beepboxEditor .muteButtonText {\n\t\t\ttransform: translate(0px, 1px) !important;\n\t\t\tcolor: #777 !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar {\n\t\t\t--text-color-lit: #eee;\n\t\t\t--text-color-dim: #777;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .deactivated {\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\tborder-color: var(--background-color-lit) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\n\t\t}\n\t\t \n\t\t.beepboxEditor select\n\t\t{\n\t\t\tbackground: #444 !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor select:focus\n\t\t{\n\t\t\tbackground: #333 !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-selection__rendered,\n\t\t.beepboxEditor button,\n\t\t.beepboxEditor .instrument-bar button,\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\n\t\t{\n\t\t\tbackground: linear-gradient(#444, #333) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t.beepboxEditor button:focus,\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t{\n\t\t\tbackground: linear-gradient(#333, #444) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor .filterEditor svg,\n\t\t.beepboxEditor .fadeInOut svg,\n\t\t.beepboxEditor .harmonics svg,\n\t\t.beepboxEditor .spectrum svg\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t{\n\t\t\tbox-shadow:\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t\tborder-radius: 4px;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t{\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"text\"],\n\t\t.beepboxEditor input[type=\"number\"]\n\t\t{\n\t\t\tborder: none !important;\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t{\n\t\t\tappearance: none;\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\tcolor: currentColor;\n\t\t\tborder-radius: 1px;\n\t\t\twidth: 1em !important;\n\t\t\theight: 1em !important;\n\t\t\tbox-shadow:\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t{\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t \n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t{\n\t\t\twidth: 1em;\n\t\t\theight: 1em;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 0.8em;\n\t\t\tcontent: \"✓\";\n\t\t\tcolor: currentColor;\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t}\n\n\t\t`,\t\t\t\t\n      \"Glyde\": `\n\t  :root { \n\t\t--page-margin: #000000; \n\t\t--song-player-margin: #000;\n\t\t--editor-background: #472434a8; \n\t\t--hover-preview: white; \n\t\t--playhead: rgba(255, 255, 255, 0.9); \n\t\t--primary-text: #ffe5c2; \n\t\t--secondary-text: #ffcedd; \n\t\t--inverted-text: black; \n\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t--box-selection-fill: #1e0915; \n\t\t--loop-accent: #ffdeaf; \n\t\t--link-accent: #df88ff; \n\t\t--ui-widget-background: #8a516e9e; \n\t\t--ui-widget-focus: #4f152b; \n\t\t--pitch-background: #00000038; \n\t\t--tonic: #ff9db9; \n\t\t--fifth-note: #ffe1b88c; \n\t\t--third-note: #8e2f9b8c;\n\t\t--white-piano-key: #ffb6ce; \n\t\t--black-piano-key: #ff7ba7; \n\t\t--use-color-formula: true; \n\t\t--track-editor-bg-pitch: #751e40; \n\t\t--track-editor-bg-pitch-dim: #4f152b; \n\t\t--track-editor-bg-noise: #751e30; \n\t\t--track-editor-bg-noise-dim: #4f152b; \n\t\t--track-editor-bg-mod: #751e29; \n\t\t--track-editor-bg-mod-dim: #4f152b; \n\t\t--multiplicative-mod-slider: #ea7d7d; \n\t\t--overwriting-mod-slider: #ffebd5; \n\t\t--indicator-primary: #ffebd5; \n\t\t--indicator-secondary: #4f152b; \n\t\t--select2-opt-group: #ffebd5; \n\t\t--input-box-outline: #a33e67; \n\t\t--mute-button-normal: #b63448; \n\t\t--mute-button-mod: #6d0f1d; \n\t\t--mod-label-primary: #2b080d; \n\t\t--mod-label-secondary-text: #421a20; \n\t\t--mod-label-primary-text: #ffc6cf; \n\t\t--progress-bar: #ffc9ff;\n\t\t--pitch-secondary-channel-hue: 60; \n\t\t--pitch-secondary-channel-sat: 23; \n\t\t--pitch-secondary-channel-sat-scale: 0.1; \n\t\t--pitch-secondary-channel-lum: 50; \n\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t--pitch-primary-channel-hue: 60; \n\t\t--pitch-primary-channel-hue-scale: 6.1; \n\t\t--pitch-primary-channel-sat: 75; \n\t\t--pitch-primary-channel-sat-scale: 0.1; \n\t\t--pitch-primary-channel-lum: 87.5; \n\t\t--pitch-primary-channel-lum-scale: 0.05; \n\t\t--pitch-secondary-note-hue: 60; \n\t\t--pitch-secondary-note-hue-scale: 6.1; \n\t\t--pitch-secondary-note-sat: 53.9; \n\t\t--pitch-secondary-note-sat-scale: 0.1; \n\t\t--pitch-secondary-note-lum: 65; \n\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t--pitch-primary-note-hue: 60; \n\t\t--pitch-primary-note-hue-scale: 6.1; \n\t\t--pitch-primary-note-sat: 100; \n\t\t--pitch-primary-note-sat-scale: 0.05; \n\t\t--pitch-primary-note-lum: 95.6; \n\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t--noise-secondary-channel-hue: 0; \n\t\t--noise-secondary-channel-hue-scale: 2; \n\t\t--noise-secondary-channel-sat: 65; \n\t\t--noise-secondary-channel-sat-scale: 0; \n\t\t--noise-secondary-channel-lum: 72; \n\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t--noise-primary-channel-hue: 0; \n\t\t--noise-primary-channel-hue-scale: 1; \n\t\t--noise-primary-channel-sat: 100; \n\t\t--noise-primary-channel-sat-scale: 1; \n\t\t--noise-primary-channel-lum: 93.5; \n\t\t--noise-primary-channel-lum-scale: 0; \n\t\t--noise-secondary-note-hue: 24; \n\t\t--noise-secondary-note-hue-scale: 2; \n\t\t--noise-secondary-note-sat: 100; \n\t\t--noise-secondary-note-sat-scale: 0; \n\t\t--noise-secondary-note-lum: 75; \n\t\t--noise-secondary-note-lum-scale: 0; \n\t\t--noise-primary-note-hue: 24; \n\t\t--noise-primary-note-hue-scale: 2; \n\t\t--noise-primary-note-sat: 100; \n\t\t--noise-primary-note-sat-scale: 1; \n\t\t--noise-primary-note-lum: 90; \n\t\t--noise-primary-note-lum-scale: 1; \n\t\t--mod-secondary-channel-hue: 55; \n\t\t--mod-secondary-channel-hue-scale: 1.5; \n\t\t--mod-secondary-channel-sat: 100; \n\t\t--mod-secondary-channel-sat-scale: 0; \n\t\t--mod-secondary-channel-lum: 70; \n\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t--mod-primary-channel-hue: 55; \n\t\t--mod-primary-channel-hue-scale: 1.5; \n\t\t--mod-primary-channel-sat: 96; \n\t\t--mod-primary-channel-sat-scale: 0; \n\t\t--mod-primary-channel-lum: 95; \n\t\t--mod-primary-channel-lum-scale: 0; \n\t\t--mod-secondary-note-hue: 55; \n\t\t--mod-secondary-note-hue-scale: 1.5; \n\t\t--mod-secondary-note-sat: 92; \n\t\t--mod-secondary-note-sat-scale: 0; \n\t\t--mod-secondary-note-lum: 75; \n\t\t--mod-secondary-note-lum-scale: 0; \n\t\t--mod-primary-note-hue: 55; \n\t\t--mod-primary-note-hue-scale: 1.5; \n\t\t--mod-primary-note-sat: 96; \n\t\t--mod-primary-note-sat-scale: 0; \n\t\t--mod-primary-note-lum: 95; \n\t\t--mod-primary-note-lum-scale: 0; \n\t\t--note-flash: #fff; \n\t\t--note-flash-secondary: #ffffff54; }\n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t   font-family: \"Varela\";\n\t\t   src:\n \t\t   url(\"./image_assets/Varela.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/glydebg.png\") !important;\n\t\t\tbackground-position: top right;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\tdiv#beepboxEditorContainer {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t}\n\t\t\t\t\n\t\t\t#text-content {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'Varela';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'Varela' !important;\n\t\t\t}\n\n\t\t\t#firstImage {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepfp.PNG\") !important;\n\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t}\n\n\t\t\t#text-content > section > h1 > font {\n\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\tmargin: auto;\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxGlydeThemeLogo.png\");\n\t\t\t\t}\n\n\t\t\t\tdiv.beepboxEditor.load {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.noSelection {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .loopEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .muteEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.muteEditor div {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\n\n\t\t\t`,\n\t\t\t\"starry studio\": `\n\t\t\t:root {     \n\t\t\t\t--page-margin: black;     \n\t\t\t\t--editor-background: rgba(0, 0, 0, 0.65);     \n\t\t\t\t--hover-preview: #f8f8f8;     \n\t\t\t\t--playhead: rgba(255, 255, 255, 0.8);     \n\t\t\t\t--primary-text: #f8f8f8;     \n\t\t\t\t--secondary-text: #b8b4e8;     \n\t\t\t\t--inverted-text: #3b2655;     \n\t\t\t\t--text-selection: rgba(124, 91, 173, 0.9);     \n\t\t\t\t--box-selection-fill: #b8b4e8;     \n\t\t\t\t--loop-accent: #a80a61;     \n\t\t\t\t--link-accent: #a286d7;     \n\t\t\t\t--ui-widget-background: #31253f;     \n\t\t\t\t--ui-widget-focus: #7c5bad;     \n\t\t\t\t--pitch-background: rgba(40, 40, 44, 0.5);     \n\t\t\t\t--tonic: rgba(83, 81, 95, 0.5);     \n\t\t\t\t--fifth-note: rgba(59, 38, 85, 0.5);   \n\t\t\t\t--third-note: #2a422282;  \n\t\t\t\t--white-piano-key: rgb(155, 151, 166);     \n\t\t\t\t--black-piano-key: #39363e;     \n\t\t\t\t--white-piano-key-text: #39363e;     \n\t\t\t\t--black-piano-key-text: #9b97a6;     \n\t\t\t\t--use-color-formula: true;     \n\t\t\t\t--track-editor-bg-pitch: #423174;     \n\t\t\t\t--track-editor-bg-pitch-dim: #252335;     \n\t\t\t\t--track-editor-bg-noise: #39363e;     \n\t\t\t\t--track-editor-bg-noise-dim: #28282c;     \n\t\t\t\t--track-editor-bg-mod: #3b2655;     \n\t\t\t\t--track-editor-bg-mod-dim: #252335;     \n\t\t\t\t--multiplicative-mod-slider: #168ee4;     \n\t\t\t\t--overwriting-mod-slider: #2457c6;     \n\t\t\t\t--indicator-primary: #f8f8f8;     \n\t\t\t\t--indicator-secondary: #423174;     \n\t\t\t\t--select2-opt-group: #423174;     \n\t\t\t\t--input-box-outline: #3b2655;     \n\t\t\t\t--mute-button-normal: #00b176;     \n\t\t\t\t--mute-button-mod: #e6a418;     \n\t\t\t\t--mod-label-primary: #3b2655;     \n\t\t\t\t--mod-label-secondary-text: rgb(124 91 173);     \n\t\t\t\t--mod-label-primary-text: #b8b4e8;     \n\t\t\t\t--pitch-secondary-channel-hue: 0;     \n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;     \n\t\t\t\t--pitch-secondary-channel-sat: 83.3;     \n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;     \n\t\t\t\t--pitch-secondary-channel-lum: 40;     \n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;     \n\t\t\t\t--pitch-primary-channel-hue: 0;     \n\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;     \n\t\t\t\t--pitch-primary-channel-sat: 100;     \n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;     \n\t\t\t\t--pitch-primary-channel-lum: 67.5;     \n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;     \n\t\t\t\t--pitch-secondary-note-hue: 0;     \n\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;     \n\t\t\t\t--pitch-secondary-note-sat: 93.9;     \n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;     \n\t\t\t\t--pitch-secondary-note-lum: 25;     \n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;     \n\t\t\t\t--pitch-primary-note-hue: 0;     \n\t\t\t\t--pitch-primary-note-hue-scale: 6.5;     \n\t\t\t\t--pitch-primary-note-sat: 100;     \n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;     \n\t\t\t\t--pitch-primary-note-lum: 85.6;     \n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;     \n\t\t\t\t--noise-secondary-channel-hue: 0;     \n\t\t\t\t--noise-secondary-channel-hue-scale: 2;     \n\t\t\t\t--noise-secondary-channel-sat: 25;     \n\t\t\t\t--noise-secondary-channel-sat-scale: 0;     \n\t\t\t\t--noise-secondary-channel-lum: 42;     \n\t\t\t\t--noise-secondary-channel-lum-scale: 0;     \n\t\t\t\t--noise-primary-channel-hue: 0;     \n\t\t\t\t--noise-primary-channel-hue-scale: 2;     \n\t\t\t\t--noise-primary-channel-sat: 33;     \n\t\t\t\t--noise-primary-channel-sat-scale: 0;     \n\t\t\t\t--noise-primary-channel-lum: 63.5;     \n\t\t\t\t--noise-primary-channel-lum-scale: 0;     \n\t\t\t\t--noise-secondary-note-hue: 0;     \n\t\t\t\t--noise-secondary-note-hue-scale: 2;     \n\t\t\t\t--noise-secondary-note-sat: 33.5;     \n\t\t\t\t--noise-secondary-note-sat-scale: 0;     \n\t\t\t\t--noise-secondary-note-lum: 55;     \n\t\t\t\t--noise-secondary-note-lum-scale: 0;     \n\t\t\t\t--noise-primary-note-hue: 0;     \n\t\t\t\t--noise-primary-note-hue-scale: 2;     \n\t\t\t\t--noise-primary-note-sat: 46.5;     \n\t\t\t\t--noise-primary-note-sat-scale: 0;     \n\t\t\t\t--noise-primary-note-lum: 74;     \n\t\t\t\t--noise-primary-note-lum-scale: 0;     \n\t\t\t\t--mod-secondary-channel-hue: 192;     \n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;     \n\t\t\t\t--mod-secondary-channel-sat: 88;     \n\t\t\t\t--mod-secondary-channel-sat-scale: 0;     \n\t\t\t\t--mod-secondary-channel-lum: 50;     \n\t\t\t\t--mod-secondary-channel-lum-scale: 0;     \n\t\t\t\t--mod-primary-channel-hue: 192;     \n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;     \n\t\t\t\t--mod-primary-channel-sat: 96;     \n\t\t\t\t--mod-primary-channel-sat-scale: 0;     \n\t\t\t\t--mod-primary-channel-lum: 80;     \n\t\t\t\t--mod-primary-channel-lum-scale: 0;     \n\t\t\t\t--mod-secondary-note-hue: 192;     \n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;     \n\t\t\t\t--mod-secondary-note-sat: 92;     \n\t\t\t\t--mod-secondary-note-sat-scale: 0;     \n\t\t\t\t--mod-secondary-note-lum: 45;     \n\t\t\t\t--mod-secondary-note-lum-scale: 0;     \n\t\t\t\t--mod-primary-note-hue: 192;     \n\t\t\t\t--mod-primary-note-hue-scale: 1.5;     \n\t\t\t\t--mod-primary-note-sat: 96;     \n\t\t\t\t--mod-primary-note-sat-scale: 0;     \n\t\t\t\t--mod-primary-note-lum: 85;     \n\t\t\t\t--mod-primary-note-lum-scale: 0;     \n\t\t\t\t--disabled-note-primary: #252a46;     \n\t\t\t\t--disabled-note-secondary: #181c34; }\n\n\t\t\t\t/* sets background image */\n\t\t\t.beepboxEditor load {\n\t\t\t\tbackground: #fff0 !important;\n\t\t\t\t}\n\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stars.gif\") !important;\n\t\t\tbackground-repeat: repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t`,\t\t\t\n\t\t\"AWeebyssBox\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t--pitch-background: #381d2455; \t\t\n\t\t\t--tonic: #873a51; \t\t\n\t\t\t--fifth-note: #75001e; \t\n\t\t\t--third-note: #75002c;\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #bf2c5d;\n\t\t\t--empty-sample-bar: #260b1b;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t}\n\n\t\t\t\n\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\tborder-image-source: none !important;\n\t\t\t}\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\n\t\t\t\t}\n\t\t\t .beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\") !important;\n    \t\t\t\tborder-image-slice: 4 fill !important; \n   \t\t\t\tborder-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n    \t\t\t\t\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\n\t\t\t\t#firstImage {\n\t\t\t\t\tbackground-image: url(\"./image_assets/viviandbelle.png\") !important;\n\t\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t\t}\n\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t\n\n\t\t\t\n\n\t\t   \n\n\t\t\t`,\n\t\t\"Half-Life\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #0c1012; \t\t\n\t\t\t--editor-background: #0c1012; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: #ffee00; \t\t\n\t\t\t--secondary-text: #ffee00; \t\t\n\t\t\t--inverted-text:  #000000;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #ff6f00; \t\t\n\t\t\t--loop-accent: #ff6f00; \t\t\n\t\t\t--link-accent: #ff6f00; \t\t\n\t\t\t--ui-widget-background: #36454F;\t\t\n\t\t\t--ui-widget-focus: #36454F; \t\t\n\t\t\t--pitch-background: #5e2103; \t\t\n\t\t\t--tonic: #ff6f00; \t\t\n\t\t\t--fifth-note: #963c00; \t\t\n\t\t\t--third-note: #b76f23;\n\t\t\t--white-piano-key: #ccbca5; \t\t\n\t\t\t--black-piano-key: #40382f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\n\t\t\t--indicator-primary: #b38949; \t\t\n\t\t\t--indicator-secondary: #543d1d; \t\t\n\t\t\t--select2-opt-group: #4f3b19; \t\t\n\t\t\t--input-box-outline: #1a0b04; \t\t\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\n\t\t\t--mute-button-mod: #ba3d36; \t\t\n\t\t\t--mod-label-primary: #542f16; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #ff6f00;\n\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: 154; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 65; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 25; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 75; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"./image_assets/wide-gordon.png\");\n\t\twidth: inherit;\n\t\theight: contain;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"./image_assets/lambda.png\") !important;\n\t\tbackground-size: cover !important;\n\t\tbackground-position: center !important;\n\t\tbackground-repeat: no-repeat !important;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"trebuc\";\n\t\t   src:\n \t\t   url(\"./image_assets/trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'trebuc';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'trebuc' !important;\n\t\t\t}\n\n\t\t\t#modTitle::before {\n\t\t\t\tcontent: \"λbyssBox\" !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\t\"Half-Life: Source\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #0c1012; \t\t\n\t\t\t--editor-background: #0c1012; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: #ffee00; \t\t\n\t\t\t--secondary-text: #ffee00; \t\t\n\t\t\t--inverted-text:  #000000;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #ff6f00; \t\t\n\t\t\t--loop-accent: #ff6f00; \t\t\n\t\t\t--link-accent: #ff6f00; \t\t\n\t\t\t--ui-widget-background: #36454F;\t\t\n\t\t\t--ui-widget-focus: #36454F; \t\t\n\t\t\t--pitch-background: #5e2103; \t\t\n\t\t\t--tonic: #ff6f00; \t\t\n\t\t\t--fifth-note: #963c00; \t\n\t\t\t--third-note: #b76f23;\t\n\t\t\t--white-piano-key: #ccbca5; \t\t\n\t\t\t--black-piano-key: #40382f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\n\t\t\t--indicator-primary: #b38949; \t\t\n\t\t\t--indicator-secondary: #543d1d; \t\t\n\t\t\t--select2-opt-group: #4f3b19; \t\t\n\t\t\t--input-box-outline: #1a0b04; \t\t\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\n\t\t\t--mute-button-mod: #ba3d36; \t\t\n\t\t\t--mod-label-primary: #542f16; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #ff6f00;\n\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: 154; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 65; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 25; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 75; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"./image_assets/wide-gordon.png\");\n\t\twidth: inherit;\n\t\theight: contain;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"./image_assets/lambda.png\") !important;\n\t\tbackground-position: center;\n\t\tbackground-repeat: repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"trebuc\";\n\t\t   src:\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tdiv.prompt.noSelection {\n\t\t\t\tleft: 636px !important;\n\t\t\t}\n\n\t\t\t#beepboxEditorContainer {\n\t\t\t\tpadding-top: 20px;\n\t\t\t}\n\n\t\t\tdiv.beepboxEditor.load {\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t#text-content {\n\t\t\t\toverflow: visible;\n\t\t\t\twidth: 20% !important;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'trebuc';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'trebuc' !important;\n\t\t\t}\n\n\t\t\t#modTitle::before {\n\t\t\t\tcontent: \"λbyssBox: Source\" !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\"Scratch\": `\n\t\t:root {\n\t\t\t--page-margin: #4d97ff40;\n\t\t\t--editor-background: #f6e5fa;\n\t\t\t--hover-preview: #ff9900;\n\t\t\t--playhead: #4cbf56;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #000;\n\t\t\t--inverted-text: #fff;\n\t\t\t--text-selection: rgba(255, 255, 255, 0.99);\n\t\t\t--box-selection-fill: #7725ff;\n\t\t\t--loop-accent: #ffab19;\n\t\t\t--link-accent: #ff9900;\n\t\t\t--ui-widget-background: #855cd6;\n\t\t\t--ui-widget-focus: #ff661a;\n\t\t\t--pitch-background: #fff;\n\t\t\t--tonic: #855cd6;\n\t\t\t--fifth-note: #7e7e7e;\n\t\t\t--third-note: #d2bddd;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #fff;\n\t\t\t--track-editor-bg-pitch-dim: #c7c7c7;\n\t\t\t--track-editor-bg-noise: #4d97ff40;\n\t\t\t--track-editor-bg-noise-dim: #1c54a3b0;\n\t\t\t--track-editor-bg-mod: #855cd6;\n\t\t\t--track-editor-bg-mod-dim: #503389;\n\t\t\t--multiplicative-mod-slider: #ff6680;\n\t\t\t--overwriting-mod-slider: #ff3355;\n\t\t\t--indicator-primary: #855cd6;\n\t\t\t--indicator-secondary: #cecece;\n\t\t\t--select2-opt-group: #5a3b98;\n\t\t\t--input-box-outline: #626262;\n\t\t\t--mute-button-normal: #cf63cf;\n\t\t\t--mute-button-mod: #cf63cf;\n\t\t\t--mod-label-primary: #ff3355;\n\t\t\t--white-piano-key: #fff;\n\t\t\t--black-piano-key: #000;\n\t\t\t--white-piano-key-text: #000;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--note-flash: #4cbf56;\n\t\t\t--note-flash-secondary: #b84848;\n\t\t\t--oscilloscope-line-L: #d587e6;\n\t\t\t--oscilloscope-line-R: #b11cc7;\n\t\t\t--pitch1-secondary-channel: #3373cc;\n\t\t\t--pitch1-primary-channel: #4c97ff;\n\t\t\t--pitch1-secondary-note: #3373cc;\n\t\t\t--pitch1-primary-note: #4c97ff;\n\t\t\t--pitch2-secondary-channel: #774dcb;\n\t\t\t--pitch2-primary-channel: #9966ff;\n\t\t\t--pitch2-secondary-note: #774dcb;\n\t\t\t--pitch2-primary-note: #9966ff;\n\t\t\t--pitch3-secondary-channel: #bd42bd;\n\t\t\t--pitch3-primary-channel: #cf63cf;\n\t\t\t--pitch3-secondary-note: #bd42bd;\n\t\t\t--pitch3-primary-note: #cf63cf;\n\t\t\t--pitch4-secondary-channel: #cc9900;\n\t\t\t--pitch4-primary-channel: #ffbf00;\n\t\t\t--pitch4-secondary-note: #cc9900;\n\t\t\t--pitch4-primary-note: #ffbf00;\n\t\t\t--pitch5-secondary-channel: #cf8b17;\n\t\t\t--pitch5-primary-channel: #ffab19;\n\t\t\t--pitch5-secondary-note: #cf8b17;\n\t\t\t--pitch5-primary-note: #ffab19;\n\t\t\t--pitch6-secondary-channel: #2e8eb8;\n\t\t\t--pitch6-primary-channel: #5cb1d6;\n\t\t\t--pitch6-secondary-note: #2e8eb8;\n\t\t\t--pitch6-primary-note: #5cb1d6;\n\t\t\t--pitch7-secondary-channel: #389438;\n\t\t\t--pitch7-primary-channel: #59c059;\n\t\t\t--pitch7-secondary-note: #389438;\n\t\t\t--pitch7-primary-note: #59c059;\n\t\t\t--pitch8-secondary-channel: #db6e00;\n\t\t\t--pitch8-primary-channel: #ff8c1a;\n\t\t\t--pitch8-secondary-note: #db6e00;\n\t\t\t--pitch8-primary-note: #ff8c1a;\n\t\t\t--pitch9-secondary-channel: #ff3355;\n\t\t\t--pitch9-primary-channel: #ff6680;\n\t\t\t--pitch9-secondary-note: #ff3355;\n\t\t\t--pitch9-primary-note: #ff6680;\n\t\t\t--pitch10-secondary-channel: #0b8e69;\n\t\t\t--pitch10-primary-channel: #0fbd8c;\n\t\t\t--pitch10-secondary-note: #0b8e69;\n\t\t\t--pitch10-primary-note: #0fbd8c;\n\t\t\t--noise1-secondary-channel: #ef3d23;\n\t\t\t--noise1-primary-channel: #fcf9ce;\n\t\t\t--noise1-secondary-note: #ef3d23;\n\t\t\t--noise1-primary-note: #fcf9ce;\n\t\t\t--noise2-secondary-channel: #dd002b;\n\t\t\t--noise2-primary-channel: #f73d61;\n\t\t\t--noise2-secondary-note: #dd002b;\n\t\t\t--noise2-primary-note: #f73d61;\n\t\t\t--noise3-secondary-channel: #d0e9ea;\n\t\t\t--noise3-primary-channel: #f3ffff;\n\t\t\t--noise3-secondary-note: #d0e9ea;\n\t\t\t--noise3-primary-note: #f3ffff;\n\t\t\t--noise4-secondary-channel: #ed9b24;\n\t\t\t--noise4-primary-channel: #ffc941;\n\t\t\t--noise4-secondary-note: #ed9b24;\n\t\t\t--noise4-primary-note: #ffc941;\n\t\t\t--noise5-secondary-channel: #663b00;\n\t\t\t--noise5-primary-channel: #ffe9cc;\n\t\t\t--noise5-secondary-note: #663b00;\n\t\t\t--noise5-primary-note: #ffe9cc;\n\t\t\t--mod1-secondary-channel: #001026;\n\t\t\t--mod1-primary-channel: #ffab19;\n\t\t\t--mod1-secondary-note: #001026;\n\t\t\t--mod1-primary-note: #ffab19;\n\t\t\t--mod2-secondary-channel: #603813;\n\t\t\t--mod2-primary-channel: #ffc93e;\n\t\t\t--mod2-secondary-note: #603813;\n\t\t\t--mod2-primary-note: #ffc93e;\n\t\t\t--mod3-secondary-channel: #1b75bb;\n\t\t\t--mod3-primary-channel: #e6e7e8;\n\t\t\t--mod3-secondary-note: #1b75bb;\n\t\t\t--mod3-primary-note: #e6e7e8;\n\t\t\t--mod4-secondary-channel: #404041;\n\t\t\t--mod4-primary-channel: #f05a28;\n\t\t\t--mod4-secondary-note: #404041;\n\t\t\t--mod4-primary-note: #f05a28;\n\t\t\t--disabled-note-primary: #ff6680;\n\t\t\t--disabled-note-secondary: #ff3355;\n\t\t  }\n\t\t  * {\n\t\t  --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\n\t\t  --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t  --stop-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t  }\n\n\t\tdiv.promptContainerBG {\n\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\tbackdrop-filter: unset !important;\n\t\t\topacity: 0.5 !important;\n\t\t}\n\n\t\t  button.playButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t\t/* Hold on, before you start asking: \"WHAT THE? WHY IS THE ICON SO LARGE!!!\" Let me tell ya that this method removes all the filtering issues on the png and it looks incredibly seemless so shush */\n\n\t\t}\n\n\t\tbutton.pauseButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t}\n\n\t\tbutton.stopButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t}\n\n\t\t  #text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\n\t\t  }\n\t\t  .beepboxEditor,\n\t\t  #beepboxEditorContainer {\n\t\t\tbackground-color: rgb(255, 255, 255) !important;\n\t\t\tborder-radius: 6px;\n\t\t\tbox-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\n\t\t  }\n\t\t  .beepboxEditor .loopEditor {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 3px;\n\t\t  }\n\t\t  .beepboxEditor .muteEditor {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 0px;\n\t\t\theight: 158px;\n\t\t  }\n\t\t  .beepboxEditor .pattern-area {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 3px;\n\t\t  }\n\t\t  .beepboxEditor .trackContainer svg {\n\t\t\t--editor-background: #3100ff !important;\n\t\t  }\n\t\t  .beepboxEditor .muteEditor > :last-child {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t  }\n\t\t  .beepboxEditor #octaveScrollBarContainer {\n\t\t\tbackground-color: #4d97ff40;\n\t\t  }\n\t\t  .beepboxEditor .muteButtonText {\n\t\t\ttransform: translate(0px, 1px) !important;\n\t\t\tcolor: #777 !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar {\n\t\t\t--text-color-lit: #fff !important;\n\t\t\t--text-color-dim: #4c4c4c !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tcolor: rgb(0, 0, 0) !important;\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .deactivated {\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\tborder-color: var(--background-color-lit) !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\n\t\t  }\n\t\t  .beepboxEditor button, button {\n\t\t\tcolor: #fff;\n\t\t\tbackground: #3c236f;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument,\n\t\t  .beepboxEditor .filterEditor svg,\n\t\t  .beepboxEditor .fadeInOut svg,\n\t\t  .beepboxEditor .harmonics svg,\n\t\t  .beepboxEditor .spectrum svg {\n\t\t\tbackground: rgb(255, 255, 255) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t  inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\n\t\t\tbackground: #000000 !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\tbackground: #000000 !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\n\t\t\tbackground: rgb(127, 127, 127) !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\tbackground: rgb(127, 127, 127) !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"text\"],\n\t\t  .beepboxEditor input[type=\"number\"] {\n\t\t\tfont-size: inherit !important;\n\t\t\tfont-weight: bold !important;\n\t\t\tfont-family: inherit !important;\n\t\t\tbackground: #ff8c1a !important;\n\t\t\ttext-align: center !important;\n\t\t\tborder: 1px solid var(--input-box-outline);\n\t\t\tcolor: #fff !important;\n\t\t\tbox-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\n\t\t  }\n\t\t  .beepboxEditor .prompt {\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #fff;\n\t\t\t--ui-widget-background: #351f5f;\n\t\t\tcolor: #fff !important;\n\t\t\tbackground: #855cd6 !important;\n\t\t  }\n\t\t  .beepboxEditor .trackContainer {\n\t\t\t--editor-background: #fff;\n\t\t  }\n\t\t  #text-content {\n\t\t\tcolor: #fff;\n\t\t\tbackground: #855cd6;\n\t\t  }\n\t\t  body:not(#secondImage) {\n\t\t\tbackground-image: url(\"https://cdn.scratch.mit.edu/scratchr2/static/__74e70580e9dbe93ce1c3f8422dde592d__/images/scratch-bg.png\");\n\t\t  }\n\t\t  body:not(#secondImage) input {\n\t\t\t--primary-text: #000;\n\t\t  }\n\t\t  body:not(#secondImage) h1 {\n\t\t\tcolor: #000;\n\t\t  }\n\t\t  button.copyButton,\n\t\t  button.pasteButton,\n\t\t  button.exportInstrumentButton,\n\t\t  button.importInstrumentButton, \n\t\t  button.addEnvelope,\n\t\t  div.editor-controls div button,\n\t\t  div.selectRow button,\n\t\t  div.effects-menu button,\n\t\t  div.effects-menu::before,\n\t\t  div.selectContainer select,\n\t\t  div.selectContainer::after,\n\t\t  span#select2-pitchPresetSelect-container {\n\t\t\tcolor: white !important;\n\t\t  }\n\t\t  div#text-content {\n\t\t\tpadding-top: 15px;\n\t\t  }\n\t\t  div#beepboxEditorContainer{\n\t\t\tpadding-bottom: 15px;\n\t\t  }\n\t\t  div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.curChannelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.muteEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t\theight: 158px !important;\n\t\t  }\n\t\t  div.loopEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t  }\n\t\t`,\n\t\t\"Scratch Addons\": `\n\t\t:root {\n\t\t\t--page-margin: #111111;\n\t\t\t--editor-background: #f6e5fa;\n\t\t\t--hover-preview: #ff9900;\n\t\t\t--playhead: #4cbf56;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #fff;\n\t\t\t--inverted-text: #fff;\n\t\t\t--text-selection: rgba(255, 255, 255, .99);\n\t\t\t--box-selection-fill: #7725ff;\n\t\t\t--loop-accent: rgb(225, 169, 26);\n\t\t\t--link-accent: #ff9900;\n\t\t\t--ui-widget-background: #202020;\n\t\t\t--ui-widget-focus: #0a0a0a;\n\t\t\t--pitch-background: #111111;\n\t\t\t--tonic: #855cd6;\n\t\t\t--fifth-note: #2e4274;\n\t\t\t--third-note: #547580;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #393939;\n\t\t\t--track-editor-bg-pitch-dim: #21211F;\n\t\t\t--track-editor-bg-noise: #393939;\n\t\t\t--track-editor-bg-noise-dim: #21211FF;\n\t\t\t--track-editor-bg-mod: #393939;\n\t\t\t--track-editor-bg-mod-dim: #21211FF;\n\t\t\t--multiplicative-mod-slider: #ff6680;\n\t\t\t--overwriting-mod-slider: #ff3355;\n\t\t\t--indicator-primary: #855cd6;\n\t\t\t--indicator-secondary: #cecece;\n\t\t\t--select2-opt-group: #333;\n\t\t\t--input-box-outline: #626262;\n\t\t\t--mute-button-normal: #cf63cf;\n\t\t\t--mute-button-mod: #cf63cf;\n\t\t\t--mod-label-primary: #ff3355;\n\t\t\t--white-piano-key: #fff;\n\t\t\t--black-piano-key: #000;\n\t\t\t--white-piano-key-text: #000;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--note-flash: #ff0;\n\t\t\t--note-flash-secondary: #ff7b00;\n\t\t\t--oscilloscope-line-L: #d587e6;\n\t\t\t--oscilloscope-line-R: #b11cc7;\n\t\t   \n\t\t\t--pitch1-secondary-channel: #3b56aa;\n\t\t\t--pitch1-primary-channel: #4a6cd4;\n\t\t\t--pitch1-secondary-note: #3b56aa;\n\t\t\t--pitch1-primary-note: #4a6cd4;\n\t\t\t--pitch2-secondary-channel: rgb(110, 68, 172);\n\t\t\t--pitch2-primary-channel: rgb(138, 85, 215);\n\t\t\t--pitch2-secondary-note: rgb(110, 68, 172);\n\t\t\t--pitch2-primary-note: rgb(138, 85, 215);\n\t\t\t--pitch3-secondary-channel: rgb(150, 53, 156);\n\t\t\t--pitch3-primary-channel: rgb(187, 66, 195);\n\t\t\t--pitch3-secondary-note: rgb(150, 53, 156);\n\t\t\t--pitch3-primary-note: rgb(187, 66, 195);\n\t\t\t--pitch4-secondary-channel: rgb(160, 105, 38);\n\t\t\t--pitch4-primary-channel: rgb(200, 131, 48);\n\t\t\t--pitch4-secondary-note: rgb(160, 105, 38);\n\t\t\t--pitch4-primary-note: rgb(200, 131, 48);\n\t\t\t--pitch5-secondary-channel: rgb(180, 135, 21);\n\t\t\t--pitch5-primary-channel: rgb(225, 169, 26);\n\t\t\t--pitch5-secondary-note: rgb(180, 135, 21);\n\t\t\t--pitch5-primary-note: rgb(225, 169, 26);\n\t\t\t--pitch6-secondary-channel: rgb(35, 132, 181);\n\t\t\t--pitch6-primary-channel: rgb(44, 165, 226);\n\t\t\t--pitch6-secondary-note: rgb(35, 132, 181);\n\t\t\t--pitch6-primary-note: rgb(44, 165, 226);\n\t\t\t--pitch7-secondary-channel: rgb(74, 146, 14);\n\t\t\t--pitch7-primary-channel: rgb(92, 183, 18);\n\t\t\t--pitch7-secondary-note: rgb(74, 146, 14);\n\t\t\t--pitch7-primary-note: rgb(92, 183, 18);\n\t\t\t--pitch8-secondary-channel: rgb(190, 100, 18);\n\t\t\t--pitch8-primary-channel: rgb(238, 125, 22);\n\t\t\t--pitch8-secondary-note: rgb(190, 100, 18);\n\t\t\t--pitch8-primary-note: rgb(238, 125, 22);\n\t\t\t--pitch9-secondary-channel: rgb(79, 36, 122);\n\t\t\t--pitch9-primary-channel: rgb(99, 45, 153);\n\t\t\t--pitch9-secondary-note: rgb(79, 36, 122);\n\t\t\t--pitch9-primary-note: rgb(99, 45, 153);\n\t\t\t--pitch10-secondary-channel: rgb(11, 123, 86);\n\t\t\t--pitch10-primary-channel: rgb(14, 154, 108);\n\t\t\t--pitch10-secondary-note: rgb(11, 123, 86);\n\t\t\t--pitch10-primary-note: rgb(14, 154, 108);\n\t\t\t--noise1-secondary-channel: #ef3d23;\n\t\t\t--noise1-primary-channel: #fcf9ce;\n\t\t\t--noise1-secondary-note: #ef3d23;\n\t\t\t--noise1-primary-note: #fcf9ce;\n\t\t\t--noise2-secondary-channel: #dd002b;\n\t\t\t--noise2-primary-channel: #f73d61;\n\t\t\t--noise2-secondary-note: #dd002b;\n\t\t\t--noise2-primary-note: #f73d61;\n\t\t\t--noise3-secondary-channel: #d0e9ea;\n\t\t\t--noise3-primary-channel: #f3ffff;\n\t\t\t--noise3-secondary-note: #d0e9ea;\n\t\t\t--noise3-primary-note: #f3ffff;\n\t\t\t--noise4-secondary-channel: #ed9b24;\n\t\t\t--noise4-primary-channel: #ffc941;\n\t\t\t--noise4-secondary-note: #ed9b24;\n\t\t\t--noise4-primary-note: #ffc941;\n\t\t\t--noise5-secondary-channel: #663b00;\n\t\t\t--noise5-primary-channel: #ffe9cc;\n\t\t\t--noise5-secondary-note: #663b00;\n\t\t\t--noise5-primary-note: #ffe9cc;\n\t\t\t--mod1-secondary-channel: #001026;\n\t\t\t--mod1-primary-channel: #ffab19;\n\t\t\t--mod1-secondary-note: #001026;\n\t\t\t--mod1-primary-note: #ffab19;\n\t\t\t--mod2-secondary-channel: #603813;\n\t\t\t--mod2-primary-channel: #ffc93e;\n\t\t\t--mod2-secondary-note: #603813;\n\t\t\t--mod2-primary-note: #ffc93e;\n\t\t\t--mod3-secondary-channel: #1b75bb;\n\t\t\t--mod3-primary-channel: #e6e7e8;\n\t\t\t--mod3-secondary-note: #1b75bb;\n\t\t\t--mod3-primary-note: #e6e7e8;\n\t\t\t--mod4-secondary-channel: #404041;\n\t\t\t--mod4-primary-channel: #f05a28;\n\t\t\t--mod4-secondary-note: #404041;\n\t\t\t--mod4-primary-note: #f05a28;\n\t\t\t--disabled-note-primary: #ff6680;\n\t\t\t--disabled-note-secondary: #ff3355;\n\t\t   }\n\n\t\tdiv.promptContainerBG {\n\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\tbackdrop-filter: unset !important;\n\t\t\topacity: 0.5 !important;\n\t\t}\n\n\t\t   * {\n\t\t   --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\n\t\t   --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t   }\n \n\t\t   button.playButton::before {\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\n\t\t\t background-size: 18px !important;\n\t\t\t background-position: center !important;\n\t\t\t background-repeat: no-repeat !important;\n\t\t\t mask-size: 800px;\n\t\t\t color: #fff0;\n\t\t }\n \n\t\t button.pauseButton::before {\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\t background-size: 18px !important;\n\t\t\t background-position: center !important;\n\t\t\t background-repeat: no-repeat !important;\n\t\t\t mask-size: 800px;\n\t\t\t   color: #fff0;\n\t\t }\n\n\t\t   #text-content > section > h1 {\n\t\t\t margin: auto;\n\t\t\t content: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\n\t\t   }\n\t\t   .beepboxEditor,\n\t\t   #beepboxEditorContainer {\n\t\t\t background-color: #111111 !important;\n\t\t\t border-radius: 6px;\n\t\t\t box-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\n\t\t   }\n\t\t   .beepboxEditor .loopEditor {\n\t\t\t --editor-background: #111111 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .muteEditor {\n\t\t\t --editor-background: #4d97ff40 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .pattern-area {\n\t\t\t --editor-background: #292929 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .trackContainer svg {\n\t\t\t --editor-background: #3100ff !important;\n\t\t   }\n\t\t   .beepboxEditor .muteEditor > :last-child {\n\t\t\t --editor-background: #111111 !important;\n\t\t   }\n\t\t   .beepboxEditor #octaveScrollBarContainer {\n\t\t\t background-color: #111111;\n\t\t   }\n\t\t   .beepboxEditor .muteButtonText {\n\t\t\t transform: translate(0px, 1px) !important;\n\t\t\t color: #777 !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar {\n\t\t\t --text-color-lit: #111111 !important;\n\t\t\t --text-color-dim: #4c4c4c !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\t color: rgb(0, 0, 0) !important;\n\t\t\t text-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .deactivated {\n\t\t\t color: rgba(0, 0, 0, 1) !important;\n\t\t\t text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\t border-color: var(--background-color-lit) !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\t border-color: #111111 !important;\n\t\t   }\n\t\t   .beepboxEditor button, button {\n\t\t\t color: #fff;\n\t\t\t background: #3c236f;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument,\n\t\t   .beepboxEditor .filterEditor svg,\n\t\t   .beepboxEditor .fadeInOut svg,\n\t\t   .beepboxEditor .harmonics svg,\n\t\t   .beepboxEditor .spectrum svg {\n\t\t\t background: rgb(255, 255, 255) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t   inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\n\t\t\t background: #fff !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t background: #000000 !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\n\t\t\t background: rgb(127, 127, 127) !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\t background: rgb(127, 127, 127) !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"text\"],\n\t\t   .beepboxEditor input[type=\"number\"] {\n\t\t\t font-size: inherit !important;\n\t\t\t font-weight: bold !important;\n\t\t\t font-family: inherit !important;\n\t\t\t background: #202020 !important;\n\t\t\t text-align: center !important;\n\t\t\t border: 1px solid var(--input-box-outline);\n\t\t\t color: #fff !important;\n\t\t\t box-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\n\t\t   }\n\t\t   .beepboxEditor .prompt {\n\t\t\t --primary-text: #fff;\n\t\t\t --secondary-text: #fff;\n\t\t\t --ui-widget-background: #351f5f;\n\t\t\t color: #fff !important;\n\t\t\t background: #202020 !important;\n\t\t   }\n\t\t   .beepboxEditor .trackContainer {\n\t\t\t --editor-background: #000;\n\t\t   }\n\t\t   #text-content {\n\t\t\t color: #fff;\n\t\t\t background: #202020;\n\t\t   }\n\t\t   body:not(#secondImage) {\n\t\t\t background: #202020;\n\t\t   }\n\t\t   body:not(#secondImage) input {\n\t\t\t --primary-text: #000;\n\t\t   }\n\t\t   body:not(#secondImage) h1 {\n\t\t\t color: #fff;\n\t\t   }\n\t\t  div#text-content {\n\t\t\tpadding-top: 15px;\n\t\t  }\n\t\t  div#beepboxEditorContainer{\n\t\t\tpadding-bottom: 15px;\n\t\t  }\n\t\t  div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.curChannelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.muteEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t  }\n\t\t`,\n\t\t\"Doom 1993\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #470000; \t\t\n\t\t\t--editor-background: #470000; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: #ffffff; \t\t\n\t\t\t--secondary-text: #ffffff; \t\t\n\t\t\t--inverted-text:  #000000;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #ff6f00; \t\t\n\t\t\t--loop-accent: #ff0000; \t\t\n\t\t\t--link-accent: #962727; \t\t\n\t\t\t--ui-widget-background: #4f3b36;\t\t\n\t\t\t--ui-widget-focus: #4f3b36; \t\t\n\t\t\t--pitch-background: #7d0000; \t\t\n\t\t\t--tonic: #ff0000; \t\t\n\t\t\t--fifth-note: #962727; \t\n\t\t\t--third-note: #d2192a;\t\n\t\t\t--white-piano-key: #ccbca5; \t\t\n\t\t\t--black-piano-key: #40382f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #7d1f00; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #401000; \t\t\n\t\t\t--track-editor-bg-noise: #7d0000; \t\t\n\t\t\t--track-editor-bg-noise-dim: #400000; \t\t\n\t\t\t--track-editor-bg-mod: #7d0028; \t\t\n\t\t\t--track-editor-bg-mod-dim: #470017; \t\t\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\n\t\t\t--overwriting-mod-slider: #9f6460; \t\t\n\t\t\t--indicator-primary: #b38949; \t\t\n\t\t\t--indicator-secondary: #543d1d; \t\t\n\t\t\t--select2-opt-group: #4f3b19; \t\t\n\t\t\t--input-box-outline: #1a0404; \t\t\n\t\t\t--mute-button-normal: #dd5d5d;\t \t\t\n\t\t\t--mute-button-mod: #ba3d36; \t\t\n\t\t\t--mod-label-primary: #541616; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--progress-bar: #ff0000;\n\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -4; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -4; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -4; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 65; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 25; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 75; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\t\t\t\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}\n\t\t\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"./image_assets/AbyssBox_DOOM.png\");\n\t\t}\n\t\t\t\t\n\t\t\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"./image_assets/doomsky.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\n\t\t\t@font-face {\n\t\t   font-family: \"doomfont\";\n\t\t   src:\n \t\t   url(\"./image_assets/doomfont.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'doomfont';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'doomfont' !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\t\"Undertale\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #000;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t--primary-text: #fff;\n\t\t\t\t--secondary-text: #979797;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(255, 255, 255, .99);\n\t\t\t\t--box-selection-fill: #fff;\n\t\t\t\t--loop-accent: #f00;\n\t\t\t\t--link-accent: #0f0;\n\t\t\t\t--ui-widget-background: #4d4d4d;\n\t\t\t\t--ui-widget-focus: #000;\n\t\t\t\t--pitch-background: #2d2d2d73;\n\t\t\t\t--tonic: #c9c9c9;\n\t\t\t\t--fifth-note: #400000;\n\t\t\t\t--third-note: #073037;\n\t\t\t\t--white-piano-key: #fff;\n\t\t\t\t--black-piano-key: #000;\n\t\t\t\t--white-piano-key-text: #000;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t--track-editor-bg-pitch: #8b8b8b;\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\n\t\t\t\t--track-editor-bg-noise: #5c5c5c;\n\t\t\t\t--track-editor-bg-noise-dim: #000;\n\t\t\t\t--track-editor-bg-mod: #585858;\n\t\t\t\t--track-editor-bg-mod-dim: #000;\n\t\t\t\t--multiplicative-mod-slider: #f00;\n\t\t\t\t--overwriting-mod-slider: #00f;\n\t\t\t\t--indicator-primary: #f00;\n\t\t\t\t--indicator-secondary: #919191;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #626262;\n\t\t\t\t--mute-button-normal: #ffffff;\n\t\t\t\t--mute-button-mod: #4f4f4f;\n\t\t\t\t--mod-label-primary: #f00;\n\t\t\t\t--progress-bar: #00ff00;\n\n\t\t\t\t--pitch1-secondary-channel: #590000;\n\t\t\t  --pitch1-primary-channel: #f00;\n\t\t\t  --pitch1-secondary-note: #590000;\n\t\t\t  --pitch1-primary-note: #f00;\n\t\t\t\n\t\t\t  --pitch2-secondary-channel: #00678a;\n\t\t\t  --pitch2-primary-channel: #00ffef;\n\t\t\t  --pitch2-secondary-note: #00678a;\n\t\t\t  --pitch2-primary-note: #00ffef;\n\t\t\t\n\t\t\t  --pitch3-secondary-channel: #b35600;\n\t\t\t  --pitch3-primary-channel: #ff7a00;\n\t\t\t  --pitch3-secondary-note: #b35600;\n\t\t\t  --pitch3-primary-note: #ff7a00;\n\t\t\t\n\t\t\t  --pitch4-secondary-channel: #002866;\n\t\t\t  --pitch4-primary-channel: #001aff;\n\t\t\t  --pitch4-secondary-note: #002866;\n\t\t\t  --pitch4-primary-note: #001aff;\n\t\t\t\n\t\t\t  --pitch5-secondary-channel: #005e0b;\n\t\t\t  --pitch5-primary-channel: #00ff1d;\n\t\t\t  --pitch5-secondary-note: #005e0b;\n\t\t\t  --pitch5-primary-note: #00ff1d;\n\t\t\t\n\t\t\t  --pitch6-secondary-channel: #b55d00;\n\t\t\t  --pitch6-primary-channel: #fe0;\n\t\t\t  --pitch6-secondary-note: #b55d00;\n\t\t\t  --pitch6-primary-note: #fe0;\n\t\t\t\n\t\t\t  --pitch7-secondary-channel: #6a00b3;\n\t\t\t  --pitch7-primary-channel: #a429f7;\n\t\t\t  --pitch7-secondary-note: #6a00b3;\n\t\t\t  --pitch7-primary-note: #a429f7;\n\t\t\t\n\t\t\t  --pitch8-secondary-channel: #02009f;\n\t\t\t  --pitch8-primary-channel: #0058ff;\n\t\t\t  --pitch8-secondary-note: #02009f;\n\t\t\t  --pitch8-primary-note: #0058ff;\n\t\t\t\n\t\t\t  --pitch9-secondary-channel: #5c5c5c;\n\t\t\t  --pitch9-primary-channel: #fff;\n\t\t\t  --pitch9-secondary-note: #5c5c5c;\n\t\t\t  --pitch9-primary-note: #fff;\n\t\t\t\n\t\t\t  --pitch10-secondary-channel: #5e2700;\n\t\t\t  --pitch10-primary-channel: #ffb300;\n\t\t\t  --pitch10-secondary-note: #5e2700;\n\t\t\t  --pitch10-primary-note: #ffb300;\n\t\t\t\n\t\t\t  --noise1-secondary-channel: #750000;\n\t\t\t  --noise1-primary-channel: #f00;\n\t\t\t  --noise1-secondary-note: #750000;\n\t\t\t  --noise1-primary-note: #f00;\n\t\t\t\n\t\t\t  --noise2-secondary-channel: #8567ff;\n\t\t\t  --noise2-primary-channel: #f00;\n\t\t\t  --noise2-secondary-note: #8567ff;\n\t\t\t  --noise2-primary-note: #f00;\n\t\t\t\n\t\t\t  --noise3-secondary-channel: #8567ff;\n\t\t\t  --noise3-primary-channel: #cec2ff;\n\t\t\t  --noise3-secondary-note: #8567ff;\n\t\t\t  --noise3-primary-note: #cec2ff;\n\t\t\t\n\t\t\t  --noise4-secondary-channel: #00266a;\n\t\t\t  --noise4-primary-channel: #ffe100;\n\t\t\t  --noise4-secondary-note: #00266a;\n\t\t\t  --noise4-primary-note: #ffe100;\n\t\t\t\n\t\t\t  --noise5-secondary-channel: #976a00;\n\t\t\t  --noise5-primary-channel: #ffe100;\n\t\t\t  --noise5-secondary-note: #976a00;\n\t\t\t  --noise5-primary-note: #ffe100;\n\t\t\t\n\t\t\t  --mod1-secondary-channel: #aaa;\n\t\t\t  --mod1-primary-channel: #fff;\n\t\t\t  --mod1-secondary-note: #aaa;\n\t\t\t  --mod1-primary-note: #fff;\n\t\t\t\n\t\t\t  --mod2-secondary-channel: #950000;\n\t\t\t  --mod2-primary-channel: #ff6000;\n\t\t\t  --mod2-secondary-note: #950000;\n\t\t\t  --mod2-primary-note: #ff6000;\n\t\t\t\n\t\t\t  --mod3-secondary-channel: #021300;\n\t\t\t  --mod3-primary-channel: #1db917;\n\t\t\t  --mod3-secondary-note: #021300;\n\t\t\t  --mod3-primary-note: #1db917;\n\t\t\t\n\t\t\t  --mod4-secondary-channel: #a00000;\n\t\t\t  --mod4-primary-channel: #ff252f;\n\t\t\t  --mod4-secondary-note: #a00000;\n\t\t\t  --mod4-primary-note: #ff252f;\n\t\t\t\n\t\t\t  --disabled-note-primary: #999;\n\t\t\t  --disabled-note-secondary: #696969;\n\n\t\t\t  --arrow-color: #f67c33;\n\t\t\t  --icon-color: #f67c33;\n\t\t\t\t}\n\t\t\t\t* {\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/cursor-heart.png\"), auto !important;\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t\t--text-enabled-icon:❤️ ;\n\t\t\t\t\t}\n\t\t\n\t\t\t\n\t\t\t\t\tdiv.promptContainerBG {\n\t\t\t\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\t\t\t\tbackdrop-filter: unset !important;\n\t\t\t\t\t\topacity: 0.5 !important;\n\t\t\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/battlebg.png\") !important;\n\t\t\tbackground-position: center;\n\t\t\tbackground-size: contain;\n\t\t\tbackground-attachment: fixed;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/UndertaleThemeLogo.png\");\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxUtThemeLogo.png\");\n \t\t\tbackground-size: contain;\n \t\t\tbackground-position: center;\n  \t\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\n\t\t\tdiv.selectContainer.menu.file select,\n\t\t\tdiv.selectContainer.menu.edit select,\n\t\t\tdiv.selectContainer.menu.preferences select {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #f67c33;\n\t\t\t\tborder-radius: 0px;\n\t\t\t}\n\t\t\tdiv.selectContainer.menu.file,\n\t\t\tdiv.selectContainer.menu.edit,\n\t\t\tdiv.selectContainer.menu.preferences {\n\t\t\t\t--ui-widget-background: black;\n\t\t\t\t--icon-color: #f67c33;\n\t\t\t\t--arrow-color: #f67c33;\n\t\t\t\tcolor: #f67c33;\n\t\t\t}\n\t\t\t.beepboxEditor select:focus,\n\t\t\t.beepboxEditor .selectContainer:focus-within\n\t\t\t{\n\t\t\t\tborder-color: #fbff4b !important;\n\t\t\t\t--ui-widget-background: black !important;\n\t\t\t\t--icon-color: #f00 !important;\n\t\t\t\t--arrow-color: #fbff4b !important;\n\t\t\t\tcolor: #fbff4b !important;\n\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t}\n\t\t\t.beepboxEditor .menu.edit::before,\n\t\t\t.beepboxEditor .menu.file::before,\n\t\t\t.beepboxEditor .menu.preferences::before {\n\t\t\t\tbackground: var(--icon-color) !important;\n\t\t\t}\n\t\t\t.beepboxEditor .menu.edit::after,\n\t\t\t.beepboxEditor .menu.file::after,\n\t\t\t.beepboxEditor .menu.preferences::after {\n\t\t\t\tbackground: var(--arrow-color) !important;\n\t\t\t}\n\n\t\t\t#text-content {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\tpadding-left: 20px;\n\t\t\t\tpadding-right: 20px;\n\t\t\t\tpadding-top: 15px;\n\t\t\t}\n\t\t#beepboxEditorContainer {\n\t\t\tborder-style: solid;\n\t\t\tborder-radius: 0px;\n\t\t\tpadding-left: 20px;\n\t\t\tpadding-right: 20px;\n\t\t\tpadding-bottom: 15px;\n\t\t\t}\n\t\t\t`,\n\t\t\t\"Yume Nikki\": `\n\t\t\t\t\t\t:root {\t\t\n\t\t\t--page-margin: #000000; \t\t\n\t\t\t--editor-background: #000000; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #7b2442; \t\t\n\t\t\t--link-accent: #f588ff; \t\t\n\t\t\t--ui-widget-background: #000000; \t\t\n\t\t\t--ui-widget-focus: #1f1f1f; \t\t\n\t\t\t--pitch-background: #1e0915; \t\t\n\t\t\t--tonic: #7b2442; \t\t\n\t\t\t--pitch2-background: #13040c;\n\t\t\t--fifth-note: #4a0008; \t\n\t\t\t--pitch9-background: #13040c;\n\t\t\t--pitch10-background: #13040c;\n\t\t\t--third-note: #481325;\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f;\n\t\t\t--white-piano-key-text: #131200;\t\t\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #731b50; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #260019; \t\t\n\t\t\t--track-editor-bg-noise: #731b50; \t\t\n\t\t\t--track-editor-bg-noise-dim: #260019; \t\t\n\t\t\t--track-editor-bg-mod: #731b50; \t\t\n\t\t\t--track-editor-bg-mod-dim: #260019; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\t--mod-title: #bf2c5d;\n\t\t\t--progress-bar: #bf2c5d;\n\t\t\t--octave-scrollbar: #4a0008;\n\t\t\t--empty-sample-bar: #0d0d0d;\n\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t--oscilloscope-line-R: #7b2442;\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\n\t\t\t--scrollbar-color: #ffffff;\n\t\t\t--icon-color: #000;\n\t\t\t--arrow-color: #000;\n\t\t\t\t}\n\t\t* {\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t}\n\t\t\n\t\t.spIcon {\n\t\t--ui-widget-background: #93090f;\n\t\t}\n\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t{\n\t\t\tbackground: #4a0008 !important;\n\t\t\tborder-radius: 0px;\n\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\n\n\t\t\t\n\n\t\t\t/*#Hotdog {\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\n\t\t\t} */\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 12px; \n\t\t\t\tborder-image-repeat: repeat; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 12px; \n\t\t\t\tborder-image-repeat: repeat;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\n\t\t\t\tdiv.prompt.noSelection {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 12px; \n\t\t\t\tborder-image-repeat: repeat;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor select:focus,\n\t\t\t\t.beepboxEditor select:hover,\n\t\t\t\t.beepboxEditor .selectContainer:focus-within,\n\t\t\t\t.beepboxEditor button:hover,\n\t\t\t\t.beepboxEditor button:focus,\n\t\t\t\t#select2-pitchPresetSelect-container:hover,\n\t\t\t\t#select2-pitchPresetSelect-container:focus\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: black !important;\n\t\t\t\t\t\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiButton.png\");\n\t\t\t\t\tborder-image-slice: 6 fill; \n   \t\t\t\t\tborder-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: repeat;\n\t\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t\t--ui-widget-focus: #000;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .menu.edit::before,\n\t\t\t\t.beepboxEditor .menu.file::before,\n\t\t\t\t.beepboxEditor .menu.preferences::before {\n\t\t\t\t\tbackground: var(--icon-color) !important;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu.edit::after,\n\t\t\t\t.beepboxEditor .menu.file::after,\n\t\t\t\t.beepboxEditor .menu.preferences::after {\n\t\t\t\t\tbackground: var(--arrow-color) !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .channelBoxLabel {\n\t\t\t\t\tfont-size: 14px !important;\n\t\t\t\t\tfont-weight: unset !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: #000000 !important;\n\t\t\t}\n\t\t\t\t\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\n\t\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"yumeNumbers\";\n\t\t   src:\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNumbers.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t#text-content > section > h1 > font {\n\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\tmargin: auto;\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxYumeNikkiThemeLogo.png\");\n\t\t\t\t}\n\n\t\t\t/**/\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'yumeNumbers' !important;\n\t\t\t}\n\n\t\t\tdiv.fadeInOut svg path {\n\t\t\t--ui-widget-background: #4a0008;\n\t\t\t}\n\t\t\tdiv.filterEditor svg path {\n\t\t\t--ui-widget-background: #4a0008;\n\t\t\t}\n\t\t\t`,\n      \"Windows Xp\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #edead9; \t\t\n\t\t\t--editor-background: #faf9f2; \t\t\n\t\t\t--hover-preview: black; \t\t\n\t\t\t--playhead: #000; \t\t\n\t\t\t--primary-text: #231f20; \t\t\n\t\t\t--secondary-text: #231f20; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t--loop-accent: #003399; \t\t\n\t\t\t--link-accent: #003399; \t\t\n\t\t\t--ui-widget-background: #faf9f2; \t\t\n\t\t\t--ui-widget-focus: #faf9f2; \t\t\n\t\t\t--pitch-background: #ffffff; \t\t\n\t\t\t--tonic: #d5dbf5; \t\t\n\t\t\t--fifth-note: #e8e8e8; \t\n\t\t\t--third-note: #b6ceac;\t\n\t\t\t--white-piano-key: #ebe2ca; \t\t\n\t\t\t--black-piano-key: #403a2f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #cfcab2; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #9c9781; \t\t\n\t\t\t--track-editor-bg-noise: #cfcab2; \t\t\n\t\t\t--track-editor-bg-noise-dim: #9c9781; \t\t\n\t\t\t--track-editor-bg-mod: #cfcab2; \t\t\n\t\t\t--track-editor-bg-mod-dim: #9c9781; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray;\n\t\t\t--progress-bar: #00ff00;\n\t\t\t--octave-scrollbar: #cfcab2;\n\n--pitch-secondary-channel-hue: 0;\t\t\n--pitch-secondary-channel-hue-scale: 6.1;\t\t\n--pitch-secondary-channel-sat: 43.3;\t\t\n--pitch-secondary-channel-sat-scale: 0.1;\t\t\n--pitch-secondary-channel-lum: 30;\t\t\n--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\n--pitch-primary-channel-hue: 0;\t\t\n--pitch-primary-channel-hue-scale: 6.1;\t\t\n--pitch-primary-channel-sat: 60;\t\t\n--pitch-primary-channel-sat-scale: 0.1;\t\t\n--pitch-primary-channel-lum: 57.5;\t\t\n--pitch-primary-channel-lum-scale: 0.05;\n\t\t\n--pitch-secondary-note-hue: 0;\t\t\n--pitch-secondary-note-hue-scale: 6.1;\t\t\n--pitch-secondary-note-sat: 43.9;\t\t\n--pitch-secondary-note-sat-scale: 0.1;\t\t\n--pitch-secondary-note-lum: 35;\t\t\n--pitch-secondary-note-lum-scale: 0.05;\n\t\t\n--pitch-primary-note-hue: 0;\t\t\n--pitch-primary-note-hue-scale: 6.1;\t\t\n--pitch-primary-note-sat: 60;\t\t\n--pitch-primary-note-sat-scale: 0.05;\t\t\n--pitch-primary-note-lum: 65.6;\t\t\n--pitch-primary-note-lum-scale: 0.025;\n\t\t\n--noise-secondary-channel-hue: 0;\t\t\n--noise-secondary-channel-hue-scale: 2;\t\t\n--noise-secondary-channel-sat: 25;\t\t\n--noise-secondary-channel-sat-scale: 0;\t\t\n--noise-secondary-channel-lum: 32;\t\t\n--noise-secondary-channel-lum-scale: 0;\n\t\t\n--noise-primary-channel-hue: 0;\t\t\n--noise-primary-channel-hue-scale: 2;\t\t\n--noise-primary-channel-sat: 33;\t\t\n--noise-primary-channel-sat-scale: 0;\t\t\n--noise-primary-channel-lum: 53.5;\t\t\n--noise-primary-channel-lum-scale: 0;\n\t\t\n--noise-secondary-note-hue: 0;\t\t\n--noise-secondary-note-hue-scale: 2;\t\t\n--noise-secondary-note-sat: 33.5;\t\t\n--noise-secondary-note-sat-scale: 0;\t\t\n--noise-secondary-note-lum: 35;\t\t\n--noise-secondary-note-lum-scale: 0;\t\n\t\n--noise-primary-note-hue: 0;\t\t\n--noise-primary-note-hue-scale: 2;\t\t\n--noise-primary-note-sat: 46.5;\t\t\n--noise-primary-note-sat-scale: 0;\t\t\n--noise-primary-note-lum: 54;\t\t\n--noise-primary-note-lum-scale: 0;\t\n\t\n--mod-secondary-channel-hue: 192;\t\t\n--mod-secondary-channel-hue-scale: 1.5;\t\t\n--mod-secondary-channel-sat: 88;\t\t\n--mod-secondary-channel-sat-scale: 0;\t\t\n--mod-secondary-channel-lum: 30;\t\t\n--mod-secondary-channel-lum-scale: 0;\t\n\t\n--mod-primary-channel-hue: 192;\t\t\n--mod-primary-channel-hue-scale: 1.5;\t\t\n--mod-primary-channel-sat: 56;\t\t\n--mod-primary-channel-sat-scale: 0;\t\t\n--mod-primary-channel-lum: 60;\t\t\n--mod-primary-channel-lum-scale: 0;\t\n\t\n--mod-secondary-note-hue: 192;\t\t\n--mod-secondary-note-hue-scale: 1.5;\t\t\n--mod-secondary-note-sat: 42;\t\t\n--mod-secondary-note-sat-scale: 0;\t\t\n--mod-secondary-note-lum: 35;\t\t\n--mod-secondary-note-lum-scale: 0;\t\n\t\n--mod-primary-note-hue: 192;\t\t\n--mod-primary-note-hue-scale: 1.5;\t\t\n--mod-primary-note-sat: 56;\t\t\n--mod-primary-note-sat-scale: 0;\t\t\n--mod-primary-note-lum: 65;\t\t\n--mod-primary-note-lum-scale: 0;\t\n\n\t\t\t--note-flash: #ffffff77;\n\t\t\t--note-flash-secondary: #ffffff66;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@font-face {\n\t\t\t\t\tfont-family: \"tahoma\";\n\t\t\t\t\tsrc:\n\t\t\t\t\t url(\"./image_assets/tahoma.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t\t\t}\n\t\t\n\t\t\t\tdiv.promptContainerBG {\n\t\t\t\t\tdisplay: none !important;\n\t\t\t\t}\n\n\t\t\t\thtml {\n\t\t\t\tfont-family: 'tahoma';\n\t\t\t   font-size: 150% !important;\n\t\t\t\t}\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'tahoma' !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .promptContainer {\n\t\t\t\t}\n\n\t\t\t\tdiv.prompt.noSelection {\n\t\t\t\t\tmargin: auto;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground: var(--editor-background);\n\t\t\t\t\tborder-radius: 15px;\n\t\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\n\t\t\t\t\tpadding-left: 20px !important;\n\t\t\t\t\tbox-shadow: 6px 6px 27px 4px rgba(0, 0, 0, 0.5) !important;\n\t\t\t\t\tpadding-top: 6px !important;\n\t\t\t\t\tpadding-right: 20px !important;\n\t\t\t\t\tpadding-bottom: 20px !important;\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\n\t\t\t\t\tborder-image-slice: 34 !important;\n\t\t\t\t\tborder-image-width: 50px !important;\n\t\t\t\t\tborder-width: unset !important;\n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\tdiv.prompt.noSelection button.cancelButton {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.promptTitle {\n\t\t\t\t\ttext-align: left !important;\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t}\n\t\t\t\t.layoutExt::before {\n\t\t\t\t\tcontent: \"layout.exe\";\n\t\t\t\t}\n\t\t\t\t.layoutTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.channelExt::after {\n\t\t\t\t\tcontent: \"channelSettings.exe\";\n\t\t\t\t}\n\t\t\t\t.channelTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.limiterExt::after {\n\t\t\t\t\tcontent: \"limiter.exe\";\n\t\t\t\t}\n\t\t\t\t.limiterTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.bpmTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.bpmExt::after {\n\t\t\t\t\tcontent: \"bpb.exe\";\n\t\t\t\t}\n\n\t\t\t\t.gerTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.gerExt::after {\n\t\t\t\t\tcontent: \"euclidianRhythm.exe\";\n\t\t\t\t}\n\n\t\t\t\t.samplesTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.samplesExt::after {\n\t\t\t\t\tcontent: \"sampler.exe\";\n\t\t\t\t\tmargin-bottom: 0.5em;\n\n\t\t\t\t}\n\t\t\t\t.samplesExt {\n\t\t\t\t\tpadding-bottom: 8px;\n\t\t\t\t}\n\n\t\t\t\t.importTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.importExt::after {\n\t\t\t\t\tcontent: \"import.exe\";\n\t\t\t\t}\n\n\t\t\t\t.exportTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.exportExt::after {\n\t\t\t\t\tcontent: \"export.exe\";\n\t\t\t\t}\n\n\t\t\t\t.import-instrumentTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.import-instrumentExt::after {\n\t\t\t\t\tcontent: \"importInstrument.exe\";\n\t\t\t\t}\n\n\t\t\t\t.export-instrumentTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.export-instrumentExt::after {\n\t\t\t\t\tcontent: \"exportInstrument.exe\";\n\t\t\t\t}\n\n\t\t\t\t.song-lengthTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.song-lengthExt::after {\n\t\t\t\t\tcontent: \"songExtender.exe\";\n\t\t\t\t}\n\n\t\t\t\t.mnsTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.mnsExt::after {\n\t\t\t\t\tcontent: \"moveNotesSideways.exe\";\n\t\t\t\t}\n\n\t\t\t\t.themeExt::after {\n\t\t\t\t\tcontent: \"setTheme.exe\";\n\t\t\t\t}\n\t\t\t\t.themeTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.customThemeExt::after {\n\t\t\t\t\tcontent: \"customThemeEditor.exe\";\n\t\t\t\t}\n\t\t\t\t.customThemeTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.nrsTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.nrsExt::after {\n\t\t\t\t\tcontent: \"setupMidiKeyboard.exe\";\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .promptContainer::before {\n\t\t\t\t\tbackground: #fff0;\n\t\t\t\t}\n\n\t\t* {\n\t\tcursor: url(\"./image_assets/xpcursor.png\"), auto !important;\n\t\t--play-symbol:url(\"./image_assets/xpPlay.png\");\n\t\t--pause-symbol:url(\"./image_assets/xpPause.png\");\n\t\t--record-symbol:url(\"./image_assets/xpRecord.png\");\n\t\t--stop-symbol:url(\"./image_assets/xpStop.png\");\n\t\t--prev-bar-symbol:url(\"./image_assets/xpBackward.png\");\n\t\t--next-bar-symbol:url(\"./image_assets/xpForward.png\");\n\t\t--file-page-symbol: url(\"./image_assets/xpFile.png\");\n\t\t--edit-pencil-symbol: url(\"./image_assets/xpEdit.png\");\n\t\t--preferences-gear-symbol: url(\"./image_assets/xpPreferences.png\");\n\t\t--muted-symbol: url(\"./image_assets/xpSpeakerMute.png\");\n\t\t--unmuted-symbol: url(\"./image_assets/xpSpeaker.png\");\n\t\t--volume-symbol: url(\"./image_assets/xpSpeaker.png\");\n\t\t--zoom-in-symbol: url(\"./image_assets/xpZoomIn.png\");\n\t\t--zoom-out-symbol: url(\"./image_assets/xpZoomOut.png\");\n\t\t}\n\n\t\t.beepboxEditor button,\n\t\tbutton.mobilePatternButton,\n\t\tbutton.mobileTrackButton,\n\t\tbutton.mobileSettingsButton,\n\t\tbutton.mobilePlayButton,\n\t\tbutton.mobilePauseButton,\n\t\tbutton.mobileNextBarButton,\n\t\tbutton.mobilePrevBarButton,\n\t\tbutton.playButton,\n\t\tbutton.pauseButton, \n\t\tbutton.recordButton, \n\t\tbutton.stopButton,\n\t\tbutton.nextBarButton, \n\t\tbutton.prevBarButton, \n\t\tbutton.copyButton, \n\t\tbutton.pasteButton, \n\t\tbutton.exportInstrumentButton, \n\t\tbutton.importInstrumentButton, \n\t\t.beepboxEditor select, \n\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t}\n\n\t\tdiv.mute-button::before {\n\t\t\tbackground-image: url(\"./image_assets/xpSpeaker.png\") !important;\n\t\t\tbackground-size: 120% !important;\n\t\t\tbackground-position-x: center !important;\n\t\t\tbackground-position-y: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.mute-button.muted::before {\n\t\t\tbackground-image: url(\"./image_assets/xpSpeakerMute.png\") !important;\n\t\t\tbackground-size: 120% !important;\n\t\t\tbackground-position-x: center !important;\n\t\t\tbackground-position-y: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tbutton.recordButton::Before {\n\t\t\tbackground-image: url(\"./image_assets/xpRecord.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\tbutton.stopButton::Before {\n\t\t\tbackground-image: url(\"./image_assets/xpStop.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\tbutton.pauseButton::Before {\n\t\t\tbackground-image: url(\"./image_assets/xpPause.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor span.volume-speaker {\n\t\t\tbackground-image: url(\"./image_assets/xpSpeaker.png\");\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t}\n\n\t\tdiv.selectContainer.menu.file::before {\n\n\t\t\tbackground-image: url(\"./image_assets/xpFile.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.selectContainer.menu.edit::before {\n\n\t\t\tbackground-image: url(\"./image_assets/xpEdit.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\t\tdiv.selectContainer.menu.preferences::before {\n\n\t\t\tbackground-image: url(\"./image_assets/xpPreferences.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\t\tbutton.playButton::before {\n\n\t\t\tbackground-image: url(\"./image_assets/xpPlay.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\t.beepboxEditor button.prevBarButton::before {\n\t\t\tbackground-image: url(\"./image_assets/xpBackward.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor button.nextBarButton::before {\n\t\t\tbackground-image: url(\"./image_assets/xpForward.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor .zoomInButton::before {\n\t\t\tbackground-image: url(\"./image_assets/xpZoomIn.png\") !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor .zoomOutButton::before {\n\t\t\tbackground-image: url(\"./image_assets/xpZoomOut.png\") !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\tbackground-image: url(\"./image_assets/scrollbar.png\") !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-size: inherit !important;\n\n\t\t\tborder-radius: 0px !important;\n\t\t\twidth: 13px !important;\n\t\t\theight: 23px !important;\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t\t/* NON ICON STUFFS SO DON'T GET CONFUSED DUMMY!!! */\n\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"./image_assets/AbyssBox_XP.png\");\n\t\t}\n\n\t\t\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"./image_assets/xphills.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\n\t\t\t#text-content {\n    \t\t\tmargin: auto;\n\t\t\t\tmargin-top: auto;\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground: var(--editor-background);\n\t\t\t\tborder-radius: 15px;\n\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\n\t\t\t\tpadding-left: 20px !important;\n\t\t\t\tbox-shadow: 6px 6px 27px 4px rgba(0, 0, 0, 0.5) !important;\n\t\t\t\tpadding-top: 58px !important;\n\t\t\t\tpadding-right: 20px !important;\n\t\t\t\tpadding-bottom: 20px !important;\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\n\t\t\t\tborder-image-slice: 34 !important;\n\t\t\t\tborder-image-width: 50px !important;\n\t\t\t\tborder-width: unset !important;\n\t\t\t\timage-rendering: -moz-crisp-edges !important;\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important;\n\t\t\t\timage-rendering: -o-crisp-edges !important;\n\t\t\t\timage-rendering: pixelated !important;\n\t\t\t\timage-rendering: optimizeSpeed !important;\n\t\t\t\tmargin-top: 15px;\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"./image_assets/xptextbg.png\");\n    \t\t\t\tborder-image-slice: 11 fill; \n   \t\t\t\tborder-image-width: 11px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tbackground-color: transparent; \n    \t\t\t\tpadding: 13px; \n\t\t\t\t}\n\n\t\t\t.pattern-area {\n\t\t\tborder: #fff 1px solid;\n\t\t\tborder-right-color: rgb(255, 255, 255);\n\t\t\tborder-bottom-color: rgb(255, 255, 255);\n\t\t\tpadding: 2px;\n\t\t\tbackground: #f9f8f3;\n\t\t\tborder-right-color: #c7c7bd;\n\t\t\tborder-bottom-color: #c7c7bd;\n\t\t\t}\n\n\t\t\t.track-area {\n\t\t\t--editor-background: #edead9;\n\t\t\t--ui-widget-background: #edead9;\n\t\t\t}\n\n\t\t\t.beepboxEditor .muteEditor {\n\t\t\tbackground: #edead9;\n\t\t\t}\n\n\t\t\t.settings-area {\n\t\t\tborder: #fff 1px solid;\n\t\t\tborder-right-color: rgb(255, 255, 255);\n\t\t\tborder-bottom-color: rgb(255, 255, 255);\n\t\t\tpadding: 2px;\n\t\t\tbackground: #f9f8f3;\n\t\t\tborder-right-color: #c7c7bd;\n\t\t\tborder-bottom-color: #c7c7bd;\n\t\t\t}\n\n\t\t\t.beepboxEditor {\n\t\t\tbackground: #edead9 !important;\n\t\t\t}\n\n\t\t\t#octaveScrollBarContainer {\n\t\t\t--tonic: #9c9781;\n\t\t\t}\n\n\t\t\t.barScrollBar {\n\t\t\t--ui-widget-background: #9c9781;\n\t\t\t--editor-background: #edead9;\n\t\t\t}\n\n\t\t\t.songLoopButton {\n\t\t\tbackground: #edead9;\n\t\t\t}\n\n\t\t\t#firstImage {\n\t\t\t\tbackground-image: url(\"./image_assets/xpsongeditorbg.png\") !important;\n\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t}\n\n\t\t\tselect {\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tbackground: rgba(222, 217, 189, 0.2) !important;\n\t\t\t\tbox-shadow:\n\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.0), \n\t\t\t\t\tinset 0px 1px 2px 0px rgb(125, 120, 95), \n\t\t\t\t\tinset 0px -1px 0px 0px rgb(255, 255, 255)\n\t\t\t\t;\n\t\t\t\tborder-radius: 4px;\n\t\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\n\t\t\t\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\t\theight: 3px !important;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor select:focus {\n\t\t\t\t\tborder-image-source: url(\"./image_assets/xpbuttonpressedbg.png\");\n\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\tborder-image-width: 4px; \n\t\t\t\t\tborder-image-repeat: repeat;\n\t\t\t\t\tbackground-color: transparent; \n\t\t\t\t\tpadding: 6px; \n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground: rgba(255, 255, 255, 1);\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\tborder-radius: 0px;\n\t\t\t\t\twidth: 13px !important;\n\t\t\t\t\theight: 13px !important;\n\t\t\t\t\tbackground-image:url(\"./image_assets/xpCheckmarkBlank.png\");\n\t\t\t\t\tbackground-repeat:no-repeat;\n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\ttransform: scale(2) !important;\n\t\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\ttransform: scale(2) !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\twidth: 13px;\n\t\t\t\t\theight: 13px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tbackground-repeat:no-repeat;\n\t\t\t\t\tbackground-image:url(\"./image_assets/xpCheckmark.png\");\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span \n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\n\n\t\t\t`,\n\t\t\t\"corporate dark\": `\n\t\t\t:root {\n\t\t\t--page-margin: #1f1f1f;\n\t\t\t--editor-background: #1f1f1f;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #e8e8e8;\n\t\t\t--secondary-text: #8c8c8c;\n\t\t\t--inverted-text: #1D1C1D;\n\t\t\t--text-selection: #C249DD;\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\n\t\t\t--loop-accent: #C249DD;\n\t\t\t--link-accent: #0E9DD3;\n\t\t\t--ui-widget-background: #303134;\n\t\t\t--ui-widget-focus: #5B5957;\n\t\t\t--pitch-background: #3e3f42;\n\t\t\t--tonic: #303134;\n\t\t\t--fifth-note: #98809D;\n\t\t\t--third-note: #62738b;\n\t\t\t--white-piano-key: white;\n\t\t\t--black-piano-key: #1D1C1D;\n\t\t\t--white-piano-key-text: #1D1C1D;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #303134;\n\t\t\t--track-editor-bg-pitch-dim: #1d1e20;\n\t\t\t--track-editor-bg-noise: #303134;\n\t\t\t--track-editor-bg-noise-dim: #1d1e20;\n\t\t\t--track-editor-bg-mod: #46524a;\n\t\t\t--track-editor-bg-mod-dim: #2c352f;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #C249DD;\n\t\t\t--indicator-secondary: #602670;\n\t\t\t--select2-opt-group: #474747;\n\t\t\t--input-box-outline: #F4EDE4;\n\t\t\t--mute-button-normal: #DE8969;\n\t\t\t--mute-button-mod: #C05B8C;\n\t\t\t--pitch-channel-limit: 4;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #17616B;\n\t\t\t--pitch1-primary-channel:   #36C5F0;\n\t\t\t--pitch1-secondary-note:    #17616B;\n\t\t\t--pitch1-primary-note:      #36C5F0;\n\t\t\t--pitch2-secondary-channel: #185F34;\n\t\t\t--pitch2-primary-channel:   #2EB67D;\n\t\t\t--pitch2-secondary-note:    #185F34;\n\t\t\t--pitch2-primary-note:      #2EB67D;\n\t\t\t--pitch3-secondary-channel: #755617;\n\t\t\t--pitch3-primary-channel:   #ECB22E;\n\t\t\t--pitch3-secondary-note:    #755617;\n\t\t\t--pitch3-primary-note:      #ECB22E;\n\t\t\t--pitch4-secondary-channel: #821237;\n\t\t\t--pitch4-primary-channel:   #E01E5A;\n\t\t\t--pitch4-secondary-note:    #821237;\n\t\t\t--pitch4-primary-note:      #E01E5A;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #424242;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #424242;\n\t\t\t--noise1-primary-note:      #AAAAAA;\n\t\t\t--noise2-secondary-channel: #5E3A2D;\n\t\t\t--noise2-primary-channel:   #DE8969;\n\t\t\t--noise2-secondary-note:    #5E3A2D;\n\t\t\t--noise2-primary-note:      #DE8969;\n\t\t\t--noise3-secondary-channel: #32595B;\n\t\t\t--noise3-primary-channel:   #78D7DD;\n\t\t\t--noise3-secondary-note:    #32595B;\n\t\t\t--noise3-primary-note:      #78D7DD;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--mod-title: #1D1C1D;\n\t\t\t}\n\n\t\t\t.channelBox {\n\t\t\tborder-radius: 25px;\n\t\t\t}\n\n\t\t\tbutton:hover {\n\t\t\tborder-radius: 4px;\n\t\t\tbackground-color: #1d1e20 !important;\n\t\t\t}\n\n\t\t\tselect:hover {\n\t\t\tborder-radius: 4px !important;\n\t\t\tbackground-color: #1d1e20 !important;\n\t\t\t}\n\n\t\t\t#select2-pitchPresetSelect-container:hover {\n\t\t\tborder-radius: 4px !important;\n\t\t\tbackground-color: #1d1e20 !important;\n\t\t\t}`,\n\t\t\t\"corporate light\": `\n\t\t\t:root {\n\t\t\t--page-margin: white;\n\t\t\t--editor-background: white;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #1D1C1D;\n\t\t\t--secondary-text: #A5A19B;\n\t\t\t--inverted-text: #1D1C1D;\n\t\t\t--text-selection: #C249DD;\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\n\t\t\t--loop-accent: #C249DD;\n\t\t\t--link-accent: #0E9DD3;\n\t\t\t--ui-widget-background: #F4EDE4;\n\t\t\t--ui-widget-focus: white;\n\t\t\t--pitch-background: #E8DED1;\n\t\t\t--tonic: #E6B8A8;\n\t\t\t--fifth-note: #DB99EA;\n\t\t\t--third-note: #99c3ff;\n\t\t\t--white-piano-key: white;\n\t\t\t--black-piano-key: #1D1C1D;\n\t\t\t--white-piano-key-text: #1D1C1D;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #E8DED1;\n\t\t\t--track-editor-bg-pitch-dim: #ecc6ba;\n\t\t\t--track-editor-bg-noise: #E8DED1;\n\t\t\t--track-editor-bg-noise-dim: #ecc6ba;\n\t\t\t--track-editor-bg-mod: #87BB9B;\n\t\t\t--track-editor-bg-mod-dim: #6baa83;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #C249DD;\n\t\t\t--indicator-secondary: #602670;\n\t\t\t--select2-opt-group: #474747;\n\t\t\t--input-box-outline: #F4EDE4;\n\t\t\t--mute-button-normal: #DE8969;\n\t\t\t--mute-button-mod: #C05B8C;\n\t\t\t--pitch-channel-limit: 4;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #17616B;\n\t\t\t--pitch1-primary-channel:   #36C5F0;\n\t\t\t--pitch1-secondary-note:    #17616B;\n\t\t\t--pitch1-primary-note:      #36C5F0;\n\t\t\t--pitch2-secondary-channel: #185F34;\n\t\t\t--pitch2-primary-channel:   #2EB67D;\n\t\t\t--pitch2-secondary-note:    #185F34;\n\t\t\t--pitch2-primary-note:      #2EB67D;\n\t\t\t--pitch3-secondary-channel: #755617;\n\t\t\t--pitch3-primary-channel:   #ECB22E;\n\t\t\t--pitch3-secondary-note:    #755617;\n\t\t\t--pitch3-primary-note:      #ECB22E;\n\t\t\t--pitch4-secondary-channel: #821237;\n\t\t\t--pitch4-primary-channel:   #E01E5A;\n\t\t\t--pitch4-secondary-note:    #821237;\n\t\t\t--pitch4-primary-note:      #E01E5A;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #424242;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #424242;\n\t\t\t--noise1-primary-note:      #AAAAAA;\n\t\t\t--noise2-secondary-channel: #5E3A2D;\n\t\t\t--noise2-primary-channel:   #DE8969;\n\t\t\t--noise2-secondary-note:    #5E3A2D;\n\t\t\t--noise2-primary-note:      #DE8969;\n\t\t\t--noise3-secondary-channel: #32595B;\n\t\t\t--noise3-primary-channel:   #78D7DD;\n\t\t\t--noise3-secondary-note:    #32595B;\n\t\t\t--noise3-primary-note:      #78D7DD;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--mod-title: #1D1C1D;\n\t\t\t}\n\n\t\t\t.channelBox {\n\t\t\tborder-radius: 25px;\n\t\t\t}\n\n\t\t\tbutton:hover {\n\t\t\tborder-radius: 4px;\n\t\t\tbackground-color: #dbd2c5 !important;\n\t\t\t}\n\n\t\t\tselect:hover {\n\t\t\tborder-radius: 4px !important;\n\t\t\tbackground-color: #dbd2c5 !important;\n\t\t\t}\n\n\t\t\t#select2-pitchPresetSelect-container:hover {\n\t\t\tborder-radius: 4px !important;\n\t\t\tbackground-color: #dbd2c5 !important;\n\t\t\t}`,\n\t\t\t\"Terminal 2.0 (AB)\": `\n\t\t\t:root { \n\t\t\t--page-margin: black; \n\t\t\t--editor-background: black; \n\t\t\t--hover-preview: white; \n\t\t\t--playhead: white; \n\t\t\t--primary-text: #26ff00; \n\t\t\t--secondary-text: #0d6d00; \n\t\t\t--inverted-text: #000000; \n\t\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t\t--box-selection-fill: rgba(255,255,255,0.2); \n\t\t\t--loop-accent: #1eff00; \n\t\t\t--link-accent: #8dff7e; \n\t\t\t--ui-widget-background: #000000; \n\t\t\t--ui-widget-focus: #242424; \n\t\t\t--pitch-background: #0d0d0d50; \n\t\t\t--tonic: #06350090; \n\t\t\t--fifth-note: #20202090; \n\t\t\t--third-note: #2f571f8f;\n\t\t\t--white-piano-key: #ffffff; \n\t\t\t--black-piano-key: #000000; \n\t\t\t--white-piano-key-text: #131200; \n\t\t\t--black-piano-key-text: #fff; \n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n\t\t\t--track-editor-bg-pitch: #152912; \n\t\t\t--track-editor-bg-pitch-dim: #091307; \n\t\t\t--track-editor-bg-noise: #1a1a1a; \n\t\t\t--track-editor-bg-noise-dim: #333; \n\t\t\t--track-editor-bg-mod: #000000; \n\t\t\t--track-editor-bg-mod-dim: #000000; \n\t\t\t--multiplicative-mod-slider: #073c00; \n\t\t\t--overwriting-mod-slider: #0c6700; \n\t\t\t--indicator-primary: #139f00; \n\t\t\t--indicator-secondary: #1eff00; \n\t\t\t--select2-opt-group: #171717; \n\t\t\t--input-box-outline: #00ff00; \n\t\t\t--mute-button-normal: #00ff44; \n\t\t\t--mute-button-mod: #44ff00; \n\t\t\t--progress-bar: #00ff00;\n\t\t\t--pitch1-secondary-channel: #0099A1; \n\t\t\t--pitch1-primary-channel: #25F3FF; \n\t\t\t--pitch1-secondary-note: #00BDC7; \n\t\t\t--pitch1-primary-note: #92F9FF; \n\t\t\t--pitch2-secondary-channel: #A1A100; \n\t\t\t--pitch2-primary-channel: #FFFF25; \n\t\t\t--pitch2-secondary-note: #C7C700; \n\t\t\t--pitch2-primary-note: #FFFF92; \n\t\t\t--pitch3-secondary-channel: #C75000; \n\t\t\t--pitch3-primary-channel: #FF9752; \n\t\t\t--pitch3-secondary-note: #FF771C; \n\t\t\t--pitch3-primary-note: #FFCDAB; \n\t\t\t--pitch4-secondary-channel: #00A100; \n\t\t\t--pitch4-primary-channel: #50FF50; \n\t\t\t--pitch4-secondary-note: #00C700; \n\t\t\t--pitch4-primary-note: #A0FFA0; \n\t\t\t--pitch5-secondary-channel: #D020D0; \n\t\t\t--pitch5-primary-channel: #FF90FF; \n\t\t\t--pitch5-secondary-note: #E040E0; \n\t\t\t--pitch5-primary-note: #FFC0FF; \n\t\t\t--pitch6-secondary-channel: #7777B0; \n\t\t\t--pitch6-primary-channel: #A0A0FF; \n\t\t\t--pitch6-secondary-note: #8888D0; \n\t\t\t--pitch6-primary-note: #D0D0FF; \n\t\t\t--pitch7-secondary-channel: #8AA100; \n\t\t\t--pitch7-primary-channel: #DEFF25; \n\t\t\t--pitch7-secondary-note: #AAC700; \n\t\t\t--pitch7-primary-note: #E6FF92; \n\t\t\t--pitch8-secondary-channel: #DF0019; \n\t\t\t--pitch8-primary-channel: #FF98A4; \n\t\t\t--pitch8-secondary-note: #FF4E63; \n\t\t\t--pitch8-primary-note: #FFB2BB; \n\t\t\t--pitch9-secondary-channel: #00A170; \n\t\t\t--pitch9-primary-channel: #50FFC9; \n\t\t\t--pitch9-secondary-note: #00C78A; \n\t\t\t--pitch9-primary-note: #83FFD9; \n\t\t\t--pitch10-secondary-channel: #A11FFF; \n\t\t\t--pitch10-primary-channel: #CE8BFF; \n\t\t\t--pitch10-secondary-note: #B757FF; \n\t\t\t--pitch10-primary-note: #DFACFF; \n\t\t\t--noise1-secondary-channel: #6F6F6F; \n\t\t\t--noise1-primary-channel: #AAAAAA; \n\t\t\t--noise1-secondary-note: #A7A7A7; \n\t\t\t--noise1-primary-note: #E0E0E0; \n\t\t\t--noise2-secondary-channel: #996633; \n\t\t\t--noise2-primary-channel: #DDAA77; \n\t\t\t--noise2-secondary-note: #CC9966; \n\t\t\t--noise2-primary-note: #F0D0BB; \n\t\t\t--noise3-secondary-channel: #4A6D8F; \n\t\t\t--noise3-primary-channel: #77AADD; \n\t\t\t--noise3-secondary-note: #6F9FCF; \n\t\t\t--noise3-primary-note: #BBD7FF; \n\t\t\t--noise4-secondary-channel: #7A4F9A; \n\t\t\t--noise4-primary-channel: #AF82D2; \n\t\t\t--noise4-secondary-note: #9E71C1; \n\t\t\t--noise4-primary-note: #D4C1EA; \n\t\t\t--noise5-secondary-channel: #607837; \n\t\t\t--noise5-primary-channel: #A2BB77; \n\t\t\t--noise5-secondary-note: #91AA66; \n\t\t\t--noise5-primary-note: #C5E2B2; \n\t\t\t--mod1-secondary-channel: #339955; \n\t\t\t--mod1-primary-channel: #77fc55; \n\t\t\t--mod1-secondary-note: #77ff8a; \n\t\t\t--mod1-primary-note: #cdffee; \n\t\t\t--mod2-secondary-channel: #993355; \n\t\t\t--mod2-primary-channel: #f04960; \n\t\t\t--mod2-secondary-note: #f057a0; \n\t\t\t--mod2-primary-note: #ffb8de; \n\t\t\t--mod3-secondary-channel: #553399; \n\t\t\t--mod3-primary-channel: #8855fc; \n\t\t\t--mod3-secondary-note: #aa64ff; \n\t\t\t--mod3-primary-note: #f8ddff; \n\t\t\t--mod4-secondary-channel: #a86436; \n\t\t\t--mod4-primary-channel: #c8a825; \n\t\t\t--mod4-secondary-note: #e8ba46; \n\t\t\t--mod4-primary-note: #fff6d3; \n\t\t\t--mod-label-primary: #164705; \n\t\t\t--mod-label-secondary-text: #333; \n\t\t\t--mod-label-primary-text: #44ff00; \n\t\t\t--disabled-note-primary: #999; \n\t\t\t--disabled-note-secondary: #666; \n\t\t\t--note-flash: #a4ff82; \n\t\t\t--note-flash-secondary: #dffbd57a; }\n\t\t\t\n\t\t\t.overlay {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\n\t\t\t\tbackground-size: 10%;\n\t\t\t}\n\n\t\t\t\t\t\t@font-face {\n\t\t\t\t\t   font-family: \"Workbench\";\n\t\t\t\t\t   src:\n\t\t\t\t\t\turl(\"./image_assets/Workbench.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\thtml {\n\t\t\t\t\t\t\tfont-family: 'Workbench';\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\t\tfont-family: 'Workbench' !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t#firstImage {\n\t\t\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines.png\") !important;\n\t\t\t\t\t\t\t\tbackground-repeat: repeat !important;\n\t\t\t\t\t\t\t\tbackground-size: 40% 40% !important;\n\t\t\t\t\t\t\t\topacity: 70%;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t#modTitle::before {\n\t\t\t\t\t\t\tcontent: \"> AbyssBox Terminal 2.0\" !important;\n\t\t\t\t\t\t}\n\t\t\t`,\n\t\t\t\"Slushie\": `\n\t\t\t:root { \n\t\t\t\t--page-margin: #040814; \n\t\t\t\t--editor-background: #040814; \n\t\t\t\t--hover-preview: #c6f7ff; \n\t\t\t\t--playhead: white; \n\t\t\t\t--primary-text: #d3f3ff; \n\t\t\t\t--secondary-text: #6f72b5; \n\t\t\t\t--inverted-text: black; \n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \n\t\t\t\t--loop-accent: #573ebb; \n\t\t\t\t--link-accent: #98f; \n\t\t\t\t--ui-widget-background: #2e2f44; \n\t\t\t\t--ui-widget-focus: #2b2c46; \n\t\t\t\t--pitch-background: #353654; \n\t\t\t\t--tonic: #716fe3; \n\t\t\t\t--fifth-note: #76469b;\n\t\t\t\t--third-note: #534488; \n\t\t\t\t--white-piano-key: #abbce3; \n\t\t\t\t--black-piano-key: #2f235e; \n\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \n\t\t\t\t--track-editor-bg-noise: #3c3554; \n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \n\t\t\t\t--track-editor-bg-mod: #30335e; \n\t\t\t\t--track-editor-bg-mod-dim: #161938; \n\t\t\t\t--multiplicative-mod-slider: #e29cff; \n\t\t\t\t--overwriting-mod-slider: #495789; \n\t\t\t\t--indicator-primary: #e1a6ff; \n\t\t\t\t--indicator-secondary: #415187; \n\t\t\t\t--select2-opt-group: #22223a; \n\t\t\t\t--input-box-outline: #2d2648; \n\t\t\t\t--mute-button-normal: #7aceff; \n\t\t\t\t--mute-button-mod: #9d6bff; \n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \n\t\t\t\t--pitch1-secondary-note: #794fd3; \n\t\t\t\t--pitch1-primary-note: #d8c6ff; \n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \n\t\t\t\t--pitch2-primary-channel: #9287ff; \n\t\t\t\t--pitch2-secondary-note: #5e51d9; \n\t\t\t\t--pitch2-primary-note: #b6afff; \n\t\t\t\t--pitch3-secondary-channel: #374eb9; \n\t\t\t\t--pitch3-primary-channel: #8097ff; \n\t\t\t\t--pitch3-secondary-note: #445cc9; \n\t\t\t\t--pitch3-primary-note: #a0b2ff; \n\t\t\t\t--pitch4-secondary-channel: #2867cf; \n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \n\t\t\t\t--pitch4-primary-note: #a6c7ff; \n\t\t\t\t--pitch5-secondary-channel: #3175a7; \n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \n\t\t\t\t--pitch5-secondary-note: #367eb3; \n\t\t\t\t--pitch5-primary-note: #9fd7ff; \n\t\t\t\t--pitch6-secondary-channel: #3993a9; \n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \n\t\t\t\t--pitch6-secondary-note: #386da3; \n\t\t\t\t--pitch6-primary-note: #9eecff; \n\t\t\t\t--pitch7-secondary-channel: #369d8a; \n\t\t\t\t--pitch7-primary-channel: #8bfce7; \n\t\t\t\t--pitch7-secondary-note: #1c93a7; \n\t\t\t\t--pitch7-primary-note: #abffef; \n\t\t\t\t--pitch8-secondary-channel: #00A170; \n\t\t\t\t--pitch8-primary-channel: #50FFC9; \n\t\t\t\t--pitch8-secondary-note: #00C78A; \n\t\t\t\t--pitch8-primary-note: #83FFD9; \n\t\t\t\t--pitch9-secondary-channel: #49b374; \n\t\t\t\t--pitch9-primary-channel: #8affa9; \n\t\t\t\t--pitch9-secondary-note: #26815f; \n\t\t\t\t--pitch9-primary-note: #c8ffde; \n\t\t\t\t--pitch10-secondary-channel: #58a747; \n\t\t\t\t--pitch10-primary-channel: #bbffaa; \n\t\t\t\t--pitch10-secondary-note: #1d7c48; \n\t\t\t\t--pitch10-primary-note: #c7ffbc; \n\t\t\t\t--noise1-secondary-channel: #42829b; \n\t\t\t\t--noise1-primary-channel: #97d3fc; \n\t\t\t\t--noise1-secondary-note: #3f53b3; \n\t\t\t\t--noise1-primary-note: #97d3fc; \n\t\t\t\t--noise2-secondary-channel: #6354bb; \n\t\t\t\t--noise2-primary-channel: #9a89ff; \n\t\t\t\t--noise2-secondary-note: #5f4dcd; \n\t\t\t\t--noise2-primary-note: #c6bcff; \n\t\t\t\t--noise3-secondary-channel: #704a95; \n\t\t\t\t--noise3-primary-channel: #c285ff; \n\t\t\t\t--noise3-secondary-note: #ad5aff; \n\t\t\t\t--noise3-primary-note: #d3a6ff; \n\t\t\t\t--noise4-secondary-channel: #a53c65; \n\t\t\t\t--noise4-primary-channel: #f794bb; \n\t\t\t\t--noise4-secondary-note: #cb5080; \n\t\t\t\t--noise4-primary-note: #f794bb; \n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \n\t\t\t\t--noise5-primary-channel: #ff7676; \n\t\t\t\t--noise5-secondary-note: #cb4444; \n\t\t\t\t--noise5-primary-note: #ff9999; \n\t\t\t\t--mod1-secondary-channel: #b7613c; \n\t\t\t\t--mod1-primary-channel: #ff9f76; \n\t\t\t\t--mod1-secondary-note: #e77e52; \n\t\t\t\t--mod1-primary-note: #ffb99b; \n\t\t\t\t--mod2-secondary-channel: #916d34; \n\t\t\t\t--mod2-primary-channel: #fece80; \n\t\t\t\t--mod2-secondary-note: #c58b35; \n\t\t\t\t--mod2-primary-note: #ffdda5; \n\t\t\t\t--mod3-secondary-channel: #83761a; \n\t\t\t\t--mod3-primary-channel: #fdf68c; \n\t\t\t\t--mod3-secondary-note: #c18e00; \n\t\t\t\t--mod3-primary-note: #fdf68c; \n\t\t\t\t--mod4-secondary-channel: #a86436; \n\t\t\t\t--mod4-primary-channel: #c8a825; \n\t\t\t\t--mod4-secondary-note: #e8ba46; \n\t\t\t\t--mod4-primary-note: #c8a825; \n\t\t\t\t--mod-label-primary: #37325e; \n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \n\t\t\t\t--mod-label-primary-text: #c1ffff; \n\t\t\t\t--disabled-note-primary: #999; \n\t\t\t\t--disabled-note-secondary: #666; \n\t\t\t\t--note-flash: #ffffff; \n\t\t\t\t--note-flash-secondary: #ffffff77; }\n\t\t\t`,\n\t\t\t\"Slushie Pixel\": `\n\t\t\t:root { \n\t\t\t\t--page-margin: #040814; \n\t\t\t\t--editor-background: #040814; \n\t\t\t\t--hover-preview: #c6f7ff; \n\t\t\t\t--playhead: white; \n\t\t\t\t--primary-text: #d3f3ff; \n\t\t\t\t--secondary-text: #6f72b5; \n\t\t\t\t--inverted-text: black; \n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \n\t\t\t\t--loop-accent: #573ebb; \n\t\t\t\t--link-accent: #98f; \n\t\t\t\t--ui-widget-background: #2e2f44; \n\t\t\t\t--ui-widget-focus: #2b2c46; \n\t\t\t\t--pitch-background: #353654; \n\t\t\t\t--tonic: #716fe3; \n\t\t\t\t--fifth-note: #76469b;\n\t\t\t\t--third-note: #534488; \n\t\t\t\t--white-piano-key: #abbce3; \n\t\t\t\t--black-piano-key: #2f235e; \n\t\t\t\t--progress-bar: #716fe3;\n\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \n\t\t\t\t--track-editor-bg-noise: #3c3554; \n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \n\t\t\t\t--track-editor-bg-mod: #30335e; \n\t\t\t\t--track-editor-bg-mod-dim: #161938; \n\t\t\t\t--multiplicative-mod-slider: #e29cff; \n\t\t\t\t--overwriting-mod-slider: #495789; \n\t\t\t\t--indicator-primary: #e1a6ff; \n\t\t\t\t--indicator-secondary: #415187; \n\t\t\t\t--select2-opt-group: #22223a; \n\t\t\t\t--input-box-outline: #2d2648; \n\t\t\t\t--mute-button-normal: #7aceff; \n\t\t\t\t--mute-button-mod: #9d6bff; \n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \n\t\t\t\t--pitch1-secondary-note: #794fd3; \n\t\t\t\t--pitch1-primary-note: #d8c6ff; \n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \n\t\t\t\t--pitch2-primary-channel: #9287ff; \n\t\t\t\t--pitch2-secondary-note: #5e51d9; \n\t\t\t\t--pitch2-primary-note: #b6afff; \n\t\t\t\t--pitch3-secondary-channel: #374eb9; \n\t\t\t\t--pitch3-primary-channel: #8097ff; \n\t\t\t\t--pitch3-secondary-note: #445cc9; \n\t\t\t\t--pitch3-primary-note: #a0b2ff; \n\t\t\t\t--pitch4-secondary-channel: #2867cf; \n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \n\t\t\t\t--pitch4-primary-note: #a6c7ff; \n\t\t\t\t--pitch5-secondary-channel: #3175a7; \n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \n\t\t\t\t--pitch5-secondary-note: #367eb3; \n\t\t\t\t--pitch5-primary-note: #9fd7ff; \n\t\t\t\t--pitch6-secondary-channel: #3993a9; \n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \n\t\t\t\t--pitch6-secondary-note: #386da3; \n\t\t\t\t--pitch6-primary-note: #9eecff; \n\t\t\t\t--pitch7-secondary-channel: #369d8a; \n\t\t\t\t--pitch7-primary-channel: #8bfce7; \n\t\t\t\t--pitch7-secondary-note: #1c93a7; \n\t\t\t\t--pitch7-primary-note: #abffef; \n\t\t\t\t--pitch8-secondary-channel: #00A170; \n\t\t\t\t--pitch8-primary-channel: #50FFC9; \n\t\t\t\t--pitch8-secondary-note: #00C78A; \n\t\t\t\t--pitch8-primary-note: #83FFD9; \n\t\t\t\t--pitch9-secondary-channel: #49b374; \n\t\t\t\t--pitch9-primary-channel: #8affa9; \n\t\t\t\t--pitch9-secondary-note: #26815f; \n\t\t\t\t--pitch9-primary-note: #c8ffde; \n\t\t\t\t--pitch10-secondary-channel: #58a747; \n\t\t\t\t--pitch10-primary-channel: #bbffaa; \n\t\t\t\t--pitch10-secondary-note: #1d7c48; \n\t\t\t\t--pitch10-primary-note: #c7ffbc; \n\t\t\t\t--noise1-secondary-channel: #42829b; \n\t\t\t\t--noise1-primary-channel: #97d3fc; \n\t\t\t\t--noise1-secondary-note: #3f53b3; \n\t\t\t\t--noise1-primary-note: #97d3fc; \n\t\t\t\t--noise2-secondary-channel: #6354bb; \n\t\t\t\t--noise2-primary-channel: #9a89ff; \n\t\t\t\t--noise2-secondary-note: #5f4dcd; \n\t\t\t\t--noise2-primary-note: #c6bcff; \n\t\t\t\t--noise3-secondary-channel: #704a95; \n\t\t\t\t--noise3-primary-channel: #c285ff; \n\t\t\t\t--noise3-secondary-note: #ad5aff; \n\t\t\t\t--noise3-primary-note: #d3a6ff; \n\t\t\t\t--noise4-secondary-channel: #a53c65; \n\t\t\t\t--noise4-primary-channel: #f794bb; \n\t\t\t\t--noise4-secondary-note: #cb5080; \n\t\t\t\t--noise4-primary-note: #f794bb; \n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \n\t\t\t\t--noise5-primary-channel: #ff7676; \n\t\t\t\t--noise5-secondary-note: #cb4444; \n\t\t\t\t--noise5-primary-note: #ff9999; \n\t\t\t\t--mod1-secondary-channel: #b7613c; \n\t\t\t\t--mod1-primary-channel: #ff9f76; \n\t\t\t\t--mod1-secondary-note: #e77e52; \n\t\t\t\t--mod1-primary-note: #ffb99b; \n\t\t\t\t--mod2-secondary-channel: #916d34; \n\t\t\t\t--mod2-primary-channel: #fece80; \n\t\t\t\t--mod2-secondary-note: #c58b35; \n\t\t\t\t--mod2-primary-note: #ffdda5; \n\t\t\t\t--mod3-secondary-channel: #83761a; \n\t\t\t\t--mod3-primary-channel: #fdf68c; \n\t\t\t\t--mod3-secondary-note: #c18e00; \n\t\t\t\t--mod3-primary-note: #fdf68c; \n\t\t\t\t--mod4-secondary-channel: #a86436; \n\t\t\t\t--mod4-primary-channel: #c8a825; \n\t\t\t\t--mod4-secondary-note: #e8ba46; \n\t\t\t\t--mod4-primary-note: #c8a825; \n\t\t\t\t--mod-label-primary: #37325e; \n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \n\t\t\t\t--mod-label-primary-text: #c1ffff; \n\t\t\t\t--disabled-note-primary: #999; \n\t\t\t\t--disabled-note-secondary: #666; \n\t\t\t\t--note-flash: #ffffff; \n\t\t\t\t--note-flash-secondary: #ffffff77; }\n\t\t\t\n\t\t\t\t* {\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_cursor.png\"), auto !important;\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t\t\t} \n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tbody {\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushbg.gif\") !important;\n\t\t\t\t\t\tbackground-size: 32px;\n\t\t\t\t\t\tbackground-position: center;\n\t\t\t\t\t\tbackground-repeat: repeat;\n\t\t\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t#text-content {\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\t\tpadding-left: 12px; \n\t\t\t\t\t\tpadding-right: 12px; \n\t\t\t\t\t\tpadding-bottom: 12px; \n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: repeat;\n\t\t\t\t\t\tpadding-left: 12px; \n\t\t\t\t\t\tpadding-right: 12px; \n\t\t\t\t\t\tpadding-bottom: 12px; \n\t\t\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t.beepboxEditor button,\n\t\t\t\t\tbutton.mobilePatternButton,\n\t\t\t\t\tbutton.mobileTrackButton,\n\t\t\t\t\tbutton.mobileSettingsButton,\n\t\t\t\t\tbutton.mobilePlayButton,\n\t\t\t\t\tbutton.mobilePauseButton,\n\t\t\t\t\tbutton.mobileNextBarButton,\n\t\t\t\t\tbutton.mobilePrevBarButton,\n\t\t\t\t\tbutton.playButton,\n\t\t\t\t\tbutton.pauseButton, \n\t\t\t\t\tbutton.recordButton, \n\t\t\t\t\tbutton.stopButton,\n\t\t\t\t\tbutton.nextBarButton, \n\t\t\t\t\tbutton.prevBarButton, \n\t\t\t\t\tbutton.copyButton, \n\t\t\t\t\tbutton.pasteButton, \n\t\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t\t.beepboxEditor select, \n\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushie buttonbg.png\") !important;\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t\t\t}\n\n\t\t\t\t\thtml {\n\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t}\n\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\t\t \n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t\t{\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tdiv.selectRow span {\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\t\t`,\n\t\t\t\"2012 Video Tutorial\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t\t.overlay {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/bandicam_watermark.png\");\n\t\t\t\t\tbackground-repeat: no-repeat;\n  \t\t\t\t\tbackground-size: contain;\n  \t\t\t\t\tbackground-position-x: center;\n\t\t\t\t  \tbackdrop-filter: blur(1px);\n\t\t\t\t\tposition: fixed !important;\n\t\t\t\t}\n\n\t\t\t\t html:not(.overlay) {\n\t\t\t\t\twidth: 75vw;\n\t\t\t\t\tpadding-left: 12.5%;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tbackground: black;\n\t\t\t\t} \n\n\t\t\t`,\n\t\t\t\"I am on fire\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t\t.overlay {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/fire.gif\");\n\t\t\t\t\tbackground-repeat: no-repeat;\n  \t\t\t\t\tbackground-size: cover;\n  \t\t\t\t\tbackground-position-y: bottom;\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t#modTitle::before {\n\t\t\t\t\tcontent: \"AAAA I'M ON FIRE AAA\" !important;\n\t\t\t\t}\n\n\t\t\t`,\n\t\t\t\"BeepBox Pixel\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\t\t\n\t\t\t\t\n\t\t\t\t* {\n\t\t\t\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t@font-face {\n\t\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t\t   src:\n\t\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* sets background image */\n\t\t\t\t\t\tbody {\n\t\t\t\t\t\tbackground-image: url(\"./image_assets/diamondsbg.gif\") !important;\n\t\t\t\t\t\tbackground-position: center;\n\t\t\t\t\t\tbackground-repeat: repeat;\n\t\t\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t#text-content {\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\");\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\t\t\t\tpadding: 12px; \n\t\t\t\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\");\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\t\t\tborder-image-repeat: stretch;\n\t\t\t\t\t\t\t\tpadding: 12px;\n\t\t\t\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t.beepboxEditor button,\n\t\t\t\t\t\tbutton.mobilePatternButton,\n\t\t\t\t\t\tbutton.mobileTrackButton,\n\t\t\t\t\t\tbutton.mobileSettingsButton,\n\t\t\t\t\t\tbutton.mobilePlayButton,\n\t\t\t\t\t\tbutton.mobilePauseButton,\n\t\t\t\t\t\tbutton.mobileNextBarButton,\n\t\t\t\t\t\tbutton.mobilePrevBarButton,\n\t\t\t\t\t\tbutton.playButton,\n\t\t\t\t\t\tbutton.pauseButton, \n\t\t\t\t\t\tbutton.recordButton, \n\t\t\t\t\t\tbutton.stopButton,\n\t\t\t\t\t\tbutton.nextBarButton, \n\t\t\t\t\t\tbutton.prevBarButton, \n\t\t\t\t\t\tbutton.copyButton, \n\t\t\t\t\t\tbutton.pasteButton, \n\t\t\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t\t\t.beepboxEditor select, \n\t\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\") !important;\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\n\t\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t.beepboxEditor .channelBox {\n\t\t\t\t\t\t\tclip-path: polygon(\n\t\t\t\t\t\t\t\t0px calc(100% - 2px),\n\t\t\t\t\t\t\t\t2px calc(100% - 2px),\n\t\t\t\t\t\t\t\t2px 100%,\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\n\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\n\t\t\t\t\t\t\t\t100% calc(100% - 2px),\n\t\t\t\t\t\t\t\t100% 2px,\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\n\t\t\t\t\t\t\t\t2px 0px,\n\t\t\t\t\t\t\t\t2px 2px,\n\t\t\t\t\t\t\t\t0px 2px\n\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t.beepboxEditor .curChannelBox {\n\t\t\t\t\t\t\t\tclip-path: polygon(\n\t\t\t\t\t\t\t\t\t0px calc(100% - 2px),\n\t\t\t\t\t\t\t\t\t2px calc(100% - 2px),\n\t\t\t\t\t\t\t\t\t2px 100%,\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\n\t\t\t\t\t\t\t\t\t100% calc(100% - 2px),\n\t\t\t\t\t\t\t\t\t100% 2px,\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\n\t\t\t\t\t\t\t\t\t2px 0px,\n\t\t\t\t\t\t\t\t\t2px 2px,\n\t\t\t\t\t\t\t\t\t0px 2px\n\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t@font-face {\n\t\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t\t   src:\n\t\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\thtml {\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tdiv.selectRow span {\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t`,\n      \"dark classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n        \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--third-note: #486;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t}\n\t\t`,\n        \"light classic\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--third-note: #bbf0ce;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t}\n\t\t\t\n\t\t\t.promptContainerBG::before {\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t}\n\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t`,\n        \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--third-note: #3b4b71;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t`,\n        \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--third-note: #486;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t`,\n\t\"forest 2\": `\n\t\t\t\t\t:root { --page-margin: #132f16; \n\t\t\t\t\t--editor-background: #002b03;; \n\t\t\t\t\t--hover-preview: white; \n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \n\t\t\t\t\t--primary-text: #96d69f; \n\t\t\t\t\t--secondary-text: #7fdb60; \n\t\t\t\t\t--inverted-text: #2c562e; \n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t\t\t\t--box-selection-fill: #044b94; \n\t\t\t\t\t--loop-accent: #63e469; \n\t\t\t\t\t--link-accent: #c5facd; \n\t\t\t\t\t--ui-widget-background: #396b32; \n\t\t\t\t\t--ui-widget-focus: #002b03; \n\t\t\t\t\t--pitch-background: #30583c; \n\t\t\t\t\t--tonic: #4dac5b; \n\t\t\t\t\t--fifth-note: #458343; \n\t\t\t\t\t--third-note: #486;\n\t\t\t\t\t--white-piano-key: #bee9bf; \n\t\t\t\t\t--black-piano-key: #395e3c;\n\t\t\t\t\t--white-piano-key-text: #024a0c;\t\t\n\t\t\t\t\t--black-piano-key-text: #96d69f; \n\t\t\t\t\t--use-color-formula: true; \n\t\t\t\t\t--track-editor-bg-pitch: #43a631; \n\t\t\t\t\t--track-editor-bg-pitch-dim: #387e34; \n\t\t\t\t\t--track-editor-bg-noise: #3c8462; \n\t\t\t\t\t--track-editor-bg-noise-dim: #285821; \n\t\t\t\t\t--track-editor-bg-mod: #419296; \n\t\t\t\t\t--track-editor-bg-mod-dim: #3e7b59; \n\t\t\t\t\t--multiplicative-mod-slider: #345838; \n\t\t\t\t\t--overwriting-mod-slider: #3a8136; \n\t\t\t\t\t--indicator-primary: #75ce71; \n\t\t\t\t\t--indicator-secondary: #5fe857; \n\t\t\t\t\t--select2-opt-group: #002002; \n\t\t\t\t\t--input-box-outline: #bbe6b0; \n\t\t\t\t\t--mute-button-normal: #50aa4a; \n\t\t\t\t\t--mute-button-mod: #49ab69; \n\t\t\t\t\t--mod-label-primary: #8dd883; \n\t\t\t\t\t--mod-label-secondary-text: #7be250; \n\t\t\t\t\t--mod-label-primary-text: #bcebb4; \n\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\t.note-primary {\n\t\t\t\t\t\tclip-path: polygon(\n\t\t\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t\t\t4px 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t\t\t100% 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t\t\t4px 0px,\n\t\t\t\t\t\t\t4px 4px,\n\t\t\t\t\t\t\t0px 4px\n\t\t\t\t\t\t  );\n\t\t\t\t\t}\n\t\t\t\t\t.note-secondary {\n\t\t\t\t\t\tclip-path: polygon(\n\t\t\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t\t\t4px 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t\t\t100% 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t\t\t4px 0px,\n\t\t\t\t\t\t\t4px 4px,\n\t\t\t\t\t\t\t0px 4px\n\t\t\t\t\t\t  );\n\t\t\t\t\t}\n\t\t\t\t\t.note-flash {\n\t\t\t\t\t\tclip-path: polygon(\n\t\t\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t\t\t4px 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t\t\t100% 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t\t\t4px 0px,\n\t\t\t\t\t\t\t4px 4px,\n\t\t\t\t\t\t\t0px 4px\n\t\t\t\t\t\t  );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* sets background image */\n\t\t\t\t\tbody {\n\t\t\t\t\t\tbackground-image: url(\"./image_assets/Forest2Trees.png\") !important;\n\t\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\n  \t\t\t\t\t\tbackground-repeat: no-repeat;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t\t}\n\t\t\t\t\t\t#text-content {\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border.png\");\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t\t   \tborder-image-width: 32px; \n\t\t\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\t\t\tpadding: 36px; \n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\n\t\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border.png\");\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t\t   \tborder-image-width: 32px; \n\t\t\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\t\t\tpadding-top: 5px; \n\t\t\t\t\t\t\tpadding-bottom: 5px; \n\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t\t}\n\t\t\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border2.png\") !important;\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\t\n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\t\t\t\tdiv.prompt.noSelection {\n\t\t\t\t\t\t--editor-background: #002b03; \n\t\t\t\t\t}\n\t\t\t\t\t/* div.channelBox {\n\t\t\t\t\tborder-radius: 5px;\n\t\t\t\t\t} */\n\t\t\t\t\t* {\n\t\t\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\n\t\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\t@font-face {\n\t\t\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t\t\t   src:\n\t\t\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t@font-face {\n\t\t\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t\t\t   src:\n\t\t\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\thtml {\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t\t\t}\n\t\t\t`,\n        \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--third-note: #886744;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"canyon 2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t--song-player-margin: var(--page-margin);\n\t\t\t\t--editor-background: #5a1616;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t--secondary-text: #ff234d;\n\t\t\t\t--inverted-text: #290505;\n\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t--ui-widget-background: #832d2d;\n\t\t\t\t--ui-widget-focus: #832d2d;\n\t\t\t\t--pitch-background: #832d2d;\n\t\t\t\t--tonic: #bb5a5e;\n\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t--third-note: #886744;\n\t\t\t\t--white-piano-key: #ff8383;\n\t\t\t\t--black-piano-key: #2b0806;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #ffffff;\n\t\t\t\t--use-color-formula: true;\n\t\t\t\t--track-editor-bg-pitch: #a80b2b;\n\t\t\t\t--track-editor-bg-pitch-dim: #38030e;\n\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t}\n\t\t\t\n\t\t\t* {\n\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t\t\t} \n\t\t\t\n\t\t\t@font-face {\n\t\t\t\tfont-family: \"AbyssType\";\n\t\t\t\tsrc:\n\t\t\t\t url(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t }\n\t\t\t\n\t\t\t\t @font-face {\n\t\t\t\tfont-family: \"AbyssType_small\";\n\t\t\t\tsrc:\n\t\t\t\t url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t }\n\t\t\t\n\t\t\t\t #pattern-area {\n\t\t\t\t\tborder-style: solid;\n\t\t\t\t\tborder-color: #0a0000;\n\t\t\t\t\tborder-bottom: 0;\n\t\t\t\t\tborder-right: 0;\n\t\t\t\t\tborder-top: 0;\n\t\t\t\t }\n\t\t\t\n\t\t\t\t body {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/canyonbg.png\") !important;\n\t\t\t\t\tbackground-size: 200% !important;\n\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\n\t\t\t\t\t  background-repeat: no-repeat !important;\n\t\t\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t }\n\t\t\t\n\t\t\t\t #text-content {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\tborder-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\tpadding-bottom: 6px; \n\t\t\t\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\tbackground: #fff0;\n\t\t\t\t }\n\t\t\t #beepboxEditorContainer {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\tborder-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\tpadding-bottom: 6px; \n\t\t\t\t\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\tbackground: #fff0;\n\t\t\t\t }\n\t\t\t\n\t\t\t\t .beepboxEditor button,\n\t\t\t\t button.mobilePatternButton,\n\t\t\t\t button.mobileTrackButton,\n\t\t\t\t button.mobileSettingsButton,\n\t\t\t\t button.mobilePlayButton,\n\t\t\t\t button.mobilePauseButton,\n\t\t\t\t button.mobileNextBarButton,\n\t\t\t\t button.mobilePrevBarButton,\n\t\t\t\t button.playButton,\n\t\t\t\t button.pauseButton, \n\t\t\t\t button.recordButton, \n\t\t\t\t button.stopButton,\n\t\t\t\t button.nextBarButton, \n\t\t\t\t button.prevBarButton, \n\t\t\t\t button.copyButton, \n\t\t\t\t button.pasteButton, \n\t\t\t\t button.exportInstrumentButton, \n\t\t\t\t button.importInstrumentButton, \n\t\t\t\t .beepboxEditor select, \n\t\t\t\t .beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t border-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_button.png\") !important;\n\t\t\t\t\t\t border-image-slice: 4 fill !important; \n\t\t\t\t\t\tborder-image-width: 4px !important; \n\t\t\t\t\t border-image-repeat: stretch !important;\n\t\t\t\t\t\t \n\t\t\t\n\t\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t }\n\t\t\t\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t\t}\n\n\t\t\t\t html {\n\t\t\t\t font-family: 'AbyssType';\n\t\t\t\t }\n\t\t\t\t div.channelBoxLabel {\n\t\t\t\t\t font-family: 'AbyssType_small' !important;\n\t\t\t\t }\n\t\t`,\n        \"midnight\": `\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #555955;\n\t\t\t--fifth-note: #1a1818;\n\t\t\t--third-note: #19141a;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n            --white-piano-key-text: #131200;\n            --black-piano-key-text: #ffffff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\n\t\t\t\n\t\t\t\n\t\t}\n\t`,\n        \"gold light\": `\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #cab1d3;\n\t\t\t\t\t--editor-background: #f4f4f4;\n\t\t\t\t\t--hover-preview: #2d26a2;\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\n\t\t\t\t\t--primary-text: #b686c3;\n\t\t\t\t\t--secondary-text: #970f38;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\n\t\t\t\t\t--loop-accent: #09dc0e;\n\t\t\t\t\t--link-accent: #3ee669;\n\t\t\t\t\t--ui-widget-background: #0e0a42;\n\t\t\t\t\t--ui-widget-focus: #380c42;\n\t\t\t\t\t--pitch-background: #8daf96;\n\t\t\t\t\t--tonic: #a16fb1;\n\t\t\t\t\t--fifth-note: #d08c8c;\n\t\t\t\t\t--third-note: #486;\n\t\t\t\t\t--white-piano-key: #fbffee;\n\t\t\t\t\t--black-piano-key: #c9d8e5;\n\t\t\t\t\t--white-piano-key-text: #101160;\n\t\t\t\t\t--black-piano-key-text: #231b03;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\n\t\t\t\t\t--track-editor-bg-noise: #564566;\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\n\t\t\t\t\t--select2-opt-group: #581b50;\n\t\t\t\t\t--input-box-outline: #6f7074;\n\t\t\t\t\t--mute-button-normal: #db1e00;\n\t\t\t\t\t--mute-button-mod: #883bf9;\n\t\t\t\t\t--mod-label-primary: #525297;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\n                    --pitch-secondary-channel-hue: 26;\n                    --pitch-secondary-channel-hue-scale: 214.5;\n                    --pitch-secondary-channel-sat: 74.3;\n                    --pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 26;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-note-sat: 85;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 89;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 79;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 79;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t`,\n        \"amoled dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #020406;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #8e88ce;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #ad38f9;\n\t\t\t\t\t--link-accent: #bd25ff;\n\t\t\t\t\t--ui-widget-background: #080d1f;\n\t\t\t\t\t--ui-widget-focus: #060f2d;\n\t\t\t\t\t--pitch-background: #02060b;\n\t\t\t\t\t--tonic: #00113a;\n\t\t\t\t\t--fifth-note: #1b0019;\n\t\t\t\t\t--third-note: #071a00;\n\t\t\t\t\t--white-piano-key: #02040c;\n\t\t\t\t\t--black-piano-key: #02040c;\n                    --white-piano-key-text: #fff;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\n\t\t\t\t\t--track-editor-bg-noise: #051529;\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\n\t\t\t\t\t--track-editor-bg-mod: #150529;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #7f3bec;\n\t\t\t\t\t--indicator-secondary: #213888;\n\t\t\t\t\t--select2-opt-group: #1d123c;\n\t\t\t\t\t--input-box-outline: #1b1e48;\n\t\t\t\t\t--mute-button-normal: #d234b0;\n\t\t\t\t\t--mute-button-mod: #263d98;\n\t\t\t\t\t--mod-label-primary: #090910;\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 183;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 30;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 30;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 30;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 0;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 0;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 0;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary: #91879f;\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t`,\n        \"beachcombing\": `\n\t\t\t:root {\n\t\t\t  --page-margin: #010121;\n  --editor-background: #020222;\n  --hover-preview: #f3ffff;\n  --playhead: #fff;\n  --primary-text: #c1f1ff;\n  --secondary-text: #546775;\n  --inverted-text: black;\n  --text-selection: rgba(119,68,255,0.99);\n  --box-selection-fill: #3e0028;\n  --loop-accent: #5e68fffc;\n  --link-accent: #ff3ad5fc;\n  --ui-widget-background: #1f2b52;\n  --ui-widget-focus: #384e91;\n  --pitch-background: #2c3155;\n  --tonic: #935175;\n  --fifth-note: #1f569f;\n  --third-note: #704488;\n  --white-piano-key: #f3f2ff;\n  --black-piano-key: #4b4471;\n  --white-piano-key-text: #4b4471;\n  --black-piano-key-text: #fff;\n  --use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n  --track-editor-bg-pitch: #34406c;\n  --track-editor-bg-pitch-dim: #121931;\n  --track-editor-bg-noise: #562e3b;\n  --track-editor-bg-noise-dim: #161313;\n  --track-editor-bg-mod: #372e66;\n  --track-editor-bg-mod-dim: #2a1640;\n  --multiplicative-mod-slider: #606c9f;\n  --overwriting-mod-slider: #6850b5;\n  --indicator-primary: #ff8bd1;\n  --indicator-secondary: #393e4f;\n  --select2-opt-group: #5d576f;\n  --input-box-outline: #222;\n  --mute-button-normal: #7ce1ff;\n  --mute-button-mod: #db519d;\n  --pitch1-secondary-channel: #329b70;\n  --pitch1-primary-channel: #53ffb8;\n  --pitch1-secondary-note: #4cb98c;\n  --pitch1-primary-note: #98ffd4;\n  --pitch2-secondary-channel: #b08e4d;\n  --pitch2-primary-channel: #ffe185;\n  --pitch2-secondary-note: #91782e;\n  --pitch2-primary-note: #ffd968;\n  --pitch3-secondary-channel: #018e8e;\n  --pitch3-primary-channel: #3de4ff;\n  --pitch3-secondary-note: #24b7b7;\n  --pitch3-primary-note: #a7ffff;\n  --pitch4-secondary-channel: #792354;\n  --pitch4-primary-channel: #ff68bd;\n  --pitch4-secondary-note: #a73c78;\n  --pitch4-primary-note: #ff98d2;\n  --pitch5-secondary-channel: #185aab;\n  --pitch5-primary-channel: #6493ff;\n  --pitch5-secondary-note: #3e99d9;\n  --pitch5-primary-note: #b3e3ff;\n  --pitch6-secondary-channel: #953C47;\n  --pitch6-primary-channel: #FF7888;\n  --pitch6-secondary-note: #DF4F60;\n  --pitch6-primary-note: #FFB2BB;\n  --pitch7-secondary-channel: #4f007d;\n  --pitch7-primary-channel: #a54cd9;\n  --pitch7-secondary-note: #732b9d;\n  --pitch7-primary-note: #d386ff;\n  --pitch8-secondary-channel: #323c99;\n  --pitch8-primary-channel: #1b61ff;\n  --pitch8-secondary-note: #1848b3;\n  --pitch8-primary-note: #6f9bff;\n  --pitch9-secondary-channel: #1F605A;\n  --pitch9-primary-channel: #69FFEA;\n  --pitch9-secondary-note: #178076;\n  --pitch9-primary-note: #83FFD9;\n  --pitch10-secondary-channel: #6D438C;\n  --pitch10-primary-channel: #CE8BFF;\n  --pitch10-secondary-note: #8040B0;\n  --pitch10-primary-note: #DFACFF;\n  --noise1-secondary-channel: #635070;\n  --noise1-primary-channel: #9071db;\n  --noise1-secondary-note: #915dc1;\n  --noise1-primary-note: #c5a5ff;\n  --noise2-secondary-channel: #993367;\n  --noise2-primary-channel: #dd777c;\n  --noise2-secondary-note: #cc6695;\n  --noise2-primary-note: #f0bbd1;\n  --noise3-secondary-channel: #4a8c8f;\n  --noise3-primary-channel: #77c5dd;\n  --noise3-secondary-note: #6fb4cf;\n  --noise3-primary-note: #bbf2ff;\n  --noise4-secondary-channel: #8e3e7d;\n  --noise4-primary-channel: #c682d2;\n  --noise4-secondary-note: #b871c1;\n  --noise4-primary-note: #ffb8f0;\n  --noise5-secondary-channel: #785e37;\n  --noise5-primary-channel: #bb9d77;\n  --noise5-secondary-note: #aa8c66;\n  --noise5-primary-note: #e2d1b2;\n  --mod1-secondary-channel: #4e8397;\n  --mod1-primary-channel: #92e6f3;\n  --mod1-secondary-note: #76b9d9;\n  --mod1-primary-note: #cde3ff;\n  --mod2-secondary-channel: #ad5774;\n  --mod2-primary-channel: #eba4ae;\n  --mod2-secondary-note: #c9719b;\n  --mod2-primary-note: #fdcee7;\n  --mod3-secondary-channel: #6f579f;\n  --mod3-primary-channel: #b192f7;\n  --mod3-secondary-note: #7c3fc8;\n  --mod3-primary-note: #f8ddff;\n  --mod4-secondary-channel: #a88a36;\n  --mod4-primary-channel: #bec825;\n  --mod4-secondary-note: #aecb57;\n  --mod4-primary-note: #dee9bd;\n  --mod-label-primary: #2c2c56;\n  --mod-label-secondary-text: rgb(71,69,147);\n  --mod-label-primary-text: white;\n  --disabled-note-primary: #91879f;\n  --disabled-note-secondary: #6a677a;\n\n  \n  \n\n\t\t\t}\n\t\t`,\n        \"roe\": `\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--third-note: #733f30;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"moonlight\": `\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--third-note: #528d9b;\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"autumn\": `\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--third-note: #778473;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"fruit\": `\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--third-note: #1f241e;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"sunset\": `\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--third-note: #1f2b1a;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"toxic\": `\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--third-note: #25421a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"violet verdant\": `\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--third-note: #884471;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"portal\": `\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--third-note: #8a52ce;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch1-secondary-note: #00BDC7;\n\t\t\t--pitch1-primary-note: #92F9FF;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"fusion\": `:root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--third-note: #48640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--mod-label-primary: #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"inverse\": `:root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--third-note: #dce1da;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\n\t\t\t\n\t\t\t\n\t\t\t}`,\n        \"nebula\": `\n\t\t:root {\n\t\t\t--page-margin: #11001c;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--third-note: #532748;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t\t--disabled-note-secondary: #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n\t\t\"Nebula 2\": ` \n\t\t\t:root { \n\t\t\t\t--page-margin: #040410;\n\t\t\t\t--editor-background: #11001c;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #8C849A;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t\t--box-selection-fill: #311E44;\n\t\t\t\t--loop-accent: #CC688C;\n\t\t\t\t--link-accent: #817DC9;\n\t\t\t\t--ui-widget-background: #3b2057;\n\t\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t\t--pitch-background: #393e4f40;\n\t\t\t\t--tonic: #7D5C9EC0;\n\t\t\t\t--fifth-note: #ab77bd50;\n\t\t\t\t--third-note: #532748;\n\t\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t\t--black-piano-key: #5F5566;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: true;\n\t\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t\t--indicator-secondary: #3b2057;\n\t\t\t\t--select2-opt-group: #6A576F;\n\t\t\t\t--input-box-outline: #222;\n\t\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t\t--mod-label-primary: #3A2840;\n\t\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t--noise-primary-note-hue: 12;\n\t\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t--mod-primary-note-hue: 12;\n\t\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t\t--mod-primary-note-sat: 85;\n\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t--disabled-note-primary: #aaa;\n\t\t\t\t--disabled-note-secondary: #666;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\n\t\t\t.note-primary {\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t4px 100%,\n\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t100% 4px,\n\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t4px 0px,\n\t\t\t\t\t4px 4px,\n\t\t\t\t\t0px 4px\n\t\t\t\t  );\n\t\t\t}\n\t\t\t.note-secondary {\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t4px 100%,\n\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t100% 4px,\n\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t4px 0px,\n\t\t\t\t\t4px 4px,\n\t\t\t\t\t0px 4px\n\t\t\t\t  );\n\t\t\t}\n\t\t\t.note-flash {\n\t\t\t\tclip-path: polygon(\n\t\t\t\t\t0px calc(100% - 4px),\n\t\t\t\t\t4px calc(100% - 4px),\n\t\t\t\t\t4px 100%,\n\t\t\t\t\tcalc(100% - 4px) 100%,\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\n\t\t\t\t\t100% calc(100% - 4px),\n\t\t\t\t\t100% 4px,\n\t\t\t\t\tcalc(100% - 4px) 4px,\n\t\t\t\t\tcalc(100% - 4px) 0px,\n\t\t\t\t\t4px 0px,\n\t\t\t\t\t4px 4px,\n\t\t\t\t\t0px 4px\n\t\t\t\t  );\n\t\t\t}\n\n\t\t\t.prompt.noSelection {\n\t\t\t\tbackground: #040410 !important;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tbackground-image: url(\"./image_assets/stars.gif\") !important;\n\t\t\t\tbackground-size: contain !important;\n\t\t\t\tbackground-position: center top !important;\n\t\t\t\t  background-repeat: repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t#text-content {\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t   border-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding: 36px; \n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t   border-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\tpadding-top: 5px; \n\t\t\t\t\tpadding-bottom: 5px; \n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border2.png\") !important;\n\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\t\t\t/* div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t\t} */\n\t\t\t* {\n\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t\t\t} \n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\thtml {\n\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t}\n\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t}\n\t\t\n\n\n\t\t`,\n        \"roe light\": `\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--third-note: #c2cc91;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}\n\t\t`,\n\t\t\"jummbox light\": `\n\t\t:root {\n\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t--page-margin: #fefdff;\n\t\t\t--editor-background: #fefdff;\n\t\t\t--hover-preview: #302880;\n\t\t\t--playhead: rgba(62, 32, 120, 0.9);\n\t\t\t--primary-text: #401890;\n\t\t\t--secondary-text: #8769af;\n\t\t\t--inverted-text: #fefdff;\n\t\t\t--text-selection: rgba(255,160,235,0.99);\n\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\n\t\t\t--loop-accent: #4c35d4;\n\t\t\t--link-accent: #7af;\n\t\t\t--ui-widget-background: #bf9cec;\n\t\t\t--ui-widget-focus: #e9c4ff;\n\t\t\t--pitch-background: #e2d9f9;\n\t\t\t--tonic: #c288cc;\n\t\t\t--fifth-note: #d8c9fd;\n\t\t\t--third-note: #bdd0b6;\n\t\t\t--white-piano-key: #e2e2ff;\n\t\t\t--black-piano-key: #66667a;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #d9e5ec;\n\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\n\t\t\t--track-editor-bg-noise: #ffc3ae;\n\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\n\t\t\t--track-editor-bg-mod: #c9accc;\n\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\n\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t--indicator-primary: #ae38ff;\n\t\t\t--indicator-secondary: #bbd4ec;\n\t\t\t--select2-opt-group: #c1b7f1;\n\t\t\t--input-box-outline: #bbb;\n\t\t\t--mute-button-normal: #e9b752;\n\t\t\t--mute-button-mod: #9558ee;\n\t\t\t--mod-label-primary: #ececff;\n\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\n\t\t\t--mod-label-primary-text: #302880;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t--pitch-secondary-channel-sat: 53.3;\n\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t--pitch-secondary-channel-lum: 72;\n\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t--pitch-primary-channel-sat: 97;\n\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t--pitch-primary-channel-lum: 45.5;\n\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t--pitch-secondary-note-lum: 95;\n\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 43.6;\n\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t--noise-primary-note-hue: 220;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 54;\n\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 90;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 55;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t}\n\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t}\n\t\t.select2-selection__rendered {\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}\n\t\t`,\n        \"energized\": `\n\t\t:root {\n\t\t\t--page-margin: #000a08;\n\t\t\t--editor-background: #000a08;\n\t\t\t--hover-preview: #ffffcc;\n\t\t\t--playhead: #ccfff5;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #d9d98c;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #ffff6659;\n\t\t\t--box-selection-fill: #ffffff33;\n\t\t\t--loop-accent: #ffff00;\n\t\t\t--link-accent: #00ffcc;\n\t\t\t--ui-widget-background: #141f1d;\n\t\t\t--ui-widget-focus: #24423d;\n\t\t\t--pitch-background: #001410;\n\t\t\t--tonic: #00241d;\n\t\t\t--fifth-note: #ffff6633;\n\t\t\t--third-note: #885a4452;\n\t\t\t--white-piano-key: #66998f;\n\t\t\t--black-piano-key: #141f1d;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #66998f40;\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\n\t\t\t--track-editor-bg-noise: #66998f40;\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\n\t\t\t--track-editor-bg-mod: #99996640;\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\n\t\t\t--multiplicative-mod-slider: #ffff00;\n\t\t\t--overwriting-mod-slider: #00ffcc;\n\t\t\t--indicator-primary: #ffff00;\n\t\t\t--indicator-secondary: #141f1d;\n\t\t\t--select2-opt-group: #1b312e;\n\t\t\t--input-box-outline: #141f1d;\n\t\t\t--mute-button-normal: #00ffcc;\n\t\t\t--mute-button-mod: #00997a;\n\t\t\t--pitch1-secondary-channel: #bfbf40;\n\t\t\t--pitch1-primary-channel: #ffff64;\n\t\t\t--pitch1-secondary-note: #bfbf40;\n\t\t\t--pitch1-primary-note: #ffff64;\n\t\t\t--pitch2-secondary-channel: #a2bf40;\n\t\t\t--pitch2-primary-channel: #e0ff7d;\n\t\t\t--pitch2-secondary-note: #a2bf40;\n\t\t\t--pitch2-primary-note: #e0ff7d;\n\t\t\t--pitch3-secondary-channel: #75bf40;\n\t\t\t--pitch3-primary-channel: #c1ff96;\n\t\t\t--pitch3-secondary-note: #75bf40;\n\t\t\t--pitch3-primary-note: #c1ff96;\n\t\t\t--pitch4-secondary-channel: #40bf51;\n\t\t\t--pitch4-primary-channel: #a2ffaf;\n\t\t\t--pitch4-secondary-note: #40bf51;\n\t\t\t--pitch4-primary-note: #a2ffaf;\n\t\t\t--pitch5-secondary-channel: #40bf86;\n\t\t\t--pitch5-primary-channel: #83ffc8;\n\t\t\t--pitch5-secondary-note: #40bf86;\n\t\t\t--pitch5-primary-note: #83ffc8;\n\t\t\t--pitch6-secondary-channel: #40bfa6;\n\t\t\t--pitch6-primary-channel: #64ffe1;\n\t\t\t--pitch6-secondary-note: #40bfa6;\n\t\t\t--pitch6-primary-note: #64ffe1;\n\t\t\t--pitch7-secondary-channel: #40bf86;\n\t\t\t--pitch7-primary-channel: #83ffc8;\n\t\t\t--pitch7-secondary-note: #40bf86;\n\t\t\t--pitch7-primary-note: #83ffc8;\n\t\t\t--pitch8-secondary-channel: #40bf51;\n\t\t\t--pitch8-primary-channel: #a2ffaf;\n\t\t\t--pitch8-secondary-note: #40bf51;\n\t\t\t--pitch8-primary-note: #a2ffaf;\n\t\t\t--pitch9-secondary-channel: #75bf40;\n\t\t\t--pitch9-primary-channel: #c1ff96;\n\t\t\t--pitch9-secondary-note: #75bf40;\n\t\t\t--pitch9-primary-note: #c1ff96;\n\t\t\t--pitch10-secondary-channel: #a2bf40;\n\t\t\t--pitch10-primary-channel: #e0ff7d;\n\t\t\t--pitch10-secondary-note: #a2bf40;\n\t\t\t--pitch10-primary-note: #e0ff7d;\n\t\t\t--noise1-secondary-channel: #a6a659;\n\t\t\t--noise1-primary-channel: #ffffcc;\n\t\t\t--noise1-secondary-note: #a6a659;\n\t\t\t--noise1-primary-note: #ffffcc;\n\t\t\t--noise2-secondary-channel: #94a659;\n\t\t\t--noise2-primary-channel: #f3ffcc;\n\t\t\t--noise2-secondary-note: #94a659;\n\t\t\t--noise2-primary-note: #f3ffcc;\n\t\t\t--noise3-secondary-channel: #79a659;\n\t\t\t--noise3-primary-channel: #e1ffcc;\n\t\t\t--noise3-secondary-note: #79a659;\n\t\t\t--noise3-primary-note: #e1ffcc;\n\t\t\t--noise4-secondary-channel: #94a659;\n\t\t\t--noise4-primary-channel: #f3ffcc;\n\t\t\t--noise4-secondary-note: #94a659;\n\t\t\t--noise4-primary-note: #f3ffcc;\n\t\t\t--noise5-secondary-channel: #a6a659;\n\t\t\t--noise5-primary-channel: #ffffcc;\n\t\t\t--noise5-secondary-note: #a6a659;\n\t\t\t--noise5-primary-note: #ffffcc;\n\t\t\t--mod1-secondary-channel: #a3a329;\n\t\t\t--mod1-primary-channel: #ffff00;\n\t\t\t--mod1-secondary-note: #a3a329;\n\t\t\t--mod1-primary-note: #ffff00;\n\t\t\t--mod2-secondary-channel: #a38529;\n\t\t\t--mod2-primary-channel: #ffbf00;\n\t\t\t--mod2-secondary-note: #a38529;\n\t\t\t--mod2-primary-note: #ffbf00;\n\t\t\t--mod3-secondary-channel: #a36629;\n\t\t\t--mod3-primary-channel: #ff7f00;\n\t\t\t--mod3-secondary-note: #a36629;\n\t\t\t--mod3-primary-note: #ff7f00;\n\t\t\t--mod4-secondary-channel: #a38529;\n\t\t\t--mod4-primary-channel: #ffbf00;\n\t\t\t--mod4-secondary-note: #a38529;\n\t\t\t--mod4-primary-note: #ffbf00;\n\t\t\t--mod-label-primary: #141f1d;\n\t\t\t--mod-label-secondary-text: #d9d98c;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #808080;\n\t\t\t--disabled-note-secondary: #666666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"neapolitan\": `:root {\n\t\t\t--page-margin: #120807;\n\t\t\t--editor-background: #120807;\n\t\t\t--hover-preview: #e79a82;\n\t\t\t--playhead: #e79a82;\n\t\t\t--primary-text: #decdbf;\n\t\t\t--secondary-text: #fa99bb;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #990036;\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #f6377a;\n\t\t\t--link-accent: #f6377a;\n\t\t\t--ui-widget-background: #24160f;\n\t\t\t--ui-widget-focus: #362217;\n\t\t\t--pitch-background: #1e1106;\n\t\t\t--tonic: #382414;\n\t\t\t--fifth-note: #41240c;\n\t\t\t--third-note: #685022;\n\t\t\t--white-piano-key: #e1c5b7;\n\t\t\t--black-piano-key: #482c1e;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #4d2a19;\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\n\t\t\t--track-editor-bg-noise: #4d2a19;\n\t\t\t--track-editor-bg-noise-dim: #27150c;\n\t\t\t--track-editor-bg-mod: #4d2a19;\n\t\t\t--track-editor-bg-mod-dim: #27150c;\n\t\t\t--multiplicative-mod-slider: #decdbf;\n\t\t\t--overwriting-mod-slider: #decdbf;\n\t\t\t--indicator-primary: #decdbf;\n\t\t\t--indicator-secondary: #362217;\n\t\t\t--select2-opt-group: #24160f;\n\t\t\t--input-box-outline: #24160f;\n\t\t\t--mute-button-normal: #ff66a1;\n\t\t\t--mute-button-mod: #e61968;\n\t\t\t--pitch1-secondary-channel: #680029;\n\t\t\t--pitch1-primary-channel: #cc0052;\n\t\t\t--pitch1-secondary-note: #660029;\n\t\t\t--pitch1-primary-note: #cc0052;\n\t\t\t--pitch2-secondary-channel: #7e1b43;\n\t\t\t--pitch2-primary-channel: #d32e71;\n\t\t\t--pitch2-secondary-note: #7e1b43;\n\t\t\t--pitch2-primary-note: #d32e71;\n\t\t\t--pitch3-secondary-channel: #aa275e;\n\t\t\t--pitch3-primary-channel: #da5d91;\n\t\t\t--pitch3-secondary-note: #aa275e;\n\t\t\t--pitch3-primary-note: #da5d91;\n\t\t\t--pitch4-secondary-channel: #cc3878;\n\t\t\t--pitch4-primary-channel: #e18bb0;\n\t\t\t--pitch4-secondary-note: #cc3878;\n\t\t\t--pitch4-primary-note: #e18bb0;\n\t\t\t--pitch5-secondary-channel: #d06c9b;\n\t\t\t--pitch5-primary-channel: #e9bad0;\n\t\t\t--pitch5-secondary-note: #d06c9b;\n\t\t\t--pitch5-primary-note: #e9bad0;\n\t\t\t--pitch6-secondary-channel: #c9acc5;\n\t\t\t--pitch6-primary-channel: #f0e8ef;\n\t\t\t--pitch6-secondary-note: #c9acc5;\n\t\t\t--pitch6-primary-note: #f0e8ef;\n\t\t\t--pitch7-secondary-channel: #d06c9b;\n\t\t\t--pitch7-primary-channel: #e9bad0;\n\t\t\t--pitch7-secondary-note: #d06c9b;\n\t\t\t--pitch7-primary-note: #e9bad0;\n\t\t\t--pitch8-secondary-channel: #cc3878;\n\t\t\t--pitch8-primary-channel: #e18bb0;\n\t\t\t--pitch8-secondary-note: #cc3878;\n\t\t\t--pitch8-primary-note: #e18bb0;\n\t\t\t--pitch9-secondary-channel: #aa275e;\n\t\t\t--pitch9-primary-channel: #da5d91;\n\t\t\t--pitch9-secondary-note: #aa275e;\n\t\t\t--pitch9-primary-note: #da5d91;\n\t\t\t--pitch10-secondary-channel: #7e1b43;\n\t\t\t--pitch10-primary-channel: #d32e71;\n\t\t\t--pitch10-secondary-note: #7e1b43;\n\t\t\t--pitch10-primary-note: #d32e71;\n\t\t\t--noise1-secondary-channel: #683a37;\n\t\t\t--noise1-primary-channel: #A85F5A;\n\t\t\t--noise1-secondary-note: #683a37;\n\t\t\t--noise1-primary-note: #A85F5A;\n\t\t\t--noise2-secondary-channel: #7c4a41;\n\t\t\t--noise2-primary-channel: #B47A70;\n\t\t\t--noise2-secondary-note: #7c4a41;\n\t\t\t--noise2-primary-note: #B47A70;\n\t\t\t--noise3-secondary-channel: #935f4d;\n\t\t\t--noise3-primary-channel: #c09587;\n\t\t\t--noise3-secondary-note: #935f4d;\n\t\t\t--noise3-primary-note: #C09587;\n\t\t\t--noise4-secondary-channel: #aa795a;\n\t\t\t--noise4-primary-channel: #cdb09d;\n\t\t\t--noise4-secondary-note: #aa795a;\n\t\t\t--noise4-primary-note: #CDAF9D;\n\t\t\t--noise5-secondary-channel: #bb987c;\n\t\t\t--noise5-primary-channel: #decdbf;\n\t\t\t--noise5-secondary-note: #bb987c;\n\t\t\t--noise5-primary-note: #decdbf;\n\t\t\t--mod1-secondary-channel: #6ca784;\n\t\t\t--mod1-primary-channel: #accdb9;\n\t\t\t--mod1-secondary-note: #6ca784;\n\t\t\t--mod1-primary-note: #accdb9;\n\t\t\t--mod2-secondary-channel: #7daa9f;\n\t\t\t--mod2-primary-channel: #bbd3cd;\n\t\t\t--mod2-secondary-note: #7daa9f;\n\t\t\t--mod2-primary-note: #bbd3cd;\n\t\t\t--mod3-secondary-channel: #70a3a9;\n\t\t\t--mod3-primary-channel: #afcccf;\n\t\t\t--mod3-secondary-note: #70a3a9;\n\t\t\t--mod3-primary-note: #afcccf;\n\t\t\t--mod4-secondary-channel: #5698b8;\n\t\t\t--mod4-primary-channel: #9ec3d6;\n\t\t\t--mod4-secondary-note: #5698b8;\n\t\t\t--mod4-primary-note: #9ec3d6;\n\t\t\t--mod-label-primary: #24160f;\n\t\t\t--mod-label-secondary-text: #E5AFC2;\n\t\t\t--mod-label-primary-text: #decdbf;\n\t\t\t--disabled-note-primary: #bababa;\n\t\t\t--disabled-note-secondary: #878787;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"mono\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--third-note: #30332f;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\n\t\t\t--pitch-secondary-channel-sat: 10;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 70;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 25;\n\t\t\t--pitch-primary-channel-sat: 50;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 95;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 25;\n\t\t\t--pitch-secondary-note-sat: 10;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 25;\n\t\t\t--pitch-primary-note-sat: 50;\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\n\t\t\t--pitch-primary-note-lum: 95;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 125;\n\t\t\t--noise-secondary-channel-hue-scale: 50;\n\t\t\t--noise-secondary-channel-sat: 10;\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\n\t\t\t--noise-secondary-channel-lum: 70;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 125;\n\t\t\t--noise-primary-channel-hue-scale: 50;\n\t\t\t--noise-primary-channel-sat: 50;\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\n\t\t\t--noise-primary-channel-lum: 95;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 125;\n\t\t\t--noise-secondary-note-hue-scale: 50;\n\t\t\t--noise-secondary-note-sat: 10;\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\n\t\t\t--noise-secondary-note-lum: 70;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 125;\n\t\t\t--noise-primary-note-hue-scale: 50;\n\t\t\t--noise-primary-note-sat: 50;\n\t\t\t--noise-primary-note-sat-scale: 0.1;\n\t\t\t--noise-primary-note-lum: 95;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 255;\n\t\t\t--mod-secondary-channel-hue-scale: 75;\n\t\t\t--mod-secondary-channel-sat: 10;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 70;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 255;\n\t\t\t--mod-primary-channel-hue-scale: 75;\n\t\t\t--mod-primary-channel-sat: 50;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 95;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 255;\n\t\t\t--mod-secondary-note-hue-scale: 75;\n\t\t\t--mod-secondary-note-sat: 10;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 70;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 255;\n\t\t\t--mod-primary-note-hue-scale: 75;\n\t\t\t--mod-primary-note-sat: 50;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 95;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n\t\t\"blutonium\":\n\t\t\t`:root {\n\t\t\t--page-margin: #02070D;\n\t\t\t--editor-background: #02070D;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #9bd1ee;\n\t\t\t--secondary-text: #5a6da8;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\n\t\t\t--loop-accent: #024aca;\n\t\t\t--link-accent: #024aca;\n\t\t\t--ui-widget-background: #161c2e;\n\t\t\t--ui-widget-focus: #262c3e;\n\t\t\t--pitch-background: #22272D;\n\t\t\t--tonic: #1b3056;\n\t\t\t--fifth-note: #344051;\n\t\t\t--third-note: #1b3740;\n\t\t\t--white-piano-key: #a6c6ed;\n\t\t\t--black-piano-key: #2f4687;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #25284c;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #024aca;\n\t\t\t--indicator-secondary: #00177d;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #273b9d;\n\t\t\t--mute-button-mod: #27989d;\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-channel: #99ddff;\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-note: #99ddff;\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-channel: #5BA8FF;\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-note: #5BA8FF;\n\t\t\t--pitch3-secondary-channel: #024ACA;\n\t\t\t--pitch3-primary-channel: #0A89FF;\n\t\t\t--pitch3-secondary-note: #024ACA;\n\t\t\t--pitch3-primary-note: #0A89FF;\n\t\t\t--pitch4-secondary-channel: #00177D;\n\t\t\t--pitch4-primary-channel: #024ACA;\n\t\t\t--pitch4-secondary-note: #00177D;\n\t\t\t--pitch4-primary-note: #024ACA;\n\t\t\t--pitch5-secondary-channel: #000e4e;\n\t\t\t--pitch5-primary-channel: #0023bf;\n\t\t\t--pitch5-secondary-note: #000e4e;\n\t\t\t--pitch5-primary-note: #0023bf;\n\t\t\t--pitch6-secondary-channel: #8990FE;\n\t\t\t--pitch6-primary-channel: #C2C6FF;\n\t\t\t--pitch6-secondary-note: #8990FE;\n\t\t\t--pitch6-primary-note: #C2C6FF;\n\t\t\t--pitch7-secondary-channel: #5E65D3;\n\t\t\t--pitch7-primary-channel: #8990FE;\n\t\t\t--pitch7-secondary-note: #5E65D3;\n\t\t\t--pitch7-primary-note: #8990FE;\n\t\t\t--pitch8-secondary-channel: #3138A6;\n\t\t\t--pitch8-primary-channel: #5E65D3;\n\t\t\t--pitch8-secondary-note: #3138A6;\n\t\t\t--pitch8-primary-note: #5E65D3;\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\n\t\t\t--pitch9-primary-channel: #3138A6;\n\t\t\t--pitch9-secondary-note: #1B0B7F;\n\t\t\t--pitch9-primary-note: #3138A6;\n\t\t\t--pitch10-secondary-channel: #13015D;\n\t\t\t--pitch10-primary-channel: #1c02bd;\n\t\t\t--pitch10-secondary-note: #13015D;\n\t\t\t--pitch10-primary-note: #1c02bd;\n\t\t\t--noise1-secondary-channel: #A675FE;\n\t\t\t--noise1-primary-channel: #E2C9FF;\n\t\t\t--noise1-secondary-note: #A675FE;\n\t\t\t--noise1-primary-note: #E2C9FF;\n\t\t\t--noise2-secondary-channel: #6A31CA;\n\t\t\t--noise2-primary-channel: #A675FE;\n\t\t\t--noise2-secondary-note: #6A31CA;\n\t\t\t--noise2-primary-note: #A675FE;\n\t\t\t--noise3-secondary-channel: #5A1991;\n\t\t\t--noise3-primary-channel: #6A31CA;\n\t\t\t--noise3-secondary-note: #5A1991;\n\t\t\t--noise3-primary-note: #6A31CA;\n\t\t\t--noise4-secondary-channel: #2f1a68;\n\t\t\t--noise4-primary-channel: #5A1991;\n\t\t\t--noise4-secondary-note: #2f1a68;\n\t\t\t--noise4-primary-note: #5A1991;\n\t\t\t--noise5-secondary-channel: #211640;\n\t\t\t--noise5-primary-channel: #391b8d;\n\t\t\t--noise5-secondary-note: #211640;\n\t\t\t--noise5-primary-note: #391b8d;\n\t\t\t--mod1-secondary-channel: #25E2CD;\n\t\t\t--mod1-primary-channel: #BDFFCA;\n\t\t\t--mod1-secondary-note: #25E2CD;\n\t\t\t--mod1-primary-note: #BDFFCA;\n\t\t\t--mod2-secondary-channel: #0A98AC;\n\t\t\t--mod2-primary-channel: #25E2CD;\n\t\t\t--mod2-secondary-note: #0A98AC;\n\t\t\t--mod2-primary-note: #25E2CC;\n\t\t\t--mod3-secondary-channel: #005280;\n\t\t\t--mod3-primary-channel: #0A98AC;\n\t\t\t--mod3-secondary-note: #005280;\n\t\t\t--mod3-primary-note: #0A98AC;\n\t\t\t--mod4-secondary-channel: #0f3670;\n\t\t\t--mod4-primary-channel: #1369c1;\n\t\t\t--mod4-secondary-note: #0f3670;\n\t\t\t--mod4-primary-note: #1369c1;\n\t\t\t--mod-label-primary: #191d26;\n\t\t\t--mod-label-secondary-text: #024aca;\n\t\t\t--mod-label-primary-text: #ffffffa6;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\n\t\t\t\n\t\t\t\n\t}`,\n\t\"Ghost House\": `\n\t:root { \n\t\t--page-margin: #120918; \n\t\t--editor-background: #120918; \n\t\t--hover-preview: #c6f7ff; \n\t\t--playhead: white; \n\t\t--primary-text: #bbb8db; \n\t\t--secondary-text: #6f72b5; \n\t\t--inverted-text: black; \n\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \n\t\t--loop-accent: #573ebb; \n\t\t--link-accent: #98f; \n\t\t--ui-widget-background: #1c1a2f; \n\t\t--ui-widget-focus: var(--ui-widget-background); \n\t\t--pitch-background: #3e3a5f; \n\t\t--tonic: #7874a1; \n\t\t--fifth-note: #423fff; \n\t\t--third-note: #534488;\n\t\t--white-piano-key: #bbb8db; \n\t\t--black-piano-key: #1c1a2f; \n\t\t--white-piano-key-text: #1c1a2f; \n\t\t--black-piano-key-text: #bbb8db; \n\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n\t\t--track-editor-bg-pitch: #3a3b5c; \n\t\t--track-editor-bg-pitch-dim: #1f2036; \n\t\t--track-editor-bg-noise: #3c3554; \n\t\t--track-editor-bg-noise-dim: #1e1834; \n\t\t--track-editor-bg-mod: #30335e; \n\t\t--track-editor-bg-mod-dim: #161938; \n\t\t--multiplicative-mod-slider: #573ebb; \n\t\t--overwriting-mod-slider: #495789; \n\t\t--indicator-primary: #573ebb; \n\t\t--indicator-secondary: #415187; \n\t\t--select2-opt-group: #22223a; \n\t\t--input-box-outline: #2d2648; \n\t\t--mute-button-normal: #7aceff; \n\t\t--mute-button-mod: #9d6bff; \n\t\t--pitch1-secondary-channel: #5f3ea5; \n\t\t--pitch1-primary-channel: #c1a4ff; \n\t\t--pitch1-secondary-note: #794fd3; \n\t\t--pitch1-primary-note: #d8c6ff; \n\t\t--pitch2-secondary-channel: #4f44bf; \n\t\t--pitch2-primary-channel: #9287ff; \n\t\t--pitch2-secondary-note: #5e51d9; \n\t\t--pitch2-primary-note: #b6afff; \n\t\t--pitch3-secondary-channel: #374eb9; \n\t\t--pitch3-primary-channel: #8097ff; \n\t\t--pitch3-secondary-note: #445cc9; \n\t\t--pitch3-primary-note: #a0b2ff; \n\t\t--pitch4-secondary-channel: #2867cf; \n\t\t--pitch4-primary-channel: #6fa5ff; \n\t\t--pitch4-secondary-note: #2e6ed7; \n\t\t--pitch4-primary-note: #a6c7ff; \n\t\t--pitch5-secondary-channel: #3175a7; \n\t\t--pitch5-primary-channel: #7ec9ff; \n\t\t--pitch5-secondary-note: #367eb3; \n\t\t--pitch5-primary-note: #9fd7ff; \n\t\t--pitch6-secondary-channel: #3993a9; \n\t\t--pitch6-primary-channel: #8ce9ff; \n\t\t--pitch6-secondary-note: #386da3; \n\t\t--pitch6-primary-note: #9eecff; \n\t\t--pitch7-secondary-channel: #369d8a; \n\t\t--pitch7-primary-channel: #8bfce7; \n\t\t--pitch7-secondary-note: #1c93a7; \n\t\t--pitch7-primary-note: #abffef; \n\t\t--pitch8-secondary-channel: #00A170; \n\t\t--pitch8-primary-channel: #50FFC9; \n\t\t--pitch8-secondary-note: #00C78A; \n\t\t--pitch8-primary-note: #83FFD9; \n\t\t--pitch9-secondary-channel: #49b374; \n\t\t--pitch9-primary-channel: #8affa9; \n\t\t--pitch9-secondary-note: #26815f; \n\t\t--pitch9-primary-note: #c8ffde; \n\t\t--pitch10-secondary-channel: #58a747; \n\t\t--pitch10-primary-channel: #bbffaa; \n\t\t--pitch10-secondary-note: #1d7c48; \n\t\t--pitch10-primary-note: #c7ffbc; \n\t\t--noise1-secondary-channel: #42829b; \n\t\t--noise1-primary-channel: #97d3fc; \n\t\t--noise1-secondary-note: #3f53b3; \n\t\t--noise1-primary-note: #97d3fc; \n\t\t--noise2-secondary-channel: #6354bb; \n\t\t--noise2-primary-channel: #9a89ff; \n\t\t--noise2-secondary-note: #5f4dcd; \n\t\t--noise2-primary-note: #c6bcff; \n\t\t--noise3-secondary-channel: #704a95; \n\t\t--noise3-primary-channel: #c285ff; \n\t\t--noise3-secondary-note: #ad5aff; \n\t\t--noise3-primary-note: #d3a6ff; \n\t\t--noise4-secondary-channel: #a53c65; \n\t\t--noise4-primary-channel: #f794bb; \n\t\t--noise4-secondary-note: #cb5080; \n\t\t--noise4-primary-note: #f794bb; \n\t\t--noise5-secondary-channel: #9b2d2d; \n\t\t--noise5-primary-channel: #ff7676; \n\t\t--noise5-secondary-note: #cb4444; \n\t\t--noise5-primary-note: #ff9999; \n\t\t--mod1-secondary-channel: #b7613c; \n\t\t--mod1-primary-channel: #ff9f76; \n\t\t--mod1-secondary-note: #e77e52; \n\t\t--mod1-primary-note: #ffb99b; \n\t\t--mod2-secondary-channel: #916d34; \n\t\t--mod2-primary-channel: #fece80; \n\t\t--mod2-secondary-note: #c58b35; \n\t\t--mod2-primary-note: #ffdda5; \n\t\t--mod3-secondary-channel: #83761a; \n\t\t--mod3-primary-channel: #fdf68c; \n\t\t--mod3-secondary-note: #c18e00; \n\t\t--mod3-primary-note: #fdf68c; \n\t\t--mod4-secondary-channel: #a86436; \n\t\t--mod4-primary-channel: #c8a825; \n\t\t--mod4-secondary-note: #e8ba46; \n\t\t--mod4-primary-note: #c8a825; \n\t\t--mod-label-primary: #37325e; \n\t\t--mod-label-secondary-text: #6e8aa7; \n\t\t--mod-label-primary-text: #c1ffff; \n\t\t--disabled-note-primary: #999; \n\t\t--disabled-note-secondary: #666; \n\t\t--note-flash: #ffffff; \n\t\t--note-flash-secondary: #ffffff77; }\n\t`,\n\t\"Ghost House 2\": `\n\t:root { \n\t\t--page-margin: #120918; \n\t\t--editor-background: #1c1a2f; \n\t\t--hover-preview: #c6f7ff; \n\t\t--playhead: white; \n\t\t--primary-text: #bbb8db; \n\t\t--secondary-text: #6f72b5; \n\t\t--inverted-text: black; \n\t\t--text-selection: rgba(119,68,255,0.99); \n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \n\t\t--loop-accent: #573ebb; \n\t\t--link-accent: #98f; \n\t\t--ui-widget-background: #3e3a5f; \n\t\t--ui-widget-focus: var(--ui-widget-background); \n\t\t--pitch-background: var(--ui-widget-background); \n\t\t--tonic: #7874a1; \n\t\t--fifth-note: #423fff; \n\t\t--third-note: #534488;\n\t\t--white-piano-key: #bbb8db; \n\t\t--black-piano-key: #1c1a2f; \n\t\t--white-piano-key-text: #1c1a2f; \n\t\t--black-piano-key-text: #bbb8db; \n\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n\t\t--track-editor-bg-pitch: #3a3b5c; \n\t\t--track-editor-bg-pitch-dim: #1f2036; \n\t\t--track-editor-bg-noise: #3c3554; \n\t\t--track-editor-bg-noise-dim: #1e1834; \n\t\t--track-editor-bg-mod: #30335e; \n\t\t--track-editor-bg-mod-dim: #161938; \n\t\t--multiplicative-mod-slider: #573ebb; \n\t\t--overwriting-mod-slider: #495789; \n\t\t--indicator-primary: #573ebb; \n\t\t--indicator-secondary: #415187; \n\t\t--select2-opt-group: #22223a; \n\t\t--input-box-outline: #2d2648; \n\t\t--mute-button-normal: #7aceff; \n\t\t--mute-button-mod: #9d6bff; \n\t\t--pitch1-secondary-channel: #5f3ea5; \n\t\t--pitch1-primary-channel: #c1a4ff; \n\t\t--pitch1-secondary-note: #794fd3; \n\t\t--pitch1-primary-note: #d8c6ff; \n\t\t--pitch2-secondary-channel: #4f44bf; \n\t\t--pitch2-primary-channel: #9287ff; \n\t\t--pitch2-secondary-note: #5e51d9; \n\t\t--pitch2-primary-note: #b6afff; \n\t\t--pitch3-secondary-channel: #374eb9; \n\t\t--pitch3-primary-channel: #8097ff; \n\t\t--pitch3-secondary-note: #445cc9; \n\t\t--pitch3-primary-note: #a0b2ff; \n\t\t--pitch4-secondary-channel: #2867cf; \n\t\t--pitch4-primary-channel: #6fa5ff; \n\t\t--pitch4-secondary-note: #2e6ed7; \n\t\t--pitch4-primary-note: #a6c7ff; \n\t\t--pitch5-secondary-channel: #3175a7; \n\t\t--pitch5-primary-channel: #7ec9ff; \n\t\t--pitch5-secondary-note: #367eb3; \n\t\t--pitch5-primary-note: #9fd7ff; \n\t\t--pitch6-secondary-channel: #3993a9; \n\t\t--pitch6-primary-channel: #8ce9ff; \n\t\t--pitch6-secondary-note: #386da3; \n\t\t--pitch6-primary-note: #9eecff; \n\t\t--pitch7-secondary-channel: #369d8a; \n\t\t--pitch7-primary-channel: #8bfce7; \n\t\t--pitch7-secondary-note: #1c93a7; \n\t\t--pitch7-primary-note: #abffef; \n\t\t--pitch8-secondary-channel: #00A170; \n\t\t--pitch8-primary-channel: #50FFC9; \n\t\t--pitch8-secondary-note: #00C78A; \n\t\t--pitch8-primary-note: #83FFD9; \n\t\t--pitch9-secondary-channel: #49b374; \n\t\t--pitch9-primary-channel: #8affa9; \n\t\t--pitch9-secondary-note: #26815f; \n\t\t--pitch9-primary-note: #c8ffde; \n\t\t--pitch10-secondary-channel: #58a747; \n\t\t--pitch10-primary-channel: #bbffaa; \n\t\t--pitch10-secondary-note: #1d7c48; \n\t\t--pitch10-primary-note: #c7ffbc; \n\t\t--noise1-secondary-channel: #42829b; \n\t\t--noise1-primary-channel: #97d3fc; \n\t\t--noise1-secondary-note: #3f53b3; \n\t\t--noise1-primary-note: #97d3fc; \n\t\t--noise2-secondary-channel: #6354bb; \n\t\t--noise2-primary-channel: #9a89ff; \n\t\t--noise2-secondary-note: #5f4dcd; \n\t\t--noise2-primary-note: #c6bcff; \n\t\t--noise3-secondary-channel: #704a95; \n\t\t--noise3-primary-channel: #c285ff; \n\t\t--noise3-secondary-note: #ad5aff; \n\t\t--noise3-primary-note: #d3a6ff; \n\t\t--noise4-secondary-channel: #a53c65; \n\t\t--noise4-primary-channel: #f794bb; \n\t\t--noise4-secondary-note: #cb5080; \n\t\t--noise4-primary-note: #f794bb; \n\t\t--noise5-secondary-channel: #9b2d2d; \n\t\t--noise5-primary-channel: #ff7676; \n\t\t--noise5-secondary-note: #cb4444; \n\t\t--noise5-primary-note: #ff9999; \n\t\t--mod1-secondary-channel: #b7613c; \n\t\t--mod1-primary-channel: #ff9f76; \n\t\t--mod1-secondary-note: #e77e52; \n\t\t--mod1-primary-note: #ffb99b; \n\t\t--mod2-secondary-channel: #916d34; \n\t\t--mod2-primary-channel: #fece80; \n\t\t--mod2-secondary-note: #c58b35; \n\t\t--mod2-primary-note: #ffdda5; \n\t\t--mod3-secondary-channel: #83761a; \n\t\t--mod3-primary-channel: #fdf68c; \n\t\t--mod3-secondary-note: #c18e00; \n\t\t--mod3-primary-note: #fdf68c; \n\t\t--mod4-secondary-channel: #a86436; \n\t\t--mod4-primary-channel: #c8a825; \n\t\t--mod4-secondary-note: #e8ba46; \n\t\t--mod4-primary-note: #c8a825; \n\t\t--mod-label-primary: #37325e; \n\t\t--mod-label-secondary-text: #6e8aa7; \n\t\t--mod-label-primary-text: #c1ffff; \n\t\t--disabled-note-primary: #999; \n\t\t--disabled-note-secondary: #666; \n\t\t--note-flash: #ffffff; \n\t\t--note-flash-secondary: #ffffff77; }\n\t\n\t\t* {\n\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t--export-instrument-symbol: var(--export-symbol);\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\n\t\t} \n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\t\n\t\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection, .beepboxEditor .loopEditor {\n\t\t\t\tbackground-color: #fff0 !important;\n\t\t\t} \n\t\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\t\n\t\t\tbody {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg.png\") !important;\n\t\t\t\tbackground-size: 256px;\n\t\t\t\tbackground-position: center;\n\t\t\t\tbackground-repeat: repeat;\n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\n\t\t\t#text-content {\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\n\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t   border-image-width: 32px; \n\t\t\tborder-image-repeat: repeat; \n\t\t\t\tpadding-left: 32px; \n\t\t\t\tpadding-right: 32px; \n\t\t\t\tpadding-bottom: 16px; \n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t}\n\t\t#beepboxEditorContainer {\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\n\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t   border-image-width: 32px; \n\t\t\tborder-image-repeat: repeat;\n\t\t\t\tpadding-left: 32px; \n\t\t\t\tpadding-right: 32px; \n\t\t\t\tpadding-bottom: 16px; \n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t}\n\t\n\t\t\tdiv.prompt.noSelection {\n\t\t\t\tbackground-color: var(--editor-background) !important;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.mobilePatternButton,\n\t\t\tbutton.mobileTrackButton,\n\t\t\tbutton.mobileSettingsButton,\n\t\t\tbutton.mobilePlayButton,\n\t\t\tbutton.mobilePauseButton,\n\t\t\tbutton.mobileNextBarButton,\n\t\t\tbutton.mobilePrevBarButton,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton, \n\t\t\tbutton.prevBarButton, \n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton, \n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthouse_button.png\") !important;\n\t\t\t\t\tborder-image-slice: 5 fill !important; \n\t\t\t\t   border-image-width: 5px !important;  \n\t\t\t\tborder-image-repeat: repeat !important;\n\t\t\t\t\t\n\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source: none !important;\n\t\t\t\t}\n\t\n\t\t\thtml {\n\t\t\tfont-family: 'AbyssType';\n\t\t\t}\n\t\t\t\n\t`,\n\t\"ultrabox dark\": `\n\t\t:root {\n\t\t/*--mod-title: #CCCCCC;*/\n\t\t--loop-accent: #CCCCCC;\n\t\t--playhead: #CCCCCC;\n\t\t/*--primary-text: #CCCCCC;\n\t\t--hover-preview: #CCCCCC;*/\n\t\t--link-accent: #FF8EC5;\n\t\t--indicator-primary: #FF8EC5;\n\t\t/*--indicator-primary: #CCCCCC;*/\n\t\t/*--indicator-secondary: #E856B2;*/\n\t\t--white-piano-key: #CCCCCC;\n\t\t/*--black-piano-key: #444;*/\n\t\t--text-selection: #932253;\n\t\t--oscilloscope-line-L: #CCCCCC;\n\t\t--oscilloscope-line-R: #932253;\n\t\t--pitch-channel-limit: 8;\n\t\t--pitch1-secondary-channel: #A83030;\n\t\t--pitch1-primary-channel:   #FF7C7C;\n\t\t--pitch1-secondary-note:    #B51532;\n\t\t--pitch1-primary-note:      #FFA3A3;\n\t\t--pitch2-secondary-channel: #C75000;\n\t\t--pitch2-primary-channel:   #FF9752;\n\t\t--pitch2-secondary-note:    #FF771C;\n\t\t--pitch2-primary-note:      #FFCDAB;\n\t\t--pitch3-secondary-channel: #A1A100;\n\t\t--pitch3-primary-channel: #FFFF25;\n\t\t--pitch3-secondary-note: #C7C700;\n\t\t--pitch3-primary-note: #FFFF92;\n\t\t--pitch4-secondary-channel: #139620;\n\t\t--pitch4-primary-channel:   #25ff3a;\n\t\t--pitch4-secondary-note:    #139620;\n\t\t--pitch4-primary-note:      #25ff3a;\n\t\t--pitch5-secondary-channel: #0099A1;\n\t\t--pitch5-primary-channel:   #25F3FF;\n\t\t--pitch5-secondary-note:    #00BDC7;\n\t\t--pitch5-primary-note:      #92F9FF;\n\t\t--pitch6-secondary-channel: #58599E;\n\t\t--pitch6-primary-channel:   #5EA3FF;\n\t\t--pitch6-secondary-note:    #183AC7;\n\t\t--pitch6-primary-note:      #9EC8FF;\n\t\t--pitch7-secondary-channel: #6038a5;\n\t\t--pitch7-primary-channel:   #C760FF;\n\t\t--pitch7-secondary-note:    #5433A0;\n\t\t--pitch7-primary-note:      #D99EFF;\n\t\t--pitch8-secondary-channel: #932253;\n\t\t--pitch8-primary-channel:   #FF60A5;\n\t\t--pitch8-secondary-note:    #8E1C4E;\n\t\t--pitch8-primary-note:      #FF8EC5;\n\t\t}`,\n\t\t\"modbox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox 2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #00ff00;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #c4ffa3;\n\t\t\t\t--fifth-note: #96fffb;\n\t\t\t\t--third-note: #9698ff;\n\t\t\t\t--octave-scrollbar: #00ff00;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #00ff00;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox artic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #ffffff;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #eafffe;\n\t\t\t\t--fifth-note: #b7f1ff;\n\t\t\t\t--third-note: #9698ff;\n\t\t\t\t--octave-scrollbar: #a5eeff;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #42dcff;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox ocean\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #5982ff;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #090b3a;\n\t\t\t\t--fifth-note: #3f669b;\n\t\t\t\t--third-note: #6f91bf;\n\t\t\t\t--octave-scrollbar: #a5eeff;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #4449a3;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox windows\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #2779c2;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #da4e2a;\n\t\t\t\t--fifth-note: #5d9511;\n\t\t\t\t--third-note: #2779c2;\n\t\t\t\t--octave-scrollbar: #295294;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #fdd01d;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox grassland\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #a0d168;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #20330a;\n\t\t\t\t--fifth-note: #74bc21;\n\t\t\t\t--third-note: #a0d168;\n\t\t\t\t--octave-scrollbar: #74bc21;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #69c400;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox dessert\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #ff6254;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #fffc5b;\n\t\t\t\t--fifth-note: #ff5e3a;\n\t\t\t\t--third-note: #ffa03a;\n\t\t\t\t--octave-scrollbar: #ff5e3a;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #fffc5b;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox kahoot\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #ff3355;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #45a3e5;\n\t\t\t\t--fifth-note: #864cbf;\n\t\t\t\t--third-note: #bf4ca8;\n\t\t\t\t--octave-scrollbar: #eb670f;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #66bf39;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox egg\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #6b003a;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #fffafa;\n\t\t\t\t--fifth-note: #ff91ce;\n\t\t\t\t--third-note: #ff91a3;\n\t\t\t\t--octave-scrollbar: #ffb1f4;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #75093e;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox pony\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #4b4b4b;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #1a2844;\n\t\t\t\t--fifth-note: #dabbe6;\n\t\t\t\t--third-note: #faf4c3;\n\t\t\t\t--octave-scrollbar: #5f4c99;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #818383;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox woodkid\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #e83c4e;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #fff6fe;\n\t\t\t\t--pitch1-background: #41323b;\n\t\t\t\t--pitch2-background: #41323b;\n\t\t\t\t--pitch3-background: #41323b;\n\t\t\t\t--fifth-note: #fff6fe;\n\t\t\t\t--pitch5-background: #41323b;\n\t\t\t\t--pitch6-background: #41323b;\n\t\t\t\t--third-note: #fff6fe;\n\t\t\t\t--pitch8-background: #41323b;\n\t\t\t\t--pitch9-background: #41323b;\n\t\t\t\t--pitch10-background: #41323b;\n\t\t\t\t--pitch11-background: #41323b;\n\t\t\t\t--octave-scrollbar: #ef3027;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #ffedca;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox midnight\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #445566;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #222222;\n\t\t\t\t--pitch1-background: #222222;\n\t\t\t\t--pitch2-background: #222222;\n\t\t\t\t--pitch3-background: #222222;\n\t\t\t\t--fifth-note: #444444;\n\t\t\t\t--pitch5-background: #222222;\n\t\t\t\t--pitch6-background:#222222;\n\t\t\t\t--third-note: #222222;\n\t\t\t\t--pitch8-background: #222222;\n\t\t\t\t--pitch9-background: #222222;\n\t\t\t\t--pitch10-background: #222222;\n\t\t\t\t--pitch11-background: #222222;\n\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #000000;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox snedbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #a53a3d;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #222222;\n\t\t\t\t--fifth-note: #60389b;\n\t\t\t\t--third-note: #10997e;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #ffffff;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox unnamed\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #ffffff;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #ffffa0; \n\t\t\t\t--pitch1-background: #ffffa0; \n\t\t\t\t--pitch2-background: #ffffa0; \n\t\t\t\t--pitch3-background: #ffffa0; \n\t\t\t\t--third-note: #ffffa0;\n\t\t\t\t--pitch5-background: #ffffa0; \n\t\t\t\t--pitch6-background: #ffffa0; \n\t\t\t\t--fifth-note: #ffffa0;  \n\t\t\t\t--pitch8-background: #ffffa0; \n\t\t\t\t--pitch9-background: #ffffa0; \n\t\t\t\t--pitch10-background: #ffffa0; \n\t\t\t\t--pitch11-background: #ffffa0; \n\t\t\t\t--octave-scrollbar: #ffffff;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #ffffff;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox halloween\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #9e2200;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #9e2200; \n\t\t\t\t--pitch1-background: #754a3f; \n\t\t\t\t--pitch2-background: #754a3f; \n\t\t\t\t--pitch3-background: #754a3f; \n\t\t\t\t--third-note: #754a3f;\n\t\t\t\t--pitch5-background: #754a3f; \n\t\t\t\t--pitch6-background: #754a3f; \n\t\t\t\t--fifth-note: #914300; \n\t\t\t\t--pitch8-background: #754a3f; \n\t\t\t\t--pitch9-background: #754a3f; \n\t\t\t\t--pitch10-background: #754a3f; \n\t\t\t\t--pitch11-background: #754a3f; \n\t\t\t\t--octave-scrollbar: #9e2200;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #ffffff;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox frozen\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\n\t\t\t\t--loop-accent: #38ef17;\n\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\n\t\t\t\t--tonic: #88bce8; \n\t\t\t\t--pitch1-background: #99c8ef; \n\t\t\t\t--pitch2-background: #abd3f4; \n\t\t\t\t--pitch3-background: #b8d7f2; \n\t\t\t\t--third-note: #cbe0f2;\n\t\t\t\t--pitch5-background: #e5f0f9; \n\t\t\t\t--pitch6-background: #ffffff; \n\t\t\t\t--fifth-note: #e5f0f9; \n\t\t\t\t--pitch8-background: #cbe0f2; \n\t\t\t\t--pitch9-background: #b8d7f2; \n\t\t\t\t--pitch10-background: #abd3f4; \n\t\t\t\t--pitch11-background: #99c8ef;\n\t\t\t\t--octave-scrollbar: #ffffff; \n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\n\t\t\t\t--black-piano-key-text: #38ef17;\n\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox cinnamon\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #ba8418;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #f5bb00; \n\t\t\t\t--pitch1-background: #f5bb00; \n\t\t\t\t--pitch2-background: #f5bb00; \n\t\t\t\t--pitch3-background: #f5bb00; \n\t\t\t\t--third-note: #f5bb00;\n\t\t\t\t--pitch5-background: #f5bb00; \n\t\t\t\t--pitch6-background: #f5bb00; \n\t\t\t\t--fifth-note: #f5bb00;  \n\t\t\t\t--pitch8-background: #f5bb00; \n\t\t\t\t--pitch9-background: #f5bb00; \n\t\t\t\t--pitch10-background: #f5bb00; \n\t\t\t\t--pitch11-background: #f5bb00; \n\t\t\t\t--octave-scrollbar: #e59900;\n\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #ffff25;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox float\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #ffffff;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #ffffff; \n\t\t\t\t--pitch1-background: #ededed;  \n\t\t\t\t--pitch2-background: #cecece;  \n\t\t\t\t--pitch3-background: #bababa;  \n\t\t\t\t--third-note: #afafaf;\n\t\t\t\t--pitch5-background: #a5a5a5; \n\t\t\t\t--pitch6-background: #999999; \n\t\t\t\t--fifth-note: #8e8e8e; \n\t\t\t\t--pitch8-background: #828282; \n\t\t\t\t--pitch9-background: #777777; \n\t\t\t\t--pitch10-background: #565656; \n\t\t\t\t--pitch11-background: #282828; \n\t\t\t\t--octave-scrollbar: #ffffff; \n\t\t\t\t\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #000000;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox rainbow\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #ff0000;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #ffaaaa; \n\t\t\t\t--pitch1-background: #ffceaa; \n\t\t\t\t--pitch2-background: #ffdfaa; \n\t\t\t\t--pitch3-background: #fff5aa; \n\t\t\t\t--third-note: #e8ffaa;\n\t\t\t\t--pitch5-background: #bfffb2; \n\t\t\t\t--pitch6-background: #b2ffc8; \n\t\t\t\t--fifth-note: #b2ffe4; \n\t\t\t\t--pitch8-background: #b2f3ff; \n\t\t\t\t--pitch9-background: #b2b3ff; \n\t\t\t\t--pitch10-background: #e0b2ff; \n\t\t\t\t--pitch11-background: #ffafe9; \n\t\t\t\t--octave-scrollbar: #43ff00; \n\t\t\t\t\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--black-piano-key-text: #fefe00;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox bitbeam\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #fefe00;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #fefe00; \n\t\t\t\t--pitch1-background: #111111; \n\t\t\t\t--pitch2-background: #111111; \n\t\t\t\t--pitch3-background: #111111; \n\t\t\t\t--third-note: #fa0103;\n\t\t\t\t--pitch5-background: #111111; \n\t\t\t\t--pitch6-background: #111111; \n\t\t\t\t--fifth-note: #111111; \n\t\t\t\t--pitch8-background: #0001fc; \n\t\t\t\t--pitch9-background: #111111; \n\t\t\t\t--pitch10-background: #111111; \n\t\t\t\t--pitch11-background: #111111;\n\t\t\t\t--octave-scrollbar: #0001fc;  \n\t\t\t\t\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #8bac0f;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox gameboy\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9bbc0f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\n\t\t\t\t--pitch-background: #444; \n\t\t\t\t--tonic: #9bbc0f; \n\t\t\t\t--pitch1-background: #9bbc0f; \n\t\t\t\t--pitch2-background: #9bbc0f; \n\t\t\t\t--pitch3-background: #9bbc0f; \n\t\t\t\t--third-note: #9bbc0f;\n\t\t\t\t--pitch5-background: #9bbc0f; \n\t\t\t\t--pitch6-background: #306230; \n\t\t\t\t--fifth-note: #306230; \n\t\t\t\t--pitch8-background: #306230; \n\t\t\t\t--pitch9-background: #0f380f; \n\t\t\t\t--pitch10-background: #0f380f; \n\t\t\t\t--pitch11-background: #0f380f; \n\t\t\t\t--octave-scrollbar: #9bbc0f;  \n\t\t\t\t\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t --mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"modbox piano\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #ffffff;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--use-piano-scheme: true;\n\n\t\t\t\t--tonic: #fff;\n\t\t\t\t--third-note: #7a7a7a;\n\t\t\t\t--fifth-note: #7a7a7a;\n\n\t\t\t\t--white-tonic: #fff;\n\t\t\t\t--black-tonic: #222;\n\t\t\t\t--white-third-note: #f7f7f7;\n\t\t\t\t--black-third-note: #444444;\n\t\t\t\t--white-fifth-note: #f7f7f7;\n\t\t\t\t--black-fifth-note: #444444;\n\t\t\t\t--pitch-white-key: #bfbfbf;\n\t\t\t\t--pitch-black-key: #7a7a7a;\n\t\t\t\t--octave-scrollbar: #211616;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"nepbox snedbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\n\t\t\t\t--loop-accent: #7744FF;\n\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #444444;\n\n\t\t\t\t--use-piano-scheme: true;\n\n\t\t\t\t--tonic: #886644;\n\t\t\t\t--third-note: #7a7a7a;\n\t\t\t\t--fifth-note: #7a7a7a;\n\n\t\t\t\t--white-tonic: #886644;\n\t\t\t\t--black-tonic: #886644;\n\t\t\t\t--white-third-note: #f7f7f7;\n\t\t\t\t--black-third-note: #444444;\n\t\t\t\t--white-fifth-note: #f7f7f7;\n\t\t\t\t--black-fifth-note: #444444;\n\t\t\t\t--pitch-white-key: #bfbfbf;\n\t\t\t\t--pitch-black-key: #7a7a7a;\n\n\t\t\t\t--pitch1-background: #ffffff;\n\t\t\t\t--pitch2-background: #ffffff;\n\t\t\t\t--pitch3-background: #ffffff;\n\t\t\t\t--pitch5-background: #ffffff;\n\t\t\t\t--pitch6-background: #ffffff;\n\t\t\t\t--pitch8-background: #ffffff;\n\t\t\t\t--pitch9-background: #ffffff;\n\t\t\t\t--pitch10-background: #ffffff;\n\t\t\t\t--pitch11-background: #ffffff;\n\n\t\t\t\t--pitch-white-key: #bfbfbf;\n\t\t\t\t--pitch-black-key: #7a7a7a;\n\t\t\t\t--octave-scrollbar: #211616;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"nepbox piano\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\n\t\t\t\t--loop-accent: #7744FF;\n\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #444444;\n\n\t\t\t\t--tonic: #ffffff;\n\t\t\t\t--third-note: #ffffff;\n\t\t\t\t--fifth-note: #ffffff;\n\n\t\t\t\t--pitch1-background: #ffffff;\n\t\t\t\t--pitch2-background: #ffffff;\n\t\t\t\t--pitch3-background: #ffffff;\n\t\t\t\t--pitch5-background: #ffffff;\n\t\t\t\t--pitch6-background: #ffffff;\n\t\t\t\t--pitch8-background: #ffffff;\n\t\t\t\t--pitch9-background: #ffffff;\n\t\t\t\t--pitch10-background: #ffffff;\n\t\t\t\t--pitch11-background: #ffffff;\n\n\t\t\t\t--pitch-white-key: #bfbfbf;\n\t\t\t\t--pitch-black-key: #7a7a7a;\n\t\t\t\t--octave-scrollbar: #211616;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"nepbox laffey\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\n\t\t\t\t--loop-accent: #7744FF;\n\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #444444;\n\n\t\t\t\t--tonic: #dbbeed;\n\t\t\t\t--pitch1-background: #1a2182; \n\t\t\t\t--pitch2-background: #1a2182; \n\t\t\t\t--pitch3-background: #1a2182; \n\t\t\t\t--third-note: #1a2182;\n\t\t\t\t--pitch5-background: #1a2182; \n\t\t\t\t--pitch6-background: #1a2182; \n\t\t\t\t--fifth-note: #6b1313;\n\t\t\t\t--pitch8-background: #1a2182; \n\t\t\t\t--pitch9-background: #1a2182; \n\t\t\t\t--pitch10-background: #1a2182; \n\t\t\t\t--pitch11-background: #1a2182;\n\t\t\t\t--octave-scrollbar: #852929;\n\n\t\t\t\t--white-piano-key: #bababa;\n\t\t\t\t--black-piano-key: #444444;\n\t\t\t\t--white-piano-key-text: #484848;\n\n\t\t\t\t--black-piano-key-text: #ffffff;\n\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #424242;\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\n\t\t\t\t--track-editor-bg-noise: #424242;\n\t\t\t\t--track-editor-bg-noise-dim: #000;\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\n\t\t\t\t--track-editor-bg-mod-dim: #000;\n\t\t\t\t--multiplicative-mod-slider: #fff;\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\n\t\t\t\t--indicator-primary: #f00;\n\t\t\t\t--indicator-secondary: #919191;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #626262;\n\t\t\t\t--mute-button-normal: #9a00ff;\n\t\t\t\t--mute-button-mod: #00fff7;\n\t\t\t\t--mod-label-primary: #2b2b2b;\n\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\n\t\t\t\t--pitch1-primary-channel: #f75dff;\n\t\t\t\t--pitch1-secondary-note: #b930a2;\n\t\t\t\t--pitch1-primary-note: #fca5ff;\n\t\t\t\t--pitch2-secondary-channel: #800000;\n\t\t\t\t--pitch2-primary-channel: #f00;\n\t\t\t\t--pitch2-secondary-note: #8c2121;\n\t\t\t\t--pitch2-primary-note: #ff5252;\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\n\t\t\t\t--pitch3-primary-channel: #1792ff;\n\t\t\t\t--pitch3-secondary-note: #005cb3;\n\t\t\t\t--pitch3-primary-note: #00ffe9;\n\t\t\t\t--pitch4-secondary-channel: #a48800;\n\t\t\t\t--pitch4-primary-channel: #fb0;\n\t\t\t\t--pitch4-secondary-note: #9c4100;\n\t\t\t\t--pitch4-primary-note: #ffd84e;\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\n\t\t\t\t--pitch6-primary-note:     #fdff00;\n\t\t\t\t--pitch7-secondary-channel: #046000;\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\n\t\t\t\t--pitch7-secondary-note:    #046000;\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\n\t\t\t\t--pitch8-primary-note:     #d85d00;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #868686;\n\t\t\t\t--noise1-primary-channel: #fff;\n\t\t\t\t--noise1-secondary-note: #868686;\n\t\t\t\t--noise1-primary-note: #fff;\n\t\t\t\t--noise2-secondary-channel: #805300;\n\t\t\t\t--noise2-primary-channel: #ff8c00;\n\t\t\t\t--noise2-secondary-note: #6a3500;\n\t\t\t\t--noise2-primary-note: #a85400;\n\t\t\t\t--mod1-secondary-channel: #6c0000;\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\n\t\t\t\t--mod1-secondary-note: #6c0000;\n\t\t\t\t--mod1-primary-note: #ff3e3e;\n\t\t\t\t--mod2-secondary-channel: #d25a00;\n\t\t\t\t--mod2-primary-channel: #fdff00;\n\t\t\t\t--mod2-secondary-note: #d25a00;\n\t\t\t\t--mod2-primary-note: #fdff00;\n\t\t\t\t--mod3-secondary-channel: #046000;\n\t\t\t\t--mod3-primary-channel: #23ff1b;\n\t\t\t\t--mod3-secondary-note: #046000;\n\t\t\t\t--mod3-primary-note: #23ff1b;\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\n\t\t\t\t--mod4-primary-channel: #0c79ff;\n\t\t\t\t--mod4-secondary-note: #3b2bae;\n\t\t\t\t--mod4-primary-note: #0c79ff;\n\t\t\t\t--disabled-note-primary: #999;\n\t\t\t\t--disabled-note-secondary: #696969;\n\n\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"zefbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #C3593D;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #ff8864;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #06c400;\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\n\t\t\t\t--pitch1-secondary-note:    #06c400;\n\t\t\t\t--pitch1-primary-note:      #06e000;\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\n\t\t\t\t--pitch2-primary-note:      #00edbc;\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\n\t\t\t\t--pitch3-primary-note:      #e0db00;\n\t\t\t\t--pitch4-secondary-channel: #c90000;\n\t\t\t\t--pitch4-primary-channel:   #e20000;\n\t\t\t\t--pitch4-secondary-note:    #c90000;\n\t\t\t\t--pitch4-primary-note:      #e20000;\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\n\t\t\t\t--pitch5-primary-note:      #ef9017;\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\n\t\t\t\t--pitch7-secondary-channel: #D00000;\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\n\t\t\t\t--pitch7-secondary-note:    #D00000;\n\t\t\t\t--pitch7-primary-note:      #FF4444;\n\t\t\t\t--pitch8-secondary-channel: #00C700;\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\n\t\t\t\t--pitch8-secondary-note:    #00C700;\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\n\t\t\t\t--pitch9-secondary-channel: #A88981;\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\n\t\t\t\t--pitch9-secondary-note:    #A88981;\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\n\t\t\t\t--pitch10-primary-note:     #0000EE;\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #B7148E;\n\t\t\t\t--noise5-primary-channel:   #E819B4;\n\t\t\t\t--noise5-secondary-note:    #B7148E;\n\t\t\t\t--noise5-primary-note:      #E819B4;\n       --mod1-secondary-channel: #06c400;\n\t\t\t\t--mod1-primary-channel:   #08ff00;\n\t\t\t\t--mod1-secondary-note:    #06c400;\n\t\t\t\t--mod1-primary-note:      #06e000;\n\t\t\t\t--mod2-secondary-channel: #00bf97;\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\n\t\t\t\t--mod2-secondary-note:    #00bf97;\n\t\t\t\t--mod2-primary-note:      #00edbc;\n\t\t\t\t--mod3-secondary-channel: #b5b000;\n\t\t\t\t--mod3-primary-channel:   #fffa00;\n\t\t\t\t--mod3-secondary-note:    #b5b000;\n\t\t\t\t--mod3-primary-note:      #e0db00;\n\t\t\t\t--mod4-secondary-channel: #c90000;\n\t\t\t\t--mod4-primary-channel:   #e20000;\n\t\t\t\t--mod4-secondary-note:    #c90000;\n\t\t\t\t--mod4-primary-note:      #e20000;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"sandbox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #198195;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #539999;\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch1-secondary-note:    #539999;\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\n\t\t\t\t--pitch2-secondary-channel: #95933C;\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\n\t\t\t\t--pitch2-secondary-note:    #95933C;\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\n\t\t\t\t--pitch3-secondary-channel: #E75566;\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch3-secondary-note:    #E75566;\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\n\t\t\t\t--pitch4-primary-note:      #FF8844;\n\t\t\t\t--pitch5-secondary-channel: #888888;\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\n\t\t\t\t--pitch5-secondary-note:    #888888;\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\n\t\t\t\t--pitch7-secondary-channel: #539999;\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch7-secondary-note:    #539999;\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\n\t\t\t\t--pitch8-secondary-channel: #95933C;\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\n\t\t\t\t--pitch8-secondary-note:    #95933C;\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\n\t\t\t\t--pitch9-secondary-channel: #E75566;\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch9-secondary-note:    #E75566;\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #A18F51;\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\n\t\t\t\t--noise5-secondary-note:    #A18F51;\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\n         \t--mod1-secondary-channel: #539999;\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\n\t\t\t\t--mod1-secondary-note:    #539999;\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\n\t\t\t\t--mod2-secondary-channel: #95933C;\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\n\t\t\t\t--mod2-secondary-note:    #95933C;\n\t\t\t\t--mod2-primary-note:      #B0AD44;\n\t\t\t\t--mod3-secondary-channel: #E75566;\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\n\t\t\t\t--mod3-secondary-note:    #E75566;\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\n\t\t\t\t--mod4-secondary-channel: #8B4343;\n\t\t\t\t--mod4-primary-channel:   #FF8844;\n\t\t\t\t--mod4-secondary-note:    #8B4343;\n\t\t\t\t--mod4-primary-note:      #FF8844;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"harrybox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\n\t\t\t\t--pitch1-primary-note:      #00ffff;\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\n\t\t\t\t--pitch3-secondary-channel: #00adad;\n\t\t\t\t--pitch3-primary-channel:   #00adad;\n\t\t\t\t--pitch3-secondary-note:    #00adad;\n\t\t\t\t--pitch3-primary-note:      #00adad;\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\n\t\t\t\t--pitch4-primary-note:      #008c8c;\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\n\t\t\t\t--pitch5-primary-note:      #005b5b;\n\t\t\t\t--pitch6-secondary-channel: #003333;\n\t\t\t\t--pitch6-primary-channel:   #003333;\n\t\t\t\t--pitch6-secondary-note:    #003333;\n\t\t\t\t--pitch6-primary-note:      #003333;\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\n\t\t\t\t--pitch7-primary-note:      #00ffff;\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\n\t\t\t\t--pitch8-primary-note:      #00ffff;\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\n\t\t\t\t--pitch9-primary-note:      #00ffff;\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\n\t\t\t\t--pitch10-primary-note:     #00ffff;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #991010;\n\t\t\t\t--noise3-primary-channel:   #ff1616;\n\t\t\t\t--noise3-secondary-note:    #991010;\n\t\t\t\t--noise3-primary-note:      #ff1616;\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\n\t\t\t\t--noise4-primary-channel:   #ffffff;\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\n\t\t\t\t--noise4-primary-note:      #ffffff;\n\t\t\t\t--noise5-secondary-channel: #991010;\n\t\t\t\t--noise5-primary-channel:   #ff1616;\n\t\t\t\t--noise5-secondary-note:    #991010;\n\t\t\t\t--noise5-primary-note:      #ff1616;\n         \t--mod1-secondary-channel: #00ffff;\n\t\t\t\t--mod1-primary-channel:   #00ffff;\n\t\t\t\t--mod1-secondary-note:    #00ffff;\n\t\t\t\t--mod1-primary-note:      #00ffff;\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\n\t\t\t\t--mod2-primary-note:      #00d8d8;\n\t\t\t\t--mod3-secondary-channel: #00adad;\n\t\t\t\t--mod3-primary-channel:   #00adad;\n\t\t\t\t--mod3-secondary-note:    #00adad;\n\t\t\t\t--mod3-primary-note:      #00adad;\n\t\t\t\t-mod4-secondary-channel: #008c8c;\n\t\t\t\t--mod4-primary-channel:   #008c8c;\n\t\t\t\t--mod4-secondary-note:    #008c8c;\n\t\t\t\t--mod4-primary-note:      #008c8c;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"brucebox\": `\n\t\t\t:root {\n\t\t\t\tfont: 16px/2 cursive;\n\t\t\t\t--page-margin: #4667CE;\n\t\t\t\t--editor-background: #4667CE;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 3;\n\t\t\t\t\t--noise-channel-limit: 1;\n\t\t\t\t--pitch1-secondary-channel: #bda822;\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\n\t\t\t\t--pitch1-secondary-note:    #bda822;\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\n\t\t\t\t--pitch2-secondary-channel: #612278;\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\n\t\t\t\t--pitch2-secondary-note:    #612278;\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\n\t\t\t\t--pitch3-primary-note:      #ff8844;\n\t\t\t\t--pitch4-secondary-channel: #bda822;\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\n\t\t\t\t--pitch4-secondary-note:    #bda822;\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\n\t\t\t\t--pitch5-secondary-channel: #612278;\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\n\t\t\t\t--pitch5-secondary-note:    #612278;\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\n\t\t\t\t--pitch6-primary-note:      #ff8844;\n\t\t\t\t--pitch7-secondary-channel: #bda822;\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\n\t\t\t\t--pitch7-secondary-note:    #bda822;\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\n\t\t\t\t--pitch8-secondary-channel: #612278;\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\n\t\t\t\t--pitch8-secondary-note:    #612278;\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\n\t\t\t\t--pitch9-primary-note:      #ff8844;\n\t\t\t\t--pitch10-secondary-channel: #bda822;\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\n\t\t\t\t--pitch10-secondary-note:    #bda822;\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage,\n\t\t\t\tdiv.trackContainer div.noSelection\n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tinput, textarea {\n\t\t\t\t\tbackground-color: black !important;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"shitbox 1.0\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t   --page-margin: #252525;\n\t\t\t   --editor-background: #252525;\n\t\t\t   --hover-preview: white;\n\t\t\t   --playhead: white;\n\t\t\t   --primary-text: #6e6e6e;\n\t\t\t   --secondary-text: #999;\n\t\t\t   --inverted-text: black;\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t   --loop-accent: #74f;\n\t\t\t   --link-accent: #945800;\n\t\t\t   --ui-widget-background: #444;\n\t\t\t   --ui-widget-focus: #565656;\n\t\t\t   --pitch-background: #444;\n\t\t\t   --tonic: #864;\n\t\t\t   --fifth-note: #468;\n\t\t\t   --third-note: #486;\n\t\t\t   --white-piano-key: #bbb;\n\t\t\t   --black-piano-key: #444;\n\t\t\t   --white-piano-key-text: #131200;\n\t\t\t   --black-piano-key-text: #fff;\n\t\t\t\t   --use-color-formula: false;\n\t\t\t\t   --track-editor-bg-pitch: #444;\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\n\t\t\t\t   --track-editor-bg-noise: #444;\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\n\t\t\t\t   --track-editor-bg-mod: #234;\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\n\t\t\t\t   --multiplicative-mod-slider: #456;\n\t\t\t\t   --overwriting-mod-slider: #654;\n\t\t\t\t   --indicator-primary: #74f;\n\t\t\t\t   --indicator-secondary: #444;\n\t\t\t\t   --select2-opt-group: #585858;\n\t\t\t\t   --input-box-outline: #333;\n\t\t\t\t   --mute-button-normal: #ffa033;\n\t\t\t\t   --mute-button-mod: #9a6bff;\n\t\t\t\t   --noise-channel-limit: 3;\n\t\t\t   \t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\n\t\t\t   --noise1-primary-note:      #E0E0E0;\n\t\t\t   --noise2-secondary-channel: #996633;\n\t\t\t   --noise2-primary-channel:   #DDAA77;\n\t\t\t   --noise2-secondary-note:    #CC9966;\n\t\t\t   --noise2-primary-note:      #F0D0BB;\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\n\t\t\t   --noise3-primary-channel:   #77AADD;\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\n\t\t\t   --noise3-primary-note:      #BBD7FF;\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\n\t\t\t   --noise4-primary-channel:   #AF82D2;\n\t\t\t   --noise4-secondary-note:    #9E71C1;\n\t\t\t   --noise4-primary-note:      #D4C1EA;\n\t\t\t   --noise5-secondary-channel: #607837;\n\t\t\t   --noise5-primary-channel:   #A2BB77;\n\t\t\t   --noise5-secondary-note:    #91AA66;\n\t\t\t   --noise5-primary-note:      #C5E2B2;\n\t\t --mod1-secondary-channel:   #339955;\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\n\t\t\t\t   --mod1-primary-note:        #cdffee;\n\t\t\t\t   --mod2-secondary-channel:   #993355;\n\t\t\t\t   --mod2-primary-channel:     #f04960;\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\n\t\t\t\t   --mod3-secondary-channel:   #553399;\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\n\t\t\t\t   --mod-label-primary:        #999;\n\t\t\t\t   --mod-label-secondary-text: #333;\n\t\t\t\t   --mod-label-primary-text:   black;\n\t\t\t\t   --disabled-note-primary:    #999;\n\t\t\t\t   --disabled-note-secondary:  #666;\n\t\t\t\t   --mod-title: #6e6e6e;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t   width: 8px !important;\n\t\t\t\t }\n\n\t\t\t   button.playButton {\n\t\t\t\t   width: 80px;\n\t\t\t   }\n\t\t\t   button.prevBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t\t   left:-5px;\n\t\t\t   }\n\t\t\t   button.nextBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t   }\n\n\t\t\t   span input, \n\t\t\t   div.harmonics svg,\n\t\t\t   div.spectrum svg,\n\t\t\t   div.filterEditor svg,\n\t\t\t   div.fadeInOut svg,\n\t\t\t   div.loopEditor svg,\n\t\t\t   svg#firstImage \n\t\t\t   {\n\t\t\t\t   background: black !important;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor {\n\t\t\t\t   line-height: 1.25;\n\t\t\t   }\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t   #text-content {\n\t\t\t\t   font-size: 32px;\n\t\t\t\t   line-height: 40px;\n\t\t\t   }\n\n\t\t\t   #text-content > section > h1 {\n\t\t\t\t   color: #C8C8C8;\n\t\t\t\t   }\n\n\t\t\t   html {\n\t\t\t\t   font-family: monospace !important;\n\t\t\t\t   }\n\t\t\t   #octaveScrollBarContainer {\n\t\t\t   background-color: black;\n\t\t\t   }\t\n\t\t   `,\n\t\t\t \"shitbox 2.0\": `\n\t\t\t:root {\n\t\t\t--page-margin: maroon;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: firebrick;\n\t\t\t\t\t--primary-text: silver;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\n\t\t\t\t\t--loop-accent: #841;\n\t\t\t\t\t--link-accent: #841;\n\t\t\t\t\t--ui-widget-background: #800;\n\t\t\t\t\t--ui-widget-focus: #a00;\n\t\t\t\t\t--pitch-background: #700;\n\t\t\t\t\t--tonic: #522;\n\t\t\t\t\t--fifth-note: #f75;\n\t\t\t\t\t--third-note: #9d3535;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n         --mod1-secondary-channel: #7e4a35;\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\n\t\t\t\t\t--mod1-primary-note:      #f09571;\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\n\t\t\t\t\t--mod2-primary-note:      #fae196;\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\n\t\t\t\t\t--mod4-secondary-channel: #838060;\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\n\t\t\t\t\t--mod4-secondary-note:    #838060;\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"shitbox 3.0\": `\n\t\t\t\n\t\t\t :root {\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: #C8C8C8;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #945800;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t--mod-title: #C8C8C8;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t\twidth: 8px !important;\n\t\t\t\t  }\n\n\t\t\t\tbutton.playButton {\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\tbutton.prevBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\tleft:-5px;\n\t\t\t\t}\n\t\t\t\tbutton.nextBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage \n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\tline-height: 1.25;\n\t\t\t\t}\n\n\t\t\t\t#text-content {\n\t\t\t\t\tfont-size: 32px;\n\t\t\t\t\tline-height: 40px;\n\t\t\t\t}\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: #C8C8C8;\n\t\t\t\t\t}\n\n\t\t\t\thtml {\n\t\t\t\t\tfont-family: monospace !important;\n\t\t\t\t\t}\n\t\t\t\t#octaveScrollBarContainer {\n\t\t\t\tbackground-color: black;\n\t\t\t\t}\t\n\t\t\t`,\n\t\t\t\"shitbox ModBox 2.0\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t   --page-margin: #252525;\n\t\t\t   --editor-background: #252525;\n\t\t\t   --hover-preview: white;\n\t\t\t   --playhead: white;\n\t\t\t   --primary-text: #C8C8C8;\n\t\t\t   --secondary-text: #999;\n\t\t\t   --inverted-text: black;\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t   --loop-accent: #00ff00;\n\t\t\t   --link-accent: #945800;\n\t\t\t   --ui-widget-background: #444;\n\t\t\t   --ui-widget-focus: #565656;\n\t\t\t   --pitch-background: #444;\n\t\t\t   --tonic: #c4ffa3;\n\t\t\t\t--fifth-note: #96fffb;\n\t\t\t\t--third-note: #9698ff;\n\t\t\t\t--octave-scrollbar: #00ff00;\n\t\t\t   --white-piano-key: #bbb;\n\t\t\t   --black-piano-key: #444;\n\t\t\t   --white-piano-key-text: #131200;\n\t\t\t   --black-piano-key-text: #fff;\n\t\t\t\t   --use-color-formula: false;\n\t\t\t\t   --track-editor-bg-pitch: #444;\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\n\t\t\t\t   --track-editor-bg-noise: #444;\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\n\t\t\t\t   --track-editor-bg-mod: #234;\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\n\t\t\t\t   --multiplicative-mod-slider: #456;\n\t\t\t\t   --overwriting-mod-slider: #654;\n\t\t\t\t   --indicator-primary: #74f;\n\t\t\t\t   --indicator-secondary: #444;\n\t\t\t\t   --select2-opt-group: #585858;\n\t\t\t\t   --input-box-outline: #333;\n\t\t\t\t   --mute-button-normal: #ffa033;\n\t\t\t\t   --mute-button-mod: #9a6bff;\n\t\t\t\t   \n\t\t\t\t   --noise-channel-limit: 3;\n\t\t\t  --pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t   --mod-label-primary:        #999;\n\t\t\t\t   --mod-label-secondary-text: #333;\n\t\t\t\t   --mod-label-primary-text:   black;\n\t\t\t\t   --disabled-note-primary:    #999;\n\t\t\t\t   --disabled-note-secondary:  #666;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t   width: 8px !important;\n\t\t\t\t }\n\n\t\t\t   button.playButton {\n\t\t\t\t   width: 80px;\n\t\t\t   }\n\t\t\t   button.prevBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t\t   left:-5px;\n\t\t\t   }\n\t\t\t   button.nextBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t   }\n\n\t\t\t\t#octaveScrollBarContainer {\n\t\t\t\tbackground-color: black;\n\t\t\t\t}\n\n\t\t\t   span input, \n\t\t\t   div.harmonics svg,\n\t\t\t   div.spectrum svg,\n\t\t\t   div.filterEditor svg,\n\t\t\t   div.fadeInOut svg,\n\t\t\t   div.loopEditor svg,\n\t\t\t   svg#firstImage \n\t\t\t   {\n\t\t\t\t   background: black !important;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor {\n\t\t\t\t   line-height: 1.25;\n\t\t\t   }\n\n\t\t\t   #text-content {\n\t\t\t\t   font-size: 32px;\n\t\t\t\t   line-height: 40px;\n\t\t\t   }\n\n\t\t\t   #text-content > section > h1 {\n\t\t\t\t   color: #C8C8C8;\n\t\t\t\t   }\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\t\t\t\t   \n\t\t\t   html {\n\t\t\t\t   font-family: monospace !important;\n\t\t\t\t   }\n\t\t   `,\n\t\t\t\"shitbox Realm\": `\n\t\t\t:root {\n\t\t\t   --page-margin: #252525;\n\t\t\t   --editor-background: #252525;\n\t\t\t   --hover-preview: white;\n\t\t\t   --playhead: white;\n\t\t\t   --primary-text: #6e6e6e;\n\t\t\t   --secondary-text: #999;\n\t\t\t   --inverted-text: black;\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t   --loop-accent: #673daf;\n\t\t\t   --link-accent: #945800;\n\t\t\t   --ui-widget-background: #444;\n\t\t\t   --ui-widget-focus: #565656;\n\t\t\t   --pitch-background: #444;\n\t\t\t   --tonic: #673daf;\n\t\t\t   --fifth-note: #673daf;\n\t\t\t   --third-note: #673daf;\n\t\t\t   --pitch1-background: #673daf;\n\t\t\t   --pitch2-background: #673daf;\n\t\t\t   --pitch3-background: #673daf;\n\t\t\t   --pitch5-background: #673daf;\n\t\t\t   --pitch6-background: #673daf;\n\t\t\t   --pitch8-background: #673daf;\n\t\t\t   --pitch9-background: #673daf;\n\t\t\t   --pitch10-background: #673daf;\n\t\t\t   --pitch11-background: #673daf;\n\t\t\t   --octave-scrollbar: #673daf;\n\t\t\t   --white-piano-key: #bbb;\n\t\t\t   --black-piano-key: #444;\n\t\t\t   --white-piano-key-text: #131200;\n\t\t\t   --black-piano-key-text: #fff;\n\t\t\t\t   --use-color-formula: false;\n\t\t\t\t   --track-editor-bg-pitch: #444;\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\n\t\t\t\t   --track-editor-bg-noise: #444;\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\n\t\t\t\t   --track-editor-bg-mod: #234;\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\n\t\t\t\t   --multiplicative-mod-slider: #456;\n\t\t\t\t   --overwriting-mod-slider: #654;\n\t\t\t\t   --indicator-primary: #74f;\n\t\t\t\t   --indicator-secondary: #444;\n\t\t\t\t   --select2-opt-group: #585858;\n\t\t\t\t   --input-box-outline: #333;\n\t\t\t\t   --mute-button-normal: #ffa033;\n\t\t\t\t   --mute-button-mod: #9a6bff;\n\t\t\t\t   \n\t\t\t\t   --noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t   --mod-label-primary:        #999;\n\t\t\t\t   --mod-label-secondary-text: #333;\n\t\t\t\t   --mod-label-primary-text:   black;\n\t\t\t\t   --disabled-note-primary:    #999;\n\t\t\t\t   --disabled-note-secondary:  #666;\n\t\t\t\t   --mod-title: #6e6e6e;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t   width: 8px !important;\n\t\t\t\t }\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t   button.playButton {\n\t\t\t\t   width: 80px;\n\t\t\t   }\n\t\t\t   button.prevBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t\t   left:-5px;\n\t\t\t   }\n\t\t\t   button.nextBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t   }\n\n\t\t\t   span input, \n\t\t\t   div.harmonics svg,\n\t\t\t   div.spectrum svg,\n\t\t\t   div.filterEditor svg,\n\t\t\t   div.fadeInOut svg,\n\t\t\t   div.loopEditor svg,\n\t\t\t   svg#firstImage \n\t\t\t   {\n\t\t\t\t   background: black !important;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor {\n\t\t\t\t   line-height: 1.25;\n\t\t\t   }\n\n\t\t\t\t#octaveScrollBarContainer {\n\t\t\t\tbackground-color: black;\n\t\t\t\t}\n\n\t\t\t   #text-content {\n\t\t\t\t   font-size: 32px;\n\t\t\t\t   line-height: 40px;\n\t\t\t   }\n\n\t\t\t   #text-content > section > h1 {\n\t\t\t\t   color: #C8C8C8;\n\t\t\t\t   }\n\n\t\t\t   html {\n\t\t\t\t   font: monospace !important;\n\t\t\t\t   }\n\t\t   `,\n\t\t\t\"shitbox4\": `\n\t\t\t:root {\n\t\t\t   font: 20px/2 monospace;\n\t\t\t   --page-margin: #252525;\n\t\t\t   --editor-background: #252525;\n\t\t\t   --hover-preview: white;\n\t\t\t   --playhead: white;\n\t\t\t   --primary-text: #C8C8C8;\n\t\t\t   --secondary-text: #999;\n\t\t\t   --inverted-text: black;\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t   --loop-accent: #74f;\n\t\t\t   --link-accent: #945800;\n\t\t\t   --ui-widget-background: #444;\n\t\t\t   --ui-widget-focus: #777;\n\t\t\t   --pitch-background: #444;\n\t\t\t   --tonic: #864;\n\t\t\t   --fifth-note: #468;\n\t\t\t   --third-note: #486;\n\t\t\t   --white-piano-key: #bbb;\n\t\t\t   --black-piano-key: #444;\n\t\t\t   --white-piano-key-text: #131200;\n\t\t\t   --black-piano-key-text: #fff;\n\t\t\t\t   --use-color-formula: false;\n\t\t\t\t   --track-editor-bg-pitch: #444;\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\n\t\t\t\t   --track-editor-bg-noise: #444;\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\n\t\t\t\t   --track-editor-bg-mod: #234;\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\n\t\t\t\t   --multiplicative-mod-slider: #456;\n\t\t\t\t   --overwriting-mod-slider: #654;\n\t\t\t\t   --indicator-primary: #74f;\n\t\t\t\t   --indicator-secondary: #444;\n\t\t\t\t   --select2-opt-group: #585858;\n\t\t\t\t   --input-box-outline: #333;\n\t\t\t\t   --mute-button-normal: #ffa033;\n\t\t\t\t   --mute-button-mod: #9a6bff;\n\t\t\t\t   --pitch-channel-limit: 6;\n\t\t\t\t   --noise-channel-limit: 3;\n\t\t\t   --pitch1-secondary-channel: #0099A1;\n\t\t\t   --pitch1-primary-channel:   #25F3FF;\n\t\t\t   --pitch1-secondary-note:    #00BDC7;\n\t\t\t   --pitch1-primary-note:      #92F9FF;\n\t\t\t   --pitch2-secondary-channel: #A1A100;\n\t\t\t   --pitch2-primary-channel:   #FFFF25;\n\t\t\t   --pitch2-secondary-note:    #C7C700;\n\t\t\t   --pitch2-primary-note:      #FFFF92;\n\t\t\t   --pitch3-secondary-channel: #C75000;\n\t\t\t   --pitch3-primary-channel:   #FF9752;\n\t\t\t   --pitch3-secondary-note:    #FF771C;\n\t\t\t   --pitch3-primary-note:      #FFCDAB;\n\t\t\t   --pitch4-secondary-channel: #00A100;\n\t\t\t   --pitch4-primary-channel:   #50FF50;\n\t\t\t   --pitch4-secondary-note:    #00C700;\n\t\t\t   --pitch4-primary-note:      #A0FFA0;\n\t\t\t   --pitch5-secondary-channel: #D020D0;\n\t\t\t   --pitch5-primary-channel:   #FF90FF;\n\t\t\t   --pitch5-secondary-note:    #E040E0;\n\t\t\t   --pitch5-primary-note:      #FFC0FF;\n\t\t\t   --pitch6-secondary-channel: #7777B0;\n\t\t\t   --pitch6-primary-channel:   #A0A0FF;\n\t\t\t   --pitch6-secondary-note:    #8888D0;\n\t\t\t   --pitch6-primary-note:      #D0D0FF;\n\t\t\t   --pitch7-secondary-channel: #8AA100;\n\t\t\t   --pitch7-primary-channel:   #DEFF25;\n\t\t\t   --pitch7-secondary-note:    #AAC700;\n\t\t\t   --pitch7-primary-note:      #E6FF92;\n\t\t\t   --pitch8-secondary-channel: #DF0019;\n\t\t\t   --pitch8-primary-channel:   #FF98A4;\n\t\t\t   --pitch8-secondary-note:    #FF4E63;\n\t\t\t   --pitch8-primary-note:      #FFB2BB;\n\t\t\t   --pitch9-secondary-channel: #00A170;\n\t\t\t   --pitch9-primary-channel:   #50FFC9;\n\t\t\t   --pitch9-secondary-note:    #00C78A;\n\t\t\t   --pitch9-primary-note:      #83FFD9;\n\t\t\t   --pitch10-secondary-channel:#A11FFF;\n\t\t\t   --pitch10-primary-channel:  #CE8BFF;\n\t\t\t   --pitch10-secondary-note:   #B757FF;\n\t\t\t   --pitch10-primary-note:     #DFACFF;\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\n\t\t\t   --noise1-primary-note:      #E0E0E0;\n\t\t\t   --noise2-secondary-channel: #996633;\n\t\t\t   --noise2-primary-channel:   #DDAA77;\n\t\t\t   --noise2-secondary-note:    #CC9966;\n\t\t\t   --noise2-primary-note:      #F0D0BB;\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\n\t\t\t   --noise3-primary-channel:   #77AADD;\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\n\t\t\t   --noise3-primary-note:      #BBD7FF;\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\n\t\t\t   --noise4-primary-channel:   #AF82D2;\n\t\t\t   --noise4-secondary-note:    #9E71C1;\n\t\t\t   --noise4-primary-note:      #D4C1EA;\n\t\t\t   --noise5-secondary-channel: #607837;\n\t\t\t   --noise5-primary-channel:   #A2BB77;\n\t\t\t   --noise5-secondary-note:    #91AA66;\n\t\t\t   --noise5-primary-note:      #C5E2B2;\n\t\t --mod1-secondary-channel:   #339955;\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\n\t\t\t\t   --mod1-primary-note:        #cdffee;\n\t\t\t\t   --mod2-secondary-channel:   #993355;\n\t\t\t\t   --mod2-primary-channel:     #f04960;\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\n\t\t\t\t   --mod3-secondary-channel:   #553399;\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\n\t\t\t\t   --mod-label-primary:        #999;\n\t\t\t\t   --mod-label-secondary-text: #333;\n\t\t\t\t   --mod-label-primary-text:   black;\n\t\t\t\t   --disabled-note-primary:    #999;\n\t\t\t\t   --disabled-note-secondary:  #666;\n\t\t\t   }\n\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t   width: 8px !important;\n\t\t\t\t }\n\n\t\t\t   button.playButton {\n\t\t\t\t   width: 80px;\n\t\t\t   }\n\t\t\t   button.prevBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t\t   left:-5px;\n\t\t\t   }\n\t\t\t   button.nextBarButton {\n\t\t\t\t   width: 40px;\n\t\t\t   }\n\n\t\t\t   span input, \n\t\t\t   div.harmonics svg,\n\t\t\t   div.spectrum svg,\n\t\t\t   div.filterEditor svg,\n\t\t\t   div.fadeInOut svg,\n\t\t\t   div.loopEditor svg,\n\t\t\t   svg#firstImage \n\t\t\t   {\n\t\t\t\t   background: black !important;\n\t\t\t   }\n\n\t\t\t   div.visualizer {\n\t\t\t\ttransform: skew(30deg,20deg) scale(0.5);\n\t\t\t\t}\n\n\t\t\t   .beepboxEditor {\n\t\t\t\t   line-height: 1.25;\n\t\t\t   }\n\n\t\t\t   #text-content {\n\t\t\t\t   font-size: 32px;\n\t\t\t\t   line-height: 40px;\n\t\t\t   }\n\n\t\t\t   #text-content > section > h1 {\n\t\t\t\t   color: #C8C8C8;\n\t\t\t\t   }\n\t\t   `,\n\t\t\t\"nerdbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 9;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #139620;\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\n\t\t\t\t--pitch1-secondary-note:    #139620;\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\n\t\t\t\t--pitch2-secondary-channel: #109986;\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\n\t\t\t\t--pitch2-secondary-note:    #109986;\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\n\t\t\t\t--pitch3-secondary-channel: #127296;\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\n\t\t\t\t--pitch3-secondary-note:    #127296;\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\n\t\t\t\t--pitch5-secondary-channel: #a52491;\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\n\t\t\t\t--pitch5-secondary-note:    #a52491;\n\t\t\t\t--pitch5-primary-note:      #af3221;\n\t\t\t\t--pitch6-secondary-channel: #af3221;\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\n\t\t\t\t--pitch6-secondary-note:    #af3221;\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch7-primary-note:      #ffa216;\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch8-primary-note:      #ffa216;\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\n\t\t\t\t--pitch9-primary-note:      #ebff19;\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\n\t\t\t\t--noise1-secondary-channel: #68706f;\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\n\t\t\t\t--noise1-secondary-note:    #68706f;\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\n\t\t\t\t--noise2-secondary-channel: #665c64;\n\t\t\t\t--noise2-primary-channel:   #a396a1;\n\t\t\t\t--noise2-secondary-note:    #665c64;\n\t\t\t\t--noise2-primary-note:      #a396a1;\n\t\t\t\t--noise3-secondary-channel: #60605a;\n\t\t\t\t--noise3-primary-channel:   #afaea3;\n\t\t\t\t--noise3-secondary-note:    #60605a;\n\t\t\t\t--noise3-primary-note:      #afaea3;\n\t\t\t--noise4-secondary-channel: #665c64;\n\t\t\t--noise4-primary-channel:   #a396a1;\n\t\t\t\t--noise4-secondary-note:    #665c64;\n\t\t\t\t--noise4-primary-note:      #a396a1;\n\t\t\t\t--noise5-secondary-channel: #60605a;\n\t\t\t\t--noise5-primary-channel:   #afaea3;\n\t\t\t\t--noise5-secondary-note:    #60605a;\n\t\t\t\t--noise5-primary-note:      #afaea3;\n         --mod1-secondary-channel: #139620;\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\n\t\t\t\t--mod1-secondary-note:    #139620;\n\t\t\t\t--mod1-primary-note:      #25ff3a;\n\t\t\t\t--mod2-secondary-channel: #109986;\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\n\t\t\t\t--mod2-secondary-note:    #109986;\n\t\t\t\t--mod2-primary-note:      #1cffe0;\n\t\t\t\t--mod3-secondary-channel: #127296;\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\n\t\t\t\t--mod3-secondary-note:    #127296;\n\t\t\t\t--mod3-primary-note:      #21c3ff;\n\t\t\t\t--mod4-secondary-channel: #6038a5;\n\t\t\t\t--mod4-primary-channel:   #9456ff;\n\t\t\t\t--mod4-secondary-note:    #6038a5;\n\t\t\t\t--mod4-primary-note:      #ff35e0;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\"nepbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\t\t\t\t--loop-accent: #7744FF;\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #0a2d44;\n\t\t\t\t--tonic: #9150ff;\n\t\t\t\t--fifth-note: #900;\n\t\t\t\t--third-note: #258822;\n\t\t\t\t--white-piano-key: #353535;\n\t\t\t\t--black-piano-key: #fff;\n\t\t\t\t--white-piano-key-text: #fff;\n\t\t\t\t--black-piano-key-text: #000;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #424242;\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\n\t\t\t\t--track-editor-bg-noise: #424242;\n\t\t\t\t--track-editor-bg-noise-dim: #000;\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\n\t\t\t\t--track-editor-bg-mod-dim: #000;\n\t\t\t\t--multiplicative-mod-slider: #fff;\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\n\t\t\t\t--indicator-primary: #f00;\n\t\t\t\t--indicator-secondary: #919191;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #626262;\n\t\t\t\t--mute-button-normal: #9a00ff;\n\t\t\t\t--mute-button-mod: #00fff7;\n\t\t\t\t--mod-label-primary: #2b2b2b;\n\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\n\t\t\t\t--pitch1-primary-channel: #f75dff;\n\t\t\t\t--pitch1-secondary-note: #b930a2;\n\t\t\t\t--pitch1-primary-note: #fca5ff;\n\t\t\t\t--pitch2-secondary-channel: #800000;\n\t\t\t\t--pitch2-primary-channel: #f00;\n\t\t\t\t--pitch2-secondary-note: #8c2121;\n\t\t\t\t--pitch2-primary-note: #ff5252;\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\n\t\t\t\t--pitch3-primary-channel: #1792ff;\n\t\t\t\t--pitch3-secondary-note: #005cb3;\n\t\t\t\t--pitch3-primary-note: #00ffe9;\n\t\t\t\t--pitch4-secondary-channel: #a48800;\n\t\t\t\t--pitch4-primary-channel: #fb0;\n\t\t\t\t--pitch4-secondary-note: #9c4100;\n\t\t\t\t--pitch4-primary-note: #ffd84e;\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\n\t\t\t\t--pitch6-primary-note:     #fdff00;\n\t\t\t\t--pitch7-secondary-channel: #046000;\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\n\t\t\t\t--pitch7-secondary-note:    #046000;\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\n\t\t\t\t--pitch8-primary-note:     #d85d00;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--pitch11-secondary-channel:#891a60;\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\n\t\t\t\t--pitch11-secondary-note:   #891a60;\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\n\t\t\t\t--pitch12-primary-note:     #c26afc;\n\t\t\t\t--noise1-secondary-channel: #868686;\n\t\t\t\t--noise1-primary-channel: #fff;\n\t\t\t\t--noise1-secondary-note: #868686;\n\t\t\t\t--noise1-primary-note: #fff;\n\t\t\t\t--noise2-secondary-channel: #805300;\n\t\t\t\t--noise2-primary-channel: #ff8c00;\n\t\t\t\t--noise2-secondary-note: #6a3500;\n\t\t\t\t--noise2-primary-note: #a85400;\n\t\t\t\t--mod1-secondary-channel: #6c0000;\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\n\t\t\t\t--mod1-secondary-note: #6c0000;\n\t\t\t\t--mod1-primary-note: #ff3e3e;\n\t\t\t\t--mod2-secondary-channel: #d25a00;\n\t\t\t\t--mod2-primary-channel: #fdff00;\n\t\t\t\t--mod2-secondary-note: #d25a00;\n\t\t\t\t--mod2-primary-note: #fdff00;\n\t\t\t\t--mod3-secondary-channel: #046000;\n\t\t\t\t--mod3-primary-channel: #23ff1b;\n\t\t\t\t--mod3-secondary-note: #046000;\n\t\t\t\t--mod3-primary-note: #23ff1b;\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\n\t\t\t\t--mod4-primary-channel: #0c79ff;\n\t\t\t\t--mod4-secondary-note: #3b2bae;\n\t\t\t\t--mod4-primary-note: #0c79ff;\n\t\t\t\t--disabled-note-primary: #999;\n\t\t\t\t--disabled-note-secondary: #696969;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"cardboardbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0f0700;\n--editor-background: #0f0700;\n--hover-preview: #75461d;\n--playhead: #75461d;\n--primary-text: #ddd;\n--secondary-text: #8e695b;\n--inverted-text: black;\n--text-selection: #75461d;\n--box-selection-fill: rgba(117, 70, 29,0.5);\n--loop-accent: #75461d;\n--link-accent: #75461d;\n--ui-widget-background: #574a3e;\n--ui-widget-focus: #756453;\n--pitch-background: #361900;\n--tonic: #fdba9a;\n--fifth-note: #7f78d2;\n--third-note: #886444;\n--white-piano-key: #bbb;\n--black-piano-key: #444;\n--use-color-formula: false;\n--pitch-channel-limit: 10;\n--track-editor-bg-pitch: #444;\n--track-editor-bg-pitch-dim: #333;\n--track-editor-bg-noise: #444;\n--track-editor-bg-noise-dim: #333;\n--track-editor-bg-mod: #234;\n--track-editor-bg-mod-dim: #123;\n--multiplicative-mod-slider: #456;\n--overwriting-mod-slider: #654;\n--indicator-primary: #74f;\n--indicator-secondary: #444;\n--select2-opt-group: #585858;\n--input-box-outline: #333;\n--mute-button-normal: #ffa033;\n--mute-button-mod: #9a6bff;\n--pitch1-secondary-channel: #798566;\n--pitch1-primary-channel: #9dab86;\n--pitch1-secondary-note: #798566;\n--pitch1-primary-note: #9dab86;\n--pitch2-secondary-channel: #a6733d;\n--pitch2-primary-channel: #e6a157;\n--pitch2-secondary-note: #a6733d;\n--pitch2-primary-note: #e6a157;\n--pitch3-secondary-channel: #874c27;\n--pitch3-primary-channel: #eb8242;\n--pitch3-secondary-note: #874c27;\n--pitch3-primary-note: #eb8242;\n--pitch4-secondary-channel: #395866;\n--pitch4-primary-channel: #537d91;\n--pitch4-secondary-note: #395866;\n--pitch4-primary-note: #537d91;\n--pitch5-secondary-channel: #779992;\n--pitch5-primary-channel: #a4d1c8;\n--pitch5-secondary-note: #779992;\n--pitch5-primary-note: #a4d1c8;\n--pitch6-secondary-channel: #7777b0;\n--pitch6-primary-channel: #a0a0ff;\n--pitch6-secondary-note: #8888d0;\n--pitch6-primary-note: #d0d0ff;\n--pitch7-secondary-channel: #300707;\n--pitch7-primary-channel: #560d0d;\n--pitch7-secondary-note: #300707;\n--pitch7-primary-note: #560d0d;\n--pitch8-secondary-channel: #486312;\n--pitch8-primary-channel: #76a21e;\n--pitch8-secondary-note: #486312;\n--pitch8-primary-note: #76a21e;\n--pitch9-secondary-channel: #4a1242;\n--pitch9-primary-channel: #721b65;\n--pitch9-secondary-note: #4a1242;\n--pitch9-primary-note: #721b65;\n--pitch10-secondary-channel: #7a312d;\n--pitch10-primary-channel: #f8615a;\n--pitch10-secondary-note: #7a312d;\n--pitch10-primary-note: #f8615a;\n--noise1-secondary-channel: #5f6582;\n--noise1-primary-channel: #a6b1e1;\n--noise1-secondary-note: #5f6582;\n--noise1-primary-note: #a6b1e1;\n--noise2-secondary-channel: #996633;\n--noise2-primary-channel: #ddaa77;\n--noise2-secondary-note: #cc9966;\n--noise2-primary-note: #f0d0bb;\n--noise3-secondary-channel: #4a6d8f;\n--noise3-primary-channel: #77aadd;\n--noise3-secondary-note: #6f9fcf;\n--noise3-primary-note: #bbd7ff;\n--noise4-secondary-channel: #6B3E8E;\n--noise4-primary-channel: #AF82D2;\n--noise4-secondary-note: #9E71C1;\n--noise4-primary-note: #D4C1EA;\n--noise5-secondary-channel: #996633;\n--noise5-primary-channel: #ddaa77;\n--noise5-secondary-note: #cc9966;\n--noise5-primary-note: #f0d0bb;\n--mod1-secondary-channel: #339955;\n--mod1-primary-channel: #77fc55;\n--mod1-secondary-note: #77ff8a;\n--mod1-primary-note: #cdffee;\n--mod2-secondary-channel: #993355;\n--mod2-primary-channel: #f04960;\n--mod2-secondary-note: #f057a0;\n--mod2-primary-note: #ffb8de;\n--mod3-secondary-channel: #553399;\n--mod3-primary-channel: #8855fc;\n--mod3-secondary-note: #aa64ff;\n--mod3-primary-note: #f8ddff;\n--mod4-secondary-channel: #a86436;\n--mod4-primary-channel: #c8a825;\n--mod4-secondary-note: #e8ba46;\n--mod4-primary-note: #fff6d3;\n--mod-label-primary: #999;\n--mod-label-secondary-text: #333;\n--mod-label-primary-text: black;\n\n\t\t\t\n\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"blubox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #024ACA;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--third-note: #446288;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #886eae;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\n\t\t\t\t\t--mod-label-primary:        #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text:   white;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\"dogebox classic\": `\n\t\t\t\t:root {\n\t\t\t--page-margin: #0d0063;\n\t\t\t--editor-background: #0D0063;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #322c59;\n\t\t\t--tonic: #1c1933;\n\t\t\t--fifth-note: #7b74ad;\n\t\t\t--third-note: #445888;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t--pitch1-primary-channel: #fcf403;\n\t\t\t--pitch1-secondary-note: #c7c700;\n\t\t\t--pitch1-primary-note: #fcf403;\n\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t--pitch2-primary-channel: #ff00ee;\n\t\t\t--pitch2-secondary-note: #9400b5;\n\t\t\t--pitch2-primary-note: #ff00ee;\n\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t--pitch3-primary-channel: #ffc6a1;\n\t\t\t--pitch3-secondary-note: #b37466;\n\t\t\t--pitch3-primary-note: #ffc6a1;\n\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t--pitch4-primary-channel: #50ff50;\n\t\t\t--pitch4-secondary-note: #00c700;\n\t\t\t--pitch4-primary-note: #a0ffa0;\n\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t--pitch5-primary-channel: #ff90ff;\n\t\t\t--pitch5-secondary-note: #e040e0;\n\t\t\t--pitch5-primary-note: #ffc0ff;\n\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t--pitch6-primary-channel: #a0a0ff;\n\t\t\t--pitch6-secondary-note: #8888d0;\n\t\t\t--pitch6-primary-note: #d0d0ff;\n\t\t\t--pitch7-secondary-channel: #c7ac00;\n\t\t\t--pitch7-primary-channel: #fcf403;\n\t\t\t--pitch7-secondary-note: #c7c700;\n\t\t\t--pitch7-primary-note: #fcf403;\n\t\t\t--pitch8-secondary-channel: #9400b5;\n\t\t\t--pitch8-primary-channel: #ff00ee;\n\t\t\t--pitch8-secondary-note: #9400b5;\n\t\t\t--pitch8-primary-note: #ff00ee;\n\t\t\t--pitch9-secondary-channel: #b37466;\n\t\t\t--pitch9-primary-channel: #ffc6a1;\n\t\t\t--pitch9-secondary-note: #b37466;\n\t\t\t--pitch9-primary-note: #ffc6a1;\n\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t--pitch10-primary-channel: #50ff50;\n\t\t\t--pitch10-secondary-note: #00c700;\n\t\t\t--pitch10-primary-note: #a0ffa0;\n\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t--noise1-primary-channel: #cee9eb;\n\t\t\t--noise1-secondary-note: #95acad;\n\t\t\t--noise1-primary-note: #cee9eb;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel: #ddaa77;\n\t\t\t--noise2-secondary-note: #cc9966;\n\t\t\t--noise2-primary-note: #f0d0bb;\n\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t--noise3-primary-channel: #77aadd;\n\t\t\t--noise3-secondary-note: #6f9fcf;\n\t\t\t--noise3-primary-note: #bbd7ff;\n\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n      \t \t--mod1-secondary-channel: #c7ac00;\n\t\t\t--mod1-primary-channel: #fcf403;\n\t\t\t--mod1-secondary-note: #c7c700;\n\t\t\t--mod1-primary-note: #fcf403;\n\t\t\t--mod2-secondary-channel: #9400b5;\n\t\t\t--mod2-primary-channel: #ff00ee;\n\t\t\t--mod2-secondary-note: #9400b5;\n\t\t\t--mod2-primary-note: #ff00ee;\n\t\t\t--mod3-secondary-channel: #b37466;\n\t\t\t--mod3-primary-channel: #ffc6a1;\n\t\t\t--mod3-secondary-note: #b37466;\n\t\t\t--mod3-primary-note: #ffc6a1;\n\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t--mod4-primary-channel: #50ff50;\n\t\t\t--mod4-secondary-note: #00c700;\n\t\t\t--mod4-primary-note: #a0ffa0;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t  \"dogebox dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #000;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: #000;\n\t\t\t\t\t--box-selection-fill: #000;\n\t\t\t\t\t--loop-accent: #000;\n\t\t\t\t\t--link-accent: #000;\n\t\t\t\t\t--ui-widget-background: #000;\n\t\t\t\t\t--ui-widget-focus: #000;\n\t\t\t\t\t--pitch-background: #000;\n\t\t\t\t\t--tonic: #000;\n\t\t\t\t\t--fifth-note: #000;\n\t\t\t\t\t--third-note: #000;\n\t\t\t\t\t--white-piano-key: #000;\n\t\t\t\t\t--black-piano-key: #000;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t    \"todbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--third-note: #486;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;s\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch7-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch7-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch7-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch8-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch8-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch8-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch8-primary-note:      #ffff92;\n\t\t\t\t\t--pitch9-secondary-channel: #c75000;\n\t\t\t\t\t--pitch9-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch9-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch9-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t\t\t--pitch10-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch10-secondary-note:    #00c700;\n\t\t\t\t\t--pitch10-primary-note:      #a0ffa0;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n\t\t\t\t\t--mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #00bdc7;\n\t\t\t\t\t--mod1-primary-note:      #92f9ff;\n\t\t\t\t\t--mod2-secondary-channel: #a1a100;\n\t\t\t\t\t--mod2-primary-channel:   #ffff25;\n\t\t\t\t\t--mod2-secondary-note:    #c7c700;\n\t\t\t\t\t--mod2-primary-note:      #ffff92;\n\t\t\t\t\t--mod3-secondary-channel: #c75000;\n\t\t\t\t\t--mod3-primary-channel:   #ff9752;\n\t\t\t\t\t--mod3-secondary-note:    #ff771c;\n\t\t\t\t\t--mod3-primary-note:      #ffcdab;\n\t\t\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t\t\t--mod4-primary-channel:   #50ff50;\n\t\t\t\t\t--mod4-secondary-note:    #00c700;\n\t\t\t\t\t--mod4-primary-note:      #a0ffa0;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"todbox dark mode\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #999999;\n\t\t\t\t\t--playhead: #999999;\n\t\t\t\t\t--primary-text: #999999;\n\t\t\t\t\t--secondary-text: #444444;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: #999999;\n\t\t\t\t\t--box-selection-fill: #999999;\n\t\t\t\t\t--loop-accent: #999999;\n\t\t\t\t\t--link-accent: #999999;\n\t\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #101010;\n\t\t\t\t\t--tonic: #404040;\n\t\t\t\t\t--fifth-note: #202020;\n\t\t\t\t\t--third-note: #2d3c27;\n\t\t\t\t\t--white-piano-key: #999999;\n\t\t\t\t\t--black-piano-key: #101010;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\n\t\t\t\t\t--pitch1-primary-note:      #009999;\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\n\t\t\t\t\t--pitch2-primary-note:      #999900;\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\n\t\t\t\t\t--pitch3-primary-note:      #996600;\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\n\t\t\t\t\t--pitch4-primary-note:      #009900;\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\n\t\t\t\t\t--pitch5-primary-note:      #990099;\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\n\t\t\t\t\t--pitch6-primary-note:      #666699;\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\n\t\t\t\t\t--pitch7-primary-note:      #999900;\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\n\t\t\t\t\t--noise1-secondary-channel: #444444;\n\t\t\t\t\t--noise1-primary-channel:   #999999;\n\t\t\t\t\t--noise1-secondary-note:    #444444;\n\t\t\t\t\t--noise1-primary-note:      #999999;\n\t\t\t\t\t--noise2-secondary-channel: #443311;\n\t\t\t\t\t--noise2-primary-channel:   #996633;\n\t\t\t\t\t--noise2-secondary-note:    #443311;\n\t\t\t\t\t--noise2-primary-note:      #996633;\n\t\t\t\t\t--noise3-secondary-channel: #113344;\n\t\t\t\t\t--noise3-primary-channel:   #336699;\n\t\t\t\t\t--noise3-secondary-note:    #113344;\n\t\t\t\t\t--noise3-primary-note:      #336699;\n\t\t\t\t\t--noise4-secondary-channel: #444444;\n\t\t\t\t\t--noise4-primary-channel:   #999999;\n\t\t\t\t\t--noise4-secondary-note:    #444444;\n\t\t\t\t\t--noise4-primary-note:      #999999;\n\t\t\t\t\t--noise5-secondary-channel: #443311;\n\t\t\t\t\t--noise5-primary-channel:   #996633;\n\t\t\t\t\t--noise5-secondary-note:    #443311;\n\t\t\t\t\t--noise5-primary-note:      #996633;\n          --mod1-secondary-channel: #004444;\n\t\t\t\t\t--mod1-primary-channel:   #009999;\n\t\t\t\t\t--mod1-secondary-note:    #004444;\n\t\t\t\t\t--mod1-primary-note:      #009999;\n\t\t\t\t\t--mod2-secondary-channel: #444400;\n\t\t\t\t\t--mod2-primary-channel:   #999900;\n\t\t\t\t\t--mod2-secondary-note:    #444400;\n\t\t\t\t\t--mod2-primary-note:      #999900;\n\t\t\t\t\t--mod3-secondary-channel: #443300;\n\t\t\t\t\t--mod3-primary-channel:   #996600;\n\t\t\t\t\t--mod3-secondary-note:    #443300;\n\t\t\t\t\t--mod3-primary-note:      #996600;\n\t\t\t\t\t--mod4-secondary-channel: #004400;\n\t\t\t\t\t--mod4-primary-channel:   #009900;\n\t\t\t\t\t--mod4-secondary-note:    #004400;\n\t\t\t\t\t--mod4-primary-note:      #009900;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"mainbox 1.0\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #2F1C40;\n\t\t\t\t--link-accent: #543873;\n\t\t\t\t--ui-widget-background: #2F1C40;\n\t\t\t\t--ui-widget-focus: #543873;\n\t\t\t\t--pitch-background: #2F1C40;\n\t\t\t\t--tonic: #42286D;\n\t\t\t\t--fifth-note: #37416B;\n\t\t\t\t--third-note: #884487;\n\t\t\t\t--white-piano-key: #156CB6;\n\t\t\t\t--black-piano-key: #130D14;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel: #156C99;\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\n\t\t\t\t\t--mod3-primary-note:      #E15427;\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\n\t\t\t\t\t--mod4-secondary-note:    #004337;\n\t\t\t\t\t--mod4-primary-note:      #00915E;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"fogbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"foxbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #ADD8E6;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"wackybox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t* {\n\t\t\t\tcursor: url('./image_assets/wackybox_cursor.png'), auto;\n\t\t\t}\n\n\n.beepboxEditor {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\t\t\n.beepboxEditor .tip {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .layout-option {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor select {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.select2-selection__rendered {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.select2-container--default .select2-results__group {\n    cursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor button {\n\t cursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor canvas {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor input {\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\n}\n\n\t\t\t`,\n\t\t\t \"microbox\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000000;\n\t\t\t\t\t--editor-background: #000000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #93B6AD;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\n\t\t\t\t\t--box-selection-fill: #03B068;\n\t\t\t\t\t--loop-accent: #FF0061;\n\t\t\t\t\t--link-accent: #FFC800;\n\t\t\t\t\t--ui-widget-background: #38554E;\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\n\t\t\t\t\t--pitch-background: #281F23;\n\t\t\t\t\t--tonic: #004634;\n\t\t\t\t\t--fifth-note: #463400;\n\t\t\t\t\t--third-note: #886744;\n\t\t\t\t\t--white-piano-key: #edc;\n\t\t\t\t\t--black-piano-key: #456;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\n\t\t\t\t\t--track-editor-bg-noise: #463400;\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\n\t\t\t\t\t--track-editor-bg-mod: #004634;\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\n\t\t\t\t\t--indicator-primary: #333333;\n\t\t\t\t\t--indicator-secondary: #00ffc0;\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\n\t\t\t\t\t--input-box-outline: #69BFC6;\n\t\t\t\t\t--mute-button-normal: #00ffc0;\n\t\t\t\t\t--mute-button-mod: #FFC800;\n\t\t\t\t\t--mod-label-primary: #38554E;\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"paandorasbox\": `\n\t\t\t:root {\n\t\t\t --page-margin: #200000;\n\t\t\t  --editor-background: #200000;\n\t\t\t  --hover-preview: white;\n\t\t\t  --playhead: white;\n\t\t\t  --primary-text: white;\n\t\t\t  --secondary-text: #999;\n\t\t\t  --inverted-text: black;\n\t\t\t  --text-selection: #FF5100;\n\t\t\t  --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t  --loop-accent: #FF5100;\n\t\t\t  --link-accent: #0F0;\n\t\t\t  --ui-widget-background: #562334;\n\t\t\t  --ui-widget-focus: #6D1B36;\n\t\t\t  --pitch-background: #6D1B36;\n\t\t\t  --tonic: #FF5100;\n\t\t\t  --fifth-note: #00B6FF;\n\t\t\t  --third-note: #bf32b0;\n\t\t\t  --white-piano-key: #bbb;\n\t\t\t  --black-piano-key: #444;\n\t\t\t  --use-color-formula: false;\n\t\t\t  --pitch-channel-limit: 10;\n\t\t\t  --track-editor-bg-pitch: #380C14;\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\n\t\t\t  --track-editor-bg-noise: #233323;\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\n\t\t\t  --track-editor-bg-mod: #234C82;\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\n\t\t\t  --multiplicative-mod-slider: #456;\n\t\t\t  --overwriting-mod-slider: #654;\n\t\t\t  --indicator-primary: #FF5100;\n\t\t\t  --indicator-secondary: #444;\n\t\t\t  --select2-opt-group: #585858;\n\t\t\t  --input-box-outline: #333;\n\t\t\t  --mute-button-normal: #ffa033;\n\t\t\t  --mute-button-mod: #9a6bff;\n\t\t\t  --pitch1-secondary-channel: #00B200;\n\t\t\t  --pitch1-primary-channel: #0F0;\n\t\t\t  --pitch1-secondary-note: #00B200;\n\t\t\t  --pitch1-primary-note: #0F0;\n\t\t\t  --pitch2-secondary-channel: #00B282;\n\t\t\t  --pitch2-primary-channel: #00FFBF;\n\t\t\t  --pitch2-secondary-note: #00B282;\n\t\t\t  --pitch2-primary-note: #00FFBF;\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\n\t\t\t  --pitch3-primary-channel: #0FF;\n\t\t\t  --pitch3-secondary-note: #00B2B2;\n\t\t\t  --pitch3-primary-note: #0FF;\n\t\t\t  --pitch4-secondary-channel: #2623B2;\n\t\t\t  --pitch4-primary-channel: #3631FF;\n\t\t\t  --pitch4-secondary-note: #2623B2;\n\t\t\t  --pitch4-primary-note: #3631FF;\n\t\t\t  --pitch5-secondary-channel: #7700B2;\n\t\t\t  --pitch5-primary-channel: #A0F;\n\t\t\t  --pitch5-secondary-note: #7700B2;\n\t\t\t  --pitch5-primary-note: #A0F;\n\t\t\t  --pitch6-secondary-channel: #B200B2;\n\t\t\t  --pitch6-primary-channel: #F0F;\n\t\t\t  --pitch6-secondary-note: #B200B2;\n\t\t\t  --pitch6-primary-note: #F0F;\n\t\t\t  --pitch7-secondary-channel: #B20000;\n\t\t\t  --pitch7-primary-channel: #F00;\n\t\t\t  --pitch7-secondary-note: #B20000;\n\t\t\t  --pitch7-primary-note: #F00;\n\t\t\t  --pitch8-secondary-channel: #00B200;\n\t\t\t  --pitch8-primary-channel: #0F0;\n\t\t\t  --pitch8-secondary-note: #00B200;\n\t\t\t  --pitch8-primary-note: #0F0;\n\t\t\t  --pitch9-secondary-channel: #00B282;\n\t\t\t  --pitch9-primary-channel: #0FF;\n\t\t\t  --pitch9-secondary-note: #00B282;\n\t\t\t  --pitch9-primary-note: #0FF;\n\t\t\t  --pitch10-secondary-channel: #0071B2;\n\t\t\t  --pitch10-primary-channel: #009EFF;\n\t\t\t  --pitch10-secondary-note: #0071B2;\n\t\t\t  --pitch10-primary-note: #009EFF;\n\t\t\t  --noise1-secondary-channel: #32B221;\n\t\t\t  --noise1-primary-channel: #44FF2F;\n\t\t\t  --noise1-secondary-note: #32B221;\n\t\t\t  --noise1-primary-note: #44FF2F;\n\t\t\t  --noise2-secondary-channel: #216FB2;\n\t\t\t  --noise2-primary-channel: #2F9DFF;\n\t\t\t  --noise2-secondary-note: #216FB2;\n\t\t\t  --noise2-primary-note: #2F9DFF;\n\t\t\t  --noise3-secondary-channel: #2623B2;\n\t\t\t  --noise3-primary-channel: #3631FF;\n\t\t\t  --noise3-secondary-note: #2623B2;\n\t\t\t  --noise3-primary-note: #3631FF;\n\t\t\t  --noise4-secondary-channel: #7223B2;\n\t\t\t  --noise4-primary-channel: #A531FF;\n\t\t\t  --noise4-secondary-note: #7223B2;\n\t\t\t  --noise4-primary-note: #A531FF;\n\t\t\t  --noise5-secondary-channel: #B2235A;\n\t\t\t  --noise5-primary-channel: #FF317E;\n\t\t\t  --noise5-secondary-note: #B2235A;\n\t\t\t  --noise5-primary-note: #FF317E;\n\t\t\t  --mod1-secondary-channel: #17B274;\n\t\t\t  --mod1-primary-channel: #21FFA8;\n\t\t\t  --mod1-secondary-note: #17B274;\n\t\t\t  --mod1-primary-note: #21FFA8;\n\t\t\t  --mod2-secondary-channel: #1783B2;\n\t\t\t  --mod2-primary-channel: #1FBAFF;\n\t\t\t  --mod2-secondary-note: #1783B2;\n\t\t\t  --mod2-primary-note: #1FBAFF;\n\t\t\t  --mod3-secondary-channel: #553399;\n\t\t\t  --mod3-primary-channel: #8855fc;\n\t\t\t  --mod3-secondary-note: #aa64ff;\n\t\t\t  --mod3-primary-note: #f8ddff;\n\t\t\t  --mod4-secondary-channel: #B20E6B;\n\t\t\t  --mod4-primary-channel: #FF1291;\n\t\t\t  --mod4-secondary-note: #B20E6B;\n\t\t\t  --mod4-primary-note: #FF1291;\n\t\t\t  --mod-label-primary: #994038;\n\t\t\t  --mod-label-secondary-text: #331512;\n\t\t\t  --mod-label-primary-text: #331512;\n\t\t\t  --disabled-note-primary: #994038;\n\t\t\t  --disabled-note-secondary: #331512;\n\n\t\t\t  \n\t\t\t  \n\t\t\t}\n\t\t\t`,\n\t\t\t\"midbox\":\n\t\t`:root {\n\t\t\t--page-margin: #010a1e;\n\t\t\t--editor-background: #010a1e;\n\t\t\t--hover-preview: #dfe9fe;\n\t\t\t--playhead: #e7f5f6;\n\t\t\t--primary-text: #f0fdff;\n\t\t\t--secondary-text: #c4c7d7;\n\t\t\t--inverted-text: #0f0623;\n\t\t\t--text-selection: #3f0ab4;\n\t\t\t--box-selection-fill: #32afb3;\n\t\t\t--loop-accent: #1719ff;\n\t\t\t--link-accent: #83a6ed;\n\t\t\t--ui-widget-background: #222856;\n\t\t\t--ui-widget-focus: #21417c;\n\t\t\t--pitch-background: #10264a;\n\t\t\t--tonic: #0797ce;\n\t\t\t--fifth-note: #3e2fb5;\n\t\t\t--third-note: #44887e;\n\t\t\t--white-piano-key: #ebf3f4;\n\t\t\t--black-piano-key: #253353;\n\t\t\t--oscilloscope-line-L: #72dcfc;\n\t\t\t--oscilloscope-line-R: #304eff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #183b65; \n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\n\t\t\t--track-editor-bg-noise: #2e196d;\n\t\t\t--track-editor-bg-noise-dim: #212038;\n\t\t\t--track-editor-bg-mod: #066433;\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\n\t\t\t--multiplicative-mod-slider: #1242a4;\n\t\t\t--overwriting-mod-slider: #2218db;\n\t\t\t--indicator-primary: #1698d3;\n\t\t\t--indicator-secondary: #1b478e;\n\t\t\t--select2-opt-group: #312f6d;\n\t\t\t--input-box-outline: #788b96;\n\t\t\t--mute-button-normal: #1d34f2;\n\t\t\t--mute-button-mod: #06bad6;\n\t\t\t--mod-label-primary: #14383f;\n\t\t\t--mod-label-secondary-text: #1d7080;\n\t\t\t--mod-label-primary-text: #b7e9f2;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 0;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 192;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #53527b;\n\t\t\t--disabled-note-secondary:  #1c1b30;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n\t\t\"dogebox2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000015;\n\t\t\t\t--editor-background: #000015;\n\t\t\t\t--hover-preview: #00ffff;\n\t\t\t\t--playhead: #00ffff;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\n\t\t\t\t--loop-accent: #ff00ff;\n\t\t\t\t--link-accent: #00ffff;\n\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #222222;\n\t\t\t\t--tonic: #ab382c;\n\t\t\t\t--fifth-note: #2a76a8;\n\t\t\t\t--third-note: #70ab2c;\n\t\t\t\t--white-piano-key: #ffffff;\n\t\t\t\t--black-piano-key: #222222;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t--track-editor-bg-pitch: #222222;\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\n\t\t\t\t--track-editor-bg-noise: #222222;\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\n\t\t\t\t--track-editor-bg-mod: #333333;\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\n\t\t\t\t--multiplicative-mod-slider: #666666;\n\t\t\t\t--overwriting-mod-slider: #666666;\n\t\t\t\t--indicator-primary: #ff00ff;\n\t\t\t\t--indicator-secondary: #00ffff;\n\t\t\t\t--select2-opt-group: #333333;\n\t\t\t\t--input-box-outline: #444444;\n\t\t\t\t--mute-button-normal: #ff00ff;\n\t\t\t\t--mute-button-mod: #00ffff;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\n\t\t\t\t--pitch1-primary-note: #fdffb2;\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\n\t\t\t\t--pitch2-secondary-note: #ba643a;\n\t\t\t\t--pitch2-primary-note: #fbac92;\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\n\t\t\t\t--pitch3-primary-channel: #f56c67;\n\t\t\t\t--pitch3-secondary-note: #94352b;\n\t\t\t\t--pitch3-primary-note: #f56147;\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\n\t\t\t\t--pitch4-primary-note: #88cf82;\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\n\t\t\t\t--pitch5-primary-channel: #c3c168;\n\t\t\t\t--pitch5-secondary-note: #747330;\n\t\t\t\t--pitch5-primary-note: #d4d394;\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\n\t\t\t\t--pitch6-primary-note: #8fdad0;\n\t\t\t\t--pitch7-secondary-channel: #204a80;\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\n\t\t\t\t--pitch7-secondary-note: #132f5a;\n\t\t\t\t--pitch7-primary-note: #9dbed8;\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\n\t\t\t\t--pitch8-primary-channel: #db68e3;\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\n\t\t\t\t--pitch8-primary-note: #e66cbf;\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\n\t\t\t\t--pitch9-primary-channel: #52fffb;\n\t\t\t\t--pitch9-secondary-note: #34baba;\n\t\t\t\t--pitch9-primary-note: #60fbfb;\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\n\t\t\t\t--pitch10-primary-channel: #9282ff;\n\t\t\t\t--pitch10-secondary-note: #5735b5;\n\t\t\t\t--pitch10-primary-note: #ab52fb;\n\t\t\t\t--noise1-secondary-channel: #2a5555;\n\t\t\t\t--noise1-primary-channel: #4c7878;\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\n\t\t\t\t--noise1-primary-note: #90bcbc;\n\t\t\t\t--noise2-secondary-channel: #553355;\n\t\t\t\t--noise2-primary-channel: #775577;\n\t\t\t\t--noise2-secondary-note: #997799;\n\t\t\t\t--noise2-primary-note: #bbaa99;\n\t\t\t\t--noise3-secondary-channel: #2a6622;\n\t\t\t\t--noise3-primary-channel: #4c8844;\n\t\t\t\t--noise3-secondary-note: #6eaa66;\n\t\t\t\t--noise3-primary-note: #90cc88;\n\t\t\t\t--noise4-secondary-channel: #664400;\n\t\t\t\t--noise4-primary-channel: #886600;\n\t\t\t\t--noise4-secondary-note: #aa8800;\n\t\t\t\t--noise4-primary-note: #cccc00;\n\t\t\t\t--noise5-secondary-channel: #006633;\n\t\t\t\t--noise5-primary-channel: #008855;\n\t\t\t\t--noise5-secondary-note: #00aa77;\n\t\t\t\t--noise5-primary-note: #00cc99;\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\n\t\t\t\t--mod1-primary-channel: #ff72ff;\n\t\t\t\t--mod1-secondary-note: #ff92ff;\n\t\t\t\t--mod1-primary-note: #ffb2fb;\n\t\t\t\t--mod2-secondary-channel: #00fe00;\n\t\t\t\t--mod2-primary-channel: #8eff8e;\n\t\t\t\t--mod2-secondary-note: #92ff92;\n\t\t\t\t--mod2-primary-note: #b2ffb2;\n\t\t\t\t--mod3-secondary-channel: #feff00;\n\t\t\t\t--mod3-primary-channel: #fffb8e;\n\t\t\t\t--mod3-secondary-note: #fffd92;\n\t\t\t\t--mod3-primary-note: #fffe92;\n\t\t\t\t--mod4-secondary-channel: #00fffe;\n\t\t\t\t--mod4-primary-channel: #82fffb;\n\t\t\t\t--mod4-secondary-note: #92ffff;\n\t\t\t\t--mod4-primary-note: #b2fffb;\n\t\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}`,\n\t\t\t\t\"birdbox dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #000;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: #000;\n\t\t\t\t\t--box-selection-fill: #000;\n\t\t\t\t\t--loop-accent: #000;\n\t\t\t\t\t--link-accent: #000;\n\t\t\t\t\t--ui-widget-background: #000;\n\t\t\t\t\t--ui-widget-focus: #000;\n\t\t\t\t\t--pitch-background: #000;\n\t\t\t\t\t--tonic: #000;\n\t\t\t\t\t--fifth-note: #000;\n\t\t\t\t\t--third-note: #000;\n\t\t\t\t\t--white-piano-key: #000;\n\t\t\t\t\t--black-piano-key: #000;\n\t\t\t\t}\n\n\t\t\t\thtml {\n\t\t\t\tfilter: brightness(0);\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"birdbox light\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--third-note: #bbf0ce;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--pitch-channel-limit: 10;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\n\t\t\thtml {\n\t\t\t\tfilter: brightness(2000);\n\t\t\t\t}\n\n\t\t\t.promptContainerBG::before {\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t}\n\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t`,\n\t\t\"azur lane\":`\n\t\t:root {\n\t\t\t--page-margin: #19337e;\n\t\t\t--editor-background: #000333cf;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #9af9ff;\n\t\t\t--secondary-text: #4072dd;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--loop-accent: #950d0d;\n\t\t\t--link-accent: #0072ff;\n\t\t\t--ui-widget-background: #255bb3;\n\t\t\t--ui-widget-focus: #757575;\n\t\t\t--pitch-background: #20468b73;\n\t\t\t--tonic: #c9c9c9;\n\t\t\t--fifth-note: #731d1d;\n\t\t\t--third-note: #486;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #000;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #535a73;\n\t\t\t--track-editor-bg-pitch-dim: #353643;\n\t\t\t--track-editor-bg-noise: #770000;\n\t\t\t--track-editor-bg-noise-dim: #430000;\n\t\t\t--track-editor-bg-mod: #5d1d06;\n\t\t\t--track-editor-bg-mod-dim: #270000;\n\t\t\t--multiplicative-mod-slider: #bb0000;\n\t\t\t--overwriting-mod-slider: #ad0000;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #002957;\n\t\t\t--mute-button-normal: #ffffff;\n\t\t\t--mute-button-mod: #4f4f4f;\n\t\t\t--mod-label-primary: #531313;\n\t\t\t--pitch1-secondary-channel: #80858d;\n\t\t  --pitch1-primary-channel: #f2f7ff;\n\t\t  --pitch1-secondary-note: #80858d;\n\t\t  --pitch1-primary-note: #f2f7ff;\n\t\t  --pitch2-secondary-channel: #7392ad;\n\t\t  --pitch2-primary-channel: #a8d6ff;\n\t\t  --pitch2-secondary-note: #7392ad;\n\t\t  --pitch2-primary-note: #a8d6ff;\n\t\t  --pitch3-secondary-channel: #4b7eaa;\n\t\t  --pitch3-primary-channel: #71bdff;\n\t\t  --pitch3-secondary-note: #4b7eaa;\n\t\t  --pitch3-primary-note: #71bdff;\n\t\t  --pitch4-secondary-channel: #3594b1;\n\t\t  --pitch4-primary-channel: #48d4ff;\n\t\t  --pitch4-secondary-note: #3594b1;\n\t\t  --pitch4-primary-note: #48d4ff;\n\t\t  --pitch5-secondary-channel: #1b98b1;\n\t\t  --pitch5-primary-channel: #30f1ff;\n\t\t  --pitch5-secondary-note: #1b98b1;\n\t\t  --pitch5-primary-note: #30f1ff;\n\t\t  --pitch6-secondary-channel: #9e0000;\n\t\t  --pitch6-primary-channel: #db0000;\n\t\t  --pitch6-secondary-note: #9e0000;\n\t\t  --pitch6-primary-note: #db0000;\n\t\t  --pitch7-secondary-channel: #7c1717;\n\t\t  --pitch7-primary-channel: #9e0000;\n\t\t  --pitch7-secondary-note: #7c1717;\n\t\t  --pitch7-primary-note: #9e0000;\n\t\t  --pitch8-secondary-channel: #5c1f1f;\n\t\t  --pitch8-primary-channel: #7c1717;\n\t\t  --pitch8-secondary-note: #5c1f1f;\n\t\t  --pitch8-primary-note: #7c1717;\n\t\t  --pitch9-secondary-channel: #3e2020;\n\t\t  --pitch9-primary-channel: #5c1f1f;\n\t\t  --pitch9-secondary-note: #3e2020;\n\t\t  --pitch9-primary-note: #5c1f1f;\n\t\t  --pitch10-secondary-channel: #2f1c1c;\n\t\t  --pitch10-primary-channel: #5c1f1f;\n\t\t  --pitch10-secondary-note: #2f1c1c;\n\t\t  --pitch10-primary-note: #5c1f1f;\n\t\t  --noise1-secondary-channel: #828282;\n\t\t  --noise1-primary-channel: #cacaca;\n\t\t  --noise1-secondary-note: #828282;\n\t\t  --noise1-primary-note: #cacaca;\n\t\t  --noise2-secondary-channel: #2f8baf;\n\t\t  --noise2-primary-channel: #3de2ff;\n\t\t  --noise2-secondary-note: #2f8baf;\n\t\t  --noise2-primary-note: #3de2ff;\n\t\t  --noise3-secondary-channel: #6f50b1;\n\t\t  --noise3-primary-channel: #8567ff;\n\t\t  --noise3-secondary-note: #6f50b1;\n\t\t  --noise3-primary-note: #8567ff;\n\t\t  --noise4-secondary-channel: #d38900;\n\t\t  --noise4-primary-channel: #ffb500;\n\t\t  --noise4-secondary-note: #d38900;\n\t\t  --noise4-primary-note: #ffb500;\n\t\t  --noise5-secondary-channel: #af0008;\n\t\t  --noise5-primary-channel: #00d70e;\n\t\t  --noise5-secondary-note: #29b700;\n\t\t  --noise5-primary-note: #00f7ff;\n\t\t  --mod1-secondary-channel: #9d5bb9;\n\t\t  --mod1-primary-channel: #e16bff;\n\t\t  --mod1-secondary-note: #3a3ea4;\n\t\t  --mod1-primary-note: #fff;\n\t\t  --mod2-secondary-channel: #3a8d58;\n\t\t  --mod2-primary-channel: #42ffff;\n\t\t  --mod2-secondary-note: #3a8d58;\n\t\t  --mod2-primary-note: #42ffff;\n\t\t  --mod3-secondary-channel: #af6c00;\n\t\t  --mod3-primary-channel: #fa0;\n\t\t  --mod3-secondary-note: #0001a2;\n\t\t  --mod3-primary-note: #970000;\n\t\t  --mod4-secondary-channel: #d3d3d3;\n\t\t  --mod4-primary-channel: #759bff;\n\t\t  --mod4-secondary-note: #a00000;\n\t\t  --mod4-primary-note: #fff;\n\t\t  --disabled-note-primary: #3a3a3a;\n\t\t  --disabled-note-secondary: #000;\n\n\t\t  \n\t\t  \n\t\t\t}\n\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}\n\n\t\n\t\t/* replaces hotdog (in a hacky way) with an image of the girls using the same scratch sprites from the 404 page*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"./image_assets/UltraboxAzurLaneThemeStarterSquad.png\");\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets cursor */\n\t\t* {\n\t\tcursor: url(\"./image_assets/UltraBoxAzurLaneThemeMouse.png\"), auto !important;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"./image_assets/UltraBoxAzurLaneThemeMemoryTaskBackground.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\tbackground: #0400257d !important;\n\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"./image_assets/UltraBoxALThemeLogo.png\");\n\t\t}\n\t}`,\n\"WeebBox\": `\n\t:root {\n\t\t--page-margin: #040410;\n\t\t--editor-background: #040410;\n\t\t--hover-preview: white;\n\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t--primary-text: white;\n\t\t--secondary-text: #84859a;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: #044b94;\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #393e4f;\n\t\t--ui-widget-focus: #6d6886;\n\t\t--pitch-background: #393e4f55;\n\t\t--tonic: #725491;\n\t\t--fifth-note: #54547a;\n\t\t--third-note: #3b4b71;\n\t\t--white-piano-key: #eee;\n\t\t--black-piano-key: #666;\n\t\t--white-piano-key-text: #131200;\n\t\t--black-piano-key-text: #fff;\n\t\t--use-color-formula: true;\n\t\t--track-editor-bg-pitch: #393e4f;\n\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t--track-editor-bg-noise: #3d3535;\n\t\t--track-editor-bg-noise-dim: #161313;\n\t\t--track-editor-bg-mod: #283560;\n\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t--multiplicative-mod-slider: #606c9f;\n\t\t--overwriting-mod-slider: #6850b5;\n\t\t--indicator-primary: #9c64f7;\n\t\t--indicator-secondary: #393e4f;\n\t\t--select2-opt-group: #5d576f;\n\t\t--input-box-outline: #222;\n\t\t--mute-button-normal: #dda85d;\n\t\t--mute-button-mod: #886eae;\n\t\t--mod-label-primary: #282840;\n\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t--mod-label-primary-text: white;\n\t\t--pitch-secondary-channel-hue: 0;\n\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t--pitch-secondary-channel-lum: 40;\n\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t--pitch-primary-channel-hue: 0;\n\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t--pitch-primary-channel-sat: 100;\n\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t--pitch-primary-channel-lum: 67.5;\n\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t--pitch-secondary-note-hue: 0;\n\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t--pitch-secondary-note-sat: 93.9;\n\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t--pitch-secondary-note-lum: 25;\n\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t--pitch-primary-note-hue: 0;\n\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t--pitch-primary-note-sat: 100;\n\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t--pitch-primary-note-lum: 85.6;\n\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t--noise-secondary-channel-hue: 0;\n\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t--noise-secondary-channel-sat: 25;\n\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t--noise-secondary-channel-lum: 42;\n\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t--noise-primary-channel-hue: 0;\n\t\t--noise-primary-channel-hue-scale: 2;\n\t\t--noise-primary-channel-sat: 33;\n\t\t--noise-primary-channel-sat-scale: 0;\n\t\t--noise-primary-channel-lum: 63.5;\n\t\t--noise-primary-channel-lum-scale: 0;\n\t\t--noise-secondary-note-hue: 0;\n\t\t--noise-secondary-note-hue-scale: 2;\n\t\t--noise-secondary-note-sat: 33.5;\n\t\t--noise-secondary-note-sat-scale: 0;\n\t\t--noise-secondary-note-lum: 55;\n\t\t--noise-secondary-note-lum-scale: 0;\n\t\t--noise-primary-note-hue: 0;\n\t\t--noise-primary-note-hue-scale: 2;\n\t\t--noise-primary-note-sat: 46.5;\n\t\t--noise-primary-note-sat-scale: 0;\n\t\t--noise-primary-note-lum: 74;\n\t\t--noise-primary-note-lum-scale: 0;\n\t\t--mod-secondary-channel-hue: 192;\n\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t--mod-secondary-channel-sat: 88;\n\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t--mod-secondary-channel-lum: 50;\n\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t--mod-primary-channel-hue: 192;\n\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t--mod-primary-channel-sat: 96;\n\t\t--mod-primary-channel-sat-scale: 0;\n\t\t--mod-primary-channel-lum: 80;\n\t\t--mod-primary-channel-lum-scale: 0;\n\t\t--mod-secondary-note-hue: 192;\n\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t--mod-secondary-note-sat: 92;\n\t\t--mod-secondary-note-sat-scale: 0;\n\t\t--mod-secondary-note-lum: 45;\n\t\t--mod-secondary-note-lum-scale: 0;\n\t\t--mod-primary-note-hue: 192;\n\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t--mod-primary-note-sat: 96;\n\t\t--mod-primary-note-sat-scale: 0;\n\t\t--mod-primary-note-lum: 85;\n\t\t--mod-primary-note-lum-scale: 0;\n\t\t--disabled-note-primary:    #91879f;\n\t\t--disabled-note-secondary:  #6a677a;\n\n\t\t\n\t\t\n\t}\n\t#firstImage {\n\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/weebboxbackground.jpg\") !important;\n\t\tbackground-repeat: no-repeat !important;\n\t\tbackground-size: 100% 100% !important;\n\t}\n\n\t#firstImage rect {\n\t\topacity: 0.8 !important;\n\t}\n`,\n\t\"BoxBeep Dark\": `\n\t\t:root {\n\t\t\t--page-margin: #97a277;\n\t\t\t--editor-background: black;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255,255,255,255.5);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #888;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(55, 85, 0, 0.99);\n\t\t\t--box-selection-fill: rgba(225,255,255,0.1);\n\t\t\t--loop-accent: #670;\n\t\t\t--link-accent: #8b0;\n\t\t\t--ui-widget-background: #131313;\n\t\t\t--ui-widget-focus: #111;\n\t\t\t--pitch-background: #131313;\n\t\t\t--tonic: #0f2949;\n\t\t\t--fifth-note: #44220f;\n\t\t\t--third-note: #440f31;\n\t\t\t--white-piano-key: #111111;\n\t\t\t--black-piano-key: #999999;\n\t\t\t--white-piano-key-text: #fff;\n\t\t\t--black-piano-key-text: #000;\n\t\t\t--pitch-channel-limit: 10;\n\n\t\t\t--pitch1-secondary-channel: #932612;\n\t\t\t--pitch1-primary-channel:   #ff5f42;\n\t\t\t--pitch1-secondary-note:    #cb3d23;\n\t\t\t--pitch1-primary-note:      #ff8a75;\n\n\t\t\t--pitch2-secondary-channel: #1c36be;\n\t\t\t--pitch2-primary-channel:   #4b68ff;\n\t\t\t--pitch2-secondary-note:    #2e49d7;\n\t\t\t--pitch2-primary-note:      #7c91ff;\n\n\t\t\t--pitch3-secondary-channel: #00629e;\n\t\t\t--pitch3-primary-channel:   #1eb1ff;\n\t\t\t--pitch3-secondary-note:    #0982c3;\n\t\t\t--pitch3-primary-note:      #49bfff;\n\n\t\t\t--pitch4-secondary-channel: #b41db4;\n\t\t\t--pitch4-primary-channel:   #ff57ff;\n\t\t\t--pitch4-secondary-note:    #d237d2;\n\t\t\t--pitch4-primary-note:      #ff7fff;\n\n\t\t\t--pitch5-secondary-channel: #006f00;\n\t\t\t--pitch5-primary-channel:   #1ed120;\n\t\t\t--pitch5-secondary-note:    #139113;\n\t\t\t--pitch5-primary-note:      #59ff5a;\n\n\t\t\t--pitch6-secondary-channel: #4a4a01;\n\t\t\t--pitch6-primary-channel:   #969602;\n\t\t\t--pitch6-secondary-note:    #6c6c01;\n\t\t\t--pitch6-primary-note:      #b5b528;\n\n\t\t\t--pitch7-secondary-channel: #3d27b7;\n\t\t\t--pitch7-primary-channel:   #7157ff;\n\t\t\t--pitch7-secondary-note:    #4f37d2;\n\t\t\t--pitch7-primary-note:      #937fff;\n\n\t\t\t--pitch8-secondary-channel: #006f5b;\n\t\t\t--pitch8-primary-channel:   #1ed1b2;\n\t\t\t--pitch8-secondary-note:    #13917a;\n\t\t\t--pitch8-primary-note:      #59ffe2;\n\n\t\t\t--pitch9-secondary-channel: #be1c4a;\n\t\t\t--pitch9-primary-channel:   #ff4b7e;\n\t\t\t--pitch9-secondary-note:    #d72e5e;\n\t\t\t--pitch9-primary-note:      #ff7ca1;\n\n\t\t\t--pitch10-secondary-channel:#358800;\n\t\t\t--pitch10-primary-channel:  #69f600;\n\t\t\t--pitch10-secondary-note:   #4ab000;\n\t\t\t--pitch10-primary-note:     #7bff1c;\n\n\t\t\t--noise1-secondary-channel: #3e3e3e;\n\t\t\t--noise1-primary-channel:   #767676;\n\t\t\t--noise1-secondary-note:    #525252;\n\t\t\t--noise1-primary-note:      #939393;\n\n\t\t\t--noise2-secondary-channel: #174473;\n\t\t\t--noise2-primary-channel:   #4282c5;\n\t\t\t--noise2-secondary-note:    #2e5c8b;\n\t\t\t--noise2-primary-note:      #7c9cbd;\n\n\t\t\t--noise3-secondary-channel: #643b14;\n\t\t\t--noise3-primary-channel:   #bb7e41;\n\t\t\t--noise3-secondary-note:    #83582c;\n\t\t\t--noise3-primary-note:      #b8997a;\n\n\t\t\t--noise4-secondary-channel: #3a5a1f;\n\t\t\t--noise4-primary-channel:   #7aac51;\n\t\t\t--noise4-secondary-note:    #4d6f33;\n\t\t\t--noise4-primary-note:      #97b082;\n\n\t\t\t--noise5-secondary-channel: #47316c;\n\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t--noise5-secondary-note:    #7858b0;\n\t\t\t--noise5-primary-note:      #9787b3;\n\t\t}\n\t\t\n\t\t.beepboxEditor button, .beepboxEditor select, button {\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t}\n\t\t\n\t\ta.tip {\n\t\t\tdisplay:none;\n\t\t}\n\n\t\tdiv.visualizer {\n\t\t\ttransform: scaleX(-1);\n\t\t}\n\n\t\t`,\n\t\t\"BoxBeep light\": `\n\t\t:root {\n\t\t\t--page-margin: white;\n\t\t\t--editor-background: white;\n\t\t\t--hover-preview: black;\n\t\t\t--playhead: black;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #666666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: rgba(136, 187, 0,0.99);\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\n\t\t\t--loop-accent: #88bb00;\n\t\t\t--link-accent: #667700;\n\t\t\t--ui-widget-background: #bbbbbb;\n\t\t\t--ui-widget-focus: #888888;\n\t\t\t--pitch-background: #bbbbbb;\n\t\t\t--tonic: #7799bb;\n\t\t\t--fifth-note: #bb9977;\n\t\t\t--third-note: #a877bb;\n\t\t\t--white-piano-key: #444444;\n\t\t\t--black-piano-key: #bbbbbb;\n\t\t\t--white-piano-key-text: #fff;\n\t\t\t--black-piano-key-text: #000;\n\t\t\t--pitch-channel-limit: 10;\n\n\t\t\t--pitch1-secondary-channel: #ff665e;\n\t\t\t--pitch1-primary-channel:   #da0c00;\n\t\t\t--pitch1-secondary-note:    #ff4238;\n\t\t\t--pitch1-primary-note:      #6d0600;\n\n\t\t\t--pitch2-secondary-channel: #5e5eff;\n\t\t\t--pitch2-primary-channel:   #0000da;\n\t\t\t--pitch2-secondary-note:   \t#3838ff;\n\t\t\t--pitch2-primary-note:      #00006d;\n\n\t\t\t--pitch3-secondary-channel: #38afff;\n\t\t\t--pitch3-primary-channel:   #0068ad;\n\t\t\t--pitch3-secondary-note:    #0088e3;\n\t\t\t--pitch3-primary-note:      #003254;\n\n\t\t\t--pitch4-secondary-channel: #ff5eff;\n\t\t\t--pitch4-primary-channel:   #af00af;\n\t\t\t--pitch4-secondary-note:    #ff38ff;\n\t\t\t--pitch4-primary-note:      #5f005f;\n\n\t\t\t--pitch5-secondary-channel: #2fdf2f;\n\t\t\t--pitch5-primary-channel:   #006f00;\n\t\t\t--pitch5-secondary-note:    #1fbf1f;\n\t\t\t--pitch5-primary-note:      #003f00;\n\n\t\t\t--pitch6-secondary-channel: #88884f;\n\t\t\t--pitch6-primary-channel:   #5f5f00;\n\t\t\t--pitch6-secondary-note:    #77772f;\n\t\t\t--pitch6-primary-note:      #2f2f00;\n\n\t\t\t--pitch7-secondary-channel: #755eff;\n\t\t\t--pitch7-primary-channel:   #2100da;\n\t\t\t--pitch7-secondary-note:    #5538ff;\n\t\t\t--pitch7-primary-note:      #19006d;\n\n\t\t\t--pitch8-secondary-channel: #20ffe6;\n\t\t\t--pitch8-primary-channel:   #00675b;\n\t\t\t--pitch8-secondary-note:    #00b19c;\n\t\t\t--pitch8-primary-note:      #004d44;\n\n\t\t\t--pitch9-secondary-channel: #ff5e8f;\n\t\t\t--pitch9-primary-channel:   #af0036;\n\t\t\t--pitch9-secondary-note:    #ff3875;\n\t\t\t--pitch9-primary-note:      #7c0026;\n\n\t\t\t--pitch10-secondary-channel:#5ee000;\n\t\t\t--pitch10-primary-channel:  #317400;\n\t\t\t--pitch10-secondary-note:   #48a800;\n\t\t\t--pitch10-primary-note:     #205300;\n\n\t\t\t--noise1-secondary-channel: #909090;\n\t\t\t--noise1-primary-channel:   #555555;\n\t\t\t--noise1-secondary-note:    #585858;\n\t\t\t--noise1-primary-note:      #1f1f1f;\n\n\t\t\t--noise2-secondary-channel: #6699cc;\n\t\t\t--noise2-primary-channel:   #225588;\n\t\t\t--noise2-secondary-note:    #336699;\n\t\t\t--noise2-primary-note:      #0f2f44;\n\n\t\t\t--noise3-secondary-channel: #b59270;\n\t\t\t--noise3-primary-channel:   #885522;\n\t\t\t--noise3-secondary-note:    #906030;\n\t\t\t--noise3-primary-note:      #442800;\n\n\t\t\t--noise4-secondary-channel: #85b065;\n\t\t\t--noise4-primary-channel:   #507d2d;\n\t\t\t--noise4-secondary-note:    #618e3e;\n\t\t\t--noise4-primary-note:      #2b3e15;\n\n\t\t\t--noise5-secondary-channel: #9f87c8;\n\t\t\t--noise5-primary-channel:   #5d4488;\n\t\t\t--noise5-secondary-note:    #6e5599;\n\t\t\t--noise5-primary-note:      #3a1d4d;\n\t\t}\n\n\t\tdiv.visualizer {\n\t\t\ttransform: scaleX(-1);\n\t\t}\n\n\t\ta.tip {\n\t\t\tdisplay:none;\n\t\t}\n\t\t`,\n\n\t\t\"Protanopia\": `\n:root { \n--page-margin: #000000; \n--editor-background: #000000; \n--hover-preview: white; \n--playhead: rgba(255, 255, 255, 0.9); \n--primary-text: #ffffff; \n--secondary-text: #e5e5e5; \n--inverted-text: #000000; \n--text-selection: rgba(119,68,255,0.99); \n--box-selection-fill: #044b94; \n--loop-accent: #ffffff; \n--link-accent: #8915c8; \n--ui-widget-background: #676767; \n--ui-widget-focus: #696969; \n--pitch-background: #302f36; \n--tonic: #19181c; \n--fifth-note: #1b1924; \n--third-note: #192415;\n--white-piano-key: #a6a6a6; \n--black-piano-key: #484848; \n--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n--track-editor-bg-pitch: #666666; \n--track-editor-bg-pitch-dim: #383838; \n--track-editor-bg-noise: #438240; \n--track-editor-bg-noise-dim: #1e361d; \n--track-editor-bg-mod: #5f419c; \n--track-editor-bg-mod-dim: #3e2b66; \n--multiplicative-mod-slider: #b62326; \n--overwriting-mod-slider: #5f1214; \n--indicator-primary: #ccffdb; \n--indicator-secondary: #55dee6; \n--select2-opt-group: #595959; \n--input-box-outline: #ffffff; \n--mute-button-normal: #f11d22; \n--mute-button-mod: #4b57c2; \n--mod-label-primary: #0909ff; \n--mod-label-secondary-text: #ffffff; \n--mod-label-primary-text: #c8ecfd; \n\t\t\t\t--pitch1-secondary-channel: #160740;\n\t\t\t\t--pitch1-primary-channel:   #482d8a;\n\n\t\t\t\t--pitch1-secondary-note:    #160740;\n\t\t\t\t--pitch1-primary-note:      #482d8a;\n\n\t\t\t\t--pitch2-secondary-channel: #0b555e;\n\t\t\t\t--pitch2-primary-channel:   #126e7a;\n\n\t\t\t\t--pitch2-secondary-note:    #0b555e;\n\t\t\t\t--pitch2-primary-note:      #126e7a;\n\n\t\t\t\t--pitch3-secondary-channel: #1d898c;\n\t\t\t\t--pitch3-primary-channel:   #2fa9ad;\n\n\t\t\t\t--pitch3-secondary-note:    #1d898c;\n\t\t\t\t--pitch3-primary-note:      #2fa9ad;\n\n\t\t\t\t--pitch4-secondary-channel: #3f9160;\n\t\t\t\t--pitch4-primary-channel:   #55ad78;\n\n\t\t\t\t--pitch4-secondary-note:    #3f9160;\n\t\t\t\t--pitch4-primary-note:      #55ad78;\n\n\t\t\t\t--pitch5-secondary-channel: #69b051;\n\t\t\t\t--pitch5-primary-channel:   #97e07e;\n\n\t\t\t\t--pitch5-secondary-note:    #69b051;\n\t\t\t\t--pitch5-primary-note:      #97e07e;\n\n\t\t\t\t--pitch6-secondary-channel: #bbcc8f;\n\t\t\t\t--pitch6-primary-channel:   #d4e3ac;\n\n\t\t\t\t--pitch6-secondary-note:    #bbcc8f;\n\t\t\t\t--pitch6-primary-note:      #d4e3ac;\n\n\t\t\t\t--pitch7-secondary-channel: #8f7657;\n\t\t\t\t--pitch7-primary-channel:   #b5a28a;\n\n\t\t\t\t--pitch7-secondary-note:    #8f7657;\n\t\t\t\t--pitch7-primary-note:      #b5a28a;\n\n\t\t\t\t--pitch8-secondary-channel: #804d3c;\n\t\t\t\t--pitch8-primary-channel:   #a16a58;\n\n\t\t\t\t--pitch8-secondary-note:    #804d3c;\n\t\t\t\t--pitch8-primary-note:      #a16a58;\n\n\t\t\t\t--pitch9-secondary-channel: #a62b2b;\n\t\t\t\t--pitch9-primary-channel:   #ba3c3c;\n\n\t\t\t\t--pitch9-secondary-note:    #a62b2b;\n\t\t\t\t--pitch9-primary-note:      #ba3c3c;\n\n\t\t\t\t--pitch10-secondary-channel:#ba497c;\n\t\t\t\t--pitch10-primary-channel:  #d46195;\n\n\t\t\t\t--pitch10-secondary-note:   #ba497c;\n\t\t\t\t--pitch10-primary-note:     #d46195;\n\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          \t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n}\n\n\t\t\t`,\n\t\t\"Tritanopia\": `\n:root { \n--page-margin: #000000; \n--editor-background: #000000; \n--hover-preview: white; \n--playhead: rgba(255, 255, 255, 0.9); \n--primary-text: #ffffff; \n--secondary-text: #e5e5e5; \n--inverted-text: #000000; \n--text-selection: rgba(119,68,255,0.99); \n--box-selection-fill: #044b94; \n--loop-accent: #ffffff; \n--link-accent: #8915c8; \n--ui-widget-background: #676767; \n--ui-widget-focus: #696969; \n--pitch-background: #302f36; \n--tonic: #19181c; \n--fifth-note: #1b1924; \n--third-note: #192415;\n--white-piano-key: #a6a6a6; \n--black-piano-key: #484848; \n--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10; \n--track-editor-bg-pitch: #666666; \n--track-editor-bg-pitch-dim: #383838; \n--track-editor-bg-noise: #438240; \n--track-editor-bg-noise-dim: #1e361d; \n--track-editor-bg-mod: #5f419c; \n--track-editor-bg-mod-dim: #3e2b66; \n--multiplicative-mod-slider: #b62326; \n--overwriting-mod-slider: #5f1214; \n--indicator-primary: #ccffdb; \n--indicator-secondary: #55dee6; \n--select2-opt-group: #595959; \n--input-box-outline: #ffffff; \n--mute-button-normal: #f11d22; \n--mute-button-mod: #4b57c2; \n--mod-label-primary: #0909ff; \n--mod-label-secondary-text: #ffffff; \n--mod-label-primary-text: #c8ecfd; \n\t\t\t\t--pitch1-secondary-channel: #9C0000;\n\t\t\t\t--pitch1-primary-channel:   #FF0000;\n\n\t\t\t\t--pitch1-secondary-note:    #9C0000;\n\t\t\t\t--pitch1-primary-note:      #FF0000;\n\n\t\t\t\t--pitch2-secondary-channel: #8E009C;\n\t\t\t\t--pitch2-primary-channel:   #EB25FF;\n\n\t\t\t\t--pitch2-secondary-note:    #8E009C;\n\t\t\t\t--pitch2-primary-note:      #EB25FF;\n\n\t\t\t\t--pitch3-secondary-channel: #00069C;\n\t\t\t\t--pitch3-primary-channel:   #3D45FF;\n\n\t\t\t\t--pitch3-secondary-note:    #00069C;\n\t\t\t\t--pitch3-primary-note:      #3D45FF;\n\n\t\t\t\t--pitch4-secondary-channel: #00829C;\n\t\t\t\t--pitch4-primary-channel:   #24DBFF;\n\n\t\t\t\t--pitch4-secondary-note:    #00829C;\n\t\t\t\t--pitch4-primary-note:      #24DBFF;\n\n\t\t\t\t--pitch5-secondary-channel: #009C18;\n\t\t\t\t--pitch5-primary-channel:   #70FF86;\n\n\t\t\t\t--pitch5-secondary-note:    #009C18;\n\t\t\t\t--pitch5-primary-note:      #70FF86;\n\n\t\t\t\t--pitch6-secondary-channel: #8E9C00;\n\t\t\t\t--pitch6-primary-channel:   #DBEF16;\n\n\t\t\t\t--pitch6-secondary-note:    #8E9C00;\n\t\t\t\t--pitch6-primary-note:      #DBEF16;\n\n\t\t\t\t--pitch7-secondary-channel: #9C6A00;\n\t\t\t\t--pitch7-primary-channel:   #F7AC0E;\n\n\t\t\t\t--pitch7-secondary-note:    #9C6A00;\n\t\t\t\t--pitch7-primary-note:      #F7AC0E;\n\n\t\t\t\t--pitch8-secondary-channel: #9C2300;\n\t\t\t\t--pitch8-primary-channel:   #F53700;\n\n\t\t\t\t--pitch8-secondary-note:    #9C2300;\n\t\t\t\t--pitch8-primary-note:      #F53700;\n\n\t\t\t\t--pitch9-secondary-channel: #441A0D;\n\t\t\t\t--pitch9-primary-channel:   #9E3F22;\n\n\t\t\t\t--pitch9-secondary-note:    #441A0D;\n\t\t\t\t--pitch9-primary-note:      #9E3F22;\n\n\t\t\t\t--pitch10-secondary-channel:#2C0D44;\n\t\t\t\t--pitch10-primary-channel:  #7436A4;\n\n\t\t\t\t--pitch10-secondary-note:   #2C0D44;\n\t\t\t\t--pitch10-primary-note:     #7436A4;\n\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          \t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n}\n\n\t\t\t`,\n\t\t\"Deuteranopia\": `\n    :root {\n    --page-margin: #000;\n    --editor-background: #060606;\n    --hover-preview: #fff;\n    --playhead: rgb(255, 255, 255);\n    --primary-text: #fff;\n    --secondary-text: #fff;\n    --inverted-text: #000;\n    --text-selection: rgba(126, 126, 126, .99);\n    --box-selection-fill: #b74a4a;\n    --loop-accent: #7744FF;\n    --link-accent: #7744FF;\n    --ui-widget-background: #484848;\n    --ui-widget-focus: #3e3e3e;\n    --pitch-background: #3e3e3e;\n    --tonic: #861057;\n    --fifth-note: #7e7e7e;\n\t--third-note: #486;\n    --use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n    --track-editor-bg-pitch: #666161;\n    --track-editor-bg-pitch-dim: #3e3e3e;\n    --track-editor-bg-noise: #474747;\n    --track-editor-bg-noise-dim: #1a1a1a;\n    --track-editor-bg-mod: #474747;\n    --track-editor-bg-mod-dim: #1a1a1a;\n    --multiplicative-mod-slider: #868686;\n    --overwriting-mod-slider: #fff;\n    --indicator-primary: #fff;\n    --indicator-secondary: #535353;\n    --select2-opt-group: #5d576f;\n    --input-box-outline: #626262;\n    --mute-button-normal: #ffdc00;\n    --mute-button-mod: #0027ff;\n    --mod-label-primary: #2b2b2b;\n\n    --pitch1-secondary-channel: #0082BB;\n  --pitch1-primary-channel: #B1E8FF;\n  --pitch1-secondary-note: #0082BB;\n  --pitch1-primary-note: #B1E8FF;\n  --pitch2-secondary-channel: #005F88;\n  --pitch2-primary-channel: #00B2FF;\n  --pitch2-secondary-note: #005F88;\n  --pitch2-primary-note: #00B2FF;\n  --pitch3-secondary-channel: #0E0090;\n  --pitch3-primary-channel: #5196ff;\n  --pitch3-secondary-note: #0E0090;\n  --pitch3-primary-note: #5196ff;\n  --pitch4-secondary-channel: #001540;\n  --pitch4-primary-channel: #0041CA;\n  --pitch4-secondary-note: #001b55;\n  --pitch4-primary-note: #0041CA;\n  --pitch5-secondary-channel: #936e21;\n  --pitch5-primary-channel: #ffb300;\n  --pitch5-secondary-note: #936e21;\n  --pitch5-primary-note: #ffbe23;\n  --pitch6-secondary-channel: #ca5b00;\n  --pitch6-primary-channel: #faff52;\n  --pitch6-secondary-note: #ca5b00;\n  --pitch6-primary-note: #faff52;\n  --pitch7-secondary-channel: #75714a;\n  --pitch7-primary-channel: #fff3b8;\n  --pitch7-secondary-note: #75714a;\n  --pitch7-primary-note: #fff3b8;\n  --pitch8-secondary-channel: #9c4100;\n  --pitch8-primary-channel: #fc0;\n  --pitch8-secondary-note: #9c4100;\n  --pitch8-primary-note: #fc0;\n  --pitch9-secondary-channel: #8d4d00;\n  --pitch9-primary-channel: #ff9b20;\n  --pitch9-secondary-note: #8d4d00;\n  --pitch9-primary-note: #ff9b20;\n  --pitch10-secondary-channel: #a28f00;\n  --pitch10-primary-channel: #ffac55;\n  --pitch10-secondary-note: #a28f00;\n  --pitch10-primary-note: #ffac55;\n  --noise1-secondary-channel: #868686;\n  --noise1-primary-channel: #fff;\n  --noise1-secondary-note: #868686;\n  --noise1-primary-note: #fff;\n  --noise2-secondary-channel: #ad5600;\n  --noise2-primary-channel: #ffd300;\n  --noise2-secondary-note: #ad5600;\n  --noise2-primary-note: #ffd300;\n  --noise3-secondary-channel: #4f2f00;\n  --noise3-primary-channel: #fff3bc;\n  --noise3-secondary-note: #4f2f00;\n  --noise3-primary-note: #fff3bc;\n  --noise4-secondary-channel: #0070ff;\n  --noise4-primary-channel: #84f1ff;\n  --noise4-secondary-note: #0070ff;\n  --noise4-primary-note: #84f1ff;\n  --noise5-secondary-channel: #00c4b2;\n  --noise5-primary-channel: #4198ff;\n  --noise5-secondary-note: #00c4b2;\n  --noise5-primary-note: #4198ff;\n  --mod1-secondary-channel: #00046c;\n  --mod1-primary-channel: #00faff;\n  --mod1-secondary-note: #00046c;\n  --mod1-primary-note: #00faff;\n  --mod2-secondary-channel: #d25a00;\n  --mod2-primary-channel: #fdff00;\n  --mod2-secondary-note: #d25a00;\n  --mod2-primary-note: #fdff00;\n  --mod3-secondary-channel: #5a5a5a;\n  --mod3-primary-channel: #fff;\n  --mod3-secondary-note: #5a5a5a;\n  --mod3-primary-note: #fff;\n  --mod4-secondary-channel: #006dfb;\n  --mod4-primary-channel: #0ce7ff;\n  --mod4-secondary-note: #006dfb;\n  --mod4-primary-note: #0ce7ff;\n  --disabled-note-primary: #8d8d8d;\n  --disabled-note-secondary: #363636;\n\n  \n  \n    }\n\n\t\t\t`,\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t--editor-background: #040410;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t--pitch-background: #393e4f99;\n\t\t\t\t--tonic: #725491;\n\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t--third-note: #486;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--use-color-formula: true;\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #222;\n\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t--mod-primary-note-lum-scale: 0;\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t}`}`,\n    };\n\n    public static readonly pageMargin: string = \"var(--page-margin)\";\n    public static readonly editorBackground: string = \"var(--editor-background)\";\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\n    public static readonly playhead: string = \"var(--playhead)\";\n    public static readonly primaryText: string = \"var(--primary-text)\";\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\n    public static readonly invertedText: string = \"var(--inverted-text)\";\n    public static readonly textSelection: string = \"var(--text-selection)\";\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\n    public static readonly sampleFailed: string = \"var(--sample-failed, #f00)\";\n    public static readonly linkAccent: string = \"var(--link-accent)\";\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\n    public static readonly tonic: string = \"var(--tonic)\";\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\n\tpublic static readonly thirdNote: string = \"var(--third-note)\";\n\n\tpublic static readonly dimmedArea: string = \"var(--dimmed-area, var(--editor-background))\";\n\n\tpublic static readonly pitch1Background: string = \"var(--pitch1-background)\";\n\tpublic static readonly pitch2Background: string = \"var(--pitch2-background)\";\n\tpublic static readonly pitch3Background: string = \"var(--pitch3-background)\";\n\t// no need for a 4th since that's the --third-note's job\n\tpublic static readonly pitch5Background: string = \"var(--pitch5-background)\";\n\tpublic static readonly pitch6Background: string = \"var(--pitch6-background)\";\n\t// no need for a 7th since that's the --fifth-note's job\n\tpublic static readonly pitch8Background: string = \"var(--pitch8-background)\";\n\tpublic static readonly pitch9Background: string = \"var(--pitch9-background)\";\n\tpublic static readonly pitch10Background: string = \"var(--pitch10-background)\";\n\tpublic static readonly pitch11Background: string = \"var(--pitch11-background)\";\n\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\n\t// public static readonly oscilloscopeLineL: string = \"var(--oscilloscope-line-L)\";\n\t// public static readonly oscilloscopeLineR: string = \"var(--oscilloscope-line-R)\";\n\t// modTitle can stay uncommented until it's used somwhere that's not index.html\n\t// public static readonly modTitle: string = \"var(--mod-title)\";\n\tpublic static readonly songPlayerMargin: string = \"var(--song-player-margin)\";\n\tpublic static readonly progressBar: string = \"var(--progress-bar)\";\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\n\tpublic static readonly scrollbarColor: string = \"var(--scrollbar-color)\";\n\tpublic static readonly scrollbarBackground: string = \"var(--scrollbar-background)\";\n\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\n\tpublic static c_modSecondaryChannelHue: number = 0;\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\n\tpublic static c_modSecondaryChannelSat: number = 0;\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\n\tpublic static c_modSecondaryChannelLum: number = 0;\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\n\tpublic static c_modPrimaryChannelHue: number = 0;\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\n\tpublic static c_modPrimaryChannelSat: number = 0;\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\n\tpublic static c_modPrimaryChannelLum: number = 0;\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\n\tpublic static c_modSecondaryNoteHue: number = 0;\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\n\tpublic static c_modSecondaryNoteSat: number = 0;\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\n\tpublic static c_modSecondaryNoteLum: number = 0;\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\n\tpublic static c_modPrimaryNoteHue: number = 0;\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\n\tpublic static c_modPrimaryNoteSat: number = 0;\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\n\tpublic static c_modPrimaryNoteLum: number = 0;\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\n\tpublic static c_noisePrimaryChannelHue: number = 0;\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\n\tpublic static c_noisePrimaryChannelSat: number = 0;\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\n\tpublic static c_noisePrimaryChannelLum: number = 0;\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\n\tpublic static c_noisePrimaryNoteHue: number = 0;\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\n\tpublic static c_noisePrimaryNoteSat: number = 0;\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\n\tpublic static c_noisePrimaryNoteLum: number = 0;\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\n\n\tpublic static c_invertedText: string = \"\";\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\n\tpublic static c_trackEditorBgNoise: string = \"\";\n\tpublic static c_trackEditorBgModDim: string = \"\";\n\tpublic static c_trackEditorBgMod: string = \"\";\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\n\tpublic static c_trackEditorBgPitch: string = \"\";\n\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"pitch1\", // cyan\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\n            primaryChannel: \"var(--pitch1-primary-channel)\",\n            secondaryNote: \"var(--pitch1-secondary-note)\",\n            primaryNote: \"var(--pitch1-primary-note)\",\n        }, {\n            name: \"pitch2\", // yellow\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\n            primaryChannel: \"var(--pitch2-primary-channel)\",\n            secondaryNote: \"var(--pitch2-secondary-note)\",\n            primaryNote: \"var(--pitch2-primary-note)\",\n        }, {\n            name: \"pitch3\", // orange\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\n            primaryChannel: \"var(--pitch3-primary-channel)\",\n            secondaryNote: \"var(--pitch3-secondary-note)\",\n            primaryNote: \"var(--pitch3-primary-note)\",\n        }, {\n            name: \"pitch4\", // green\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\n            primaryChannel: \"var(--pitch4-primary-channel)\",\n            secondaryNote: \"var(--pitch4-secondary-note)\",\n            primaryNote: \"var(--pitch4-primary-note)\",\n        }, {\n            name: \"pitch5\", // magenta\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\n            primaryChannel: \"var(--pitch5-primary-channel)\",\n            secondaryNote: \"var(--pitch5-secondary-note)\",\n            primaryNote: \"var(--pitch5-primary-note)\",\n        }, {\n            name: \"pitch6\", // blue\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\n            primaryChannel: \"var(--pitch6-primary-channel)\",\n            secondaryNote: \"var(--pitch6-secondary-note)\",\n            primaryNote: \"var(--pitch6-primary-note)\",\n        }, {\n            name: \"pitch7\", // olive\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\n            primaryChannel: \"var(--pitch7-primary-channel)\",\n            secondaryNote: \"var(--pitch7-secondary-note)\",\n            primaryNote: \"var(--pitch7-primary-note)\",\n        }, {\n            name: \"pitch8\", // red\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\n            primaryChannel: \"var(--pitch8-primary-channel)\",\n            secondaryNote: \"var(--pitch8-secondary-note)\",\n            primaryNote: \"var(--pitch8-primary-note)\",\n        }, {\n            name: \"pitch9\", // teal\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\n            primaryChannel: \"var(--pitch9-primary-channel)\",\n            secondaryNote: \"var(--pitch9-secondary-note)\",\n            primaryNote: \"var(--pitch9-primary-note)\",\n        }, {\n            name: \"pitch10\", // purple\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\n            primaryChannel: \"var(--pitch10-primary-channel)\",\n            secondaryNote: \"var(--pitch10-secondary-note)\",\n            primaryNote: \"var(--pitch10-primary-note)\",\n        },\n\t\t{\n            name: \"pitch11\", // teal\n            secondaryChannel: \"var(--pitch11-secondary-channel)\",\n            primaryChannel: \"var(--pitch11-primary-channel)\",\n            secondaryNote: \"var(--pitch11-secondary-note)\",\n            primaryNote: \"var(--pitch11-primary-note)\",\n        }, {\n            name: \"pitch12\", // purple\n            secondaryChannel: \"var(--pitch12-secondary-channel)\",\n            primaryChannel: \"var(--pitch12-primary-channel)\",\n            secondaryNote: \"var(--pitch12-secondary-note)\",\n            primaryNote: \"var(--pitch12-primary-note)\",\n        },\n    ]);\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"noise1\", // gray\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\n            primaryChannel: \"var(--noise1-primary-channel)\",\n            secondaryNote: \"var(--noise1-secondary-note)\",\n            primaryNote: \"var(--noise1-primary-note)\",\n        }, {\n            name: \"noise2\", // brown\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\n            primaryChannel: \"var(--noise2-primary-channel)\",\n            secondaryNote: \"var(--noise2-secondary-note)\",\n            primaryNote: \"var(--noise2-primary-note)\",\n        }, {\n            name: \"noise3\", // azure\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\n            primaryChannel: \"var(--noise3-primary-channel)\",\n            secondaryNote: \"var(--noise3-secondary-note)\",\n            primaryNote: \"var(--noise3-primary-note)\",\n        }, {\n            name: \"noise4\", // purple\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\n            primaryChannel: \"var(--noise4-primary-channel)\",\n            secondaryNote: \"var(--noise4-secondary-note)\",\n            primaryNote: \"var(--noise4-primary-note)\",\n        }, {\n            name: \"noise5\", // sage\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\n            primaryChannel: \"var(--noise5-primary-channel)\",\n            secondaryNote: \"var(--noise5-secondary-note)\",\n            primaryNote: \"var(--noise5-primary-note)\",\n        },\n    ]);\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"mod1\",\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\n            primaryChannel: \"var(--mod1-primary-channel)\",\n            secondaryNote: \"var(--mod1-secondary-note)\",\n            primaryNote: \"var(--mod1-primary-note)\",\n        }, {\n            name: \"mod2\",\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\n            primaryChannel: \"var(--mod2-primary-channel)\",\n            secondaryNote: \"var(--mod2-secondary-note)\",\n            primaryNote: \"var(--mod2-primary-note)\",\n        }, {\n            name: \"mod3\",\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\n            primaryChannel: \"var(--mod3-primary-channel)\",\n            secondaryNote: \"var(--mod3-secondary-note)\",\n            primaryNote: \"var(--mod3-primary-note)\",\n        }, {\n            name: \"mod4\",\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\n            primaryChannel: \"var(--mod4-primary-channel)\",\n            secondaryNote: \"var(--mod4-secondary-note)\",\n            primaryNote: \"var(--mod4-primary-note)\",\n        },\n    ]);\n\n    public static resetColors() {\n        this.colorLookup.clear();\n    }\n\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\n\n        if (!this.usesColorFormula) {\n            let base: ChannelColors;\n            switch (type) {\n                case (\"noise\"): {\n                    base = ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length] \n\t\t\t\t\t: ColorConfig.noiseChannels[channel % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\n                    break;\n                }\n                case (\"mod\"): {\n                    base = ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.modChannels[channel % ColorConfig.modChannels.length] \n\t\t\t\t\t: ColorConfig.modChannels[channel % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\n                    break;\n                }\n                case (\"pitch\"):\n                default: {\n                    base = ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\n                    break;\n                }\n            }\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        switch (type) {\n            case (\"noise\"): {\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            } case (\"mod\"): {\n                // Mod formula\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n            case (\"pitch\"):\n            default: {\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n        }\n    }\n\n    // Same as below, but won't return var colors\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\n            // Trim away \"var(...)\"\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, channel);\n        }\n    };\n\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            // Set colors, not defined by formula\n\t\t\tif (channel < song.pitchChannelCount) {\n\t\t\t\treturn ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t: ColorConfig.pitchChannels[(channel % Number(ColorConfig.getComputed(\"--pitch-channel-limit\"))) % ColorConfig.pitchChannels.length];\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                return ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length] \n\t\t\t\t: ColorConfig.noiseChannels[((channel - song.pitchChannelCount) % Number(ColorConfig.getComputed(\"--noise-channel-limit\"))) % ColorConfig.noiseChannels.length];\n            } else {\n                return ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length] \n\t\t\t\t: ColorConfig.modChannels[((channel - song.pitchChannelCount - song.noiseChannelCount) % Number(ColorConfig.getComputed(\"--mod-channel-limit\"))) % ColorConfig.modChannels.length];\n            }\n        }\n        else {\n            // Determine if color is cached\n            if (ColorConfig.colorLookup.has(channel)) {\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\n            }\n            else {\n                // Formulaic color definition\n                if (channel < song.pitchChannelCount) {\n                    // Pitch formula\n\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    // Noise formula\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    // Mod formula\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n\n\tpublic static setThemeProperty(name: string, value: string): void {\n\t\t//this._styleElement.sheet?.cssRules[0].style.setProperty(name, value);\n\t\t(this._styleElement.sheet?.cssRules[0] as CSSStyleRule).style.setProperty(name, value);\n\t}\n\n\tpublic static getThemeProperties(): string {\n\t\treturn this._styleElement.sheet?.cssRules[0].cssText as string;\n\t}\n\n\tpublic static getFullTheme(): string {\n\t\treturn this._styleElement.textContent as string;\n\t}\n\n    public static setTheme(name: string): void {\n\t\tlet theme: string = this.themes[name];\n\t\tif (theme == undefined) theme = this.themes[\"AbyssBox Classic\"];\n\t\tthis._styleElement.textContent = theme;\n\t\tthis.currentSetTheme = name;\n\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n\t\n        this.resetColors();\n\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\n\t\tthis.usesPianoScheme = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-piano-scheme\").trim() == \"true\");\n\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\n\n\t\tif (this.usesColorFormula) {\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n        }\n\n\n\n    }\n\n    public static getComputed(name: string): string {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\n\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\n\nexport interface PresetCategory extends BeepBoxOption {\n    readonly presets: DictionaryArray<Preset>;\n}\n\nexport interface Preset extends BeepBoxOption {\n    readonly isNoise?: boolean;\n    readonly isMod?: boolean;\n    readonly generalMidi?: boolean;\n    readonly midiProgram?: number;\n    readonly midiSubharmonicOctaves?: number;\n    readonly customType?: InstrumentType;\n    readonly settings?: any;\n    \n}\n\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\nexport function prettyNumber(value: number): string {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\n\nexport class EditorConfig {\n    public static readonly version: string = \"0.1\"; // Using patch versions in display right now, maybe TODAY. // choptop84 here who wrote this??\n    public static readonly versionDisplayName: string = \"BulbBox \" + EditorConfig.version;\n\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\n\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\n\n    public static customSamples: string[] | null;\n\t\n    public static showSongDetailsAlert: boolean = true;\n\t\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\n        {\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\n                { name: TypePresets[InstrumentType.supersaw], customType: InstrumentType.supersaw },\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\n            ])\n        },\n        {\n            name: \"Base Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"Square Wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"Square Pulse\", midiProgram: 80, settings: {\"type\":\"PWM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"pulseWidth\":50,\"decimalOffset\":0,\"envelopes\":[],\"isDrum\":false} },\n                { name: \"White Noise\", midiProgram: 80, settings: {\"type\":\"noise\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"wave\":\"white\",\"envelopes\":[],\"isDrum\":false} },\n                { name: \"FM Sine\", midiProgram: 55, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":true,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[],\"isDrum\":false} },\n            ]),\n        },\n        {\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"C1 Square Kick\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"eqSubFilters1\":[],\"effects\":[\"panning\",\"pitch shift\"],\"pitchShiftSemitones\":24,\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"ALL\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"feedbackAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":3},{\"target\":\"pitchShift\",\"envelope\":\"linear\",\"inverse\":false,\"perEnvelopeSpeed\":64,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":2},{\"target\":\"noteVolume\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":0.75,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1}],\"isDrum\":false} },\n                { name: \"C2 Snare (Part 1)\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"transition type\",\"pitch shift\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"pitchShiftSemitones\":24,\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteVolume\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":0.3,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"pitchShift\",\"envelope\":\"linear\",\"inverse\":false,\"perEnvelopeSpeed\":256,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":2}],\"isDrum\":false} },\n                { name: \"D3 Snare (Part 2)\", midiProgram: 80, settings: {\"type\":\"noise\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"transition type\",\"pitch shift\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"pitchShiftSemitones\":19,\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"wave\":\"white\",\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteVolume\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":0.4,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"pitchShift\",\"envelope\":\"linear\",\"inverse\":false,\"perEnvelopeSpeed\":64,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"pitchShift\",\"envelope\":\"linear\",\"inverse\":false,\"perEnvelopeSpeed\":24,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1}],\"isDrum\":false} },\n                { name: \"A4 Hi-Hat\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":2.8284}],\"eqSubFilters1\":[],\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"ALL\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"100×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":15,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":0.5}],\"isDrum\":false} },\n                { name: \"FM Kick\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"pitch shift\",\"note filter\"],\"pitchShiftSemitones\":12,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[],\"noteSubFilters0\":[],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1 2←3←4\",\"feedbackType\":\"2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"8×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":9,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":9,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":24,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":4,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":1,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":0},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell\",\"inverse\":false,\"perEnvelopeSpeed\":8,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"swell\",\"inverse\":false,\"perEnvelopeSpeed\":8,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":3},{\"target\":\"pitchShift\",\"envelope\":\"swell\",\"inverse\":false,\"perEnvelopeSpeed\":32,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"operatorFrequency\",\"envelope\":\"swell\",\"inverse\":false,\"perEnvelopeSpeed\":8,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":2},{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":2,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":2,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"decay\",\"inverse\":false,\"perEnvelopeSpeed\":2,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":3},{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1.6,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1.5,\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1.5,\"index\":3}],\"isDrum\":false} },\n            ]),\n        },\n        {\n            name: \"Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"Shocker Bass\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":5,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":3,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"10×\",\"amplitude\":9,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":64,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":3}],\"isDrum\":false} },\n                { name: \"Sawtooth Bass\", midiProgram: 80, settings: {\"type\":\"chip\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.7071}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.7071}],\"effects\":[\"panning\",\"distortion\",\"bitcrusher\",\"reverb\",\"phaser\"],\"distortion\":71,\"aliases\":false,\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":57,\"phaserMix\":81,\"phaserFreq\":0,\"phaserFeedback\":26,\"phaserStages\":6,\"pan\":0,\"panDelay\":10,\"reverb\":39,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"unison\":\"recurve\",\"wave\":\"sawtooth\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":2},{\"target\":\"noteVolume\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":64,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1.5}],\"isDrum\":false} },\n                { name: \"C64 Bass\", midiProgram: 80, settings: {\"type\":\"PWM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"note filter\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":5.6569}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":5.6569}],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"pulseWidth\":50,\"decimalOffset\":0,\"envelopes\":[{\"target\":\"pulseWidth\",\"envelope\":\"twang\",\"inverse\":true,\"perEnvelopeSpeed\":15,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteVolume\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1.5}],\"isDrum\":false} },\n                { name: \"SuperSaw Bass\", midiProgram: 80, settings: {\"type\":\"supersaw\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"effects\":[\"panning\",\"note filter\",\"echo\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":1.4142}],\"pan\":0,\"panDelay\":0,\"echoSustain\":57,\"echoDelayBeats\":0.5,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"pulseWidth\":50,\"decimalOffset\":0,\"dynamism\":100,\"spread\":50,\"shape\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":8,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1}],\"isDrum\":false} },\n                { name: \"Evil Bass\", midiProgram: 80, settings: {\"type\":\"Picked String\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,100,100,86,86,86,86,86,86,100,100,100,86,71,71,57,57,57,43,43,43,43,29,29,29,29,14,100],\"unison\":\"inject\",\"stringSustain\":7,\"envelopes\":[],\"isDrum\":false} },\n                { name: \"Pulse Bass\", midiProgram: 80, settings: {\"type\":\"PWM\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.125}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.125}],\"effects\":[\"panning\",\"transition type\",\"note filter\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1}],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"octave\",\"pulseWidth\":50,\"decimalOffset\":0,\"envelopes\":[{\"target\":\"pulseWidth\",\"envelope\":\"lfo\",\"inverse\":false,\"perEnvelopeSpeed\":1,\"perEnvelopeLowerBound\":0.8,\"perEnvelopeUpperBound\":1.2,\"waveform\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0.7,\"perEnvelopeUpperBound\":2},{\"target\":\"noteVolume\",\"envelope\":\"punch\",\"inverse\":false,\"perEnvelopeSpeed\":0,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1}],\"isDrum\":false} },\n            ]),\n        },\n        {\n            name: \"Lead Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"Saw Lead\", midiProgram: 80, settings: {\"type\":\"chip\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"panning\",\"detune\",\"distortion\",\"echo\",\"reverb\"],\"detuneCents\":-10,\"distortion\":71,\"aliases\":false,\"pan\":0,\"panDelay\":10,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":16,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"octave\",\"wave\":\"sawtooth\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[],\"isDrum\":false} },\n                { name: \"Hexefe's CoolSaw\", midiProgram: 80, settings: {\"type\":\"chip\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"vibrato\",\"chorus\",\"echo\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"chorus\":71,\"echoSustain\":43,\"echoDelayBeats\":1,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"wave\":\"sawtooth\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[],\"isDrum\":false} },\n                { name: \"Spooky Triangle\", midiProgram: 80, settings: {\"type\":\"chip\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"vibrato\",\"note filter\",\"echo\",\"reverb\"],\"vibrato\":\"custom\",\"vibratoDepth\":0.52,\"vibratoDelay\":10,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":105.11,\"linearGain\":4}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":105.11,\"linearGain\":4}],\"pan\":0,\"panDelay\":10,\"echoSustain\":43,\"echoDelayBeats\":0.5,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"wave\":\"triangle\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[],\"isDrum\":false} },\n            ]),\n        },\n        {\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"Distortion Guitar 1\", midiProgram: 80, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"eqFilterType\":true,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"panning\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\"],\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":2}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":2}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":14,\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"blip\",\"inverse\":false,\"perEnvelopeSpeed\":10,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1,\"index\":3}],\"isDrum\":false} },\n            ]),\n        },\n                {\n            name: \"Other Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"Clock Tower/Church Bell\", midiProgram: 80, settings: {\"type\":\"noise\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"phaser\"],\"phaserMix\":100,\"phaserFreq\":81,\"phaserFeedback\":100,\"phaserStages\":103,\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"unison\":\"none\",\"wave\":\"white\",\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang\",\"inverse\":false,\"perEnvelopeSpeed\":4,\"perEnvelopeLowerBound\":0,\"perEnvelopeUpperBound\":1}],\"isDrum\":false} },\n            ]),\n        },\n        \n\n    ]);\n\n    public static valueToPreset(presetValue: number): Preset | null {\n        const categoryIndex: number = presetValue >> 6;\n        const presetIndex: number = presetValue & 0x3F;\n        return EditorConfig?.presetCategories[categoryIndex].presets[presetIndex];\n    }\n\n    public static midiProgramToPresetValue(program: number): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static nameToPresetValue(presetName: string): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","//A simple events system for effectively direct links without actualy linking files or references\nclass EventManager { \n    private activeEvents:string[] = [];\n    private listeners:any = {};\n\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n\n\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData,extraEventData)\n        }\n        this.activeEvents.pop();\n    }\n\n    public listen(eventType:string,callback:Function): void {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = []\n        }\n        this.listeners[eventType].push(callback)\n    }\n\n    public unlisten(eventType: string, callback: Function): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    public unlistenAll(eventType: string): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType]=[];\n    }\n}\n\nexport const events:EventManager = new EventManager()","/*\nThis file contains code to compute digital audio filter coefficients based on\nthe desired type, cutoff frequency, and other parameters. You can use these\ncoefficients to apply the filter to audio samples. It also contains code to\nanalyze these filters, which is useful for graphically displaying their effects.\n\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\nfilters, because older output samples contribute feedback to newer output\nsamples and thus contribute to all future samples, although typically filters\nare design to reduce the contribution of older samples over time.\n\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\nvolume of the signal at all but induce phase changes above the cutoff frequency.\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\nbut raise or lower the volume at that frequency. \n\nThe number of old samples used in the filter determines the \"order\" of the\nfilter. First-order filters generally have shallower slopes, and second-order\nfilters generally have steeper slopes and can be configured to \"resonate\",\nmeaning they have a louder peak at the cutoff frequency. This file contains\nfirst-order filters and second-order filters, meaning one or two older samples\nare involved, as well as the current input sample.\n\nThe class FilterCoefficients is defined lower in this file. You can use it to\nset up a first order filter like this:\n\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst filter: FilterCoefficients = new FilterCoefficients();\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\n\tconst a: number[] = filter.a;\n\t// input sample coefficients are conventionally called b0, b1, etc\n\tconst b: number[] = filter.b;\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\n\tconst x: number[] = [0, 0, 0];\n\t// filter output samples, y[0] will be computed by the filter based on input\n\t// samples and older output samples.\n\tconst y: number[] = [0, 0, 0];\n\nThen to apply the first-order filter to samples inside a loop, using the current\ninput sample (x[0]) as well as previous input and output samples, do this:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\n\t// Remember the input and output samples for next time:\n\tx[1] = x[0];\n\ty[1] = y[0];\n\n2nd order filters are similar, but have more parameters and require more old\nsamples:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\n\t// Remember the input and output samples for next time:\n\tx[2] = x[1];\n\tx[1] = x[0];\n\ty[2] = y[1];\n\ty[1] = y[0];\n\nYou can compose multiple filters into a higher order filter, although doing so\nreduces the numerical stability of the filter:\n\n\tfilter3.combination(filter1, filter2);\n\t// filter3.order will equal: filter1.order + filter2.order\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\n\nThis file also contains a class called FrequencyResponse. You can use it to\ndetermine how much gain or attenuation a filter would apply to sounds at a\nspecific input frequency, as well as the phase offset:\n\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst response: FrequencyResponse = new FrequencyResponse();\n\tresponse.analyze(filter, inputRadians);\n\tconst gainResponse = response.magnitude();\n\tconst phaseResponse = response.angle();\n\nThat's basically all you need to know to use this code, but I'll also explain\nhow the analysis works.\n\nA first-order digital IIR filter is ordinarily implemented in a form like this:\n\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\n\nIf we adopt standard naming conventions for audio filters, this same code would\ninstead look like:\n\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\n\ty0 = b0*x0 + b1*x1 - a1*y1;\n\nLeaving behind the world of code for a moment and entering the world of algebra,\nwe can rewrite this equation by moving all the output terms to the left side,\nand we can add a coefficient to the y0 term called a0 (which is typically\nnormalized to 1.0, which is why I didn't bother including it until now):\n\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\n\nThis is known as the symmetrical form of the filter, and it will help us analyze\nthe impact of the filter on an input audio signal. Here's a lesson that helped\nme understand the symmetrical form:\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\n\nThe end of that lesson introduces a concept called the \"delay operator\" which\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\nwhen you multiply them. For example:\n\n\tx0 * z^-1 = x1\n\nThe lesson doesn't explain how it actually works. Audio signals aren't always\npredictable, which means that you generally can't do math on a single sample to\ncompute what the previous sample was. However, some audio signals ARE\npredictable, such as pure sine waves. Fortunately, all audio signals can be\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\ntime, and use it to analyze the filter's impact on waves at that frequency. In\npractice, this tells us what the filter will do to unpredictable input samples\nthat contain a partial sine wave at that frequency.\n\nTechnically, you can't just use a single sine wave sample to determine the\nprevious sine wave sample, because each possible value is passed going upwards\nand downwards once per period and the direction is ambigous. This is where we\nneed to move into the complex number domain, where the real and imaginary\ncomponents can provide enough information to compute the previous position on\nthe input signal. So now instead of talking about sine waves, we're talking\nabout waves where the imaginary component is a sine wave and the real component\nis a cosine wave at the same frequency. Together, they trace around a unit\ncircle in the complex domain, and each sample is just a consistent rotation\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\nthis same rotation applied in reverse, and it can be computed as:\n\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\n\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\nexplaining what that means is probably beyond the scope of this documentation\naside from noting that a complex number on the unit circle represents a 2D\nrotation that you can apply via multiplication.\n\nNow we can rewrite the symmetrical form using the delay operator and algebra:\n\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nThat last equation expresses the relationship between the input and output\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\npoint, the specific values of the input and output samples don't even matter!\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\n\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nIf you plug in actual filter coefficients and express the delay operators as\ncomplex numbers with the appropriate trigonometry functions, the transfer\nfunction can be computed and produces a complex number that represents the\nrelationship between the input and output signals, whose magnitude represents\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\nrepresents how much phase shift is applied by the filter to signals at that\nfrequency.\n\n(Note that in order to compute the transfer function, you'll need to do\nsomething about the complex number in the denominator. It turns out you can turn\nthe denominator into a real number by multiplying both the numerator and\ndenominator by the complex conjugate of the denominator, which is just the\ndenominator with the imaginary component negated.)\n\nFinally, I'll list some of the links that helped me understand filters and\nprovided some of the algorithms I that use here.\n\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\ndigital filters:\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\n\nThis page is how I found a link to the cookbook article above. It claims these\nfilters are Butterworth filters:\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\nI found the first-order digital Butterworth filter coefficients at:\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\n\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\nhttps://www.drpetter.se/project_sfxr.html\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\nnearly identical, but when closer to the nyquist frequency the simpler filters\ncreate extra resonance.\n*/\n\nexport class FilterCoefficients {\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\n\tpublic readonly b: number[] = [1.0]; // input coefficients\n\tpublic order: number = 0;\n\t\n\tpublic linearGain0thOrder(linearGain: number): void {\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\n\t\tthis.b[0] = linearGain;\n\t\tthis.order = 0;\n\t}\n\t\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth low-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\t// A butterworth filter is one where the amplitude response is equal to:\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[1] = this.b[0] = 1 / a0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\n\t\t// then the output is the same as the input, and if the cutoff is higher\n\t\t// than that, then the output actually resonates at high frequencies\n\t\t// instead of attenuating.\n\t\t// I'm guessing this filter was converted from analog to digital using\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\n\t\t// method. The difference is that the bilinear transform warps\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\n\t\t// preserves the frequency of the filter response but also adds the\n\t\t// reflected response from above the nyquist frequency.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 0.0;\n\t\t/*\n\t\t// Alternatively:\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\n\t\tconst a0: number = g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = 1.0 / a0;\n\t\tthis.b[1] = 0.0 / a0;\n\t\t*/\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth high-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = g / a0;\n\t\tthis.b[1] = -g / a0;\n\t\tthis.order = 1;\n\t}\n\t/*\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\n\t\t// appoaches the nyquist.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\n\t\t// I had trouble figuring this one out because I couldn't find any\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\n\t\t// and I could narrow down a couple of them based on the desired gain at\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\n\t\t// Obviously I don't fully understand the bilinear transform yet!\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n\t\tconst a0: number = 1.0;\n\t\tthis.a[1] = g / a0;\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\t/*\n\t// I haven't found a practical use for this version of the all pass filter.\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = -g;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\t\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\n\t\t// differently and for a different purpose! Useful for interpolating\n\t\t// between samples in a delay line.\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\n\t\t// although it gets distorted near the nyquist.\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\n\t\tthis.b[1] = (1 - cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This filter is adapted from the one in the SFXR source code:\n\t\t// https://www.drpetter.se/project_sfxr.html\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\n\t\t// above, except it resonates too much when the cutoff appoaches the\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\n\t\t// nyquist/3, then the output is the same as the input.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = g*g;\n\t\tthis.b[1] = 0;\n\t\tthis.b[2] = 0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1.0 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\n\t\tthis.b[1] = -(1.0 + cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -2.0;\n\t\tthis.b[2] = 1.0;\n\t\tthis.order = 2;\n\t}\n\t*/\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\n\t\tconst Aplus: number = A + 1.0;\n\t\tconst Aminus: number = A - 1.0;\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.order = 2;\n\t}\n\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\t// Create a higher order filter by combining two lower order filters.\n\t// However, making high order filters in this manner results in instability.\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\n\t\tthis.order = filter1.order + filter2.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = 0.0;\n\t\t\tthis.b[i] = 0.0;\n\t\t}\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\n\t\tif (other.order != this.order) throw new Error();\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\n\t\t}\n\t}\n\t\n\tpublic copy(other: FilterCoefficients): void {\n\t\tthis.order = other.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = other.a[i];\n\t\t\tthis.b[i] = other.b[i];\n\t\t}\n\t}\n\t*/\n}\n\nexport class FrequencyResponse {\n\tpublic real: number = 0.0;\n\tpublic imag: number = 0.0;\n\tpublic denom: number = 1.0;\n\t\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n\t}\n\t\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\n\t\tconst a: number[] = filter.a;\n\t\tconst b: number[] = filter.b;\n\t\tconst realZ1: number = real;\n\t\tconst imagZ1: number = -imag;\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\n\t\tlet imagNum: number = b[1] * imagZ1;\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\n\t\tlet imagDenom: number = a[1] * imagZ1;\n\t\tlet realZ: number = realZ1;\n\t\tlet imagZ: number = imagZ1;\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\n\t\t\trealZ = realTemp;\n\t\t\timagZ = imagTemp;\n\t\t\trealNum += b[i] * realZ;\n\t\t\timagNum += b[i] * imagZ;\n\t\t\trealDenom += a[i] * realZ;\n\t\t\timagDenom += a[i] * imagZ;\n\t\t}\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\n\t}\n\t\n\tpublic magnitude(): number {\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n\t}\n\t\n\tpublic angle(): number {\n\t\treturn Math.atan2(this.imag, this.real);\n\t}\n}\n\nexport class DynamicBiquadFilter {\n\tpublic a1: number = 0.0;\n\tpublic a2: number = 0.0;\n\tpublic b0: number = 1.0;\n\tpublic b1: number = 0.0;\n\tpublic b2: number = 0.0;\n\tpublic a1Delta: number = 0.0;\n\tpublic a2Delta: number = 0.0;\n\tpublic b0Delta: number = 0.0;\n\tpublic b1Delta: number = 0.0;\n\tpublic b2Delta: number = 0.0;\n\tpublic output1: number = 0.0;\n\tpublic output2: number = 0.0;\n\t\n\t// Some filter types are more stable when interpolating between coefficients\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\n\t// for filter types where the \"b\" coefficients might change sign!\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\n\t\n\tpublic resetOutput(): void {\n\t\tthis.output1 = 0.0;\n\t\tthis.output2 = 0.0;\n\t}\n\t\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\n\t\tthis.a1 = start.a[1];\n\t\tthis.a2 = start.a[2];\n\t\tthis.b0 = start.b[0];\n\t\tthis.b1 = start.b[1];\n\t\tthis.b2 = start.b[2];\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n\t\tif (useMultiplicativeInputCoefficients) {\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n\t\t} else {\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n\t\t}\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n\t}\n}\n// Filters are typically designed as analog filters first, then converted to\n// digital filters using one of two methods: the \"matched z-transform\" or the\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\n// preserving the magnitudes of the frequency response, but warps the frequency\n// range such that the nyquist frequency of the digital filter (π) maps to the\n// infinity frequency of the analog filter. You can use the below functions to\n// manually perform this warping in either direction.\nexport function warpNyquistToInfinity(radians: number): number {\n\treturn 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians: number): number {\n\treturn 2.0 * Math.atan(radians * 0.5);\n}\n","const PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\nlet encoder;\n/**\n *\n * @param input - byte array or string\n * @param seed - optional seed (32-bit unsigned);\n */\nexport function xxHash32(input, seed = 0) {\n    const buffer = typeof input === 'string' ? (encoder ??= new TextEncoder()).encode(input) : input;\n    const b = buffer;\n    /*\n        Step 1. Initialize internal accumulators\n        Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n        ```\n            u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n            u32 acc2 = seed + PRIME32_2;\n            u32 acc3 = seed + 0;\n            u32 acc4 = seed - PRIME32_1;\n        ```\n        Special case : input is less than 16 bytes\n        When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n        make use of parallel accumulators.\n\n        In which case, a simplified initialization is performed, using a single accumulator :\n\n        u32 acc  = seed + PRIME32_5;\n        The algorithm then proceeds directly to step 4.\n    */\n    let acc = (seed + PRIME32_5) & 0xffffffff;\n    let offset = 0;\n    if (b.length >= 16) {\n        const accN = [\n            (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n            (seed + PRIME32_2) & 0xffffffff,\n            (seed + 0) & 0xffffffff,\n            (seed - PRIME32_1) & 0xffffffff,\n        ];\n        /*\n            Step 2. Process stripes\n            A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n            The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n            Each lane read its associated 32-bit value using little-endian convention.\n\n            For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n            ```\n            accN = accN + (laneN * PRIME32_2);\n            accN = accN <<< 13;\n            accN = accN * PRIME32_1;\n            ```\n\n            This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n            All operations are performed modulo 2^32.\n\n            Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n            the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n            happens, move to step 3.\n        */\n        const b = buffer;\n        const limit = b.length - 16;\n        let lane = 0;\n        for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneNP = laneN0 * PRIME32_2 + ((laneN1 * PRIME32_2) << 16);\n            let acc = (accN[lane] + laneNP) & 0xffffffff;\n            acc = (acc << 13) | (acc >>> 19);\n            const acc0 = acc & 0xffff;\n            const acc1 = acc >>> 16;\n            accN[lane] = (acc0 * PRIME32_1 + ((acc1 * PRIME32_1) << 16)) & 0xffffffff;\n            lane = (lane + 1) & 0x3;\n        }\n        /*\n            Step 3. Accumulator convergence\n            All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n            of same width (32-bit). The associated formula is as follows :\n\n            ```\n            acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n            ```\n        */\n        acc =\n            (((accN[0] << 1) | (accN[0] >>> 31)) +\n                ((accN[1] << 7) | (accN[1] >>> 25)) +\n                ((accN[2] << 12) | (accN[2] >>> 20)) +\n                ((accN[3] << 18) | (accN[3] >>> 14))) &\n                0xffffffff;\n    }\n    /*\n        Step 4. Add input length\n        The input total length is presumed known at this stage. This step is just about adding the length to\n        accumulator, so that it participates to final mixing.\n\n        ```\n        acc = acc + (u32)inputLength;\n        ```\n    */\n    acc = (acc + buffer.length) & 0xffffffff;\n    /*\n        Step 5. Consume remaining input\n        There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n        to following pseudo-code :\n        ```\n        while (remainingLength >= 4) {\n            lane = read_32bit_little_endian(input_ptr);\n            acc = acc + lane * PRIME32_3;\n            acc = (acc <<< 17) * PRIME32_4;\n            input_ptr += 4; remainingLength -= 4;\n        }\n        ```\n        This process ensures that all input bytes are present in the final mix.\n    */\n    const limit = buffer.length - 4;\n    for (; offset <= limit; offset += 4) {\n        const i = offset;\n        const laneN0 = b[i + 0] + (b[i + 1] << 8);\n        const laneN1 = b[i + 2] + (b[i + 3] << 8);\n        const laneP = laneN0 * PRIME32_3 + ((laneN1 * PRIME32_3) << 16);\n        acc = (acc + laneP) & 0xffffffff;\n        acc = (acc << 17) | (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_4 + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n    }\n    /*\n        ```\n        while (remainingLength >= 1) {\n            lane = read_byte(input_ptr);\n            acc = acc + lane * PRIME32_5;\n            acc = (acc <<< 11) * PRIME32_1;\n            input_ptr += 1; remainingLength -= 1;\n        }\n        ```\n    */\n    for (; offset < b.length; ++offset) {\n        const lane = b[offset];\n        acc = acc + lane * PRIME32_5;\n        acc = (acc << 11) | (acc >>> 21);\n        acc = ((acc & 0xffff) * PRIME32_1 + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n    }\n    /*\n        Step 6. Final mix (avalanche)\n        The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n        resulting in an unbiased distribution. This is also called avalanche effect.\n        ```\n        acc = acc xor (acc >> 15);\n        acc = acc * PRIME32_2;\n        acc = acc xor (acc >> 13);\n        acc = acc * PRIME32_3;\n        acc = acc xor (acc >> 16);\n        ```\n    */\n    acc = acc ^ (acc >>> 15);\n    acc = (((acc & 0xffff) * PRIME32_2) & 0xffffffff) + (((acc >>> 16) * PRIME32_2) << 16);\n    acc = acc ^ (acc >>> 13);\n    acc = (((acc & 0xffff) * PRIME32_3) & 0xffffffff) + (((acc >>> 16) * PRIME32_3) << 16);\n    acc = acc ^ (acc >>> 16);\n    // turn any negatives back into a positive number;\n    return acc < 0 ? acc + 4294967296 : acc;\n}\n//# sourceMappingURL=xxHash32.js.map","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeRM, effectsIncludePhaser, effectsIncludeNoteRange, OperatorWave, effectsIncludeInvertWave, BaseWaveTypes, RandomEnvelopeTypes } from \"./SynthConfig\";\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\nimport { xxHash32 } from \"js-xxhash\";\n\n\ndeclare global {\n    interface Window {\n        AudioContext: any;\n        webkitAudioContext: any;\n    }\n}\n\n/**\n * Equals 1.0e-24, which is roughly 0.000000000000000000000001, or a sextillionth.\n */\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\n\n// For performance debugging:\n//let samplesAccumulated: number = 0;\n//let samplePerformance: number = 0;\n\n/**\n   * Takes a number between a maximum value and a minimum value and \n   * if that value is greater or lesser than the specified maximum or minimum, it's then \n   * forced to be the maximum or minimum value respectively.\n   * \n   * \n   * @param min The minimum number value allowed.\n   * \n   * @param max The maximum number value allowed minus 1.\n   * \n   * @param val The inputted number that can be clamped.\n   */\nexport function clamp(min: number, max: number, val: number): number {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min) return val;\n        else return min;\n    } else {\n        return max;\n    }\n}\n\n/**\n * Checks if a value is within the correct range. If the value is within the range, then it returns the value. \n * if not, then an error is thrown stating the value is out of range.\n * \n * @param min A specified minimum value\n * @param max A specified maximum value\n * @param val The value to be checked\n * @returns If the value is in range, then it returns val\n */\nfunction validateRange(min: number, max: number, val: number): number {\n    if (min <= val && val <= max) return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\n\n/**\n * Converts a string to a floating-point number. \n * \n * If the string is empty, then it instead uses a default value.\n * \n * @param s The string to parse\n * @param defaultValue The default value if the string is NaN\n */\nexport function parseFloatWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseFloat(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\n/**\n * Converts a string to an integer. \n * \n * If the string is empty, then it instead uses a default value.\n * \n * @param s The string to parse\n * @param defaultValue The default value if the string is NaN\n */\nexport function parseIntWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseInt(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\n/**\n * Encodes a number (assumed to be 32 bits long) into the Base64 buffer.\n * \n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\n * @param x The number to encode.\n */\nfunction encode32BitNumber(buffer: number[], x: number): void {\n    // 0b11_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    //      111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    //             111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    //                    111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    //                           111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    //                                  111111\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\n\n// @TODO: This is error-prone, because the caller has to remember to increment\n// charIndex by 6 afterwards.\n/**\n * Decodes an encoded 32 bit number.\n * \n * @param compressed A string that's supposed to contain the compressed 32 bit value.\n * @param charIndex The current character that's being read.\n * @returns x\n */\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\n    let x: number = 0;\n    // 0b11_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    //      111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    //             111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    //                    111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    //                           111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    //                                  111111\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\n\n/**\n * Encodes the unison settings into a base 64 number.\n * \n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\n * @param v Unison Voices\n * @param s Unison Spread\n * @param o Unison Offset\n * @param e Unison Expression\n * @param i Unison Sign\n */\nfunction encodeUnisonSettings(buffer: number[], v: number, s: number, o: number, e: number, i: number, b: boolean): void {\n    buffer.push(base64IntToCharCode[v]);\n    \n    // logically this should be done with bitshifts... but I don't know how to do that, so\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    \n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n\n    buffer.push(base64IntToCharCode[+b]);\n}\n\n/**\n * Converts the older Key Index to the newer version.\n * \n * There isn't any reason to use this outside of backwards compatibility.\n */\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave: number = 0;\n    // This conversion code depends on C through B being\n    // available as keys, of course.\n    if (rawKeyIndex === 12) {\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\n        key = 0;\n        octave = 1;\n    } else if (rawKeyIndex === 13) {\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\n        key = 6;\n        octave = -1;\n    } else if (rawKeyIndex === 14) {\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\n        key = 0;\n        octave = -1;\n    } else if (rawKeyIndex === 15) {\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\n\n/**\n * Character codes in number form.\n */\nconst enum CharCode {\n    SPACE = 32,\n    HASH = 35,\n    PERCENT = 37,\n    AMPERSAND = 38,\n    PLUS = 43,\n    DASH = 45,\n    DOT = 46,\n    NUM_0 = 48,\n    NUM_1 = 49,\n    NUM_2 = 50,\n    NUM_3 = 51,\n    NUM_4 = 52,\n    NUM_5 = 53,\n    NUM_6 = 54,\n    NUM_7 = 55,\n    NUM_8 = 56,\n    NUM_9 = 57,\n    EQUALS = 61,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    UNDERSCORE = 95,\n    a = 97,\n    b = 98,\n    c = 99,\n    d = 100,\n    e = 101,\n    f = 102,\n    g = 103,\n    h = 104,\n    i = 105,\n    j = 106,\n    k = 107,\n    l = 108,\n    m = 109,\n    n = 110,\n    o = 111,\n    p = 112,\n    q = 113,\n    r = 114,\n    s = 115,\n    t = 116,\n    u = 117,\n    v = 118,\n    w = 119,\n    x = 120,\n    y = 121,\n    z = 122,\n    LEFT_CURLY_BRACE = 123,\n    RIGHT_CURLY_BRACE = 125,\n}\n/**Tags used as prefixes to group encoded song data in song links by 'name' rather than by position. */\nconst enum SongTagCode {\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\n\tbars                = CharCode.b, // added in BeepBox URL version 2\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\n\tunison              = CharCode.h, // added in BeepBox URL version 2\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\n\teffects             = CharCode.q, // added in BeepBox URL version 7\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\n\tscale               = CharCode.s, // added in BeepBox URL version 2\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\n\twave                = CharCode.w, // added in BeepBox URL version 2\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9 ([UB] was used for chip wave but is now DEPRECATED)\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED, [UB] repurposed for chip wave loop controls\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\n//\t                    = CharCode.J,\n//\t                    = CharCode.K,\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\n\tsongDetails         = CharCode.N, // added in JummBox URL version 1(?) for songTitle\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED, [UB] repurposed for PWM decimal offset (DEPRECATED as well)\n    songTheme           = CharCode.Y, // added in AbyssBox URL version 1\n    loopType            = CharCode.Z, // added in AbyssBox URL version 3\n//\t                    = CharCode.NUM_0, \n//                      = CharCode.NUM_1,\n//                      = CharCode.NUM_2, \n//                      = CharCode.NUM_3, \n//          \t        = CharCode.NUM_4, \n//\t                    = CharCode.NUM_5,\n//\t                    = CharCode.NUM_6,\n//\t                    = CharCode.NUM_7,\n//\t                    = CharCode.NUM_8,\n//\t                    = CharCode.NUM_9,\n//\t                    = CharCode.DASH,\n//\t                    = CharCode.UNDERSCORE,\n\n}\n/** A lookup table, using an arbitrary number in the range [0,63] as an index for this array. You'll get the character code for the base64 encoded version of that number. */\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\n/** A lookup table, using an arbitrary number as an index for this array. You'll get the base64 encoded interger from the Character code version of that number. */\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\n\n/**\n * BitFieldReader:\n * \n * A Class that splits a source string into bits. This assumes that the source is base64 encoded, so each character holds about 6 bits.\n */\nclass BitFieldReader {\n    /** The bits to be read as an array. */\n    private _bits: number[] = [];\n    /** The current position of the Index in the _bits array. */\n    private _readIndex: number = 0;\n\n    constructor(source: string, startIndex: number, stopIndex: number) {\n        for (let i: number = startIndex; i < stopIndex; i++) {\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n\n    /**\n     * Reads a number of bits and returns a number.\n     * @param bitCount The number of bits to read\n     */\n    public read(bitCount: number): number {\n        let result: number = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n\n    /** Reads a number of bits with a minimum value and returns a number.\n     * \n     * @param minValue The minimum value the result should be.\n     * @param minBits The minimum number bits that should be read.\n     * @returns \n     */\n    public readLongTail(minValue: number, minBits: number): number {\n        let result: number = minValue;\n        let numBits: number = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Reads the duration of a part in units. A Part is 1/24th of a beat per unit.\n     */\n    public readPartDuration(): number {\n        return this.readLongTail(1, 3);\n    }\n\n    /**\n     * Reads the legacy code version of the duration of a part.\n     */\n    public readLegacyPartDuration(): number {\n        return this.readLongTail(1, 2);\n    }\n\n    /**\n     * The total number of pins. by default there are 2 pins, but every time you pitch bend a note it creates more pins.\n     */\n    public readPinCount(): number {\n        return this.readLongTail(1, 0);\n    }\n\n    /**\n     * Reads a pitches interval value.\n     */\n    public readPitchInterval(): number {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        } else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\n\nclass BitFieldWriter {\n    private _index: number = 0;\n    private _bits: number[] = [];\n\n    public clear() {\n        this._index = 0;\n    }\n\n    public write(bitCount: number, value: number): void {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\n        if (value < minValue) throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits: number = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n\n    public writePartDuration(value: number): void {\n        this.writeLongTail(1, 3, value);\n    }\n\n    public writePinCount(value: number): void {\n        this.writeLongTail(1, 0, value);\n    }\n\n    public writePitchInterval(value: number): void {\n        if (value < 0) {\n            this.write(1, 1); // sign\n            this.writeLongTail(1, 3, -value);\n        } else {\n            this.write(1, 0); // sign\n            this.writeLongTail(1, 3, value);\n        }\n    }\n\n    public concat(other: BitFieldWriter): void {\n        for (let i: number = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n\n    public encodeBase64(buffer: number[]): number[] {\n\n        for (let i: number = 0; i < this._index; i += 6) {\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n\n    public lengthBase64(): number {\n        return Math.ceil(this._index / 6);\n    }\n}\n\nexport interface NotePin {\n    interval: number;\n    time: number;\n    size: number;\n}\n\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\n    return { interval: interval, time: time, size: size };\n}\n\nexport class Note {\n    public pitches: number[];\n    public pins: NotePin[];\n    public start: number;\n    public end: number;\n    public continuesLastPattern: boolean;\n\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n\n    public pickMainInterval(): number {\n        let longestFlatIntervalDuration: number = 0;\n        let mainInterval: number = 0;\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA: NotePin = this.pins[pinIndex - 1];\n            const pinB: NotePin = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration: number = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize: number = 0;\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin: NotePin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n\n    public clone(): Note {\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n\n    public getEndPinIndex(part: number): number {\n        let endPinIndex: number;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part) break;\n        }\n        return endPinIndex;\n    }\n}\n\nexport class Pattern {\n    public notes: Note[] = [];\n    public readonly instruments: number[] = [0];\n\n    public cloneNotes(): Note[] {\n        const result: Note[] = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n\n    public reset(): void {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\n        const noteArray: Object[] = [];\n        for (const note of this.notes) {\n            // Only one ins per pattern is enforced in mod channels.\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray: Object[] = [];\n            for (const pin of note.pins) {\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n\n            const noteObject: any = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n\n        const patternObject: any = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean, jsonFormat: string = \"auto\"): void {\n        const format: string = jsonFormat.toLowerCase();\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments: any[] = patternObject[\"instruments\"];\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j: number = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            } else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\n            //let tickClock: number = 0;\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount) break;\n\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n\n                const note: Note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1) continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize) break;\n                }\n                if (note.pitches.length < 1) continue;\n\n                //let noteClock: number = tickClock;\n                let startInterval: number = 0;\n                let instrument: Instrument = channel.instruments[this.instruments[0]];\n                let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject: any = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n\n                    // Only one instrument per pattern allowed in mod channels.\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\n                    let size: number;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    } else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\n                    if (note.pins.length == 0) {\n                        //if (time < noteClock) continue;\n                        note.start = time;\n                        startInterval = interval;\n                    } else {\n                        //if (time <= noteClock) continue;\n                    }\n                    //noteClock = time;\n\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2) continue;\n\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch: number = maxPitch;\n                let highestPitch: number = 0;\n                for (let k: number = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1) continue;\n\n                for (let k: number = 0; k < note.pins.length; k++) {\n                    const pin: NotePin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                } else {\n                    note.continuesLastPattern = false;\n                }\n\n                if ((format != \"ultrabox\"&& format != \"slarmoosbox\"&& format != \"abyssbox\") && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                    for (const pin of note.pins) {\n                        const oldMin: number = 30;\n                        const newMin: number = 1;\n                        const old: number = pin.size + oldMin;\n                        pin.size = old - newMin; // convertRealFactor will add back newMin as necessary\n                    }\n                }\n\n                this.notes.push(note);\n            }\n        }\n    }\n}\n\nexport class Operator {\n    public frequency: number = 4;\n    public amplitude: number = 0;\n    public waveform: number = 0;\n    public pulseWidth: number = 0.5;\n\n    constructor(index: number) {\n        this.reset(index);\n    }\n\n    public reset(index: number): void {\n        this.frequency = 4; //defualt to 1x\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n\n    public copy(other: Operator): void {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\n\nexport class CustomAlgorithm {\n    public name: string = \"\";\n    public carrierCount: number = 0;\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\n    public associatedCarrier: number[] = [];\n\n    constructor(){\n        this.fromPreset(1);\n    }\n\n    public set(carriers: number, modulation: number[][]) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i+1;\n            }\n            this.name += (i+1);\n            for (let j = 0; j < modulation[i].length;j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers-1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            } else {\n                this.name += \".\";\n            }\n        }\n    }\n\n    public reset(): void {\n        this.name = \"\"\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n\n    public copy(other: CustomAlgorithm): void {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.algorithms6Op[other]\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\n\nexport class CustomFeedBack { //feels redunant\n    public name: string = \"\";\n    public indices: number[][] = [[], [], [], [], [], []];\n\n    constructor() {\n        this.fromPreset(1);\n    }\n\n    public set(inIndices: number[][]) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n\n    public reset(): void {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n\n    public copy(other: CustomFeedBack): void {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.feedbacks6Op[other]\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\n\nexport class SpectrumWave {\n    public spectrum: number[] = [];\n    public hash: number = -1;\n\n    constructor(isNoiseChannel: boolean) {\n        this.reset(isNoiseChannel);\n    }\n\n    public reset(isNoiseChannel: boolean): void {\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            } else {\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass SpectrumWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\n        if (this._hash == settings.hash) return this.wave!;\n        this._hash = settings.hash;\n\n        const waveLength: number = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const highestOctave: number = 14;\n        const falloffRatio: number = 0.25;\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point: number): number {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n\n        let combinedAmplitude: number = 1;\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1: number = controlPointToOctave(i - 1);\n            let octave2: number = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0) continue;\n\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class HarmonicsWave {\n    public harmonics: number[] = [];\n    public hash: number = -1;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass HarmonicsWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n    private _generatedForType: InstrumentType;\n\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n\n        const waveLength: number = Config.harmonicsWavelength;\n        const retroWave: Float32Array = getDrumWave(0, null, null);\n\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const overallSlope: number = -0.25;\n        let combinedControlPointAmplitude: number = 1;\n\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq: number = harmonicIndex + 1;\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\n            // retro wave (effectively random) to avoid egregiously tall spikes.\n            amplitude *= retroWave[harmonicIndex + 589];\n\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n\n        // Limit the maximum wave amplitude.\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\n\n        performIntegralOld(wave);\n\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class FilterControlPoint {\n    public freq: number = 0;\n    public gain: number = Config.filterGainCenter;\n    public type: FilterType = FilterType.peak;\n\n    public set(freqSetting: number, gainSetting: number): void {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n\n    public getHz(): number {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n\n    public static getHzFromSettingValue(value: number): number {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    public static getSettingValueFromHz(hz: number): number {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    public static getRoundedSettingValueFromHz(hz: number): number {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n\n    public getLinearGain(peakMult: number = 1.0): number {\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain: number = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case FilterType.lowPass:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.highPass:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.peak:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n\n    public getVolumeCompensationMult(): number {\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case FilterType.lowPass:\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave: number = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case FilterType.highPass:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case FilterType.peak:\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\n\nexport class FilterSettings {\n    public readonly controlPoints: FilterControlPoint[] = [];\n    public controlPointCount: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.controlPointCount = 0;\n    }\n\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\n        let controlPoint: FilterControlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        } else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n\n    public toJsonObject(): Object {\n        const filterArray: any[] = [];\n        for (let i: number = 0; i < this.controlPointCount; i++) {\n            const point: FilterControlPoint = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n\n    public fromJsonObject(filterObject: any): void {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (<any>point.type == -1) point.type = FilterType.peak;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                } else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                } else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n\n    /**  Returns true if all filter control points match in number and type (but not freq/gain) */\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n\n    /** Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB */\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\n\n        let lerpedFilter: FilterSettings = new FilterSettings();\n\n        /** One setting or another is null, return the other. */\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n\n        pos = Math.max(0, Math.min(1, pos));\n\n        /** Filter control points match in number and type*/\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n\n            return lerpedFilter;\n        }\n        else {\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const resonant: boolean = (legacyResonanceSetting > 1);\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\n\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\n        } else if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\n            if (envDecays) logGain = Math.min(logGain, -1.0);\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            } else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            } else {\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response: FrequencyResponse = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n        // Added for JummBox - making a 0 point filter does not truncate control points!\n        this.controlPoints.length = this.controlPointCount;\n    }\n\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n    }\n}\n\nexport class EnvelopeSettings {\n    public target: number = 0;\n    public index: number = 0;\n    public envelope: number = 0;\n    // New stuff related to Slarmoo's Envelopes\n    //slarmoo's box 1.0\n    public pitchEnvelopeStart: number;\n    public pitchEnvelopeEnd: number;\n    public inverse: boolean;\n    //midbox\n    public perEnvelopeSpeed: number = Config.envelopes[this.envelope].speed;\n    public perEnvelopeLowerBound: number = 0;\n    public perEnvelopeUpperBound: number = 1;\n    //modulation support\n    public tempEnvelopeSpeed: number | null = null;\n    //pseudo random\n    public steps: number = 2;\n    public seed: number = 2;\n    //lfo\n    public waveform: number = BaseWaveTypes.sine;\n\n    constructor(public isNoiseEnvelope: boolean) {\n        this.reset();\n    }\n\n    reset(): void {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.pitchEnvelopeStart = 0;\n        this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount-1 : Config.maxPitch;\n        this.inverse = false;\n        this.isNoiseEnvelope = false;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = BaseWaveTypes.sine;\n    }\n\n    public toJsonObject(): Object {\n        const envelopeObject: any = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.newEnvelopes[this.envelope].name,\n            \"inverse\": this.inverse,\n            \"perEnvelopeSpeed\": this.perEnvelopeSpeed,\n            \"perEnvelopeLowerBound\": this.perEnvelopeLowerBound,\n            \"perEnvelopeUpperBound\": this.perEnvelopeUpperBound,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        if (Config.newEnvelopes[this.envelope].name == \"pitch\") {\n            envelopeObject[\"pitchEnvelopeStart\"] = this.pitchEnvelopeStart;\n            envelopeObject[\"pitchEnvelopeEnd\"] = this.pitchEnvelopeEnd;\n        } else if (Config.newEnvelopes[this.envelope].name == \"random\") {\n            envelopeObject[\"steps\"] = this.steps;\n            envelopeObject[\"seed\"] = this.seed;\n            envelopeObject[\"waveform\"] = this.waveform;\n        } else if (Config.newEnvelopes[this.envelope].name == \"lfo\") {\n            envelopeObject[\"waveform\"] = this.waveform;\n        }\n        return envelopeObject;\n    }\n\n    public fromJsonObject(envelopeObject: any, format: string): void {\n        this.reset();\n\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n\n        let envelope: Envelope = Config.envelopes.dictionary[\"none\"];\n        let isTremolo2: Boolean = false;\n        if (format == \"slarmoosbox\" || format == \"abyssbox\") {\n            if (envelopeObject[\"envelope\"] == \"tremolo2\") { // This is simply converting termolo to lfo and tremolo2\n                envelope = Config.newEnvelopes[EnvelopeType.lfo];\n                isTremolo2 = true;\n            } else if (envelopeObject[\"envelope\"] == \"tremolo\") {\n                envelope = Config.newEnvelopes[EnvelopeType.lfo];\n                isTremolo2 = false;\n            } else {\n                envelope = Config.newEnvelopes.dictionary[envelopeObject[\"envelope\"]];\n            }\n        } else {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == EnvelopeType.tremolo2) {\n                envelope = Config.newEnvelopes[EnvelopeType.lfo];\n                isTremolo2 = true;\n            } else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > EnvelopeType.lfo){\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            } else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n\n        if (envelope == undefined) {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == EnvelopeType.tremolo2) {\n                envelope = Config.newEnvelopes[EnvelopeType.lfo];\n                isTremolo2 = true;\n            } else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > EnvelopeType.lfo) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            } else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        } \n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        } else {\n            this.index = 0;\n        }\n\n        if (envelopeObject[\"pitchEnvelopeStart\"] != undefined) {\n            this.pitchEnvelopeStart = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeStart\"]);\n        } else {\n            this.pitchEnvelopeStart = 0;\n        }\n\n        if (envelopeObject[\"pitchEnvelopeEnd\"] != undefined) {\n            this.pitchEnvelopeEnd = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeEnd\"]);\n        } else {\n            this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch;\n        }\n\n        this.inverse = Boolean(envelopeObject[\"inverse\"]);\n\n        if (envelopeObject[\"perEnvelopeSpeed\"] != undefined) {\n            this.perEnvelopeSpeed = envelopeObject[\"perEnvelopeSpeed\"];\n        } else {\n            this.perEnvelopeSpeed = Config.envelopes.dictionary[envelopeObject[\"envelope\"]].speed;\n        }\n\n        if (envelopeObject[\"perEnvelopeLowerBound\"] != undefined) {\n            this.perEnvelopeLowerBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeLowerBound\"]);\n        } else {\n            this.perEnvelopeLowerBound = 0;\n        }\n\n        if (envelopeObject[\"perEnvelopeUpperBound\"] != undefined) {\n            this.perEnvelopeUpperBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeUpperBound\"]);\n        } else {\n            this.perEnvelopeUpperBound = 1;\n        }\n\n        //convert tremolo2 settings into lfo\n        if (isTremolo2) {\n            if (this.inverse) {\n                this.perEnvelopeUpperBound = Math.floor((this.perEnvelopeUpperBound / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = Math.floor((this.perEnvelopeLowerBound / 2) * 10) / 10;\n            } else {\n                this.perEnvelopeUpperBound = Math.floor((0.5 + (this.perEnvelopeUpperBound - this.perEnvelopeLowerBound) / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = 0.5;\n            }\n        }\n\n        if (envelopeObject[\"steps\"] != undefined) {\n            this.steps = clamp(1, Config.randomEnvelopeStepsMax + 1, envelopeObject[\"steps\"]);\n        } else {\n            this.steps = 2;\n        }\n\n        if (envelopeObject[\"seed\"] != undefined) {\n            this.seed = clamp(1, Config.randomEnvelopeSeedMax + 1, envelopeObject[\"seed\"]);\n        } else {\n            this.seed = 2;\n        }\n\n        if (envelopeObject[\"waveform\"] != undefined) {\n            this.waveform = envelopeObject[\"waveform\"];\n        } else {\n            this.waveform = BaseWaveTypes.sine;\n        }\n    }\n}\n\n/**  \n * Settings that were available to old versions of BeepBox but are no longer available in the\n * current version that need to be reinterpreted as a group to determine the best way to\n * represent them in the current version.*/\ninterface LegacySettings {\n    filterCutoff?: number;\n    filterResonance?: number;\n    filterEnvelope?: Envelope;\n    pulseEnvelope?: Envelope;\n    operatorEnvelopes?: Envelope[];\n    feedbackEnvelope?: Envelope;\n}\n\ninterface HeldMod {\n    volume: number;\n    channelIndex: number;\n    instrumentIndex: number;\n    setting: number;\n    holdFor: number;\n}\n\nexport class Instrument {\n    public type: InstrumentType = InstrumentType.chip;\n    public preset: number = 0;\n    public chipWave: number = 2;\n\t// advloop addition\n\tpublic isUsingAdvancedLoopControls: boolean = false;\n\tpublic chipWaveLoopStart: number = 0;\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\n\tpublic chipWavePlayBackwards: boolean = false;\n        public chipWaveStartOffset: number = 0;\n        // advloop addition\n    public chipNoise: number = 1;\n    public eqFilter: FilterSettings = new FilterSettings();\n    public eqFilterType: boolean = false;\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public eqFilterSimplePeak: number = 0;\n    public noteFilter: FilterSettings = new FilterSettings();\n    public noteFilterType: boolean = false;\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public noteFilterSimplePeak: number = 0;\n    public eqSubFilters: (FilterSettings | null)[] = [];\n    public noteSubFilters: (FilterSettings | null)[] = [];\n    public tmpEqFilterStart: FilterSettings | null;\n    public tmpEqFilterEnd: FilterSettings | null;\n    public tmpNoteFilterStart: FilterSettings | null;\n    public tmpNoteFilterEnd: FilterSettings | null;\n    public envelopes: EnvelopeSettings[] = [];\n    public fadeIn: number = 0;\n    public fadeOut: number = Config.fadeOutNeutral;\n    public envelopeCount: number = 0;\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\n    public slideTicks: number = 3;\n    public pitchShift: number = 0;\n    public detune: number = 0;\n    public vibrato: number = 0;\n    public interval: number = 0;\n    public vibratoDepth: number = 0;\n    public vibratoSpeed: number = 10;\n    public vibratoDelay: number = 0;\n    public vibratoType: number = 0;\n    public envelopeSpeed: number = 12;\n    public discreteEnvelope: boolean = false;\n    public unison: number = 0;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public unisonBuzzes: boolean = false;\n    public effects: number = 0;\n    public chord: number = 1;\n    public strumParts: number = 1;\n    public volume: number = 0;\n    public pan: number = Config.panCenter;\n    public panDelay: number = 10;\n    public arpeggioSpeed: number = 12;\n    public fastTwoNoteArp: boolean = false;\n    public legacyTieOver: boolean = false;\n    public clicklessTransition: boolean = false;\n    public aliases: boolean = false;\n    public pulseWidth: number = Config.pulseWidthRange/2;\n    public decimalOffset: number = 0;\n    public supersawDynamism: number = Config.supersawDynamismMax;\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\n\tpublic supersawShape: number = 0;\n\tpublic stringSustain: number = 10;\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\n    public distortion: number = 0;\n    public ringModulation: number = 0;\n    public ringModulationHz: number = 0;\n    public rmWaveformIndex: number = 0;\n    public rmPulseWidth: number = 0;\n    public rmHzOffset: number = 200;\n    public bitcrusherFreq: number = 0;\n    public bitcrusherQuantization: number = 0;\n    public chorus: number = 0;\n    public reverb: number = 0;\n    public echoSustain: number = 0;\n    public echoDelay: number = 0;\n    public phaserFreq: number = 0;\n    public phaserMix: number = Config.phaserMixRange - 1;\n    public phaserFeedback: number = 0;\n    public phaserStages: number = 2;\n\n    public invertWave: boolean = false;\n\n    public algorithm: number = 0;\n    public feedbackType: number = 0;\n    public algorithm6Op: number = 1;\n    public feedbackType6Op: number = 1;//default to not custom\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\n    public feedbackAmplitude: number = 0;\n    public customChipWave: Float32Array = new Float32Array(64);\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\n    public readonly operators: Operator[] = [];\n    public readonly spectrumWave: SpectrumWave;\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\n    public readonly drumsetEnvelopes: number[] = [];\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\n    public modChannels: number[] = [];\n    public modInstruments: number[] = [];\n    public modulators: number[] = [];\n    public modFilterTypes: number[] = [];\n    public modEnvelopeNumbers: number[] = [];\n    public invalidModulators: boolean[] = [];\n    public upperNoteLimit: number = Config.maxPitch;\n    public lowerNoteLimit: number = 0;\n    //Literally just for pitch envelopes. \n    public isNoiseInstrument: boolean = false;\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\n\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\n        //\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\n        //\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\n        //   -2 \"none\"\n        //   -1 \"song\"\n        //   0+ actual channel index\n        //\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\n        //   channel.instruments.length             \"all\"\n        //   channel.instruments.length+1           \"active\"\n        //\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\n        //   0  filter morph\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\n\n        if (isModChannel) {\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(-2);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\n            this.operators[i] = new Operator(i);\n        }\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n\n        let sum: number = 0.0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average: number = sum / this.customChipWave.length;\n\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n        let cumulative: number = 0;\n        let wavePrev: number = 0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n\n        // 65th, last sample is for anti-aliasing\n        this.customChipWaveIntegral[64] = 0.0;\n\n        //properly sets the isNoiseInstrument value\n        this.isNoiseInstrument = isNoiseChannel;\n\n    }\n\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\n        // Mod channels are forced to one type.\n        if (isModChannel) type = InstrumentType.mod;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n\n        this.ringModulation = 0;\n        this.ringModulationHz = 0;\n        this.rmPulseWidth = 0;\n        this.rmWaveformIndex = 0;\n        this.rmHzOffset = 200;\n\n        this.phaserFreq\t= 0;\n        this.phaserFeedback = 0;\n        this.phaserStages = 2;\n        this.phaserMix = Config.phaserMixRange - 1;\n\n        this.invertWave = false;\n\n        this.pan = Config.panCenter;\n        this.panDelay = 10;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.envelopeSpeed = 12;\n        this.discreteEnvelope = false;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        this.upperNoteLimit = Config.maxPitch;\n        this.lowerNoteLimit = 0;\n        this.isNoiseInstrument = isNoiseChannel;\n        switch (type) {\n            case InstrumentType.chip:\n                this.chipWave = 2;\n                // TODO: enable the chord effect?\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\t\t\t\t\t // advloop addition\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                    // advloop addition\n                break;\n            case InstrumentType.customChipWave:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case InstrumentType.fm:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.fm6op:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.effects = 1;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.noise:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case InstrumentType.spectrum:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case InstrumentType.drumset:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case InstrumentType.harmonics:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.pwm:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange/2;\n                this.decimalOffset = 0;\n                break;\n            case InstrumentType.pickedString:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.mod:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                    this.modEnvelopeNumbers[mod] = 0;\n                }\n                break;\n            case InstrumentType.supersaw:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t\t\tthis.supersawShape = 0;\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange/2 - 1;\n                this.decimalOffset = 0;\n\t\t\t\tbreak;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n    }\n\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\n\n        // legacy defaults:\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\n        const legacyFilterCutoffRange: number = 11;\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize: boolean = true;\n        let allCarriersControlledByNoteSize: boolean = true;\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\n                        allCarriersControlledByNoteSize = false;\n                    } else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                } else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\n                }\n            }\n        }\n\n        this.envelopeCount = 0;\n\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n        }\n\n        if (legacyFilterEnv.type == EnvelopeType.none) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << EffectType.noteFilter);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        } else {\n            this.eqFilter.reset();\n\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << EffectType.noteFilter;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index, false);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n\n        if (legacyPulseEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index, false);\n        }\n\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index, false);\n            }\n        }\n\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index, false);\n        }\n    }\n\n    public toJsonObject(): Object {\n        const instrumentObject: any = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed,\n            \"discreteEnvelope\": this.discreteEnvelope,\n        };\n\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\n        }\n\n        const effects: string[] = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n\n\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n            if (Config.transitions[this.transition].slides == true) instrumentObject[\"slideTicks\"] = this.slideTicks;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n            if (Config.chords[this.chord].strumParts > 0) instrumentObject[\"strumParts\"] = this.strumParts;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            } else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\n            }\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        // ctrl + f to ring mod here\n        if (effectsIncludeRM(this.effects)) {\n            instrumentObject[\"ringMod\"] =  Math.round(100 *this.ringModulation/(Config.ringModRange - 1));\n            instrumentObject[\"ringModHz\"] =  Math.round(100 *this.ringModulationHz/(Config.ringModHzRange - 1));\n            instrumentObject[\"rmWaveformIndex\"] = this.rmWaveformIndex;\n            instrumentObject[\"rmPulseWidth\"] =  Math.round(100 *this.rmPulseWidth/(Config.pulseWidthRange - 1));\n            instrumentObject[\"rmHzOffset\"] =  Math.round(100 *this.rmHzOffset/(Config.rmHzOffsetMax));\n        }\n        if (effectsIncludePhaser(this.effects)) {\n            instrumentObject[\"phaserMix\"] =  Math.round(100 *this.phaserMix/(Config.phaserMixRange - 1));\n            instrumentObject[\"phaserFreq\"] =  Math.round(100 *this.phaserFreq/(Config.phaserFreqRange - 1));\n            instrumentObject[\"phaserFeedback\"] =  Math.round(100 *this.phaserFeedback/(Config.phaserFeedbackRange - 1));\n            instrumentObject[\"phaserStages\"] =  Math.round(100 *this.phaserStages/(Config.phaserMaxStages - 1));\n        }\n        if (effectsIncludeInvertWave(this.effects)) {\n            instrumentObject[\"invertWave\"] =  this.invertWave;\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n        if (effectsIncludeNoteRange(this.effects)) {\n            instrumentObject[\"upperNoteLimit\"] = this.upperNoteLimit;\n            instrumentObject[\"lowerNoteLimit\"] = this.lowerNoteLimit;\n        }\n\n        if (this.type != InstrumentType.drumset) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n\n        if (this.type == InstrumentType.chip || this.type == InstrumentType.pwm || this.type == InstrumentType.customChipWave || this.type == InstrumentType.noise || this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString || this.type == InstrumentType.spectrum) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            // only push these if custom unisons are being used\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n                instrumentObject[\"unisonBuzzes\"] = this.unisonBuzzes;\n            }\n        }\n\n        if (this.type == InstrumentType.noise) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n        } else if (this.type == InstrumentType.spectrum) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n        } else if (this.type == InstrumentType.drumset) {\n            instrumentObject[\"drums\"] = [];\n            for (let j: number = 0; j < Config.drumCount; j++) {\n                const spectrum: number[] = [];\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        } else if (this.type == InstrumentType.chip) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n            instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n            instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n            instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n            instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n            instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n        } else if (this.type == InstrumentType.pwm) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n        } else if (this.type == InstrumentType.supersaw) {\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n\t\t} else if (this.type == InstrumentType.pickedString) {\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n\t\t\t}\n        } else if (this.type == InstrumentType.harmonics) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }   \n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            const operatorArray: Object[] = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if(this.type == InstrumentType.fm){\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            } else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if(this.algorithm6Op == 0){\n                    const customAlgorithm: any = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if(this.feedbackType6Op == 0){\n                    const customFeedback: any = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        } else if (this.type == InstrumentType.customChipWave) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\n            }\n        } else if (this.type == InstrumentType.mod) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            instrumentObject[\"modEnvelopeNumbers\"] = [];\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n                instrumentObject[\"modEnvelopeNumbers\"][mod] = this.modEnvelopeNumbers[mod];\n            }\n        } else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n\n        const envelopes: any[] = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n\n        return instrumentObject;\n    }\n\n\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0, jsonFormat: string = Config.jsonFormat): void {\n        if (instrumentObject == undefined) instrumentObject = {};\n\n        const format: string = jsonFormat.toLowerCase();\n\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n                // SynthBox support\n                if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\")) type = Config.instrumentTypeNames.indexOf(\"FM6op\");\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n\n        this.effects &= ~(1 << EffectType.panning);\n\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n\n        if (instrumentObject[\"volume\"] != undefined) {\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\"|| format == \"slarmoosbox\"|| format == \"abyssbox\") {\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n            } else {\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\n            }\n        } else {\n            this.volume = 0;\n        }\n\n        this.envelopeSpeed = instrumentObject[\"envelopeSpeed\"] != undefined ?  clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0) : 12;\n\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n        }\n        else {\n            this.discreteEnvelope = false;\n        }\n\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects: number = 0;\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << EffectType.length) - 1));\n        } else {\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\n        }\n\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\n        if (transitionProperty != undefined) {\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = (<any>{\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\n                    // of the fade in/out fields.\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                })[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    // These may be overridden below.\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined) this.transition = transition.index;\n\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                // Enable transition if it was used.\n                this.effects = (this.effects | (1 << EffectType.transition));\n            }\n        }\n        if (instrumentObject[\"slideTicks\"] != undefined) {\n            this.slideTicks = instrumentObject[\"slideTicks\"];\n        }   \n        // Overrides legacy settings in transition above.\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n\n        {\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\n            const chordProperty: any = instrumentObject[\"chord\"];\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            } else {\n                // Different instruments have different default chord types based on historical behaviour.\n                if (this.type == InstrumentType.noise) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.pickedString) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                } else if (this.type == InstrumentType.chip) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                } else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n        if (instrumentObject[\"strumParts\"] != undefined) {\n            this.strumParts = instrumentObject[\"strumParts\"];\n        }\n\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\n        if (unisonProperty != undefined) {\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\"  };\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined) this.unison = unison.index;\n            if (unisonProperty == \"custom\") this.unison = Config.unisons.length;\n        }\n        //clamp these???\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n        this.unisonBuzzes = (instrumentObject[\"unisonBuzzes\"] == undefined) ? false : instrumentObject[\"unisonBuzzes\"];\n\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n            // modbox pitch shift, known in that mod as \"octave offset\"\n            if (instrumentObject[\"octoff\"] != undefined) {\n                let potentialPitchShift: string = instrumentObject[\"octoff\"];\n                this.effects = (this.effects | (1 << EffectType.pitchShift));\n                \n                if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\n                    this.pitchShift = 24;\n                } else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\n                    this.pitchShift = 18;\n                } else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) { //this typo is in modbox\n                    this.pitchShift = 0;\n                } else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\n                    this.pitchShift = 6;\n                } else {\n                    this.pitchShift = 12;\n                }\n            }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\n        if (vibratoProperty != undefined) {\n\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length; // custom\n\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else { // Set defaults for the vibrato profile\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10; // default;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n\n            // Old songs may have a vibrato effect without explicitly enabling it.\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << EffectType.vibrato));\n            }\n        }\n\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n\n        } else if (instrumentObject[\"ipan\"] != undefined) {\n            // support for modbox fixed\n            this.pan = clamp(0, Config.panMax + 1, Config.panCenter + (instrumentObject[\"ipan\"] * -50));\n        } else {\n            this.pan = Config.panCenter;\n        }\n\n        // Old songs may have a panning effect without explicitly enabling it.\n        if (this.pan != Config.panCenter) {\n            this.effects = (this.effects | (1 << EffectType.panning));\n        }\n\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        } else {\n            this.panDelay = 10;\n        }\n\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"ringMod\"] != undefined) {\n            this.ringModulation = clamp(0, Config.ringModRange, Math.round((Config.ringModRange - 1) * (instrumentObject[\"ringMod\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModHz\"] != undefined) {\n            this.ringModulationHz = clamp(0, Config.ringModHzRange, Math.round((Config.ringModHzRange - 1) * (instrumentObject[\"ringModHz\"] | 0) / 100));\n        }\n        if (instrumentObject[\"invertWave\"] != undefined) {\n            this.invertWave = instrumentObject[\"invertWave\"];\n        }\n        if (instrumentObject[\"rmWaveformIndex\"] != undefined) {\n            this.rmWaveformIndex = clamp(0, Config.operatorWaves.length, instrumentObject[\"rmWaveformIndex\"]);\n        }\n        if (instrumentObject[\"rmPulseWidth\"] != undefined) {\n            this.rmPulseWidth = clamp(0, Config.pulseWidthRange, Math.round((Config.pulseWidthRange - 1) * (instrumentObject[\"rmPulseWidth\"] | 0) / 100));\n        }\n        if (instrumentObject[\"rmHzOffset\"] != undefined) {\n            this.rmHzOffset = clamp(0, Config.rmHzOffsetMax, Math.round((Config.rmHzOffsetMax - 1) * (instrumentObject[\"rmHzOffset\"] | 0) / 100));\n        }\n\n\n        if (instrumentObject[\"phaserMix\"] != undefined) {\n            this.phaserMix = clamp(0, Config.phaserMixRange, Math.round((Config.phaserMixRange - 1) * (instrumentObject[\"phaserMix\"] | 0) / 100));\n        }\n        if (instrumentObject[\"phaserFreq\"] != undefined) {\n            this.phaserFreq = clamp(0, Config.phaserFreqRange, Math.round((Config.phaserFreqRange - 1) * (instrumentObject[\"phaserFreq\"] | 0) / 100));\n        }\n        if (instrumentObject[\"phaserFeedback\"] != undefined) {\n            this.phaserFeedback = clamp(0, Config.phaserFeedbackRange, Math.round((Config.phaserFeedbackRange - 1) * (instrumentObject[\"phaserFeedback\"] | 0) / 100));\n        }\n        if (instrumentObject[\"phaserStages\"] != undefined) {\n            this.phaserStages = clamp(0, Config.phaserMaxStages, Math.round((Config.phaserMaxStages - 1) * (instrumentObject[\"phaserStages\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        } else {\n            this.reverb = legacyGlobalReverb;\n        }\n        if (instrumentObject[\"upperNoteLimit\"] != undefined) {\n            this.upperNoteLimit = instrumentObject[\"upperNoteLimit\"]\n        }\n        if (instrumentObject[\"lowerNoteLimit\"] != undefined) {\n            this.lowerNoteLimit = instrumentObject[\"lowerNoteLimit\"]\n        }\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        } else {\n            this.pulseWidth = Config.pulseWidthRange/2;\n        }\n\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        } else {\n            this.decimalOffset = 0;\n        }\n\n        if (instrumentObject[\"dynamism\"] != undefined) {\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t}\n\t\tif (instrumentObject[\"spread\"] != undefined) {\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t}\n\t\tif (instrumentObject[\"shape\"] != undefined) {\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawShape = 0;\n\t\t}\n        \n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        } else {\n            this.harmonicsWave.reset();\n        }\n\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n                this.spectrumWave.markCustomWaveDirty();\n            }\n        } else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        } else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\n\n        if (this.type == InstrumentType.noise) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1) this.chipNoise = 1;\n        }\n\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name: any): Envelope | undefined => {\n            if (legacyEnvelopeNames[name] != undefined) return Config.envelopes.dictionary[legacyEnvelopeNames[name]];\n            else {\n                return Config.envelopes.dictionary[name];\n            }\n        }\n\n        if (this.type == InstrumentType.drumset) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j: number = 0; j < Config.drumCount; j++) {\n                    const drum: any = instrumentObject[\"drums\"][j];\n                    if (drum == undefined) continue;\n\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                }\n            }\n        }\n\n        if (this.type == InstrumentType.chip) {\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            this.chipWave = -1;\n            const rawName: string = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\n            }\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \n\t\tif (this.chipWave == -1) this.chipWave = 1;\n        }\n\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            if(this.type == InstrumentType.fm) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1) this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1) this.feedbackType = 0;\n            } else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\n                if(this.algorithm6Op == 0){ \n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                } else{\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                                                // SynthBox feedback support\n                if (this.feedbackType6Op == -1) {    \n                    // These are all of the SynthBox feedback presets that aren't present in Gold/UltraBox\n                    let synthboxLegacyFeedbacks: DictionaryArray<any> = toNameMap([\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                    ]);\n\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])]!.indices;\n\n                    if (synthboxFeedbackType != undefined) {\n                        this.feedbackType6Op = 0;\n                        this.customFeedbackType.set(synthboxFeedbackType);\n                    } else {\n                        // if the feedback type STILL can't be resolved, default to the first non-custom option\n                        this.feedbackType6Op = 1;\n                    }\n                }\n            } \n\n            if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\n                this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n            } else {\n                this.customFeedbackType.fromPreset(this.feedbackType6Op);\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            } else {\n                this.feedbackAmplitude = 0;\n            }\n\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\n                const operator: Operator = this.operators[j];\n                let operatorObject: any = undefined;\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined) operatorObject = {};\n\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1) operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                } else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    // If the json is from GB, we override the last two waves to be sine to account for a bug\n                    if (format == \"goldbox\" && j > 3) {\n                        operator.waveform = 0;\n                        continue;\n                     }\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        // GoldBox compatibility\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        } else if (operatorObject[\"waveform\"] == \"rounded\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"quasi-sine\"].index;\n                        } else {\n                            operator.waveform = 0;\n                        }\n\n                    }\n                } else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                } else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == InstrumentType.customChipWave) {\n            if (instrumentObject[\"customChipWave\"]) {\n\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        } else if (this.type == InstrumentType.mod) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                    if (instrumentObject[\"modEnvelopeNumbers\"] != undefined)\n                    this.modEnvelopeNumbers[mod] = instrumentObject[\"modEnvelopeNumbers\"][mod];\n                    this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                }\n            }\n        }\n\n        if (this.type != InstrumentType.mod) {\n            // Arpeggio speed\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\n            }\n\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n            // modbox had no anti-aliasing, so enable it for everything if that mode is selected\n            if (format == \"modbox\") {\n                this.effects = (this.effects | (1 << EffectType.distortion));\n                this.aliases = true;\n                this.distortion = 0;\n            } else {\n                this.aliases = false;\n            }\n            }\n\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            } else {\n                this.noteFilter.reset();\n            }\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            } else {\n                this.eqFilter.reset();\n\n                const legacySettings: LegacySettings = {};\n\n                // Try converting from legacy filter settings.\n                const filterCutoffMaxHz: number = 8000;\n                const filterCutoffRange: number = 11;\n                const filterResonanceRange: number = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                } else {\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                } else {\n                    legacySettings.filterResonance = 0;\n                }\n\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\n                        let envelope: Envelope | undefined;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n\n                // Try converting from even older legacy filter settings.\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1) legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n\n                this.convertLegacySettings(legacySettings, true);\n            }\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings(this.isNoiseInstrument);\n                    tempEnvelope.fromJsonObject(envelopeArray[i], format);\n                    //old pitch envelope detection\n                    let pitchEnvelopeStart: number;\n                    if (instrumentObject[\"pitchEnvelopeStart\"] != undefined && instrumentObject[\"pitchEnvelopeStart\"] != null) { //make sure is not null bc for some reason it can be\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\"];\n                    } else if (instrumentObject[\"pitchEnvelopeStart\" + i] != undefined && instrumentObject[\"pitchEnvelopeStart\" + i] != undefined) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\" + i];\n                    } else {\n                        pitchEnvelopeStart = tempEnvelope.pitchEnvelopeStart;\n                    }\n                    let pitchEnvelopeEnd: number;\n                    if (instrumentObject[\"pitchEnvelopeEnd\"] != undefined && instrumentObject[\"pitchEnvelopeEnd\"] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\"];\n                    } else if (instrumentObject[\"pitchEnvelopeEnd\" + i] != undefined && instrumentObject[\"pitchEnvelopeEnd\" + i] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\" + i];\n                    } else {\n                        pitchEnvelopeEnd = tempEnvelope.pitchEnvelopeEnd;\n                    }\n                    let envelopeInverse: boolean;\n                    if (instrumentObject[\"envelopeInverse\" + i] != undefined && instrumentObject[\"envelopeInverse\" + i] != null) {\n                        envelopeInverse = instrumentObject[\"envelopeInverse\" + i];\n                    } else if (instrumentObject[\"pitchEnvelopeInverse\"] != undefined && instrumentObject[\"pitchEnvelopeInverse\"] != null && Config.envelopes[tempEnvelope.envelope].name == \"pitch\") { //assign only if a pitch envelope\n                        envelopeInverse = instrumentObject[\"pitchEnvelopeInverse\"];\n                    } else {\n                        envelopeInverse = tempEnvelope.inverse;\n                    }\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, tempEnvelope.perEnvelopeSpeed, tempEnvelope.perEnvelopeLowerBound, tempEnvelope.perEnvelopeUpperBound, tempEnvelope.steps, tempEnvelope.seed, tempEnvelope.waveform);\n                }\n            }\n        }\n   \t\t // advloop addition\n            if (type === 0) {\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n                } else {\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                }\n            }\n\t}\t\n           // advloop addition\n\n        public getLargestControlPointCount(forNoteFilter: boolean) {\n        let largest: number;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\n                    largest = this.noteSubFilters[i]!.controlPointCount;\n            }\n        }\n        else {\n            largest = this.eqFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\n                    largest = this.eqSubFilters[i]!.controlPointCount;\n            }\n        }\n        return largest;\n    }\n\n    public static frequencyFromPitch(pitch: number): number {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n\n    public addEnvelope(target: number, index: number, envelope: number, newEnvelopes: boolean, start: number = 0, end: number = -1, inverse: boolean = false, perEnvelopeSpeed: number = -1, perEnvelopeLowerBound: number = 0, perEnvelopeUpperBound: number = 1, steps: number = 2, seed: number = 2, waveform: number = BaseWaveTypes.sine): void {\n        end = end != -1 ? end : this.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch; //find default if none is given\n        perEnvelopeSpeed = perEnvelopeSpeed != -1 ? perEnvelopeSpeed : newEnvelopes ? 1 : Config.envelopes[envelope].speed; //find default if none is given\n        let makeEmpty: boolean = false;\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings(this.isNoiseInstrument);\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        if (!newEnvelopes) {\n            envelopeSettings.envelope = clamp(0, Config.newEnvelopes.length, Config.envelopes[envelope].type);\n        } else {\n            envelopeSettings.envelope = envelope;\n        }\n        envelopeSettings.pitchEnvelopeStart = start;\n        envelopeSettings.pitchEnvelopeEnd = end;\n        envelopeSettings.inverse = inverse;\n        envelopeSettings.perEnvelopeSpeed = perEnvelopeSpeed;\n        envelopeSettings.perEnvelopeLowerBound = perEnvelopeLowerBound;\n        envelopeSettings.perEnvelopeUpperBound = perEnvelopeUpperBound;\n        envelopeSettings.steps = steps;\n        envelopeSettings.seed = seed;\n        envelopeSettings.waveform = waveform;\n        this.envelopeCount++;\n    }\n\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n\t\t\treturn false;\n\t\t}\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.isFilter) {\n            //if (automationTarget.perNote) {\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount) return false;\n            //} else {\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\n            //}\n        }\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\n            if (index >= 4 + (this.type == InstrumentType.fm6op ? 2 : 0)) return false;\n        }\n        return true;\n    }\n\n    public clearInvalidEnvelopeTargets(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target: number = this.envelopes[envelopeIndex].target;\n            const index: number = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n\n    public getTransition(): Transition {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n\n    public getFadeInSeconds(): number {\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n\n    public getFadeOutTicks(): number {\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\n    }\n\n    public getChord(): Chord {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n\n    public getDrumsetEnvelope(pitch: number): Envelope {\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\n\nexport class Channel {\n    public octave: number = 0;\n    public readonly instruments: Instrument[] = [];\n    public readonly patterns: Pattern[] = [];\n    public readonly bars: number[] = [];\n    public muted: boolean = false;\n    public name: string = \"\";\n}\n\nexport class Song {\n    private static readonly _format: string = Config.jsonFormat;\n    private static readonly _oldestBeepboxVersion: number = 2;\n    private static readonly _latestBeepboxVersion: number = 9;\n    private static readonly _oldestJummBoxVersion: number = 1;\n    private static readonly _latestJummBoxVersion: number = 6;\n    private static readonly _oldestGoldBoxVersion: number = 1;\n    private static readonly _latestGoldBoxVersion: number = 4;\n    private static readonly _oldestUltraBoxVersion: number = 1;\n    private static readonly _latestUltraBoxVersion: number = 6;\n    private static readonly _oldestSlarmoosBoxVersion: number = 1;\n    private static readonly _latestSlarmoosBoxVersion: number = 4;\n    private static readonly _oldestAbyssBoxVersion: number = 1;\n    private static readonly _latestAbyssBoxVersion: number = 3;\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\n\t//also \"u\" is ultrabox lol\n    private static readonly _variant = 0x61; //\"a\" ~ abyssbox\n\n    public title: string;\n    public author: string;\n    public description: string;\n    public showSongDetails: boolean;\n    public setSongTheme: string;\n    public scale: number;\n    public scaleCustom: boolean[] = [];\n    public key: number;\n    public octave: number;\n    public tempo: number;\n    public loopType: number = 1;\n    public reverb: number;\n    public beatsPerBar: number;\n    public barCount: number;\n    public patternsPerChannel: number;\n    public rhythm: number;\n    public layeredInstruments: boolean;\n    public patternInstruments: boolean;\n    public loopStart: number;\n    public loopLength: number;\n    public pitchChannelCount: number;\n    public noiseChannelCount: number;\n    public modChannelCount: number;\n    public readonly channels: Channel[] = [];\n    public limitDecay: number = 4.0;\n    public limitRise: number = 4000.0;\n    public compressionThreshold: number = 1.0;\n    public limitThreshold: number = 1.0;\n    public compressionRatio: number = 1.0;\n    public limitRatio: number = 1.0;\n    public masterGain: number = 1.0;\n    public inVolumeCap: number = 0.0;\n    public outVolumeCap: number = 0.0;\n    public eqFilter: FilterSettings = new FilterSettings();\n    public eqFilterType: boolean = false;\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public eqFilterSimplePeak: number = 0;\n    public eqSubFilters: (FilterSettings | null)[] = [];\n    public tmpEqFilterStart: FilterSettings | null;\n    public tmpEqFilterEnd: FilterSettings | null;\n\n    constructor(string?: string) {\n        if (string != undefined) {\n            this.fromBase64String(string);\n        } else {\n            this.initToDefault(true);\n        }\n    }\n\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\n\n            // For tempo, actually use user defined tempo\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n            }\n\n            if (vol != undefined)\n                return vol;\n            else\n                return 6;\n        }\n    }\n\n\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\n            let modulator = Config.modulators[instrument.modulators[modCount]];\n            let cap: number | undefined = modulator.maxRawVol;\n\n            if (cap != undefined) {\n                // For filters, cap is dependent on which filter setting is targeted\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n                return cap;\n            }\n            else\n                return 6;\n        }\n    }\n\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\n        if (!isMod)\n            return Config.noteSizeMax;\n        else {\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\n            if (cap != undefined) {\n\n                // For filters, cap is dependent on which filter setting is targeted\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (filterType > 0 && filterType % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (filterType > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n\n                return cap;\n            }\n            else\n                return Config.noteSizeMax;\n        }\n    }\n\n    public getChannelCount(): number {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n\n    public getMaxInstrumentsPerChannel(): number {\n        return Math.max(\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n\n    public getChannelIsNoise(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public getChannelIsMod(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public initToDefault(andResetChannels: boolean = true): void {\n        this.scale = 0;\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n\t    //this.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 150;\n        this.loopType = 1;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 3;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n\n        this.title = \"Untitled\";\n        this.author = \"\";\n        this.description = \"\";\n        this.showSongDetails = false;\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n        this.setSongTheme = \"none\";\n\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 1;\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel: Channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\n\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    } else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n\n                for (let bar: number = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n\n    public toBase64String(): string {\n        let bits: BitFieldWriter;\n        let buffer: number[] = [];\n\n        buffer.push(Song._variant);\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\n\t\t buffer.push(base64IntToCharCode[Song._latestAbyssBoxVersion]);\n\n        // Length of the song name string\n        buffer.push(SongTagCode.songDetails);\n        var encodedSongTitle: string = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n\n        // Actual encoded string follows\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n\n        // Length of the song author string\n        var encodedAuthorTitle: string = encodeURIComponent(this.author);\n        buffer.push(base64IntToCharCode[encodedAuthorTitle.length >> 6], base64IntToCharCode[encodedAuthorTitle.length & 0x3f]);\n\n        for (let i: number = 0; i < encodedAuthorTitle.length; i++) {\n            buffer.push(encodedAuthorTitle.charCodeAt(i));\n        }\n\n        // Length of the song description string\n        var encodedDescriptionTitle: string = encodeURIComponent(this.description);\n        buffer.push(base64IntToCharCode[encodedDescriptionTitle.length >> 6], base64IntToCharCode[encodedDescriptionTitle.length & 0x3f]);\n\n        for (let i: number = 0; i < encodedDescriptionTitle.length; i++) {\n            buffer.push(encodedDescriptionTitle.charCodeAt(i));\n        }\n\n        buffer.push(base64IntToCharCode[this.showSongDetails?1:0]);\n        //Length of the song theme string\n        buffer.push(SongTagCode.songTheme);\n        var encodedSongTheme: string = encodeURIComponent(this.setSongTheme);\n        buffer.push(base64IntToCharCode[encodedSongTheme.length >> 6], base64IntToCharCode[encodedSongTheme.length & 0x3f]);\n\n        // Actual encoded string follows\n        for (let i: number = 0; i < encodedSongTheme.length; i++) {\n            buffer.push(encodedSongTheme.charCodeAt(i));\n        }\n        \n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\n            }\n        }\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\n        buffer.push(SongTagCode.loopType, base64IntToCharCode[this.loopType]);\n\n        // Push limiter settings, but only if they aren't the default!\n        buffer.push(SongTagCode.limiterSettings);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\n        }\n\n        buffer.push(SongTagCode.channelNames);\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n            // Length of the channel name string\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n\n            // Actual encoded string follows\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n\n        buffer.push(SongTagCode.channelOctave);\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n\n                buffer.push(SongTagCode.eqFilter);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        // Push null filter settings\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    } else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                    let usingSubFilterBitfield: number = 0;\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    // Put subfilter usage into 2 chars (12 bits)\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    // Put subfilter info in for all used subfilters\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\n                buffer.push(\n                    SongTagCode.effects,\n                    base64IntToCharCode[(instrument.effects >>> (6 * 5)) & 63],\n                    base64IntToCharCode[(instrument.effects >>> (6 * 4)) & 63],\n                    base64IntToCharCode[(instrument.effects >>> (6 * 3)) & 63],\n                    base64IntToCharCode[(instrument.effects >>> (6 * 2)) & 63],\n                    base64IntToCharCode[(instrument.effects >>> (6 * 1)) & 63],\n                    base64IntToCharCode[(instrument.effects >>> (6 * 0)) & 63]\n                );\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            // Push null filter settings\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                        let usingSubFilterBitfield: number = 0;\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        // Put subfilter usage into 2 chars (12 bits)\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        // Put subfilter info in for all used subfilters\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                    if (Config.transitions[instrument.transition].slides == true) buffer.push(base64IntToCharCode[instrument.slideTicks]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\n                    if (Config.chords[instrument.chord].arpeggiates == true) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\n                    } else if (Config.chords[instrument.chord].strumParts > 0) {\n                        buffer.push(base64IntToCharCode[instrument.strumParts]);\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    // Custom vibrato settings\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    // Aliasing is tied into distortion for now\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeRM(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.ringModulation]);\n                    buffer.push(base64IntToCharCode[instrument.ringModulationHz]);\n                    buffer.push(base64IntToCharCode[instrument.rmWaveformIndex]);\t\n                    buffer.push(base64IntToCharCode[(instrument.rmPulseWidth) >> 6], base64IntToCharCode[(instrument.rmPulseWidth) & 0x3F]);\t\n                    buffer.push(base64IntToCharCode[(instrument.rmHzOffset - Config.rmHzOffsetMin) >> 6], base64IntToCharCode[(instrument.rmHzOffset - Config.rmHzOffsetMin) & 0x3F]);\n                }\n                if (effectsIncludePhaser(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.phaserFreq]);\n                    buffer.push(base64IntToCharCode[instrument.phaserFeedback]);\n                    buffer.push(base64IntToCharCode[instrument.phaserStages]);\n                    buffer.push(base64IntToCharCode[instrument.phaserMix]);\n                }\n                if (effectsIncludeInvertWave(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.invertWave]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n\n                if (effectsIncludeNoteRange(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.upperNoteLimit >> 6], base64IntToCharCode[instrument.upperNoteLimit & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.lowerNoteLimit >> 6], base64IntToCharCode[instrument.lowerNoteLimit & 0x3f]);\n                }\n\n                if (instrument.type != InstrumentType.drumset) {\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    // Transition info follows transition song tag\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                    buffer.push(SongTagCode.harmonics);\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n\n                if (instrument.type == InstrumentType.chip) {\n                        buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave % 63], base64IntToCharCode[Math.floor(instrument.chipWave / 63)]);\n                        buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\n\t\t\t\t\t\t// The encoding here is as follows:\n\t\t\t\t\t\t// 0b11111_1\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\n\t\t\t\t\t\t// which should be plenty.\n\t\t\t\t\t\tconst encodedLoopMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\n\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n                    if (instrument.type == InstrumentType.fm) {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\n                    } else {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                    }\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\n\n                    buffer.push(SongTagCode.operatorFrequencies);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(SongTagCode.operatorAmplitudes);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(SongTagCode.operatorWaves);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        // Push pulse width if that type is used\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                } else if (instrument.type == InstrumentType.customChipWave) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave % 63], base64IntToCharCode[Math.floor(instrument.chipWave / 63)]);\n\t\t\t\t\tbuffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                    buffer.push(SongTagCode.customChipWave);\n                    // Push custom wave values\n                    for (let j: number = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\n                    }\n                } else if (instrument.type == InstrumentType.noise) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                } else if (instrument.type == InstrumentType.spectrum) {\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                } else if (instrument.type == InstrumentType.drumset) {\n                    buffer.push(SongTagCode.drumsetEnvelopes);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.harmonics) {\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                } else if (instrument.type == InstrumentType.pwm) {\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth >> 6], base64IntToCharCode[instrument.pulseWidth & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]); \n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth >> 6], base64IntToCharCode[instrument.pulseWidth & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n\t\t\t\t\t}\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                } else if (instrument.type == InstrumentType.mod) {\n                    // Handled down below. Could be moved, but meh.\n                } else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\n                // Added in JB v6: Options for envelopes come next.\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                    //run pitch envelope handling\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"pitch\") { \n                        if (!instrument.isNoiseInstrument) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart & 0x3f]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd & 0x3f]);\n                        } else {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd]);\n                        }\n                    } else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"random\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].seed]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                    } else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"lfo\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                        if (instrument.envelopes[envelopeIndex].waveform == BaseWaveTypes.steppedSaw || instrument.envelopes[envelopeIndex].waveform == BaseWaveTypes.steppedTri) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        }\n                    }\n                    //inverse\n                    buffer.push(base64IntToCharCode[(+instrument.envelopes[envelopeIndex].inverse)] ? base64IntToCharCode[(+instrument.envelopes[envelopeIndex].inverse)] : base64IntToCharCode[0]);\n                    //midbox envelope port\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"pitch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"note size\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"punch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"none\") {\n                        buffer.push(base64IntToCharCode[Config.perEnvelopeSpeedToIndices[instrument.envelopes[envelopeIndex].perEnvelopeSpeed]]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeLowerBound*10]);\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeUpperBound*10]);\n                }\n            }\n        }\n\n        buffer.push(SongTagCode.bars);\n        bits = new BitFieldWriter();\n        let neededBits: number = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\n        }\n        bits.encodeBase64(buffer);\n\n        buffer.push(SongTagCode.patterns);\n        bits = new BitFieldWriter();\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n            // Some info about modulator settings immediately follows in mod channels.\n            if (isModChannel) {\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        const modChannel: number = instrument.modChannels[mod];\n                        const modInstrument: number = instrument.modInstruments[mod];\n                        const modSetting: number = instrument.modulators[mod];\n                        const modFilter: number = instrument.modFilterTypes[mod];\n                        const modEnvelope: number = instrument.modEnvelopeNumbers[mod];\n\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                        // 0 - For pitch/noise\n                        // 1 - (used to be For noise, not needed)\n                        // 2 - For song\n                        // 3 - None\n\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n\n                        bits.write(2, status);\n\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n\n                        // Only used if setting isn't \"none\".\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n\n                        // Write mod filter info, only if this is a filter mod\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\n                            bits.write(6, modFilter);\n                        }\n\n                        //write envelope info only if needed\n                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\") {\n                            bits.write(6, modEnvelope);\n                        }\n                    }\n                }\n            }\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes: string[] = [];\n            for (let i: number = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i: number = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n\n                    let curPart: number = 0;\n                    for (const note of pattern.notes) {\n\n                        // For mod channels, a negative offset may be necessary.\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0); // rest, then...\n                            bits.write(1, 1); // negative offset\n                            bits.writePartDuration(curPart - note.start);\n                        }\n\n                        if (note.start > curPart) {\n                            bits.write(2, 0); // rest\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\n                            bits.writePartDuration(note.start - curPart);\n                        }\n\n                        shapeBits.clear();\n\n                        // Old format was:\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\n                        // New format is:\n                        //      0: 1 pitch\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        } else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n\n                        shapeBits.writePinCount(note.pins.length - 1);\n\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\n                        }\n\n                        let shapePart: number = 0;\n                        let startPitch: number = note.pitches[0];\n                        let currentPitch: number = startPitch;\n                        const pitchBends: number[] = [];\n                        for (let i: number = 1; i < note.pins.length; i++) {\n                            const pin: NotePin = note.pins[i];\n                            const nextPitch: number = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            } else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            } else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1); // new shape\n                            bits.concat(shapeBits);\n                        } else {\n                            bits.write(1, 1); // old shape\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10) recentShapes.pop();\n\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\n                        for (let i: number = 0; i < allPitches.length; i++) {\n                            const pitch: number = allPitches[i];\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval: number = 0;\n                                let pitchIter: number = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\n                                    }\n                                } else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            } else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16) recentPitches.pop();\n\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            } else {\n                                lastPitch = pitch;\n                            }\n                        }\n\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n\n                        curPart = note.end;\n                    }\n\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0); // rest\n                        if (isModChannel) bits.write(1, 0); // positive offset\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                } else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength: number = bits.lengthBase64();\n        let digits: number[] = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\n        bits.encodeBase64(buffer);\n\t    \n        const maxApplyArgs: number = 64000;\n\t    \t\t\t            let customSamplesStr = \"\";\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\n              \n          }\n\t\t  //samplemark\n        if (buffer.length < maxApplyArgs) {\n            // Note: Function.apply may break for long argument lists. \n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n\t\t\t\t//samplemark\n        } else {\n            let result: string = \"\";\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n                          return result + customSamplesStr;\n\t\t\t   //samplemark\n        }\n    }\n\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n\n    public fromBase64String(compressed: string, jsonFormat: string = \"auto\"): void {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex: number = 0;\n        // skip whitespace.\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\n        // skip hash mark.\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\n        // if it starts with curly brace, treat it as JSON.\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\n            return;\n        }\n\n        const variantTest: number = compressed.charCodeAt(charIndex);\n        let fromBeepBox: boolean = false;\n        let fromJummBox: boolean = false;\n        let fromGoldBox: boolean = false;\n\t    let fromUltraBox: boolean = false;\n        // let fromMidbox: boolean;\n        // let fromDogebox2: boolean;\n        let fromAbyssBox: boolean = false;\n        let fromSlarmoosBox: boolean = false;\n\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\n        if (variantTest == 0x6A) { //\"j\"\n            fromJummBox = true;\n            charIndex++;\n        } else if (variantTest == 0x67) { //\"g\"\n            fromGoldBox = true;\n            charIndex++;\n        } else if (variantTest == 0x75) { //\"u\"\n\t\t    fromUltraBox = true;\n            charIndex++;\n        } else if(variantTest == 0x73){ //\"s\"\n            fromSlarmoosBox = true\n            charIndex++;\n        } else if (variantTest == 0x61) { //\"a\"\n            fromAbyssBox = true;\n            charIndex++;\n        }  else {\n        fromBeepBox = true;\n        }\n\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\n\t    if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\n        if (fromSlarmoosBox && (version == -1 || version > Song._latestSlarmoosBoxVersion || version < Song._oldestSlarmoosBoxVersion)) return;\n        if (fromAbyssBox && (version == -1 || version > Song._latestAbyssBoxVersion || version < Song._oldestAbyssBoxVersion)) return;\n        const beforeTwo: boolean = version < 2;\n        const beforeThree: boolean = version < 3;\n        const beforeFour: boolean = version < 4;\n        const beforeFive: boolean = version < 5;\n        const beforeSix: boolean = version < 6;\n        const beforeSeven: boolean = version < 7;\n        const beforeEight: boolean = version < 8;\n        const beforeNine: boolean = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n\n        let willLoadLegacySamplesForOldSongs: boolean = false;\n\n        if (fromUltraBox || fromGoldBox || fromAbyssBox || fromSlarmoosBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\n                var compressed_array = compressed.split(\"|\");\n                compressed = compressed_array.shift()!;\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n\n                    Song._restoreChipWaveListToDefault();\n\n                    let willLoadLegacySamples = false;\n                    let willLoadNintariboxSamples = false;\n                    let willLoadMarioPaintboxSamples = false;\n                    const customSampleUrls = [];\n                    const customSamplePresets: Preset[] = [];\n                    sampleLoadingState.statusTable = {};\n                    sampleLoadingState.urlTable = {};\n                    sampleLoadingState.totalSamples = 0;\n                    sampleLoadingState.samplesLoaded = 0;\n                    sampleLoadingState.samplesFailed = 0;\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n                        sampleLoadingState.totalSamples,\n                        sampleLoadingState.samplesLoaded,\n                        sampleLoadingState.samplesFailed\n                    ));\n                    for (const url of compressed_array) {\n                        if (url.toLowerCase() === \"legacysamples\") {\n                            if (!willLoadLegacySamples) {\n                                willLoadLegacySamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(0);\n                            }\n                        } \n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\n                            if (!willLoadNintariboxSamples) {\n                                willLoadNintariboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(1);\n                            }\n                        }\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                            if (!willLoadMarioPaintboxSamples) {\n                                willLoadMarioPaintboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(2);\n                            }\n                        }\n                        \n                        else {\n                            // UB version 2 URLs and below will be using the old syntax, so we do need to parse it in that case.\n                            // UB version 3 URLs should only have the new syntax, though, unless the user has edited the URL manually.\n                            const parseOldSyntax: boolean = (fromUltraBox && beforeThree);\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                            if (!ok) {\n                                continue;\n                            }\n                        }\n                    }\n                    if (customSampleUrls.length > 0) {\n                        EditorConfig.customSamples = customSampleUrls;\n                    }\n                    if (customSamplePresets.length > 0) {\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                            name: \"Custom Sample Presets\",\n                            presets: customSamplePresetsMap,\n                            index: EditorConfig.presetCategories.length,\n                        };\n                        // EditorConfig.presetCategories.splice(1, 0, {\n                             // name: \"Custom Sample Presets\",\n                             // presets: customSamplePresets,\n                             // index: EditorConfig.presetCategories.length,\n                        // });\n                    }\n\n               \n                }\n                //samplemark\n        }\n\n        if (beforeThree && fromBeepBox) {\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << EffectType.transition;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n\n        let legacySettingsCache: LegacySettings[][] | null = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\n            // filter-and-envelope-related parameters in the URL, and none of them directly\n            // correspond to the new way of saving these parameters. We can approximate the old\n            // settings by collecting all the old settings for an instrument and passing them to\n            // convertLegacySettings(), so I use this data structure to collect the settings\n            // for each instrument if necessary.\n            legacySettingsCache = [];\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\n            }\n        }\n\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\n\n        let instrumentChannelIterator: number = 0;\n        let instrumentIndexIterator: number = -1;\n        let command: number;\n        let useSlowerArpSpeed: boolean = false;\n        let useFastTwoNoteArp: boolean = false;\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\n            case SongTagCode.songDetails: {\n                // Length of song name string\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 50) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                document.title = (this.title != \"\" ? this.title + \" - \" + EditorConfig.versionDisplayName : EditorConfig.versionDisplayName); \n\n                charIndex += songNameLength;\n\n                if ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree)) {\n                    // Length of song author string\n                    var songAuthorLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.author = decodeURIComponent(compressed.substring(charIndex, charIndex + songAuthorLength));\n\n                    charIndex += songAuthorLength;\n\n                    // Length of song description string\n                    var songDescriptionLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.description = decodeURIComponent(compressed.substring(charIndex, charIndex + songDescriptionLength));\n\n                    charIndex += songDescriptionLength;\n\n                    this.showSongDetails = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1;\n                }\n            } break;\n            case SongTagCode.songTheme: {\n                // Length of song theme string\n                var songThemeLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.setSongTheme = decodeURIComponent(compressed.substring(charIndex, charIndex + songThemeLength));\n                charIndex += songThemeLength;\n            } break;\n            case SongTagCode.channelCount: {\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                if (fromBeepBox || (fromJummBox && beforeTwo)) {\n                    // No mod channel support before jummbox v2\n                    this.modChannelCount = 0;\n                } else {\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                this.channels.length = this.getChannelCount();\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\n                        legacySettingsCache![i] = [];\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\n                    }\n                }\n            } break;\n            case SongTagCode.scale: {\n                this.scale = clamp(0, Config.scales.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                // All the scales were jumbled around by Jummbox. Just convert to free.\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\n                    }\n                }\n                if (fromBeepBox) this.scale = 0;\n            } break;\n            case SongTagCode.key: {\n                if (beforeSeven && fromBeepBox) {\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromBeepBox || fromJummBox) {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                    // GoldBox (so far) didn't introduce any new keys, but old\n                    // songs made with early versions of UltraBox share the\n                    // same URL format, and those can have more keys. This\n                    // shouldn't really result in anything other than 0-11 for\n                    // the key and 0 for the octave for GoldBox songs.\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                    this.key = key;\n                    this.octave = octave;\n                } else {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                }\n            } break;\n            case SongTagCode.loopStart: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n            } break;\n            case SongTagCode.loopEnd: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n            } break;\n            case SongTagCode.tempo: {\n                if (beforeFour && fromBeepBox) {\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else if (beforeSeven && fromBeepBox) {\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n            } break;\n            case SongTagCode.loopType: {\n                this.loopType = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n            } break;\n            case SongTagCode.reverb: {\n                if (beforeNine && fromBeepBox) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else {\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\n                }\n            } break;\n            case SongTagCode.beatCount: {\n                if (beforeThree && fromBeepBox) {\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n            } break;\n            case SongTagCode.barCount: {\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                    }\n                    this.channels[channelIndex].bars.length = this.barCount;\n                }\n            } break;\n            case SongTagCode.patternCount: {\n                let patternsPerChannel: number;\n                if (beforeEight && fromBeepBox) {\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                } else {\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                const channelCount: number = this.getChannelCount();\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                        patterns[pattern] = new Pattern();\n                    }\n                    patterns.length = this.patternsPerChannel;\n                }\n            } break;\n            case SongTagCode.instrumentCount: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                    this.layeredInstruments = false;\n                    this.patternInstruments = (instrumentsPerChannel > 1);\n\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                        if (beforeSix && fromBeepBox) {\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\n                            }\n                        }\n\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\n                            legacySettingsCache![channelIndex][j] = {};\n                        }\n                    }\n                } else {\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        let instrumentCount: number = 1;\n                        if (this.layeredInstruments || this.patternInstruments) {\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                        }\n                        const channel: Channel = this.channels[channelIndex];\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        channel.instruments.length = instrumentCount;\n                    }\n                }\n            } break;\n            case SongTagCode.rhythm: {\n                if (!fromUltraBox && !fromAbyssBox && !fromSlarmoosBox) {\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\n\t\t\t\tif (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\n\t\t\t\t\tuseSlowerArpSpeed = true;\n\t\t\t\t}\n\t\t\t\tif (this.rhythm >= Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\n\t\t\t\t\t// @TODO: This assumes that 6 and 8 are in that order, but\n\t\t\t\t\t// if someone reorders Config.rhythms that may not be true,\n\t\t\t\t\t// so this check probably should instead look for those\n\t\t\t\t\t// specific rhythms.\n\t\t\t\t\tuseFastTwoNoteArp = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t}\n\t\t//rhythm fixes\n            } break;\n            case SongTagCode.channelOctave: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                    }\n                } else {\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = 0;\n                    }\n                }\n            } break;\n            case SongTagCode.startInstrument: {\n                instrumentIndexIterator++;\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                    instrumentChannelIterator++;\n                    instrumentIndexIterator = 0;\n                }\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\n                        instrumentType += 2;\n                    }\n                }\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\n                else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive) ) {\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.mod) {\n                        instrumentType += 1;\n                    }\n                }\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\n                    instrument.aliases = true;\n                    instrument.distortion = 0;\n                    instrument.effects |= 1 << EffectType.distortion;\n                }\n                if (useSlowerArpSpeed) {\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\n                }\n                if (useFastTwoNoteArp) {\n                    instrument.fastTwoNoteArp = true;\n                }\n\n                if (beforeSeven && fromBeepBox) {\n                    //instrument.effects = 0;\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                }\n            } break;\n            case SongTagCode.preset: {\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                }\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\n                else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw ) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                    // ultra code for 6-op fm maybe\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.mod ) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.fm6op;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.fm6op;\n                    }\n                }\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\n                if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\")!;\n                }\n            } break;\n            case SongTagCode.wave: {\n                if (beforeThree && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\n                    // just waves, so initialize them here I guess.\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\n\n                } else if (beforeSix && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            if (channelIndex >= this.pitchChannelCount) {\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            } else {\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                    }\n                } else {\n                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                    if (instrument.type == InstrumentType.noise) {\n                        instrument.chipNoise = clamp(0, Config.chipNoiseLength, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        if (fromUltraBox || fromAbyssBox || fromSlarmoosBox) {\n                            if ((fromUltraBox && beforeSix)||(fromAbyssBox && beforeThree)) {\n                                const chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                                // backcompat for removal of zefbox deep square\n                                if (chipWaveCounter == 3) {\n                                    instrument.chipWave = chipWaveReal + 186;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n                                } else if (chipWaveCounter == 2) {\n                                    instrument.chipWave = chipWaveReal + 124;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n                                } else if (chipWaveCounter == 1) {\n                                    instrument.chipWave = chipWaveReal + 62;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n                                } else {\n                                    instrument.chipWave = chipWaveReal;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n                                }\n\n                                if (instrument.chipWave == 64) {\n                                    instrument.chipWave = 52;\n                                } else if (instrument.chipWave > 64) {\n                                    instrument.chipWave -= 1;\n                                }\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, instrument.chipWave);\n                            } else {\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63));\n                            }\n\n                        } else {\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n\t\t            }\n        \t}\n            } break;\n            case SongTagCode.eqFilter: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if (beforeSeven && fromBeepBox) {\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        } else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                    if (channelIndex < this.pitchChannelCount) {\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    } else {\n                                        legacySettings.filterCutoff = 10;\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                    }\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                        } else {\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    } else {\n                        const filterCutoffRange: number = 11;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    if (fromBeepBox || typeCheck == 0) {\n                        instrument.eqFilterType = false;\n                        if (fromJummBox || fromGoldBox || fromUltraBox || fromAbyssBox || fromSlarmoosBox)\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\n                        const originalControlPointCount: number = typeCheck;\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                        }\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                            charIndex += 3;\n                        }\n\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromAbyssBox || fromSlarmoosBox) {\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                if (usingSubFilterBitfield & (1 << j)) {\n                                    // Number of control points\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (instrument.eqSubFilters[j + 1] == null)\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        instrument.eqFilterType = true;\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.filterResonance: {\n                if (fromUltraBox || fromAbyssBox || fromSlarmoosBox) {\n                    if (fromUltraBox && beforeThree) {\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                        charIndex += sampleLoopInfoEncodedLength;\n                        interface SampleLoopInfo {\n                            isUsingAdvancedLoopControls: boolean;\n                            chipWaveLoopStart: number;\n                            chipWaveLoopEnd: number;\n                            chipWaveLoopMode: number;\n                            chipWavePlayBackwards: boolean;\n                            chipWaveStartOffset: number;\n                        }\n                        interface SampleLoopInfoEntry {\n                            channel: number;\n                            instrument: number;\n                            info: SampleLoopInfo;\n                        }\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\n                        for (const entry of sampleLoopInfo) {\n                            const channelIndex: number = entry[\"channel\"];\n                            const instrumentIndex: number = entry[\"instrument\"];\n                            const info: SampleLoopInfo = entry[\"info\"];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\n                        }\n                    } else {\n                        // Read the new loop control data format.\n                        // See Song.toBase64String for details on the encodings used here.\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\n                    }\n                }\n                else if (fromGoldBox && !beforeFour && beforeSix) {\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                            if (!willLoadLegacySamplesForOldSongs) {\n                                willLoadLegacySamplesForOldSongs = true;\n                                Config.willReloadForCustomSamples = true;\n                                EditorConfig.customSamples = [\"legacySamples\"];\n                                loadBuiltInSamples(0);\n                            }\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const filterResonanceRange: number = 8;\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.drumsetEnvelopes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)){\n\n                    }\n                    if (instrument.type == InstrumentType.drumset) {\n                        for (let i: number = 0; i < Config.drumCount; i++) {\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)) aa = pregoldToEnvelope[aa];\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                        }\n                    } else {\n                        // This used to be used for general filter envelopes.\n                        // The presence of an envelope affects how convertLegacySettings\n                        // decides the closest possible approximation, so update it.\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)) aa = pregoldToEnvelope[aa];\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    // This tag is now only used for drumset filter envelopes.\n                    for (let i: number = 0; i < Config.drumCount; i++) {\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)) aa = pregoldToEnvelope[aa];\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                    }\n                }\n            } break;\n            case SongTagCode.pulseWidth: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((fromAbyssBox && !beforeThree)) {\n                    instrument.pulseWidth = clamp(0, 101, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]));\n                } else {\n                    if (!fromBeepBox) {\n                        instrument.pulseWidth = clamp(0, Config.pulseWidthRange/2 + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        // BeepBox formula\n                        instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n                    }\n                    \n                }\n\n\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n\n                if ((fromUltraBox && !beforeFour) || fromAbyssBox || fromSlarmoosBox)  {\n                    instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n\n            } break;\n            case SongTagCode.stringSustain: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\n            } break;\n            case SongTagCode.fadeInOut: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    // this tag was used for a combination of transition and fade in/out.\n                    const legacySettings = [\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    ];\n                    if (beforeThree && fromBeepBox) {\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else if (beforeSix && fromBeepBox) {\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (const instrument of this.channels[channelIndex].instruments) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    // Enable transition if it was used.\n                                    instrument.effects |= 1 << EffectType.transition;\n                                }\n                            }\n                        }\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox) || fromBeepBox) {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n\n                        // Read tie-note \n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\n                            instrument.legacyTieOver = true;\n\n                        }\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (!fromBeepBox)\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                }\n            } break;\n            case SongTagCode.vibrato: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    if (beforeSeven && fromBeepBox) {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 3, 2, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                        } else if (beforeSix && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                        // Imitate the legacy tremolo with a filter envelope.\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        // Enable vibrato if it was used.\n                                        instrument.effects |= 1 << EffectType.vibrato;\n                                    }\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                        instrument.effects |= 1 << EffectType.reverb;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                        } else {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                instrument.effects |= 1 << EffectType.reverb;\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                        }\n                    } else {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.vibrato = vibrato;\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                            // Enable vibrato if it was used.\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Custom vibrato\n                        if (vibrato == Config.vibratos.length) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.arpeggioSpeed: {\n                // Deprecated, but supported for legacy purposes\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\n                }\n                else {\n                    // Do nothing, deprecated for now\n                }\n            } break;\n            case SongTagCode.unison: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    const instrument = this.channels[channelIndex].instruments[0];\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\n                            if (originalValue == 8) {\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\n                    if (originalValue == 8) {\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                        unison = 2;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\n                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                } else {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                \n                if (((fromUltraBox && !beforeFour) || fromAbyssBox || fromSlarmoosBox) && (instrument.unison == Config.unisons.length))  {\n                // if (instrument.unison == Config.unisons.length) {\n                    instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSpread: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonOffset: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonExpression: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                    \n                    const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSign: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n\n\n                    instrument.unisonSpread = unisonSpread / 1000;\n                    if (unisonSpreadNegative == 0) instrument.unisonSpread *= -1;\n\n                    instrument.unisonOffset = unisonOffset / 1000;\n                    if (unisonOffsetNegative == 0) instrument.unisonOffset *= -1;\n\n                    instrument.unisonExpression = unisonExpression / 1000;\n                    if (unisonExpressionNegative == 0) instrument.unisonExpression *= -1;\n\n                    instrument.unisonSign = unisonSign / 1000;\n                    if (unisonSignNegative == 0) instrument.unisonSign *= -1;\n\n                    instrument.unisonBuzzes = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                } else {\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                    instrument.unisonBuzzes = false;\n                }\n            \n            } break;\n            case SongTagCode.chord: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.effects: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                        // Disable reverb if legacy song reverb was zero.\n                        instrument.effects &= ~(1 << EffectType.reverb);\n                    } else if (effectsIncludeReverb(instrument.effects)) {\n                        instrument.reverb = legacyGlobalReverb;\n                    }\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\n                    //if (instrument.pan != Config.panCenter) {\n                    instrument.effects |= 1 << EffectType.panning;\n                    //}\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                        // Enable vibrato if it was used.\n                        instrument.effects |= 1 << EffectType.vibrato;\n                    }\n                    if (instrument.detune != Config.detuneCenter) {\n                        // Enable detune if it was used.\n                        instrument.effects |= 1 << EffectType.detune;\n                    }\n                    if (instrument.aliases)\n                        instrument.effects |= 1 << EffectType.distortion;\n                    else\n                        instrument.effects &= ~(1 << EffectType.distortion);\n\n                    // convertLegacySettings may need to force-enable note filter, call\n                    // it again here to make sure that this override takes precedence.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\n                    if (EffectType.length > 16) throw new Error();\n                        if ((fromAbyssBox && !beforeTwo||fromAbyssBox && !beforeThree)||(fromUltraBox && !beforeSix))  {\n                                instrument.effects = (\n                                    (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5))\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4))\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3))\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2))\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1))\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0))\n                                ) >>> 0;\n                        } else {\n                            instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \n                        }\n\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || typeCheck == 0) {\n                            instrument.noteFilterType = false;\n                            if (!fromBeepBox)\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                            }\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                charIndex += 3;\n                            }\n\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)|| (fromAbyssBox) || fromSlarmoosBox) {\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        // Number of control points\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (instrument.noteSubFilters[j + 1] == null)\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            instrument.noteFilterType = true;\n                            instrument.noteFilter.reset();\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        }\n                    }\n                    if (effectsIncludeTransition(instrument.effects)) {\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree)) {\n                            if (Config.transitions[instrument.transition].slides == true) instrument.slideTicks = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    if (effectsIncludeChord(instrument.effects)) {\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\n                        if (Config.chords[instrument.chord].arpeggiates == true && (!fromBeepBox)) {\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                        } else if (Config.chords[instrument.chord].strumParts > 0 && ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree))) {\n                            instrument.strumParts = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    if (effectsIncludePitchShift(instrument.effects)) {\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeDetune(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Convert from BeepBox's formula\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                        } else {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeVibrato(instrument.effects)) {\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        // Custom vibrato\n                        if (instrument.vibrato == Config.vibratos.length && (!fromBeepBox)) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                    if (effectsIncludeDistortion(instrument.effects)) {\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromAbyssBox || fromSlarmoosBox)\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                    }\n                    if (effectsIncludeRM(instrument.effects)) {\n                        instrument.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t\t    instrument.rmWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\n                        if ((fromAbyssBox && beforeThree)) {\n                            instrument.rmPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \n                        } else {\t\t\t\t\t\t\n                            instrument.rmPulseWidth = clamp(0, Config.pulseWidthRange, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t        instrument.rmHzOffset = clamp(Config.rmHzOffsetMin, Config.rmHzOffsetMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\n                        }\n                    }\n                    if (effectsIncludePhaser(instrument.effects)) {\n                        instrument.phaserFreq = clamp(0, Config.phaserFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.phaserFeedback = clamp(0, Config.phaserFeedbackRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.phaserStages = clamp(0, Config.phaserMaxStages + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \n                        instrument.phaserMix = clamp(0, Config.phaserMixRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if(effectsIncludeInvertWave(instrument.effects)) {\n                        instrument.invertWave = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                    }\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludePanning(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                        }\n                        else {\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n\n                        // Now, pan delay follows on new versions of jummbox.\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromAbyssBox || fromSlarmoosBox)\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                    if (effectsIncludeChorus(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // BeepBox has 4 chorus values vs. JB's 8\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                        }\n                        else {\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeEcho(instrument.effects)) {\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeReverb(instrument.effects)) {\n                        if (fromBeepBox) {\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                        } else {\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeNoteRange(instrument.effects)) {\n                        instrument.upperNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        instrument.lowerNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                }\n                // Clamp the range.\n                instrument.effects &= (1 << EffectType.length) - 1;\n            } break;\n            case SongTagCode.volume: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (fromBeepBox) {\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                }\n            } break;\n            case SongTagCode.pan: {\n                if (beforeNine && fromBeepBox) {\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // Pan delay follows on v3 + v4\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox || fromAbyssBox || fromSlarmoosBox) {\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.detune: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                    instrument.effects |= 1 << EffectType.detune;\n                } else {\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\n                }\n            } break;\n            case SongTagCode.customChipWave: {\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // Pop custom wave values\n                for (let j: number = 0; j < 64; j++) {\n                    instrument.customChipWave[j]\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    sum += instrument.customChipWave[i];\n                }\n                const average: number = sum / instrument.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = instrument.customChipWave[i] - average;\n                    instrument.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                instrument.customChipWaveIntegral[64] = 0.0;\n\n            } break;\n            case SongTagCode.limiterSettings: {\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                // Check if limiter settings are used... if not, restore to default\n                if (nextValue == 0x3f) {\n                    this.restoreLimiterDefaults();\n                }\n                else {\n                    // Limiter is used, grab values\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                }\n            } break;\n            case SongTagCode.channelNames: {\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\n                    var channelNameLength;\n                    if (beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\n                    else\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n\n                    charIndex += channelNameLength;\n                }\n            } break;\n            case SongTagCode.algorithm: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                        charIndex++\n                        let tempModArray: number[][] = [];\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\n                            charIndex++\n                            let j: number = 0;\n                            charIndex++\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                                tempModArray[j] = [];\n                                let o: number = 0;\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                    o++\n                                    charIndex++\n                                }\n                                j++;\n                                charIndex++\n                            }\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                            charIndex++; //????\n                        }\n                    }\n                }\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n            } break;\n            case SongTagCode.supersaw: {\n                if (fromGoldBox && !beforeFour && beforeSix) {\n                    //is it more useful to save base64 characters or url length?\n                    const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if ((chipWaveForCompat + 62) > 85) {\n                        if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                            if (!willLoadLegacySamplesForOldSongs) {\n                                willLoadLegacySamplesForOldSongs = true;\n                                Config.willReloadForCustomSamples = true;\n                                EditorConfig.customSamples = [\"legacySamples\"];\n                                loadBuiltInSamples(0);\n                            }\n                        }\n                    }\n                    \n                    if ((chipWaveForCompat + 62) > 78) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\n                    }\n                    else if ((chipWaveForCompat + 62) > 67) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\n                    }\n                    else if ((chipWaveForCompat + 62) == 67) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\n                    }\n                    else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\n                    }\t\t\t\t\t\t\t\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n\t\t\t} break;\n            case SongTagCode.feedbackType: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                    let tempModArray: number[][] = [];\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\n                        let j: number = 0;\n                        charIndex++\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                            tempModArray[j] = [];\n                            let o: number = 0;\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                o++\n                                charIndex++\n                            }\n                            j++;\n                            charIndex++\n                        }\n                        instrument.customFeedbackType.set(tempModArray);\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\n                    }\n                }\n\n            } break;\n            case SongTagCode.feedbackAmplitude: {\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.feedbackEnvelope: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    \n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.operatorFrequencies: {\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (beforeThree && fromGoldBox) {\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                               \n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                            }\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox) {\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n                            else {\n                                for (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n            } break;\n            case SongTagCode.operatorAmplitudes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.envelopes: {\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                const jummToUltraEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\n                const oldToNewEnvelope: number[] = [\n                    0, // none\n                    1, // note size\n                    4, // punch\n                    5, 5, 5, 5, // flare\n                    6, 6, 6, 6, // twang\n                    7, 7, 7, 7, // swell\n                    8, 8, 8, 8, // tremolo 0-3\n                    9, 9, 9, // tremolo 4-6\n                    10, 10, 10, 10, // decay\n                    11, 11, 11, 11, // wibble\n                    12, 12, 12, 12, 12, // Linear\n                    13, 13, 13, 13, 13, // Rise\n                    11, 11, 11, // Flute\n                    8, 8, 8, // Tripolo 1-3\n                    9, 9, 9, // Tripolo 4-6\n                    8, 8, 8, // Pentolo 1-3\n                    9, 9, 9, // Pentolo 4-6\n                    8, // Flutter 1\n                    9, // Flutter 2\n                    8, // Water-y Flutter\n                    14, 14, 14 // Blip\n                ];\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.operatorEnvelopes = [];\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa];\n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                    }\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // JB v6 adds some envelope options here in the sequence.\n                    if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive)|| (fromAbyssBox)||fromSlarmoosBox) {\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    }\n                    for (let i: number = 0; i < envelopeCount; i++) {\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        let index: number = 0;\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\n                        if (maxCount > 1) {\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // For context, envTypeIndex is Envelope Type Index, this used to be aa but I (choptop84) changed it.\n                        let envTypeIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) envTypeIndex = pregoldToEnvelope[envTypeIndex];\n                        let perEnvelopeSpeed: number = 1;\n                        if ((!fromAbyssBox&&!fromSlarmoosBox)||(fromAbyssBox&&beforeThree)) {\n                            perEnvelopeSpeed = Config.envelopes[envTypeIndex].speed;\n                            envTypeIndex = oldToNewEnvelope[envTypeIndex];\n                        }\n                        let isTremolo2 = false;\n                        if (((!fromAbyssBox&&!fromSlarmoosBox) || (fromAbyssBox && beforeThree)) && envTypeIndex == 9) {\n                            isTremolo2 = true;\n                            envTypeIndex--;\n                            // 9 to remove tremolo2\n                        } else if (((!fromAbyssBox&&!fromSlarmoosBox) || (fromAbyssBox && beforeThree)) && envTypeIndex > 9) {\n                            envTypeIndex--;\n                        } \n\n                        const envelope: number = clamp(0, Config.newEnvelopes.length, envTypeIndex);\n                        let pitchEnvelopeStart: number = 0;\n                        let pitchEnvelopeEnd: number = Config.maxPitch;\n                        let envelopeInverse: boolean = false;\n                        perEnvelopeSpeed = ((fromAbyssBox && !beforeThree)||fromSlarmoosBox) ? Config.newEnvelopes[envelope].speed : perEnvelopeSpeed;\n                        let perEnvelopeLowerBound: number = 0;\n                        let perEnvelopeUpperBound: number = 1;\n                        let steps: number = 2;\n                        let seed: number = 2;\n                        let waveform: number = BaseWaveTypes.sine;\n                        //pull out unique envelope setting values first, then general ones\n                        if ((fromAbyssBox && !beforeThree)||fromSlarmoosBox) {\n                            if (Config.newEnvelopes[envelope].name == \"lfo\") { \n                                waveform = clamp(0, BaseWaveTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (waveform == BaseWaveTypes.steppedSaw || waveform == BaseWaveTypes.steppedTri) {\n                                    steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            } else if (Config.newEnvelopes[envelope].name == \"random\") {\n                                steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                seed = clamp(1, Config.randomEnvelopeSeedMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                waveform = clamp(0, RandomEnvelopeTypes.length,base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); //we use waveform for the random type as well\n                            }\n                            if (Config.newEnvelopes[envelope].name == \"pitch\") { \n                                if (!instrument.isNoiseInstrument) {\n                                    let pitchEnvelopeCompact: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    pitchEnvelopeStart = clamp(0, Config.maxPitch, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    pitchEnvelopeEnd = clamp(0, Config.maxPitch, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);    \n                                } else {\n                                    pitchEnvelopeStart = clamp(0, Config.drumCount-1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    pitchEnvelopeEnd = clamp(0, Config.drumCount - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            } \n                            envelopeInverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1 ? true : false;\n                            if (Config.newEnvelopes[envelope].name != \"pitch\" && Config.newEnvelopes[envelope].name != \"note size\" && Config.newEnvelopes[envelope].name != \"punch\" && Config.newEnvelopes[envelope].name != \"none\") {\n                                perEnvelopeSpeed = Config.perEnvelopeSpeedIndices[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                            }\n                            perEnvelopeLowerBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]/10;\n                            perEnvelopeUpperBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]/10;\n                        }\n                        if ((!fromAbyssBox&&!fromSlarmoosBox) || (fromAbyssBox && beforeThree)) { //update tremolo2\n                            if (isTremolo2) {\n                                waveform = BaseWaveTypes.sine;\n                                if (envelopeInverse) {\n                                    perEnvelopeUpperBound = Math.floor((perEnvelopeUpperBound / 2) * 10) / 10;\n                                    perEnvelopeLowerBound = Math.floor((perEnvelopeLowerBound / 2) * 10) / 10;\n                                } else {\n                                    perEnvelopeUpperBound = Math.floor((0.5 + (perEnvelopeUpperBound - perEnvelopeLowerBound) / 2) * 10) / 10;\n                                    perEnvelopeLowerBound = 0.5;\n                                }\n                            }\n                        }\n                        instrument.addEnvelope(target, index, envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, perEnvelopeSpeed, perEnvelopeLowerBound, perEnvelopeUpperBound, steps, seed, waveform);\n                    }\n                }\n            } break;\n            case SongTagCode.operatorWaves: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if (beforeThree && fromGoldBox) {\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (old == 3) {\n                            instrument.operators[o].pulseWidth = 5;\n                        } else if (old == 4) {\n                            instrument.operators[o].pulseWidth = 4;\n                        } else if (old == 5) {\n                            instrument.operators[o].pulseWidth = 6;\n                        }\n                        instrument.operators[o].waveform = pre3To3g[old];\n                    }\n                } else {\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        if (fromJummBox) {\n                            const jummToG = [0, 1, 3, 2, 4, 5];\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        } else {\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Pulse width follows, if it is a pulse width operator wave\n                        if (instrument.operators[o].waveform == 2) {\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n\n            } break;\n            case SongTagCode.spectrum: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.spectrum) {\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                    charIndex += byteCount;\n                } else if (instrument.type == InstrumentType.drumset) {\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                        }\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                    }\n                    charIndex += byteCount;\n                } else {\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                }\n            } break;\n            case SongTagCode.harmonics: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                }\n                instrument.harmonicsWave.markCustomWaveDirty();\n                charIndex += byteCount;\n            } break;\n            case SongTagCode.aliases: {\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    if (instrument.aliases) {\n                        instrument.distortion = 0;\n                        instrument.effects |= 1 << EffectType.distortion;\n                    }\n                } else {\n                    if (fromUltraBox || fromAbyssBox || fromSlarmoosBox) {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \n                        instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            }\n                break;\n            case SongTagCode.bars: {\n                let subStringLength: number;\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    subStringLength = Math.ceil(barCount * 0.5);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let i: number = 0; i < barCount; i++) {\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                    }\n                } else if (beforeFive && fromBeepBox) {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                        }\n                    }\n                } else {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                        }\n                    }\n                }\n                charIndex += subStringLength;\n            } break;\n            case SongTagCode.patterns: {\n                let bitStringLength: number = 0;\n                let channelIndex: number;\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\n                let recentPitchLength: number = (largerChords ? 16 : 8);\n                if (beforeThree && fromBeepBox) {\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    bitStringLength = bitStringLength << 6;\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    channelIndex = 0;\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    while (bitStringLengthLength > 0) {\n                        bitStringLength = bitStringLength << 6;\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        bitStringLengthLength--;\n                    }\n                }\n\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                charIndex += bitStringLength;\n\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n                let songReverbChannel: number = -1;\n                let songReverbInstrument: number = -1;\n                let songReverbIndex: number = -1;\n\n                // @TODO: Include GoldBox here.\n                const shouldCorrectTempoMods: boolean = fromJummBox;\n                const jummboxTempoMin: number = 30;\n\n                while (true) {\n                    const channel: Channel = this.channels[channelIndex];\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n                    // Some info about modulator settings immediately follows in mod channels.\n                    if (isModChannel) {\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\n\n                        // 2 more indices for 'all' and 'active'\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\n\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                                // 0 - For pitch/noise\n                                // 1 - (used to be For noise, not needed)\n                                // 2 - For song\n                                // 3 - None\n                                let status: number = bits.read(2);\n\n                                switch (status) {\n                                    case 0: // Pitch\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                        break;\n                                    case 1: // Noise\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                        break;\n                                    case 2: // For song\n                                        instrument.modChannels[mod] = -1;\n                                        break;\n                                    case 3: // None\n                                        instrument.modChannels[mod] = -2;\n                                        break;\n                                }\n\n                                // Mod setting is only used if the status isn't \"none\".\n                                if (status != 3) {\n                                    instrument.modulators[mod] = bits.read(6);\n                                }\n\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\n                                    instrument.modFilterTypes[mod] = bits.read(6);\n                                }\n\n                                if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\") {\n                                    instrument.modEnvelopeNumbers[mod] = bits.read(6);\n                                }\n\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\n                                    if (instrument.modulators[mod] == 7) {\n                                        // Legacy filter cut index\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\n\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\n\n                                    }\n                                    else if (instrument.modulators[mod] == 8) {\n                                        // Legacy filter peak index\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\n                                    }\n                                }\n                                else if (jumfive) {\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                        songReverbChannel = channelIndex;\n                                        songReverbInstrument = instrumentIndex;\n                                        songReverbIndex = mod;\n                                    }\n                                }\n\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\n                                // keeping the mod invalid is better since it preserves the state.\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                }\n                            }\n                        }\n                    }\n\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\n                    const detuneScaleNotes: number[][] = [];\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\n                        detuneScaleNotes[j] = [];\n                        for (let i: number = 0; i < Config.modCount; i++) {\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                        }\n                    }\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                    const recentShapes: any[] = [];\n                    for (let i: number = 0; i < recentPitches.length; i++) {\n                        recentPitches[i] += octaveOffset;\n                    }\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                        const newPattern: Pattern = channel.patterns[i];\n\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                            newPattern.instruments.length = 1;\n                        } else {\n                            if (this.patternInstruments) {\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                for (let j: number = 0; j < instrumentCount; j++) {\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                }\n                                newPattern.instruments.length = instrumentCount;\n                            } else {\n                                newPattern.instruments[0] = 0;\n                                newPattern.instruments.length = Config.instrumentCountMin;\n                            }\n                        }\n\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                            newPattern.notes.length = 0;\n                            continue;\n                        }\n\n                        let curPart: number = 0;\n                        const newNotes: Note[] = newPattern.notes;\n                        let noteCount: number = 0;\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n\n                            const useOldShape: boolean = bits.read(1) == 1;\n                            let newNote: boolean = false;\n                            let shapeIndex: number = 0;\n                            if (useOldShape) {\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                            } else {\n                                newNote = bits.read(1) == 1;\n                            }\n\n                            if (!useOldShape && !newNote) {\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\n                                if (isModChannel) {\n                                    const isBackwards: boolean = bits.read(1) == 1;\n                                    const restLength: number = bits.readPartDuration();\n                                    if (isBackwards) {\n                                        curPart -= restLength;\n                                    }\n                                    else {\n                                        curPart += restLength;\n                                    }\n                                } else {\n                                    const restLength: number = (beforeSeven && fromBeepBox)\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                        : bits.readPartDuration();\n                                    curPart += restLength;\n\n                                }\n                            } else {\n                                let shape: any;\n                                if (useOldShape) {\n                                    shape = recentShapes[shapeIndex];\n                                    recentShapes.splice(shapeIndex, 1);\n                                } else {\n                                    shape = {};\n\n                                    if (!largerChords) {\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\n                                        shape.pitchCount = 1;\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\n                                    }\n                                    else {\n                                        // New format is:\n                                        //      0: 1 pitch\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                                        if (bits.read(1) == 1) {\n                                            shape.pitchCount = bits.read(3) + 2;\n                                        }\n                                        else {\n                                            shape.pitchCount = 1;\n                                        }\n                                    }\n\n                                    shape.pinCount = bits.readPinCount();\n                                    if (fromBeepBox) {\n                                        shape.initialSize = bits.read(2) * 2;\n                                    } else if (!isModChannel) {\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\n                                    } else {\n                                        shape.initialSize = bits.read(9);\n                                    }\n\n                                    shape.pins = [];\n                                    shape.length = 0;\n                                    shape.bendCount = 0;\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\n                                        let pinObj: any = {};\n                                        pinObj.pitchBend = bits.read(1) == 1;\n                                        if (pinObj.pitchBend) shape.bendCount++;\n                                        shape.length += (beforeSeven && fromBeepBox)\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                            : bits.readPartDuration();\n                                        pinObj.time = shape.length;\n                                        if (fromBeepBox) {\n                                            pinObj.size = bits.read(2) * 2;\n                                        } else if (!isModChannel) {\n                                            pinObj.size = bits.read(bitsPerNoteSize);\n                                        }\n                                        else {\n                                            pinObj.size = bits.read(9);\n                                        }\n                                        shape.pins.push(pinObj);\n                                    }\n                                }\n                                recentShapes.unshift(shape);\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\n\n                                let note: Note;\n                                if (newNotes.length <= noteCount) {\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                    newNotes[noteCount++] = note;\n                                } else {\n                                    note = newNotes[noteCount++];\n                                    note.start = curPart;\n                                    note.end = curPart + shape.length;\n                                    note.pins[0].size = shape.initialSize;\n                                }\n\n                                let pitch: number;\n                                let pitchCount: number = 0;\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                    const useOldPitch: boolean = bits.read(1) == 1;\n                                    if (!useOldPitch) {\n                                        const interval: number = bits.readPitchInterval();\n                                        pitch = lastPitch;\n                                        let intervalIter: number = interval;\n                                        while (intervalIter > 0) {\n                                            pitch++;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\n                                            intervalIter--;\n                                        }\n                                        while (intervalIter < 0) {\n                                            pitch--;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\n                                            intervalIter++;\n                                        }\n                                    } else {\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                        pitch = recentPitches[pitchIndex];\n                                        recentPitches.splice(pitchIndex, 1);\n                                    }\n\n                                    recentPitches.unshift(pitch);\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\n\n                                    if (j < shape.pitchCount) {\n                                        note.pitches[pitchCount++] = pitch;\n                                    } else {\n                                        pitchBends.push(pitch);\n                                    }\n\n                                    if (j == shape.pitchCount - 1) {\n                                        lastPitch = note.pitches[0];\n                                    } else {\n                                        lastPitch = pitch;\n                                    }\n                                }\n                                note.pitches.length = pitchCount;\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\n                                const noteIsForTempoMod: boolean = isModChannel && channel.instruments[newPattern.instruments[0]].modulators[Config.modCount - 1 - note.pitches[0]] === Config.modulators.dictionary[\"tempo\"].index;\n                                let tempoOffset: number = 0;\n                                if (shouldCorrectTempoMods && noteIsForTempoMod) {\n                                    note.pins[0].size += tempoOffset;\n                                    tempoOffset = jummboxTempoMin - Config.tempoMin; // convertRealFactor will add back Config.tempoMin as necessary\n                                }\n                                if (isModChannel) {\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                }\n                                let pinCount: number = 1;\n                                for (const pinObj of shape.pins) {\n                                    if (pinObj.pitchBend) pitchBends.shift();\n\n                                    const interval: number = pitchBends[0] - note.pitches[0];\n                                    if (note.pins.length <= pinCount) {\n                                        if (isModChannel) {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset);\n                                        } else {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                        }\n                                    } else {\n                                        const pin: NotePin = note.pins[pinCount++];\n                                        pin.interval = interval;\n                                        pin.time = pinObj.time;\n                                        if (isModChannel) {\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset;\n                                        } else {\n                                            pin.size = pinObj.size;\n                                        }\n                                    }\n                                }\n                                note.pins.length = pinCount;\n\n                                if (note.start == 0) {\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\n                                        note.continuesLastPattern = (bits.read(1) == 1);\n                                    } else {\n                                        if ((beforeFour && !fromUltraBox && !fromAbyssBox && !fromSlarmoosBox) || fromBeepBox) {\n                                            note.continuesLastPattern = false;\n                                        } else {\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                        }\n                                    }\n                                }\n\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                            }\n                        }\n                        newNotes.length = noteCount;\n                    }\n\n                    if (beforeThree && fromBeepBox) {\n                        break;\n                    } else {\n                        channelIndex++;\n                        if (channelIndex >= this.getChannelCount()) break;\n                    }\n                } // while (true)\n\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = Config.reverbRange - 1;\n                            }\n                            // Set song reverb via mod to the old setting at song start.\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\n                                if (patternIndex > 0) {\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\n                                    // Add note to start of pattern\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                    let lowestPart: number = 6;\n                                    for (const note of pattern.notes) {\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                            lowestPart = Math.min(lowestPart, note.start);\n                                        }\n                                    }\n\n                                    if (lowestPart > 0) {\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                    }\n                                }\n                                else {\n                                    // Add pattern\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                        const pattern: Pattern = new Pattern();\n                                        this.channels[channelIndex].patterns.push(pattern);\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                    this.channels[chn].patterns.push(new Pattern());\n                                                }\n                                            }\n                                            this.patternsPerChannel++;\n                                        }\n                                        pattern.instruments.length = 1;\n                                        pattern.instruments[0] = songReverbInstrument;\n                                        pattern.notes.length = 0;\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } break;\n            default: {\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\n            } break;\n        }\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    private static _isProperUrl(string: string): boolean {\n        try { \n            if (OFFLINE) {\n                return Boolean(string); \n            } else {\n                return Boolean(new URL(string)); \n            }\n        }\n        catch(x){ \n            return false; \n        }\n    }\n\n    // @TODO: Share more of this code with AddSamplesPrompt.\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState, parseOldSyntax: boolean): boolean {\n        const defaultIndex: number = 0;\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n        const customSampleUrlIndex: number = customSampleUrls.length;\n        customSampleUrls.push(url);\n        // This depends on `Config.chipWaves` being the same\n        // length as `Config.rawRawChipWaves`.\n        const chipWaveIndex: number = Config.chipWaves.length;\n\n        let urlSliced: string = url;\n\n        let customSampleRate: number = 44100;\n        let isCustomPercussive: boolean = false;\n        let customRootKey: number = 60;\n        let presetIsUsingAdvancedLoopControls: boolean = false;\n        let presetChipWaveLoopStart: number | null = null;\n        let presetChipWaveLoopEnd: number | null = null;\n        let presetChipWaveStartOffset: number | null = null;\n        let presetChipWaveLoopMode: number | null = null;\n        let presetChipWavePlayBackwards: boolean = false;\n\n        let parsedSampleOptions: boolean = false;\n        let optionsStartIndex: number = url.indexOf(\"!\");\n        let optionsEndIndex: number = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode: string = rawOption.charAt(0);\n                    const optionData: string = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    } else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    } else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    } else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            // @TODO: Error-prone. This should be automatically\n                            // derived from the list of available loop modes.\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n\n        let parsedUrl: URL | string | null = null;\n        if (Song._isProperUrl(urlSliced)) {\n            if (OFFLINE) {\n                parsedUrl = urlSliced;\n            } else {\n                parsedUrl = new URL(urlSliced);\n            }\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\n                    urlSliced = url.replaceAll(\"@\", \"\")\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    } else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    isCustomPercussive = true;\t\n                }\t\n\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    } else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                    //should this be parseFloat or parseInt?\n                    //ig floats let you do decimals and such, but idk where that would be useful\n                }\n\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    } else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n\n\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\t\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\t\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\t\n                }\n            }\n        }\n\n        if (parsedUrl != null) {\n            // Store in the new format.\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions: string[] = [];\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive) namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n\n            // @TODO: Could also remove known extensions, but it\n            // would probably be much better to be able to specify\n            // a custom name.\n            // @TODO: If for whatever inexplicable reason someone\n            // uses an url like `https://example.com`, this will\n            // result in an empty name here.\n            let name: string;\n            if (OFFLINE) {\n                //@ts-ignore\n                name = decodeURIComponent(parsedUrl.replace(/^([^\\/]*\\/)+/, \"\"));\n            } else {\n                //@ts-ignore\n                name = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            // @TODO: What to do about samples with the same name?\n            // The problem with using the url is that the name is\n            // user-facing and long names break assumptions of the\n            // UI.\n            const expression: number = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings: Dictionary<any> = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset: Preset = {\n                index: 0, // This should be overwritten by toNameMap, in our caller.\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions: any = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n\n        return true;\n    }\n\n    private static _restoreChipWaveListToDefault(): void {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n\n    private static _clearSamples(): void {\n        EditorConfig.customSamples = null;\n\n        Song._restoreChipWaveListToDefault();\n\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadingState.samplesFailed = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n            sampleLoadingState.totalSamples,\n            sampleLoadingState.samplesLoaded,\n            sampleLoadingState.samplesFailed\n        ));\n    }\n\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\n        const channelArray: Object[] = [];\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const instrumentArray: Object[] = [];\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n\n            const patternArray: Object[] = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n\n            const sequenceArray: number[] = [];\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n\n            const channelObject: any = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                // For compatibility with old versions the octave is offset by one.\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n\n        const result: any = {\n            \"name\": this.title,\n            \"theme\": this.setSongTheme,\n            \"format\": Song._format,\n            \"version\": Song._latestAbyssBoxVersion,\n            \"author\": this.author,\n            \"description\": this.description,\n            \"showSongDetails\": this.showSongDetails,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"loopType\": this.loopType,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n\n        return result;\n    }\n\n    public fromJsonObject(jsonObject: any, jsonFormat: string = \"auto\"): void {\n        this.initToDefault(true);\n        if (!jsonObject) return;\n\n        //const version: number = jsonObject[\"version\"] | 0;\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\n        // Code for auto-detect mode; if statements that are lower down have 'higher priority'\n        if (jsonFormat == \"auto\") {\n            if (jsonObject[\"format\"] == \"BeepBox\") {\n                // Assume that if there is a \"riff\" song setting then it must be modbox\n                if (jsonObject[\"riff\"] != undefined) {\n                    jsonFormat = \"modbox\";\n                }\n\n                // Assume that if there are limiter song settings then it must be jummbox\n                // Despite being added in JB 2.1, json export for the limiter settings wasn't added until 2.3\n                if (jsonObject[\"masterGain\"] != undefined) {\n                    jsonFormat = \"jummbox\";\n                }\n            }\n        }\n\n        const format: string = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n\n        if (jsonObject[\"author\"] != undefined) {\n            this.author = jsonObject[\"author\"];\n        }\n\n        if (jsonObject[\"description\"] != undefined) {\n            this.description = jsonObject[\"description\"];\n        }\n\n        if (jsonObject[\"showSongDetails\"] != undefined) {\n            this.showSongDetails = jsonObject[\"showSongDetails\"];\n        }\n\n        if (jsonObject[\"theme\"] != undefined) {\n            this.setSongTheme = jsonObject[\"theme\"];\n        }\n\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples: string[] = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                // Have to duplicate the work done in Song.fromBase64String\n                // early here, because Instrument.fromJsonObject depends on the\n                // chip wave list having the correct items already in memory.\n\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                let willLoadLegacySamples: boolean = false;\n                let willLoadNintariboxSamples: boolean = false;\n                let willLoadMarioPaintboxSamples: boolean = false;\n                const customSampleUrls: string[] = [];\n                const customSamplePresets: Preset[] = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    } \n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        // When EditorConfig.customSamples is saved in the json\n                        // export, it should be using the new syntax, unless\n                        // the user has manually modified the URL, so we don't\n                        // really need to parse the old syntax here.\n                        const parseOldSyntax: boolean = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        } else {\n            // No custom samples, so the only possibility at this point is that\n            // we need to load the legacy samples. Let's check whether that's\n            // necessary.\n            let shouldLoadLegacySamples: boolean = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        // Legacy samples can only exist in pitch channels.\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject: any = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                // Legacy samples can only exist in chip wave\n                                // instruments.\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                // This should exist if things got saved\n                                // correctly, but if they didn't, skip this.\n                                continue;\n                            }\n                            const waveName: string = instrumentObject[\"wave\"];\n                            // @TODO: Avoid this duplication.\n                            const names: string[] = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            // The difference for these is in the doubled a.\n                            const oldNames: string[] = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\n                            const veryOldNames: string[] = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            } else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                // If we see one of these old names, update it\n                                // to the corresponding new name.\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            } else if (veryOldNames.includes(waveName)) {\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\n                                    // If we see chip waves named trumpet or flute, and if the format isn't PaandorasBox, we leave them as-is\n                                } else {\n                                    // There's no other chip waves with ambiguous names like that, so it should\n                                    // be okay to assume we'll need to load the legacy samples now.\n                                    shouldLoadLegacySamples = true;\n                                    // If we see one of these old names, update it\n                                    // to the corresponding new name.\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            } else {\n                // We don't need to load the legacy samples, but we may have\n                // leftover samples in memory. If we do, clear them.\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    // We need to reload anyway in this case, because (for now)\n                    // the chip wave lists won't be correctly updated.\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n\n        this.scale = 0; // default to free.\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames: Dictionary<string> = {\n                \"romani :)\": \"double harmonic :)\",\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1) this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key: string = jsonObject[\"key\"];\n                // This conversion code depends on C through B being\n                // available as keys, of course.\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                } else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                } else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                } else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                } else {\n                    const letter: string = key.charAt(0).toUpperCase();\n                    const symbol: string = key.charAt(1).toLowerCase();\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index: number | undefined = letterMap[letter];\n                    const offset: number | undefined = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined) index += offset;\n                        if (index < 0) index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n\n        if (jsonObject[\"loopType\"] != undefined) {\n            this.loopType = jsonObject[\"loopType\"] | 0;\n        }\n\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n\n        let importedPartsPerBeat: number = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n\n        // Read limiter settings. Ranges and defaults are based on slider settings\n\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        } else {\n            this.masterGain = 1.0;\n        }\n\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n\n        let maxInstruments: number = 1;\n        let maxPatterns: number = 1;\n        let maxBars: number = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        } else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        } else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n\n        const newPitchChannels: Channel[] = [];\n        const newNoiseChannels: Channel[] = [];\n        const newModChannels: Channel[] = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\n\n                const channel: Channel = new Channel();\n\n                let isNoiseChannel: boolean = false;\n                let isModChannel: boolean = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                } else {\n                    // for older files, assume drums are channel 3.\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                } else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel) channel.octave = 0;\n                }\n\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\n                    }\n\n                }\n\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                    const pattern: Pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n\n                    let patternObject: any = undefined;\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined) continue;\n\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, format);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let i: number = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            // The prompt seems to get stuck if reloading is done too quickly.\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\n        if (bar < 0 || bar >= this.barCount) return null;\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0) return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n\n    public getBeatsPerMinute(): number {\n        return this.tempo;\n    }\n\n    public static getNeededBits(maxValue: number): number {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n\n    public restoreLimiterDefaults(): void {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\n\nclass PickedString {\n    public delayLine: Float32Array | null = null;\n    public delayIndex: number;\n    public allPassSample: number;\n    public allPassPrevInput: number;\n    public sustainFilterSample: number;\n\tpublic sustainFilterPrevOutput2: number;\n\tpublic sustainFilterPrevInput1: number;\n\tpublic sustainFilterPrevInput2: number;\n    public fractionalDelaySample: number;\n    public prevDelayLength: number;\n    public delayLengthDelta: number;\n    public delayResetOffset: number;\n\n    public allPassG: number = 0.0;\n    public allPassGDelta: number = 0.0;\n    public sustainFilterA1: number = 0.0;\n\tpublic sustainFilterA1Delta: number = 0.0;\n\tpublic sustainFilterA2: number = 0.0;\n\tpublic sustainFilterA2Delta: number = 0.0;\n\tpublic sustainFilterB0: number = 0.0;\n\tpublic sustainFilterB0Delta: number = 0.0;\n\tpublic sustainFilterB1: number = 0.0;\n\tpublic sustainFilterB1Delta: number = 0.0;\n\tpublic sustainFilterB2: number = 0.0;\n\tpublic sustainFilterB2Delta: number = 0.0;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\tthis.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n\n        const prevDelayLength: number = this.prevDelayLength;\n\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\n\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\n\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\n\t\tconst registerShelfCenter: number = 15.6;\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        \n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\n\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\n\t\tconst enum PickedStringBrightnessType {\n\t\t\tbright, // 1st order shelf\n\t\t\tnormal, // 2nd order lowpass, rounded corner\n\t\t\tresonant, // 3rd order lowpass, harder corner\n\t\t}\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n\t\t} else {\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\n\t\t}\n\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n\n\t\tthis.prevDelayLength = delayLength;\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n\t\tthis.allPassG = allPassGStart;\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            // The delay line buffer will get reused for other tones so might as well\n            // start off with a buffer size that is big enough for most notes.\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                // If the tone has already started but the buffer needs to be reallocated,\n                // transfer the old data to the new buffer.\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i: number = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine: Float32Array = this.delayLine;\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\n\n        if (reinitializeImpulse) {\n            // -1 delay index means the tone was reset.\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n\n            // Clear away a region of the delay buffer for the new impulse.\n            const startImpulseFrom: number = -delayLength;\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n\n            const impulseWave: Float32Array = instrumentState.wave!;\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\n\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample: number = stopImpulseAt;\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral: number = 0.0;\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt: number = impulsePhase | 0;\n                const index: number = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral: number = impulseWave[index];\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade: number = fadeIn * fadeOut;\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\n\nclass EnvelopeComputer {\n    // \"Unscaled\" values do not increase with Envelope Speed's timescale factor. Thus they are \"real\" seconds since the start of the note.\n    // Fade envelopes notably use unscaled values instead of being tied to Envelope Speed.\n    // choptop84: \"Definitely stealing that comment there\"\n    public noteSecondsStart: number[] = [];\n    public noteSecondsStartUnscaled: number = 0.0;\n    public noteSecondsEnd: number[] = [];\n    public noteSecondsEndUnscaled: number = 0.0;\n    public noteTicksStart: number = 0.0;\n    public noteTicksEnd: number = 0.0;\n    public noteSizeStart: number = Config.noteSizeMax;\n    public noteSizeEnd: number = Config.noteSizeMax;\n    public prevNoteSize: number = Config.noteSizeMax;\n    public nextNoteSize: number = Config.noteSizeMax;\n    private _noteSizeFinal: number = Config.noteSizeMax;\n    public prevNoteSecondsStart: number[] = [];\n    public prevNoteSecondsStartUnscaled: number = 0.0;\n    public prevNoteSecondsEnd: number[] = [];\n    public prevNoteSecondsEndUnscaled: number = 0.0;\n    public prevNoteTicksStart: number = 0.0;\n    public prevNoteTicksEnd: number = 0.0;\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\n    public tickTimeEnd: number[] = [];\n\n    public drumsetFilterEnvelopeStart: number = 0.0;\n    public drumsetFilterEnvelopeEnd: number = 0.0;\n\n    public prevSlideStart: boolean = false;\n    public prevSlideEnd: boolean = false;\n    public nextSlideStart: boolean = false;\n    public nextSlideEnd: boolean = false;\n    public prevSlideRatioStart: number = 0.0;\n    public prevSlideRatioEnd: number = 0.0;\n    public nextSlideRatioStart: number = 0.0;\n    public nextSlideRatioEnd: number = 0.0;\n\n    public startPinTickAbsolute: number | null = null;\n\n    public readonly envelopeStarts: number[] = [];\n    public readonly envelopeEnds: number[] = [];\n    private readonly _modifiedEnvelopeIndices: number[] = [];\n    private _modifiedEnvelopeCount: number = 0;\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\n    constructor(/*private _perNote: boolean*/) {\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\n        const length: number = EnvelopeComputeIndex.length;\n        for (let i: number = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n\n        this.reset();\n    }\n\n    public reset(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < Config.maxEnvelopeCount+1; envelopeIndex++) {\n            this.noteSecondsEnd[envelopeIndex] = 0.0;\n            this.prevNoteSecondsEnd[envelopeIndex] = 0.0;\n        }\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.startPinTickAbsolute = null;\n    }\n\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number[], tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number[], instrumentState: InstrumentState, synth: Synth): void {\n        const secondsPerTickUnscaled: number = secondsPerTick;\n        const transition: Transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEndUnscaled = 0.0;\n            this.noteTicksEnd = 0.0;\n            for (let envelopeIndex: number = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n                this.prevNoteSecondsEnd[envelopeIndex] = this.noteSecondsEnd[envelopeIndex];\n                this.noteSecondsEnd[envelopeIndex] = 0.0;\n            }\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            } else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd: number[] = [];\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\n        const noteSecondsStart: number[] = [];\n        const noteSecondsStartUnscaled: number = this.noteSecondsEndUnscaled;\n        const noteSecondsEnd: number[] = [];\n        const noteSecondsEndUnscaled: number = noteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const noteTicksStart: number = this.noteTicksEnd;\n        const noteTicksEnd: number = noteTicksStart + 1.0;\n        const prevNoteSecondsStart: number[] = [];\n        const prevNoteSecondsEnd: number[] = [];\n        const prevNoteSecondsStartUnscaled: number = this.prevNoteSecondsEndUnscaled;\n        const prevNoteSecondsEndUnscaled: number = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\n\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart: number[] = [];\n        const beatTimeEnd: number[] = [];\n\n        let noteSizeStart: number = this._noteSizeFinal;\n        let noteSizeEnd: number = this._noteSizeFinal;\n        let prevNoteSize: number = this._prevNoteSizeFinal;\n        let nextNoteSize: number = 0;\n        let prevSlideStart: boolean = false;\n        let prevSlideEnd: boolean = false;\n        let nextSlideStart: boolean = false;\n        let nextSlideEnd: boolean = false;\n        let prevSlideRatioStart: number = 0.0;\n        let prevSlideRatioEnd: number = 0.0;\n        let nextSlideRatioStart: number = 0.0;\n        let nextSlideRatioEnd: number = 0.0;\n        if (tone == null) this.startPinTickAbsolute = null;\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            if (this.startPinTickAbsolute == null || (!(transition.continues || transition.slides)) && tone.passedEndOfNote) this.startPinTickAbsolute = startPinTick + synth.computeTicksSinceStart(true); //for random per note\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n\n            if (transition.slides) {\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\n                const slideTicks: number = Math.min(maximumSlideTicks, instrument.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\n        let usedNoteSize: boolean = false;\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget: AutomationTarget;\n            let targetIndex: number;\n            let envelope: Envelope;\n\n            let inverse: boolean = false;\n            let perEnvelopeSpeed: number = 1;\n            let globalEnvelopeSpeed: number = 1;\n            let envelopeSpeed: number = perEnvelopeSpeed * globalEnvelopeSpeed;\n            let perEnvelopeLowerBound: number = 0;\n            let perEnvelopeUpperBound: number = 1;\n            let timeSinceStart: number = 0;\n            let steps: number = 2;\n            let seed: number = 2;\n            let waveform: number = BaseWaveTypes.sine;\n            let startPinTickAbsolute: number = this.startPinTickAbsolute || 0.0;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize /*|| !this._perNote*/) break;\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.newEnvelopes.dictionary[\"note size\"];\n            } else {\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.newEnvelopes[envelopeSettings.envelope];\n                inverse = instrument.envelopes[envelopeIndex].inverse;\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                globalEnvelopeSpeed = Math.pow(instrument.envelopeSpeed, 2) / 144;\n                envelopeSpeed = perEnvelopeSpeed == 0 || globalEnvelopeSpeed == 0 ? perEnvelopeSpeed + globalEnvelopeSpeed : perEnvelopeSpeed * globalEnvelopeSpeed;\n                const boundsCorrect: boolean = instrument.envelopes[envelopeIndex].perEnvelopeLowerBound <= instrument.envelopes[envelopeIndex].perEnvelopeUpperBound;\n                perEnvelopeLowerBound = boundsCorrect ? instrument.envelopes[envelopeIndex].perEnvelopeLowerBound : 0;\n                perEnvelopeUpperBound = boundsCorrect ? instrument.envelopes[envelopeIndex].perEnvelopeUpperBound : 1;\n                timeSinceStart = synth.computeTicksSinceStart();\n                steps = instrument.envelopes[envelopeIndex].steps;\n                seed = instrument.envelopes[envelopeIndex].seed;\n                if (instrument.envelopes[envelopeIndex].waveform >= (envelope.name == \"lfo\" ? BaseWaveTypes.length : RandomEnvelopeTypes.length)) {\n                    instrument.envelopes[envelopeIndex].waveform = 0; //make sure that waveform is a proper index\n                }\n                waveform = instrument.envelopes[envelopeIndex].waveform;\n\n                if (!timeScale[envelopeIndex]) timeScale[envelopeIndex] = 0;\n\n                const secondsPerTickScaled: number = secondsPerTick * timeScale[envelopeIndex];\n                if (!tickTimeStart[envelopeIndex]) tickTimeStart[envelopeIndex] = 0; //prevents tremolos from causing a NaN width error\n                tickTimeEnd[envelopeIndex] = tickTimeStart[envelopeIndex] ? tickTimeStart[envelopeIndex] + timeScale[envelopeIndex] : timeScale[envelopeIndex];\n                noteSecondsStart[envelopeIndex] = this.noteSecondsEnd[envelopeIndex] ? this.noteSecondsEnd[envelopeIndex] : 0;\n                prevNoteSecondsStart[envelopeIndex] = this.prevNoteSecondsEnd[envelopeIndex] ? this.prevNoteSecondsEnd[envelopeIndex] : 0;\n                noteSecondsEnd[envelopeIndex] = noteSecondsStart[envelopeIndex] ? noteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsStart[envelopeIndex] ? prevNoteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                beatTimeStart[envelopeIndex] = tickTimeStart[envelopeIndex] ? beatsPerTick * tickTimeStart[envelopeIndex] : beatsPerTick;\n                beatTimeEnd[envelopeIndex] = tickTimeEnd[envelopeIndex] ? beatsPerTick * tickTimeEnd[envelopeIndex] : beatsPerTick;\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\n            }\n            const defaultPitch: number = this.getPitchValue(instrument, tone, instrumentState, false);\n            const pitch: number = this.computePitchEnvelope(instrument, envelopeIndex, this.getPitchValue(instrument, tone, instrumentState, true));\n            if (automationTarget.computeIndex != null) {\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, noteSecondsStartUnscaled, noteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, noteSizeStart, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                if (prevSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, prevNoteSecondsStartUnscaled, prevNoteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, 0.0, 0.0, beatTimeStart[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd: number = envelopeStart;\n                if (instrument.discreteEnvelope == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, noteSecondsEndUnscaled, noteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, noteSizeEnd, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    if (prevSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, prevNoteSecondsEndUnscaled, prevNoteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, 0.0, 0.0, beatTimeEnd[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n\n                if (automationTarget.isFilter) {\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed));\n                    }\n                }\n            }\n        }\n\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        for (let envelopeIndex: number = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsStart[envelopeIndex] = noteSecondsStart[envelopeIndex];\n            this.noteSecondsEnd[envelopeIndex] = noteSecondsEnd[envelopeIndex];\n            this.prevNoteSecondsStart[envelopeIndex] = prevNoteSecondsStart[envelopeIndex];\n            this.prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsEnd[envelopeIndex];\n        }\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n\n    public clearEnvelopes(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public static computeEnvelope(envelope: Envelope, perEnvelopeSpeed: number, unspedTime: number, time: number, beats: number, timeSinceStart: number, noteSize: number, pitch: number, inverse: boolean, perEnvelopeLowerBound: number, perEnvelopeUpperBound: number, isDrumset: boolean = false, steps: number, seed: number, waveform: number, defaultPitch: number, notePinStart: number): number {\n        const envelopeSpeed = isDrumset ? envelope.speed : 1;\n        const boundAdjust = (perEnvelopeUpperBound - perEnvelopeLowerBound);\n        switch (envelope.type) {\n            case EnvelopeType.none: return perEnvelopeUpperBound;\n            case EnvelopeType.noteSize:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * Synth.noteSizeToVolumeMult(noteSize);\n                } else {\n                    return boundAdjust * Synth.noteSizeToVolumeMult(noteSize) + perEnvelopeLowerBound;\n                }\n            case EnvelopeType.pitch:\n                //inversion and bounds are handled in the pitch calculation that we did prior\n                return pitch;\n            case EnvelopeType.pseudorandom:\n                //randomization is essentially just a complex hashing function which appears random to us, but is repeatable every time\n                //we can use either the time passed from the beginning of our song or the pitch of the note for what we hash\n                const hashMax: number = 0xffffffff;\n                const step: number = steps;\n                switch (waveform) {\n                    case RandomEnvelopeTypes.time:\n                        if (step <= 1) return 1;\n                        const timeHash: number = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(timeHash * step / (hashMax + 1)) / step;\n                        } else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(timeHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case RandomEnvelopeTypes.pitch:\n                        const pitchHash: number = xxHash32(defaultPitch + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * pitchHash / (hashMax + 1);\n                        } else {\n                            return boundAdjust * pitchHash / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    case RandomEnvelopeTypes.note:\n                        if (step <= 1) return 1;\n                        const noteHash: number = xxHash32(notePinStart + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(noteHash * step / (hashMax + 1)) / step;\n                        } else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(noteHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case RandomEnvelopeTypes.timeSmooth:\n                        const timeHashA: number = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        const timeHashB: number = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed + 256) / (256))) + \"\", seed);\n                        const weightedAverage: number = timeHashA * (1 - ((timeSinceStart * perEnvelopeSpeed) / (256)) % 1) + timeHashB * (((timeSinceStart * perEnvelopeSpeed) / (256)) % 1);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * weightedAverage / (hashMax + 1);\n                        } else {\n                            return boundAdjust * weightedAverage / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case EnvelopeType.twang:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (1.0 / (1.0 + time * envelopeSpeed));\n                } else {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n            case EnvelopeType.swell: \n                if (inverse) {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound; //swell is twang's inverse... I wonder if it would be worth it to just merge the two :/\n                } else {\n                    return perEnvelopeUpperBound - boundAdjust / (1.0 + time * envelopeSpeed);\n                }\n            case EnvelopeType.lfo:\n                switch (waveform) { \n                    case BaseWaveTypes.sine:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        } else {\n                            return (perEnvelopeUpperBound / 2) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                    case BaseWaveTypes.square:\n                        if (inverse) {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) < 0) ? perEnvelopeUpperBound : perEnvelopeLowerBound;\n                        } else {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) < 0) ? perEnvelopeLowerBound : perEnvelopeUpperBound;\n                        }\n                    case BaseWaveTypes.triangle:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) - (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        } else {\n                            return (perEnvelopeUpperBound / 2) + (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                    case BaseWaveTypes.sawtooth:\n                        if (inverse) {\n                            return perEnvelopeUpperBound - (beats * envelopeSpeed) % 1 * boundAdjust;\n                        } else {\n                            return (beats * envelopeSpeed) % 1 * boundAdjust + perEnvelopeLowerBound;\n                        }\n                    case BaseWaveTypes.trapezoid:\n                        let trap: number = 0;\n                        if (inverse) {\n                            trap = (perEnvelopeUpperBound / 2) - (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        } else {\n                            trap = (perEnvelopeUpperBound / 2) + (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        return Math.max(perEnvelopeLowerBound, Math.min(perEnvelopeUpperBound, trap));    \n                    case BaseWaveTypes.steppedSaw:\n                        if (steps <= 1) return 1;\n                        let saw: number = (beats * envelopeSpeed) % 1;\n                        if (inverse) {\n                            return perEnvelopeUpperBound - Math.floor(saw * steps) * boundAdjust / (steps - 1);\n                        } else {\n                            return Math.floor(saw * steps) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                        }\n                        \n                    case BaseWaveTypes.steppedTri:\n                        if (steps <= 1) return 1;\n                        let tri: number = 0.5 + (inverse ? -1 : 1) * (1 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed));\n                        return Math.round(tri * (steps - 1)) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;    \n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }   \n            case EnvelopeType.tremolo2: \n                if (inverse) {\n                    return (perEnvelopeUpperBound / 4) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 + (perEnvelopeLowerBound / 4); //inverse works strangely with tremolo2. If I ever update this I'll need to turn all current versions into tremolo with bounds\n                } else {\n                    return 0.5 + (perEnvelopeUpperBound / 4) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 - (perEnvelopeLowerBound / 4);\n                }\n            case EnvelopeType.punch: \n                if (inverse) {\n                    return Math.max(0, perEnvelopeUpperBound + 1.0 - Math.max(1.0 - perEnvelopeLowerBound, 1.0 - perEnvelopeUpperBound - unspedTime * perEnvelopeSpeed * 10.0)); //punch special case: 2- instead of 1-\n                } else {\n                    return Math.max(1.0+perEnvelopeLowerBound, 1.0+perEnvelopeUpperBound - unspedTime * perEnvelopeSpeed * 10.0);\n                }\n            case EnvelopeType.flare: \n                const attack: number = 0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed); //flare and blip need to be handled a little differently with envelope speeds. I have to use the old system\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed));\n                } else {\n                    return boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed)) + perEnvelopeLowerBound;\n                }\n            case EnvelopeType.decay: \n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * Math.pow(2, -envelopeSpeed * time);\n                } else {\n                    return boundAdjust * Math.pow(2, -envelopeSpeed * time) + perEnvelopeLowerBound;\n                }\n            case EnvelopeType.blip: \n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed)));\n                } else {\n                    return boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed))) + perEnvelopeLowerBound;\n                }\n            case EnvelopeType.wibble: {\n                let temp = 0.5 - Math.cos(beats * envelopeSpeed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelopeSpeed - (temp / (1.5 / envelopeSpeed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * temp;\n                } else {\n                    return boundAdjust * temp + perEnvelopeLowerBound;\n                }\n            }\n            case EnvelopeType.linear: {\n                let lin = (1.0 - (time / (16 / envelopeSpeed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                if (inverse) { //another case where linear's inverse is rise. Do I merge them?\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                } else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case EnvelopeType.rise: {\n                let lin = (time / (16 / envelopeSpeed));\n                lin = lin < 1.0 ? lin : 1.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                } else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case EnvelopeType.fall: {\n                if (inverse) {\n                    return Math.min(Math.max(perEnvelopeLowerBound, perEnvelopeUpperBound - boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0))), perEnvelopeUpperBound);\n                } else {\n                    return Math.max(perEnvelopeLowerBound, boundAdjust * Math.sqrt(Math.max(1.0- envelopeSpeed * time/2, 0)) + perEnvelopeLowerBound);\n                }\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n\n    }\n\n    public getPitchValue(instrument: Instrument, tone: Tone | null, instrumentState: InstrumentState, calculateBends: boolean = true): number {\n        if (tone && tone.pitchCount >= 1) {\n            const chord = instrument.getChord();\n            const arpeggiates = chord.arpeggiates;\n            const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio); //calculate arpeggiation\n            const tonePitch = tone.pitches[arpeggiates ? getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio) : 0]\n            if (calculateBends) {\n                return tone.lastInterval != tonePitch ? tonePitch + tone.lastInterval : tonePitch; //account for pitch bends\n            } else {\n                return tonePitch;\n            }\n        } \n        return 0;\n    }\n\n    public computePitchEnvelope(instrument: Instrument, index: number, pitch: number = 0): number {\n        let startNote: number = 0;\n        let endNote: number = Config.maxPitch;\n        let inverse: boolean = false;\n        let envelopeLowerBound: number = 0;\n        let envelopeUpperBound: number = 1;\n\n        if (instrument.isNoiseInstrument) {\n            endNote = Config.drumCount - 1;\n        }\n\n\n        if (index < instrument.envelopeCount && index !== -2) {\n            startNote = instrument.envelopes[index].pitchEnvelopeStart;\n            endNote = instrument.envelopes[index].pitchEnvelopeEnd;\n            inverse = instrument.envelopes[index].inverse;\n            envelopeLowerBound = instrument.envelopes[index].perEnvelopeLowerBound;\n            envelopeUpperBound = instrument.envelopes[index].perEnvelopeUpperBound;\n        }\n        \n        if (startNote > endNote) { //Reset if values are improper\n            startNote = 0;\n            endNote = instrument.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        }\n        const range = endNote - startNote + 1;\n        if (!inverse) {\n            if (pitch <= startNote) {\n                return envelopeLowerBound;\n            } else if (pitch >= endNote) {\n                return envelopeUpperBound;\n            } else {\n                return (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range + envelopeLowerBound;\n            }\n        } else {\n            if (pitch <= startNote) {\n                return envelopeUpperBound;\n            } else if (pitch >= endNote) {\n                return envelopeLowerBound;\n            } else {\n                return envelopeUpperBound - (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range;\n            }\n        }\n    }\n\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope, perEnvelopeSpeed: number = 1): number {\n        // This is a little hokey in the details, but I designed it a while ago and keep it \n        // around for compatibility. This decides how much to increase the volume (or\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\n        // volume overall.\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * /*envelope.speed */ perEnvelopeSpeed;\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * /*envelope.speed */ perEnvelopeSpeed;\n        return 1.0;\n    }\n\n    public computeDrumsetEnvelopes(instrument: Instrument, drumsetFilterEnvelope: Envelope, beatsPerPart: number, partTimeStart: number, partTimeEnd: number) {\n\n        const pitch = 1\n\n        function computeDrumsetEnvelope(unspedTime: number, time: number, beats: number, noteSize: number):number {\n            return EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 1, unspedTime, time, beats, 0, noteSize, pitch, false, 0, 1, true, 2, 2, BaseWaveTypes.sine, pitch, 0)\n        }\n\n        // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\n        let drumsetFilterEnvelopeStart: number = computeDrumsetEnvelope(this.noteSecondsStartUnscaled, this.noteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.noteSizeStart); //doesn't have/need pitchStart, pitchEnd, pitchInvert, steps, seed, or timeSinceBeginning\n\n        // Apply slide interpolation to drumset envelope.\n        if (this.prevSlideStart) {\n            const other: number = computeDrumsetEnvelope(this.prevNoteSecondsStartUnscaled, this.prevNoteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.prevNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.prevSlideRatioStart;\n        }\n        if (this.nextSlideStart) {\n            const other: number = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeStart, this.nextNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.nextSlideRatioStart;\n        }\n\n        let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\n\n        if (instrument.discreteEnvelope == false) {\n            drumsetFilterEnvelopeEnd = computeDrumsetEnvelope(this.noteSecondsEndUnscaled, this.noteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.noteSizeEnd);\n\n            if (this.prevSlideEnd) {\n                const other: number = computeDrumsetEnvelope(this.prevNoteSecondsEndUnscaled, this.prevNoteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.prevNoteSize);\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.prevSlideRatioEnd;\n            }\n            if (this.nextSlideEnd) {\n                const other: number = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeEnd, this.nextNoteSize);\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.nextSlideRatioEnd;\n            }\n        }\n\n        this.drumsetFilterEnvelopeStart = drumsetFilterEnvelopeStart;\n        this.drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeEnd;\n        \n    }\n}\n\nclass Tone {\n    public instrumentIndex: number;\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\n    public pitchCount: number = 0;\n    public chordSize: number = 0;\n    public drumsetPitch: number | null = null;\n    public note: Note | null = null;\n    public prevNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public prevNotePitchIndex: number = 0;\n    public nextNotePitchIndex: number = 0;\n    public freshlyAllocated: boolean = true;\n    public atNoteStart: boolean = false;\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\n    public passedEndOfNote: boolean = false;\n    public forceContinueAtStart: boolean = false;\n    public forceContinueAtEnd: boolean = false;\n    public noteStartPart: number = 0;\n    public noteEndPart: number = 0;\n    public ticksSinceReleased: number = 0;\n    public liveInputSamplesHeld: number = 0;\n    public lastInterval: number = 0;\n    public noiseSample: number = 0.0;\n    public noiseSampleA: number = 0.0;\n    public noiseSampleB: number = 0.0;\n    public stringSustainStart: number = 0;\n    public stringSustainEnd: number = 0;\n    public readonly phases: number[] = [];\n    public readonly operatorWaves: OperatorWave[] = [];\n    public readonly phaseDeltas: number[] = [];\n\t\t\t// advloop addition\n        public directions: number[] = [];\n        public chipWaveCompletions: number[] = [];\n        public chipWavePrevWaves: number[] = [];\n        public chipWaveCompletionsLastWave: number[] = [];\n           // advloop addition\n    public readonly phaseDeltaScales: number[] = [];\n    public expression: number = 0.0;\n    public expressionDelta: number = 0.0;\n    public readonly operatorExpressions: number[] = [];\n    public readonly operatorExpressionDeltas: number[] = [];\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\n    public prevVibrato: number | null = null;\n    public prevStringDecay: number | null = null;\n    public pulseWidth: number = 0.0;\n    public pulseWidthDelta: number = 0.0;\n    public decimalOffset: number = 0.0;\n    public supersawDynamism: number = 0.0;\n\tpublic supersawDynamismDelta: number = 0.0;\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\n\tpublic supersawShape: number = 0.0;\n\tpublic supersawShapeDelta: number = 0.0;\n\tpublic supersawDelayLength: number = 0.0;\n\tpublic supersawDelayLengthDelta: number = 0.0;\n\tpublic supersawDelayLine: Float32Array | null = null;\n\tpublic supersawDelayIndex: number = -1;\n\tpublic supersawPrevPhaseDelta: number | null = null;\n    public readonly pickedStrings: PickedString[] = [];\n\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\n    public noteFilterCount: number = 0;\n    public initialNoteFilterInput1: number = 0.0;\n    public initialNoteFilterInput2: number = 0.0;\n\n    public specialIntervalExpressionMult: number = 1.0;\n    public readonly feedbackOutputs: number[] = [];\n    public feedbackMult: number = 0.0;\n    public feedbackDelta: number = 0.0;\n    public stereoVolumeLStart: number = 0.0;\n    public stereoVolumeRStart: number = 0.0;\n    public stereoVolumeLDelta: number = 0.0;\n    public stereoVolumeRDelta: number = 0.0;\n    public stereoDelayStart: number = 0.0;\n    public stereoDelayEnd: number = 0.0;\n    public stereoDelayDelta: number = 0.0;\n    public customVolumeStart: number = 0.0;\n    public customVolumeEnd: number = 0.0;\n    public filterResonanceStart: number = 0.0;\n    public filterResonanceDelta: number = 0.0;\n    public isFirstOrder: boolean = false;\n\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noiseSample = 0.0;\n        this.noiseSampleA = 0.0;\n        this.noiseSampleB = 0.0;\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n\t\t\t\t\t\t// advloop addition\n                this.directions[i] = 1;\n                this.chipWaveCompletions[i] = 0;\n                this.chipWavePrevWaves[i] = 0;\n                this.chipWaveCompletionsLastWave[i] = 0;\n                // advloop addition\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\n\nclass InstrumentState {\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\n\n    public type: InstrumentType = InstrumentType.chip;\n    public synthesizer: Function | null = null;\n    public wave: Float32Array | null = null;\n\t\t\t\t // advloop addition\n            public isUsingAdvancedLoopControls = false;\n            public chipWaveLoopStart = 0;\n            public chipWaveLoopEnd = 0;\n            public chipWaveLoopMode = 0;\n            public chipWavePlayBackwards = false;\n            public chipWaveStartOffset = 0;\n            // advloop addition\n    public noisePitchFilterMult: number = 1.0;\n    public unison: Unison | null = null;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public unisonBuzzes: boolean = false;\n    public chord: Chord | null = null;\n    public effects: number = 0;\n\n    public volumeScale: number = 0;\n    public aliases: boolean = false;\n    public arpTime: number = 0;\n    public vibratoTime: number = 0;\n    public nextVibratoTime: number = 0;\n    public envelopeTime: number[] = [];\n\n    public eqFilterVolume: number = 1.0;\n    public eqFilterVolumeDelta: number = 0.0;\n    public mixVolume: number = 1.0;\n    public mixVolumeDelta: number = 0.0;\n    public delayInputMult: number = 0.0;\n    public delayInputMultDelta: number = 0.0;\n\n    public distortion: number = 0.0;\n    public distortionDelta: number = 0.0;\n    public distortionDrive: number = 0.0;\n    public distortionDriveDelta: number = 0.0;\n    public distortionFractionalInput1: number = 0.0;\n    public distortionFractionalInput2: number = 0.0;\n    public distortionFractionalInput3: number = 0.0;\n    public distortionPrevInput: number = 0.0;\n    public distortionNextOutput: number = 0.0;\n\n    public bitcrusherPrevInput: number = 0.0;\n    public bitcrusherCurrentOutput: number = 0.0;\n    public bitcrusherPhase: number = 1.0;\n    public bitcrusherPhaseDelta: number = 0.0;\n    public bitcrusherPhaseDeltaScale: number = 1.0;\n    public bitcrusherScale: number = 1.0;\n    public bitcrusherScaleScale: number = 1.0;\n    public bitcrusherFoldLevel: number = 1.0;\n    public bitcrusherFoldLevelScale: number = 1.0;\n\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\n    public eqFilterCount: number = 0;\n    public initialEqFilterInput1: number = 0.0;\n    public initialEqFilterInput2: number = 0.0;\n\n    public panningDelayLine: Float32Array | null = null;\n    public panningDelayPos: number = 0;\n    public panningVolumeL: number = 0.0;\n    public panningVolumeR: number = 0.0;\n    public panningVolumeDeltaL: number = 0.0;\n    public panningVolumeDeltaR: number = 0.0;\n    public panningOffsetL: number = 0.0;\n    public panningOffsetR: number = 0.0;\n    public panningOffsetDeltaL: number = 0.0;\n    public panningOffsetDeltaR: number = 0.0;\n\n    public chorusDelayLineL: Float32Array | null = null;\n    public chorusDelayLineR: Float32Array | null = null;\n    public chorusDelayLineDirty: boolean = false;\n    public chorusDelayPos: number = 0;\n    public chorusPhase: number = 0;\n    public chorusVoiceMult: number = 0;\n    public chorusVoiceMultDelta: number = 0;\n    public chorusCombinedMult: number = 0;\n    public chorusCombinedMultDelta: number = 0;\n\n    public ringModMix: number = 0;\n    public ringModMixDelta: number = 0;\n    public ringModPhase: number = 0;\n    public ringModPhaseDelta: number = 0;\n    public ringModPhaseDeltaScale: number = 1.0;\n    public rmWaveformIndex: number = 0.0;\n    public rmPulseWidth: number = 0.0;\n    public rmHzOffset: number = 0.0;\n\n    public invertWave: boolean = false;\n\n    public echoDelayLineL: Float32Array | null = null;\n    public echoDelayLineR: Float32Array | null = null;\n    public echoDelayLineDirty: boolean = false;\n    public echoDelayPos: number = 0;\n    public echoDelayOffsetStart: number = 0;\n    public echoDelayOffsetEnd: number | null = null;\n    public echoDelayOffsetRatio: number = 0.0;\n    public echoDelayOffsetRatioDelta: number = 0.0;\n    public echoMult: number = 0.0;\n    public echoMultDelta: number = 0.0;\n    public echoShelfA1: number = 0.0;\n    public echoShelfB0: number = 0.0;\n    public echoShelfB1: number = 0.0;\n    public echoShelfSampleL: number = 0.0;\n    public echoShelfSampleR: number = 0.0;\n    public echoShelfPrevInputL: number = 0.0;\n    public echoShelfPrevInputR: number = 0.0;\n\n    public reverbDelayLine: Float32Array | null = null;\n    public reverbDelayLineDirty: boolean = false;\n    public reverbDelayPos: number = 0;\n    public reverbMult: number = 0.0;\n    public reverbMultDelta: number = 0.0;\n    public reverbShelfA1: number = 0.0;\n    public reverbShelfB0: number = 0.0;\n    public reverbShelfB1: number = 0.0;\n    public reverbShelfSample0: number = 0.0;\n    public reverbShelfSample1: number = 0.0;\n    public reverbShelfSample2: number = 0.0;\n    public reverbShelfSample3: number = 0.0;\n    public reverbShelfPrevInput0: number = 0.0;\n    public reverbShelfPrevInput1: number = 0.0;\n    public reverbShelfPrevInput2: number = 0.0;\n    public reverbShelfPrevInput3: number = 0.0;\n\n    public phaserSamples: Float32Array | null = null;\n    public phaserPrevInputs: Float32Array | null = null;\n    public phaserFeedbackMult: number = 0.0;\n    public phaserFeedbackMultDelta: number = 0.0;\n    public phaserMix: number = 0.0;\n    public phaserMixDelta: number = 0.0;\n    public phaserBreakCoef: number = 0.0;\n    public phaserBreakCoefDelta: number = 0.0;\n    public phaserStages: number = 0;\n    public phaserStagesDelta: number = 0;\n\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer();\n\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\n\n    constructor() {\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n    }\n\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            // account for tempo and delay automation changing delay length during a tick?\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\n\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n                // The echo delay length may change whlie the song is playing if tempo changes,\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\n                // so we need to copy the contents of the old buffer to the new one.\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const oldMask: number = this.echoDelayLineL.length - 1;\n\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                }\n\n                this.echoDelayPos = this.echoDelayLineL.length;\n                this.echoDelayLineL = newDelayLineL;\n                this.echoDelayLineR = newDelayLineR;\n            }\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n        if (effectsIncludePhaser(instrument.effects)) {\n            if (this.phaserSamples == null) {\n                this.phaserSamples = new Float32Array(Config.phaserMaxStages);\n                this.phaserPrevInputs = new Float32Array(Config.phaserMaxStages);\n            }\n        }\n    }\n\n    public deactivate(): void {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        if (this.phaserSamples != null) for (let i: number = 0; i < this.phaserSamples.length; i++) this.phaserSamples[i] = 0.0;\n        if (this.phaserPrevInputs != null) for (let i: number = 0; i < this.phaserPrevInputs.length; i++) this.phaserPrevInputs[i] = 0.0;\n\n        this.volumeScale = 1.0;\n        this.aliases = false;\n\n        this.invertWave = false;\n\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n\n    public resetAllEffects(): void {\n        this.deactivate();\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        for (let envelopeIndex: number = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) this.envelopeTime[envelopeIndex] = 0;\n        this.envelopeComputer.reset();\n        if (this.chorusDelayLineDirty) {\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\n        }\n\n        this.chorusPhase = 0.0;\n        this.ringModPhase = 0.0;\n    }\n\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\n        this.computed = true;\n\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.unisonBuzzes = instrument.unisonBuzzes;\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\t\n\n        this.aliases = instrument.aliases;\n        this.invertWave = instrument.invertWave;\n        this.volumeScale = 1.0;\n\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n\n        const samplesPerSecond: number = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n\n        const ticksIntoBar: number = synth.getTicksIntoBar();\n        const tickTimeStart: number = ticksIntoBar;\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\n        const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\n        const currentPart: number = synth.getCurrentPart();\n        const envelopeSpeeds: number[] = [];\n        for (let i: number = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            } else {\n                // Linear interpolate envelope values\n                useEnvelopeSpeed = ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]);\n            }\n        }\n        for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed: number = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (synth.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed!;\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed * perEnvelopeSpeed;\n        }\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, this, synth);\n        const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\n        const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\n\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\n        const usesRingModulation: boolean = effectsIncludeRM(this.effects);\n        const usesPhaser: boolean = effectsIncludePhaser(this.effects);\n\n        if (usesDistortion) {\n            let useDistortionStart: number = instrument.distortion;\n            let useDistortionEnd: number = instrument.distortion;\n\n            let useDistortionEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.distortion];\n            let useDistortionEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.distortion];\n\n            // Check for distortion mods\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = clamp(0, Config.distortionRange, useDistortionStart * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\n                useDistortionEnd = clamp(0, Config.distortionRange, useDistortionEnd * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\n            }\n            const distortionSliderStart = Math.min(1.0, (useDistortionStart * useDistortionEnvelopeStart) / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, (useDistortionEnd * useDistortionEnvelopeEnd) / (Config.distortionRange - 1));\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n\n        if (usesBitcrusher) {\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\n            let freqSettingEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.bitcrusherFrequency];\n            let freqSettingEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.bitcrusherFrequency];\n\n            // Check for freq crush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\n            let quantizationSettingEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.bitcrusherQuantization];\n            let quantizationSettingEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.bitcrusherQuantization];\n\n            // Check for bitcrush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            // Check for mod reverb, song scalar\n            if (synth.isModActive(Config.modulators.dictionary[\"song bitcrush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\n                quantizationSettingEnd = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\n            }\n            \n            if (synth.isModActive(Config.modulators.dictionary[\"song freqcrush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = clamp(0, Config.bitcrusherFreqRange, freqSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\n                freqSettingEnd = clamp(0, Config.bitcrusherFreqRange, freqSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\n            }\n\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - (freqSettingStart*freqSettingEnvelopeStart)) * Config.bitcrusherOctaveStep);\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - (freqSettingEnd*freqSettingEnvelopeEnd)) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - (quantizationSettingStart*quantizationSettingEnvelopeStart)) * 0.5));\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - (quantizationSettingEnd*quantizationSettingEnvelopeEnd)) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - (quantizationSettingStart*quantizationSettingEnvelopeStart));\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - (quantizationSettingEnd*quantizationSettingEnvelopeEnd));\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (instrument.eqFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\n\n            let filterChanges: boolean = false;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            let startPoint: FilterControlPoint;\n\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            } else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            }\n\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\n\n        // Check for mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n\n        // Check for SONG mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n\n        let eqFilterVolumeStart: number = eqFilterVolume;\n        let eqFilterVolumeEnd: number = eqFilterVolume;\n        let delayInputMultStart: number = 1.0;\n        let delayInputMultEnd: number = 1.0;\n\n        if (usesPanning) {\n            const panEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.panning] * 2.0 - 1.0;\n            const panEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.panning] * 2.0 - 1.0;\n\n            let usePanStart: number = instrument.pan;\n            let usePanEnd: number = instrument.pan;\n            // Check for pan mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            if (synth.isModActive(Config.modulators.dictionary[\"song panning\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = clamp(-Config.panMax/2, Config.panMax, usePanStart + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, false));\n                usePanEnd = clamp(-Config.panMax/2, Config.panMax, usePanEnd + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, true));\n            }\n\n            let panStart: number = Math.max(-1.0, Math.min(1.0, ((usePanStart - Config.panCenter) / Config.panCenter) * panEnvelopeStart));\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, ((usePanEnd - Config.panCenter) / Config.panCenter) * panEnvelopeEnd));\n\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\n\n            let usePanDelayStart: number = instrument.panDelay;\n            let usePanDelayEnd: number = instrument.panDelay;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL: number = Math.max(0.0, delayStart);\n            const delayStartR: number = Math.max(0.0, -delayStart);\n            const delayEndL: number = Math.max(0.0, delayEnd);\n            const delayEndR: number = Math.max(0.0, -delayEnd);\n\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n\n        if (usesChorus) {\n            const chorusEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.chorus];\n            const chorusEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.chorus];\n            let useChorusStart: number = instrument.chorus;\n            let useChorusEnd: number = instrument.chorus;\n\n            // Check for chorus mods\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = clamp(0, Config.chorusRange, useChorusStart * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\n                useChorusEnd = clamp(0, Config.chorusRange, useChorusEnd * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\n            }\n            let chorusStart: number = Math.min(1.0, (useChorusStart*chorusEnvelopeStart) / (Config.chorusRange - 1));\n            let chorusEnd: number = Math.min(1.0, (useChorusEnd*chorusEnvelopeEnd) / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n\n        if (usesRingModulation) {\n            let useRingModStart: number = instrument.ringModulation;\n            let useRingModEnd: number = instrument.ringModulation;\n            \n            let useRingModEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.ringModulation];\n            let useRingModEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.ringModulation];\n\n            let useRingModHzStart: number = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnd: number = Math.min(1.0, instrument.ringModulationHz/ (Config.ringModHzRange - 1));\n            let useRingModHzEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.ringModulationHz];\n            let useRingModHzEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.ringModulationHz];\n            let ringModMinHz: number = 20;\n            let ringModMaxHz: number = 4400;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song ring modulation\"].index, channelIndex, instrumentIndex)) {\n                useRingModStart = clamp(0, Config.ringModRange, useRingModStart * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\n                useRingModEnd = clamp(0, Config.ringModRange, useRingModEnd * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n            }\n            let ringModStart: number = Math.min(1.0, (useRingModStart * useRingModEnvelopeStart) / (Config.ringModRange - 1));\n            let ringModEnd: number = Math.min(1.0, (useRingModEnd * useRingModEnvelopeEnd) / (Config.ringModRange - 1));\n\n            this.ringModMix = ringModStart;\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;  \n\n            this.rmHzOffset = instrument.rmHzOffset;\n\n            let ringModPhaseDeltaStart = (clamp(1, ringModMaxHz+Config.rmHzOffsetCenter, ((ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzStart))*useRingModHzEnvelopeStart)+(this.rmHzOffset-Config.rmHzOffsetCenter))) / synth.samplesPerSecond;\n            let ringModPhaseDeltaEnd = (clamp(1, ringModMaxHz+Config.rmHzOffsetCenter, ((ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzEnd))*useRingModHzEnvelopeEnd)+(this.rmHzOffset-Config.rmHzOffsetCenter))) / synth.samplesPerSecond;\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\n            this.ringModPhaseDeltaScale = Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            this.rmWaveformIndex = instrument.rmWaveformIndex;\n            this.rmPulseWidth = instrument.rmPulseWidth;\n            \n        }\n\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds: number = 0.0;\n        if (usesEcho) {\n            const echoSustainEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.echoSustain];\n            const echoSustainEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.echoSustain];\n            let useEchoSustainStart: number = instrument.echoSustain;\n            let useEchoSustainEnd: number = instrument.echoSustain;\n            // Check for echo mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\n            }\n            const echoMultStart: number = Math.min(1.0, Math.pow((useEchoSustainStart * echoSustainEnvelopeStart) / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd: number = Math.min(1.0, Math.pow((useEchoSustainEnd * echoSustainEnvelopeEnd) / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\n            // part) boundaries to interpolate between two delay taps.\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\n            let useEchoDelayStart: number = instrument.echoDelay;\n            let useEchoDelayEnd: number = instrument.echoDelay;\n            let ignoreTicks: boolean = false;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\n                ignoreTicks = true;\n            }\n\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            } else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        let maxReverbMult = 0.0;\n\n        if (usesPhaser) {\n            const phaserMinFeedback: number = 0.0;\n            const phaserMaxFeedback: number = 0.95;\n            const phaserFeedbackMultSlider: number = instrument.phaserFeedback / Config.phaserFeedbackRange;\n            const phaserFeedbackMultEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFeedback];\n            const phaserFeedbackMultEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFeedback];\n            let phaserFeedbackMultRawStart: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeStart;\n            let phaserFeedbackMultRawEnd: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeEnd;\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex)) {\n                phaserFeedbackMultRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFeedbackRange);\n                phaserFeedbackMultRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFeedbackRange);\n            }\n            const phaserFeedbackMultStart: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawStart));\n            const phaserFeedbackMultEnd: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawEnd));\n            this.phaserFeedbackMult = phaserFeedbackMultStart;\n            this.phaserFeedbackMultDelta = (phaserFeedbackMultEnd - phaserFeedbackMultStart) / roundedSamplesPerTick;\n            const phaserMixSlider: number = instrument.phaserMix / (Config.phaserMixRange - 1);\n\n            const phaserMixEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserMix];\n            const phaserMixEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserMix];\n            let phaserMixStart: number = phaserMixSlider * phaserMixEnvelopeStart;\n            let phaserMixEnd: number = phaserMixSlider * phaserMixEnvelopeEnd;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex)) {\n                phaserMixStart = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, false))) / (Config.phaserMixRange - 1)\n                phaserMixEnd = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, true))) / (Config.phaserMixRange - 1);\n            }\n            this.phaserMix = phaserMixStart;\n            this.phaserMixDelta = (phaserMixEnd - phaserMixStart) / roundedSamplesPerTick;\n\n            // @TODO: Use filtering.ts\n            const phaserBreakFreqSlider: number = instrument.phaserFreq / (Config.phaserFreqRange - 1);\n            let phaserBreakFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFreq];\n            let phaserBreakFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFreq];\n            let phaserBreakFreqRawStart: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeStart;\n            let phaserBreakFreqRawEnd: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeEnd;\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex)) {\n                phaserBreakFreqRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFreqRange);\n                phaserBreakFreqRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFreqRange);\n            }\n            const phaserBreakFreqRemappedStart: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawStart);\n            const phaserBreakFreqRemappedEnd: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawEnd);\n            const phaserBreakFreqStart: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedStart)); \n            const phaserBreakFreqStartT: number = Math.tan(Math.PI * phaserBreakFreqStart / samplesPerSecond);\n            const phaserBreakCoefStart: number = (phaserBreakFreqStartT - 1) / (phaserBreakFreqStartT + 1);\n            const phaserBreakFreqEnd: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedEnd));\n            const phaserBreakFreqEndT: number = Math.tan(Math.PI * phaserBreakFreqEnd / samplesPerSecond);\n            const phaserBreakCoefEnd: number = (phaserBreakFreqEndT - 1) / (phaserBreakFreqEndT + 1);\n\n            this.phaserBreakCoef = phaserBreakCoefStart;\n            this.phaserBreakCoefDelta = (phaserBreakCoefEnd - phaserBreakCoefStart) / roundedSamplesPerTick;\n            const phaserStagesEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserStages];\n            const phaserStagesEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserStages];\n            const phaserStagesSlider: number = instrument.phaserStages;\n            \n            let phaserStagesStart = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeStart));\n            let phaserStagesEnd = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeEnd));\n\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex)) {\n                phaserStagesStart = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false));\n                phaserStagesEnd = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false))\n            }\n\n            this.phaserStages = phaserStagesStart;\n            this.phaserStagesDelta = (phaserStagesEnd - phaserStagesStart) / roundedSamplesPerTick;\n        }\n            \n\n        if (usesReverb) {\n            const reverbEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.reverb];\n            const reverbEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.reverb];\n\n            let useReverbStart: number = instrument.reverb;\n            let useReverbEnd: number = instrument.reverb;\n\n            // Check for mod reverb, instrument level\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            // Check for mod reverb, song scalar\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n\n            const reverbStart: number = Math.min(1.0, Math.pow(reverbEnvelopeStart * useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd: number = Math.min(1.0, Math.pow(reverbEnvelopeEnd * useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        } else if (!this.flushingDelayLines) {\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\n            // end of the first tick. It's possible for filters and the panning delay line to\n            // continue past the end of the tone but they should have mostly dissipated by the\n            // end of the tick anyway.\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            } else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\n            let delayDuration: number = 0.0;\n\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n\n            if (usesEcho) {\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration: number = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n\n            if (usesReverb) {\n                const averageMult: number = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration: number = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\n            const progressInTick: number = secondsInTick / delayDuration;\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        } else {\n            // Flushing delay lines to zero since the signal has mostly dissipated.\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n\n            let totalDelaySamples: number = 0;\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\n\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n    }\n\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\n        this.volumeScale = 1.0;\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.noise || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString || instrument.type == InstrumentType.spectrum) {\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n            this.unisonBuzzes = instrument.unisonBuzzes;\n        }\n        if (instrument.type == InstrumentType.chip) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n            this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n            this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n            this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n            this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n            this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n            this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\n            this.volumeScale = 0.05;\n        } else if (instrument.type == InstrumentType.noise) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n        } else if (instrument.type == InstrumentType.harmonics) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n        } else if (instrument.type == InstrumentType.pickedString) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n        } else if (instrument.type == InstrumentType.spectrum) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n        } else if (instrument.type == InstrumentType.drumset) {\n            for (let i: number = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n        } else {\n            this.wave = null;\n        }\n    }\n\n    public getDrumsetWave(pitch: number): Float32Array {\n        if (this.type == InstrumentType.drumset) {\n            return this.drumsetSpectrumWaves[pitch].wave!;\n        } else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n\n    public static drumsetIndexReferenceDelta(index: number): number {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\n\nclass ChannelState {\n    public readonly instruments: InstrumentState[] = [];\n    public muted: boolean = false;\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n}\n\nexport class Synth {\n\n    private syncSongState(): void {\n        const channelCount: number = this.song!.getChannelCount();\n        for (let i: number = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i: number = 0; i < channelCount; i++) {\n            const channel: Channel = this.song!.channels[i];\n            const channelState: ChannelState = this.channels[i];\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n\n    public initModFilters(song: Song | null): void {\n        if (song != null) {\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    public warmUpSynthesizer(song: Song | null): void {\n        // Don't bother to generate the drum waves unless the song actually\n        // uses them, since they may require a lot of computation.\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick: number = this.getSamplesPerTick();\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    for (let envelopeIndex: number = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) instrumentState.envelopeTime[envelopeIndex] = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n\n            }\n        }\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\n\t\t// before starting audio callbacks to avoid skipping the initial output.\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n\t\t//BUGFIX FROM JUMMBOX\n    }\n\n    public computeLatestModValues(): void {\n\n        if (this.song != null && this.song.modChannelCount > 0) {\n\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\n            let latestModTimes: (number | null)[] = [];\n            let latestModInsTimes: (number | null)[][][] = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n\n            // Find out where we're at in the fraction of the current bar.\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\n\n            // For mod channels, calculate last set value for each mod\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n\n                    let pattern: Pattern | null;\n\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n\n                        if (pattern != null) {\n                            let instrumentIdx: number = pattern.instruments[0];\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts: number[] = [];\n                            let latestPinValues: number[] = [];\n\n                            let partsInBar: number = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            // Set modulator value, if it wasn't set in another pattern already scanned\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        // Generate list of used instruments\n                                        let usedInstruments: number[] = [];\n                                        // All\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        // Active\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        } else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            // Iterate through all used instruments by this modulator\n                                            // Special indices for mod filter targets, since they control multiple things.\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                            let modulatorAdjust: number = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            } else if (noteFilterParam) {\n                                                // Skip all possible indices for eq filter\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\n\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                } else if (noteFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\n    public determineInvalidModulators(instrument: Instrument): void {\n        if (this.song == null)\n            return;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            // For song modulator, valid if any setting used\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null) continue;\n            let tgtInstrumentList: Instrument[] = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\n                tgtInstrumentList = channel.instruments;\n            } else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\n                if (tgtInstrument == null) continue;\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\n                // Check effects\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    // Instrument type specific\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\" || str == \"decimal offset\"))\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                    // Arp check\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    // EQ Filter check\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                    // Note Filter check\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\n\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n\n        }\n    }\n\n    private static operatorAmplitudeCurve(amplitude: number): number {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n\n    public samplesPerSecond: number = 44100;\n    public panningDelayBufferSize: number;\n    public panningDelayBufferMask: number;\n    public chorusDelayBufferSize: number;\n    public chorusDelayBufferMask: number;\n    // TODO: reverb\n\n    public song: Song | null = null;\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\n    public liveInputDuration: number = 0;\n    public liveBassInputDuration: number = 0;\n    public liveInputStarted: boolean = false;\n    public liveBassInputStarted: boolean = false;\n    public liveInputPitches: number[] = [];\n    public liveBassInputPitches: number[] = [];\n    public liveInputChannel: number = 0;\n    public liveBassInputChannel: number = 0;\n    public liveInputInstruments: number[] = [];\n    public liveBassInputInstruments: number[] = [];\n    public loopRepeatCount: number = -1;\n    public volume: number = 1.0;\n    public oscRefreshEventTimer: number = 0;\n    public oscEnabled: boolean = true;\n    public enableMetronome: boolean = false;\n    public countInMetronome: boolean = false;\n    public renderingSong: boolean = false;\n    public heldMods: HeldMod[] = [];\n    private wantToSkip: boolean = false;\n    private playheadInternal: number = 0.0;\n    private bar: number = 0;\n    private prevBar: number | null = null;\n    private nextBar: number | null = null;\n    private beat: number = 0;\n    private part: number = 0;\n    private tick: number = 0;\n    public isAtStartOfTick: boolean = true;\n    public isAtEndOfTick: boolean = true;\n    public tickSampleCountdown: number = 0;\n    private modValues: (number | null)[] = [];\n    public modInsValues: (number | null)[][][] = [];\n    private nextModValues: (number | null)[] = [];\n    public nextModInsValues: (number | null)[][][] = [];\n    private isPlayingSong: boolean = false;\n    private isRecording: boolean = false;\n    private liveInputEndTime: number = 0.0;\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\n\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\n    public loopBarStart: number = -1;\n    public loopBarEnd: number = -1;\n\n\n\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\n\n    public readonly channels: ChannelState[] = [];\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\n\n    private startedMetronome: boolean = false;\n    private metronomeSamplesRemaining: number = -1;\n    private metronomeAmplitude: number = 0.0;\n    private metronomePrevAmplitude: number = 0.0;\n    private metronomeFilter: number = 0.0;\n    private limit: number = 0.0;\n\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\n\n    private audioCtx: any | null = null;\n    private scriptNode: any | null = null;\n\n    public get playing(): boolean {\n        return this.isPlayingSong;\n    }\n\n    public get recording(): boolean {\n        return this.isRecording;\n    }\n\n    public get playhead(): number {\n        return this.playheadInternal;\n    }\n\n    public set playhead(value: number) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder: number = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n\n    public getSamplesPerBar(): number {\n        if (this.song == null) throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n\n    public getTicksIntoBar(): number {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    public getCurrentPart(): number {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n\n    private findPartsInBar(bar: number): number {\n        if (this.song == null) return 0;\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                // Find the earliest next bar note.\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n\n    // Returns the total samples in the song\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\n        if (this.song == null)\n            return -1;\n\n        // Compute the window to be checked (start bar to end bar)\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods: boolean = false;\n        let hasNextBarMods: boolean = false;\n        let prevTempo: number = this.song.tempo;\n\n        // Determine if any tempo or next bar mods happen anywhere in the window\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar: number = startBar; bar < endBar; bar++) {\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\n        if (startBar > 0) {\n            let latestTempoPin: number | null = null;\n            let latestTempoValue: number = 0;\n\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n                        let instrumentIdx: number = pattern.instruments[0];\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n\n                        let partsInBar: number = this.findPartsInBar(bar);\n\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n\n        if (hasTempoMods || hasNextBarMods) {\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\n            let bar: number = startBar;\n            let ended: boolean = false;\n            let totalSamples: number = 0;\n\n            while (!ended) {\n                // Compute the subsection of the pattern that will play\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart: number = 0;\n\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\n                if (hasTempoMods) {\n                    let foundMod: boolean = false;\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\n                                        foundMod = true;\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                // Compute samples up to this note\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        // Compute samples up to this pin\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\n\n                                                            if (currPinTempo != prevPinTempo) {\n\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\n                                                                // The starting formula is\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\n                                                                //\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\n                                                                //\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\n\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n\n                                                            }\n                                                            else {\n\n                                                                // No tempo change between the two pins.\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Compute samples for the rest of the bar\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0) loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n\n            }\n\n            return Math.ceil(totalSamples);\n        }\n        else {\n            // No tempo or next bar mods... phew! Just calculate normally.\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\n        if (this.song == null) throw new Error();\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro) bars += this.song.loopStart;\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n\n    constructor(song: Song | string | null = null) {\n        this.computeDelayBufferSizes();\n        if (song != null) this.setSong(song);\n    }\n\n    public setSong(song: Song | string): void {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        } else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n\n    private computeDelayBufferSizes(): void {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n\n    private activateAudio(): void {\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null) this.deactivateAudio();\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n\n    private deactivateAudio(): void {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\n            this.audioCtx = null;\n        }\n    }\n\n    public maintainLiveInput(): void {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n\n    public play(): void {\n        if (this.isPlayingSong) return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n\n    public pause(): void {\n        if (!this.isPlayingSong) return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n        this.preferLowerLatency = false;\n    }\n\n    public startRecording(): void {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n\n    public resetEffects(): void {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\n        // should these be turned into a function?\n        /* if (Config.modulators[setting].optionalModify == \"invert-0to50\") {\n            val = 50 - val;\n            nextVal = 50 - nextVal;\n        }\n        if (Config.modulators[setting].optionalModify == \"invert-0to99\") {\n            val = 99 - val;\n            nextVal = 99 - nextVal;\n        } */\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        } else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n\n        return val;\n    }\n\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\n            }\n        } else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\n            }\n        }\n        return -1;\n    }\n\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\n    public isAnyModActive(channel: number, instrument: number): boolean {\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i: number = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                } else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\n\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (instrument.eqFilterType)\n                return false;\n            if (instrument.tmpEqFilterEnd != null)\n                return true;\n        }\n        return false\n    }\n\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n\n    // Force a modulator to be held at the given volumeStart for a brief duration.\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\n        let found: boolean = false;\n        for (let i: number = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        // Default: hold for 24 ticks / 12 parts (half a beat).\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n\n    public snapToStart(): void {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n\n    public goToBar(bar: number): void {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n\n    public snapToBar(): void {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n\n    // this thing is relating to shift+b btw\n    public jumpIntoLoop(): void {\n        if (!this.song) return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar: number = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n\n            if (this.playing)\n                this.computeLatestModValues();\n        } \n    }\n    \n    public goToNextBar(): void {\n        if (!this.song) return;\n        this.prevBar = this.bar;\n        const oldBar: number = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    public goToPrevBar(): void {\n        if (!this.song) return;\n        this.prevBar = null;\n        const oldBar: number = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n\n    // Idk if this is doing what I think its doing\n    private getNextBar(): number {\n        let nextBar: number = this.bar + 1;\n        if (this.song?.loopType != null) {\n            if (this.song.loopType != 2) { \n                if (this.isRecording) {\n                    if (nextBar >= this.song!.barCount) {\n                        nextBar = this.song!.barCount - 1;\n                    }\n                } else if ((this.bar == this.loopBarEnd && !this.renderingSong) /*) || (_loopType == 2 && (this.bar == this.song!.barCount-1))*/ ) {\n                        nextBar = this.loopBarStart; \n                    }\n                    else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\n                        nextBar = this.song!.loopStart;\n                    }\n            } else if (this.song.loopType == 2 && (this.bar == this.song!.barCount-1)) {\n                nextBar = 0; \n            }\n        } else {\n            if (this.isRecording) {\n                if (nextBar >= this.song!.barCount) {\n                    nextBar = this.song!.barCount - 1;\n                }\n            } else if (this.bar == this.loopBarEnd && !this.renderingSong) {\n                nextBar = this.loopBarStart;\n            }\n            else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\n                nextBar = this.song!.loopStart;\n            }\n        }\n        return nextBar;\n    }\n\n    public skipBar(): void {\n        if (!this.song) return;\n        const samplesPerTick: number = this.getSamplesPerTick();\n        this.prevBar = this.bar; // Bugfix by LeoV\n        if (this.loopBarEnd != this.bar)\n            this.bar++;\n        else {\n            this.bar = this.loopBarStart;\n        }\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n\t    this.isAtStartOfTick = true;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\n            this.bar = this.song.loopStart;\n            if (this.loopBarStart != -1) this.bar = this.loopBarStart;\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\n        }\n\n    }\n\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\n        const outputBuffer = audioProcessingEvent.outputBuffer;\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\n\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\n            this.browserAutomaticallyClearsAudioBuffer = false;\n        }\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\n            const length: number = outputBuffer.length;\n            for (let i: number = 0; i < length; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n        }\n\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n            this.deactivateAudio();\n        } else {\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n\n            if (this.oscEnabled) {\n                if (this.oscRefreshEventTimer <= 0) {\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\n                    this.oscRefreshEventTimer = 2;\n                } else {\n                    this.oscRefreshEventTimer--;\n                }\n            }\n        }\n    }\n\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\n        if (this.song == null) {\n            for (let i: number = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n\n        const song: Song = this.song;\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\n        this.song.outVolumeCap = 0.0;\n\n        let samplesPerTick: number = this.getSamplesPerTick();\n        let ended: boolean = false;\n\n        // Check the bounds of the playhead:\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n\n        //const synthStartTime: number = performance.now();\n\n        this.syncSongState();\n\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n\n        // Post processing parameters:\n        const volume: number = +this.volume;\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit: number = +this.limit;\n\t    \t\t\tlet skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n\t\t//BUGFIX FROM JUMMBOX\n\n        let bufferIndex: number = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount) this.nextBar = null;\n\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd: number = bufferIndex + runLength;\n\n            // Handle mod synth\n            if (this.isPlayingSong || this.renderingSong) {\n\n                // First modulation pass. Determines active tones.\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n\n                 // Second modulation pass.\n                // Only for Dot X/Y mods.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n\n                        }\n                    }\n                }\n            }\n\n            // Handle next bar mods if they were set\n            if (this.wantToSkip) {\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\n                    this.pause();\n                    return;\n                }\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n\t\t\t\t//BUGFIX FROM JUMMBOX\n                this.wantToSkip = false;\n                this.skipBar();\n\t\t    \t\t\t\t\tcontinue;\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\n            }\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel: Channel = song.channels[channelIndex];\n                const channelState: ChannelState = this.channels[channelIndex];\n\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n\n                            instrumentState.computed = false;\n                            instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone: Tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone: Tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\n\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\n\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\n                            outputDataL[i] += this.metronomeAmplitude;\n                            outputDataR[i] += this.metronomeAmplitude;\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                } else {\n                    this.startedMetronome = false;\n                }\n            }\n\n            // Post processing:\n            for (let i: number = bufferIndex; i < runEnd; i++) {\n                // A compressor/limiter.\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs: number = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                // Determine the target amplification based on the range of the curve\n                const limitTarget: number =\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                // Move the limit towards the target\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\n            }\n\n            bufferIndex += runLength;\n\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n\n                // Track how long tones have been released, and free them if there are too many.\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            } else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n\n                const ticksIntoBar: number = this.getTicksIntoBar();\n                const tickTimeStart: number = ticksIntoBar;\n                const secondsPerTick: number = samplesPerTick / this.samplesPerSecond;\n                const currentPart: number = this.getCurrentPart();\n\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\n\n                        // Update envelope time, which is used to calculate (all envelopes') position\n                        const envelopeComputer: EnvelopeComputer = instrumentState.envelopeComputer;\n                        const envelopeSpeeds: number[] = [];\n                        for (let i: number = 0; i < Config.maxEnvelopeCount; i++) {\n                            envelopeSpeeds[i] = 0;\n                        }\n                        for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                            let useEnvelopeSpeed: number = instrument.envelopeSpeed;\n                            let perEnvelopeSpeed: number = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channel, instrumentIdx) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed!;\n                            }\n                            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                                if (Number.isInteger(useEnvelopeSpeed)) {\n                                    instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                                } else {\n                                    // Linear interpolate envelope values\n                                    instrumentState.envelopeTime[envelopeIndex] += ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]) * perEnvelopeSpeed;\n                                }\n                            }\n                            else {\n                                instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                            }\n                        }\n                        \n                        let tone: Tone = new Tone;\n                        if (instrumentState.activeTones.count() > 0) {\n                            tone = instrumentState.activeTones.peakBack();\n                        } else {\n                            tone = new Tone;\n                        }\n                        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, instrumentState, this);\n                        const envelopeStarts: number[] = envelopeComputer.envelopeStarts;\n                        //const envelopeEnds: number[] = envelopeComputer.envelopeEnds;\n\n                        // Update arpeggio time, which is used to calculate arpeggio position\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            } else {\n                                // Linear interpolate arpeggio values\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.arpeggioSpeed]; //only discrete for now\n                            //const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.arpeggioSpeed];\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, envelopeStart*useArpeggioSpeed);\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            } else {\n                                // Linear interpolate arpeggio values\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        envelopeComputer.clearEnvelopes();\n                    }\n                }\n\n                // Update next-used filters after each run\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        } else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        } else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    // Decrement held modulator counters after each run\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                // bar changed, reset for next bar:\n                                this.beat = 0;\n\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                } else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Update mod values so that next values copy to current values\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n\n            // Set samples per tick if song tempo mods changed it\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n\n            // Bound LFO times to be within their period (to keep values from getting large)\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\n                    for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                        instrumentState.envelopeTime[envelopeIndex] = (instrumentState.envelopeTime[envelopeIndex] % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                    }\n                }\n            }\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n\n        // Optimization: Avoid persistent reverb values in the float denormal range.\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\n        this.limit = limit;\n\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n\n        /*\n        const synthDuration: number = performance.now() - synthStartTime;\n        // Performance measurements:\n        samplesAccumulated += outputBufferLength;\n        samplePerformance += synthDuration;\n    \t\n        if (samplesAccumulated >= 44100 * 4) {\n            const secondsGenerated = samplesAccumulated / 44100;\n            const secondsRequired = samplePerformance / 1000;\n            const ratio = secondsRequired / secondsGenerated;\n            console.log(ratio);\n            samplePerformance = 0;\n            samplesAccumulated = 0;\n        }\n        */\n    }\n\n    private freeTone(tone: Tone): void {\n        this.tonePool.pushBack(tone);\n    }\n\n    private newTone(): Tone {\n        if (this.tonePool.count() > 0) {\n            const tone: Tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n\n    public freeAllTones(): void {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pitches: number[] = this.liveInputPitches;\n        const bassPitches: number[] = this.liveBassInputPitches;\n\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\n            let toneCount: number = 0;\n            const instrument: Instrument = channel.instruments[instrumentIndex];\n            let filteredPitches = pitches;\n            if (effectsIncludeNoteRange(instrument.effects)) filteredPitches = pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n            let filteredBassPitches: number[] = bassPitches;\n            if (effectsIncludeNoteRange(instrument.effects)) filteredBassPitches = bassPitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\n                        tone.pitches[i] = filteredPitches[i];\n                    }\n                    tone.pitchCount = filteredPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\n\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != filteredPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = filteredPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = filteredPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && filteredBassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < filteredBassPitches.length; i++) {\n                        tone.pitches[i] = filteredBassPitches[i];\n                    }\n                    tone.pitchCount = filteredBassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, filteredBassPitches);\n\n                    for (let i: number = 0; i < filteredBassPitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != filteredBassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = filteredBassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = filteredBassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\n    // seamless transition across patterns, otherwise returns null.\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            // The adjacent pattern does not contain the same instrument as the current pattern.\n\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                // The current or adjacent pattern contains more than one instrument, don't bother\n                // trying to connect them.\n                return null;\n            }\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\n            // Try to connect them.\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\n\n            if (forceContinue) {\n                // Even non-seamless instruments can be connected across patterns if forced.\n                return otherInstrument.getChord();\n            }\n\n            // Otherwise, check that both instruments are seamless across patterns.\n            const otherTransition: Transition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            } else {\n                return null;\n            }\n        } else {\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\n        }\n        return true;\n    }\n\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\n        // The tones are about to seamlessly transition to a new note. The pitches\n        // from the old note may or may not match any of the pitches in the new\n        // note, and not necessarily in order, but if any do match, they'll sound\n        // better if those tones continue to have the same pitch. Attempt to find\n        // the right spot for each old tone in the new chord if possible.\n\n        for (let i: number = 0; i < toneList.count(); i++) {\n            const tone: Tone = toneList.get(i);\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\n            for (let j: number = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n\n        // Any tones that didn't get matched should just fill in the gaps.\n        while (toneList.count() > 0) {\n            const tone: Tone = toneList.popFront();\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\n        const currentPart: number = this.getCurrentPart();\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\n\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\n            let notes: (Note | null)[] = [];\n            let prevNotes: (Note | null)[] = [];\n            let nextNotes: (Note | null)[] = [];\n            let fillCount: number = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n\n            if (pattern != null && !channel.muted) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        // Actually need to check which note starts closer to the start of this note.\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        // Actually need to check which note starts closer to the end of this note.\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n\n            let modToneCount: number = 0;\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\n\n                }\n\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\n\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\n                    let tone: Tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone: Tone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        } else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    } else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\n                        tone.pitches[i] = notes[mod]!.pitches[i];\n                    }\n                    tone.pitchCount = notes[mod]!.pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod]!.start;\n                    tone.noteEndPart = notes[mod]!.end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n                \n            }\n            // Automatically free or release seamless tones if there's no new note to take over.\n            while (toneList.count() > modToneCount) {\n                const tone: Tone = toneList.popBack();\n                const channel: Channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                } else {\n                    this.freeTone(tone);\n                }\n            }\n\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n\n            let note: Note | null = null;\n            let prevNote: Note | null = null;\n            let nextNote: Note | null = null;\n\n            // Bit Obvious, but this if statement is getting what notes are supposed to be played and what the previous note is.\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) { // All notes that this applies to is a previous note\n                        prevNote = pattern.notes[i];\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) { // This is the current note\n                        note = pattern.notes[i];\n                    } else if (pattern.notes[i].start > currentPart) { // All notes this applies to is a next note\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n\n                // If the previous or next note isn't right before or after the current note, then it'll set itself as null.\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\n                }\n            }\n\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            } else {\n                channelState.singleSeamlessInstrument = null;\n            }\n\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                const toneList: Deque<Tone> = instrumentState.activeTones;\n                let toneCount: number = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument: Note | null = prevNote;\n                    let nextNoteForThisInstrument: Note | null = nextNote;\n\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\n                    const transition: Transition = instrument.getTransition();\n                    const chord: Chord = instrument.getChord();\n                    const useStrumSpeed: boolean = chord.strumParts > 0;\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    let tonesInPrevNote: number = 0;\n                    let tonesInNextNote: number = 0;\n                    if (note.start == 0) {\n                        // If the beginning of the note coincides with the beginning of the pattern,\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    let prevPitchesForThisInstrument: number[] = prevNoteForThisInstrument.pitches;\n                                    // @TODO: This may or may not be needed, I'm not entirely sure yet...\n                                    // if (effectsIncludeNoteRange(instrument.effects)) prevPitchesForThisInstrument = prevPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevPitchesForThisInstrument.length;\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (prevNoteForThisInstrument != null) {\n                        let prevPitchesForThisInstrument: number[] = prevNoteForThisInstrument.pitches;\n                        // @TODO: This may or may not be needed, I'm not entirely sure yet...\n                        // if (effectsIncludeNoteRange(instrument.effects)) prevPitchesForThisInstrument = prevPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                        tonesInPrevNote = chord.singleTone ? 1 : prevPitchesForThisInstrument.length\n                    }\n                    if (note.end == partsPerBar) {\n                        // If the end of the note coincides with the end of the pattern, look for an\n                        // adjacent note at the beginning of the next pattern.\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    let nextPitchesForThisInstrument: number[] = nextNoteForThisInstrument.pitches;\n                                    // @TODO: This may or may not be needed, I'm not entirely sure yet...\n                                    // if (effectsIncludeNoteRange(instrument.effects)) nextPitchesForThisInstrument = nextPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextPitchesForThisInstrument.length;\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (nextNoteForThisInstrument != null) {\n                        let nextPitchesForThisInstrument: number[] = nextNoteForThisInstrument.pitches;\n                        // @TODO: This may or may not be needed, I'm not entirely sure yet...\n                        // if (effectsIncludeNoteRange(instrument.effects)) nextPitchesForThisInstrument = nextPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                        tonesInNextNote = chord.singleTone ? 1 : nextPitchesForThisInstrument.length;\n                    }\n\n                    let filteredPitches: number[] = note.pitches;\n                    if (effectsIncludeNoteRange(instrument.effects)) filteredPitches = note.pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                    if (chord.singleTone && !(filteredPitches.length <= 0)) {\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\n                        let tone: Tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone: Tone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            } else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        } else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\n                            tone.pitches[i] = filteredPitches[i];\n                        }\n                        tone.pitchCount = filteredPitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    } else {\n                        const transition: Transition = instrument.getTransition();\n\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\n                        }\n\n                        let strumOffsetParts: number = 0;\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\n\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone: Note = note;\n                            let pitchesForThisTone: number[] = filteredPitches;\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote: boolean = false;\n\n                            // Strumming may mean that a note's actual start time may be after the\n                            // note's displayed start time. If the note start hasn't been reached yet,\n                            // carry over the previous tone if available and seamless, otherwise skip\n                            // the new tone until it is ready to start.\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    // Continue the previous note's chord until the current one takes over.\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    pitchesForThisTone = noteForThisTone.pitches;\n                                    if (effectsIncludeNoteRange(instrument.effects)) pitchesForThisTone = pitchesForThisTone.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                } else {\n                                    // This and the rest of the tones in the chord shouldn't start yet.\n                                    break;\n                                }\n                            }\n\n                            let noteEndPart: number = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                // if (useStrumSpeed) strumOffsetParts += Config.strumSpeedScale[instrument.strumParts];\n                                if (useStrumSpeed) strumOffsetParts += instrument.strumParts;\n                            }\n\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone: Tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount]!;\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            } else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone: Tone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                } else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            } else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n\n                            tone.pitches[0] = pitchesForThisTone[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = pitchesForThisTone.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                    if (transition.continues && (toneList.count() <= 0) || (note.pitches.length <= 0)) instrumentState.envelopeComputer.reset(); //stop computing effects envelopes\n                }\n                // Automatically free or release seamless tones if there's no new note to take over.\n                while (toneList.count() > toneCount) {\n                    const tone: Tone = toneList.popBack();\n                    const channel: Channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    } else {\n                        this.freeTone(tone);\n                    }\n                }\n\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                } else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n\n\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n        instrumentState.envelopeComputer.clearEnvelopes();\n    }\n\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n\n        if (tone.note != null) {\n            const ticksIntoBar: number = this.getTicksIntoBar();\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown: number = this.tickSampleCountdown;\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n\n    private static computeChordExpression(chordSize: number): number {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition: Transition = instrument.getTransition();\n        const chord: Chord = instrument.getChord();\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar: number = this.getTicksIntoBar();\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart: number = this.getCurrentPart();\n\n        let specialIntervalMult: number = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\n        //}\n\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\n        let intervalStart: number = 0.0;\n        let intervalEnd: number = 0.0;\n        let fadeExpressionStart: number = 1.0;\n        let fadeExpressionEnd: number = 1.0;\n        let chordExpressionStart: number = chordExpression;\n        let chordExpressionEnd: number = chordExpression;\n\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression: number = 1.0;\n        let pitchDamping: number = 48;\n        if (instrument.type == InstrumentType.spectrum) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        } else if (instrument.type == InstrumentType.drumset) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        } else if (instrument.type == InstrumentType.noise) {\n            // dogebox2 code, makes basic noise affected by keys in pitch channels\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            // maybe also lower expression in pitch channels?\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            baseExpression = Config.fmBaseExpression;\n        } else if (instrument.type == InstrumentType.chip){\n                baseExpression = Config.chipBaseExpression;\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\n\t\t\t\t\t}\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\n\t\t\t\t\t}\n\t\t\t\t}\n            } else if (instrument.type == InstrumentType.customChipWave) {\n            baseExpression = Config.chipBaseExpression;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            baseExpression = Config.harmonicsBaseExpression;\n        } else if (instrument.type == InstrumentType.pwm) {\n            baseExpression = Config.pwmBaseExpression;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\tbaseExpression = Config.supersawBaseExpression;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            baseExpression = Config.pickedStringBaseExpression;\n        } else if (instrument.type == InstrumentType.mod) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        } else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n\t\t\t\t\t\t // advloop addition\n                         if (instrument.type == InstrumentType.chip && instrument.isUsingAdvancedLoopControls) {\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\n                // @TODO: This is silly and I should actually figure out how to\n                // properly keep lastOffset as 1.0 and not get it wrapped back\n                // to 0 once it's in `Synth.loopableChipSynth`.\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWaves[i] = 0;\n                    tone.chipWaveCompletionsLastWave[i] = 0;\n                }\n                // console.log(tone.directions);\n            }\n                // advloop addition\n        }\n        tone.freshlyAllocated = false;\n\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n\n        if (released) {\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\n        } else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        } else {\n            const note: Note = tone.note;\n            const nextNote: Note | null = tone.nextNote;\n\n            const noteStartPart: number = tone.noteStartPart;\n            const noteEndPart: number = tone.noteEndPart;\n\n\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\n            const startPin: NotePin = note.pins[endPinIndex - 1];\n            const endPin: NotePin = note.pins[endPinIndex];\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\n\n            tone.ticksSinceReleased = 0;\n\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd: number = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    // If the tone should fade out before the end of the note, do so here.\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\n                }\n            }\n\n        }\n\n        tone.isOnLastTick = toneIsOnLastTick;\n\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\n        let startPoint: FilterControlPoint;\n        let endPoint: FilterControlPoint;\n\n        if (instrument.noteFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\n            let filterChanges: boolean = false;\n\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n\n            // Temporarily override so that envelope computer uses appropriate computed note filter\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n        const envelopeSpeeds: number[] = [];\n        for (let i: number = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed: number = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, tone.instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed!;\n            }\n            let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed] * perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n                if (Number.isInteger(useEnvelopeSpeed)) {\n                    useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                } else {\n                    // Linear interpolate envelope values\n                    useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)] * perEnvelopeSpeed;\n                }\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed;\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, envelopeSpeeds, instrumentState, this);\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n        if (transition.continues && (tone.prevNote == null || tone.note == null)) {\n            instrumentState.envelopeComputer.reset();\n        }\n\n        if (tone.note != null && transition.slides) {\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\n            const prevNote: Note | null = tone.prevNote;\n            const nextNote: Note | null = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n\n        if (effectsIncludePitchShift(instrument.effects)||this.isModActive(Config.modulators.dictionary[\"song pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart: number = 1.0;\n            let pitchShiftScalarEnd: number = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = clamp((-Config.pitchShiftRange*2)+1, Config.pitchShiftRange-1, (pitchShiftScalarStart + this.getModValue(Config.modulators.dictionary[\"song pitch shift\"].index, undefined, undefined, true))-1) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = clamp((-Config.pitchShiftRange*2)+1, Config.pitchShiftRange-1, (pitchShiftScalarEnd + this.getModValue(Config.modulators.dictionary[\"song pitch shift\"].index, undefined, undefined, true))-1) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\n            let modDetuneStart: number = instrument.detune;\n            let modDetuneEnd: number = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks: number;\n            let vibratoAmplitudeStart: number;\n            let vibratoAmplitudeEnd: number;\n            // Custom vibrato\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\n                // Special case: if vibrato delay is max, NEVER vibrato.\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            } else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n\n\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\n            // of the next run if available.\n            let vibratoStart: number;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            } else {\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\n            if (instrument.type != InstrumentType.mod) {\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n\n                tone.prevVibrato = vibratoEnd;\n\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            // Fade in the beginning of the note.\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\n            }\n        }\n\n\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\n            // It's possible that the note will change while the user is editing it,\n            // but the tone's pitches don't get updated because the tone has already\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        } else {\n\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\n\n            // Simple note filter\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\n\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\n\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n\n        if (instrument.type == InstrumentType.drumset) {\n            const drumsetEnvelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\n            //const timeScale: number = Config.arpSpeedScale[instrument.envelopeSpeed];\n            //secondsPerTick *= timeScale;\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope);\n\n            drumsetEnvelopeComputer.computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd);\n            \n            const drumsetFilterEnvelopeStart = drumsetEnvelopeComputer.drumsetFilterEnvelopeStart;\n            const drumsetFilterEnvelopeEnd = drumsetEnvelopeComputer.drumsetFilterEnvelopeEnd;\n\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\n            point.type = FilterType.lowPass;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            // phase modulation!\n\n            let sineExpressionBoost: number = 1.0;\n            let totalCarrierExpression: number = 0.0;\n\n            let arpeggioInterval: number = 0;\n            const arpeggiates: boolean = chord.arpeggiates;\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n\n\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\n\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\n\n                \n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\n                let freqStart: number;\n                let freqEnd: number;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                } else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n\n                let amplitudeStart: number = instrument.operators[i].amplitude;\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\n                if (i < 4){\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                } else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n\n                let expressionStart: number = amplitudeMultStart;\n                let expressionEnd: number = amplitudeMultEnd;\n\n\n                if (i < carrierCount) {\n                    // carrier\n                    let pitchExpressionStart: number;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\n                    } else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n\n                    totalCarrierExpression += amplitudeCurveEnd;\n                } else {\n                    // modulator\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\n\n                // Check for mod-related volume delta\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\n                // You can use the mix volume modulator instead to avoid this effect.\n\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n            }\n\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n\n\n        } else {\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n\n\n            let pitch: number = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                } else {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n            }\n\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart: number;\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\n            } else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\n\n            if (instrument.type == InstrumentType.noise) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == InstrumentType.chip) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == InstrumentType.pwm) {\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n\n                //decimal offset mods\n                let decimalOffsetModStart: number = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n \n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\n                tone.decimalOffset = decimalOffsetStart;\n                \n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                // Check for sustain mods\n                let useSustainStart: number = instrument.stringSustain;\n                let useSustainEnd: number = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n\n                // Increase expression to compensate for string decay.\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n\n            }\n\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString || instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.noise) {\n                // These instruments have two waves at different frequencies for the unison feature.\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                const unisonSpread: number = instrument.unisonSpread;\n                const unisonOffset: number = instrument.unisonOffset;\n                const unisonExpression: number = instrument.unisonExpression;\n                //const unisonSign: number = Config.unisons[instrument.unisonSign];\n                //const unison: Unison = [voices:, ];\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\n                const unisonAStart: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonAEnd: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                const unisonBStart: number = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                const unisonBEnd: number = Math.pow(2.0, (unisonOffset- unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n            } else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n\n             // TODO: make expressionStart and expressionEnd variables earlier and modify those\n\t\t\t// instead of these supersawExpression variables.\n\t\t\tlet supersawExpressionStart: number = 1.0;\n\t\t\tlet supersawExpressionEnd: number = 1.0;\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n\n                // Dynamism mods\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\ttone.supersawDynamism = dynamismStart;\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\n\t\t\t\tif (initializeSupersaw) {\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\n\t\t\t\t\t// phases so they start there.\n\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\n\t\t\t\t\tlet accumulator: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] = accumulator;\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\n\t\t\t\t\t}\n\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n\t\t\t\t\tconst slope: number = amplitudeSum;\n\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\n\t\t\t\t\t// set of phases.\n\t\t\t\t\tlet sample: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\n\t\t\t\t\t// through the phases.\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\n\t\t\t\t\tlet prevDrop: number = 0.0;\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\n\t\t\t\t\t\tif (sample < 0.0) {\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\n\t\t\t\t\t\tprevDrop = nextDrop;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\n\t\t\t\t\t// based on index.\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\n\t\t\t\t// Spread mods\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n\n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t// Spread out the detunes around the center;\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n\t\t\t\t}\n\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\n\t\t\t\t// Saw shape mods\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[EnvelopeComputeIndex.supersawShape];\n\t\t\t\ttone.supersawShape = shapeStart;\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n\n                //decimal offset mods\n                let decimalOffsetModStart: number = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n \n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\n                // ...is including tone.decimalOffset still necessary?\n                tone.decimalOffset = decimalOffsetStart;\n\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                let pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                let pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                pulseWidthStart -= decimalOffsetStart / 10000;\n                pulseWidthEnd -= decimalOffsetStart / 10000;\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t} else if (initializeSupersaw) {\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t}\n\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n\t\t\t}\n\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\n\n            // Check for mod-related volume delta\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            if (instrument.type == InstrumentType.pickedString) {\n                let stringDecayStart: number;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                } else {\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                for (let i: number = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\n                        pickedString.delayIndex = -1;\n                    }\n                }\n\n                for (let i: number = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\n        let effect: number = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n\n\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\n        if (instrument.type == InstrumentType.fm) {\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        } else if (instrument.type == InstrumentType.chip) {\n\t\t                 // advloop addition\n                if (instrument.isUsingAdvancedLoopControls) {\n                    return Synth.loopableChipSynth;\n                }\n                // advloop addition\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            return Synth.harmonicsSynth;\n        } else if (instrument.type == InstrumentType.pwm) {\n            return Synth.pulseWidthSynth;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\treturn Synth.supersawSynth;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            return Synth.pickedStringSynth;\n        } else if (instrument.type == InstrumentType.noise) {\n            return Synth.noiseSynth;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            return Synth.spectrumSynth;\n        } else if (instrument.type == InstrumentType.drumset) {\n            return Synth.drumsetSynth;\n        } else if (instrument.type == InstrumentType.mod) {\n            return Synth.modSynth;\n        } else if (instrument.type == InstrumentType.fm6op) {\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                const wrappedFm6Synth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\n\t\t\t\tSynth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }else{\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n// advloop addition\n        static wrap(x: number, b: number): number {\n            return (x % b + b) % b;\n        }\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n            // @TODO:\n            // - Longer declicking? This is more difficult than I thought.\n            //   When determining this automatically is difficult (or the input\n            //   samples are expected to vary too much), this is left up to the\n            //   user.\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n            const wave: Float32Array = instrumentState.wave!;\n            const volumeScale: number = instrumentState.volumeScale;\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\n           // const ticksSinceReleased = tone.ticksSinceReleased;\n            // if (ticksSinceReleased > 0) {\n            //     chipWaveLoopStart = 0;\n            //     chipWaveLoopEnd = waveLength - 1;\n            // }\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\n\t\t\tif (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n                tone.phases[1] = tone.phases[0];\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n            let directionA: number = tone.directions[0];\n            let directionB: number = tone.directions[1];\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {\n                    directionA = 1;\n                    directionB = 1;\n                } else {\n                    directionA = -1;\n                    directionB = -1;\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\n                // If looping or ping-ponging, we clear the completion status,\n                // as it's not relevant anymore. This is mostly so that if the\n                // mode is changed midway through playback, it won't get stuck\n                // on zero volume.\n                chipWaveCompletionA = 0;\n                chipWaveCompletionB = 0;\n            }\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\n            const chipWaveCompletionFadeLength: number = 1000;\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n            let expression: number = +tone.expression;\n            const expressionDelta: number = +tone.expressionDelta;\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\n            let prevWaveIntegralA: number = 0;\n            let prevWaveIntegralB: number = 0;\n            if (!aliases) {\n                const phaseAInt = Math.floor(phaseA);\n                const phaseBInt = Math.floor(phaseB);\n                const indexA = Synth.wrap(phaseAInt, waveLength);\n               const indexB = Synth.wrap(phaseBInt, waveLength);\n                const phaseRatioA = phaseA - phaseAInt;\n                const phaseRatioB = phaseB - phaseBInt;\n                prevWaveIntegralA = +wave[indexA];\n                prevWaveIntegralB = +wave[indexB];\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\n           }\n            const filters = tone.noteFilters;\n            const filterCount: number = tone.noteFilterCount | 0;\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n            const applyFilters: Function = Synth.applyFilters;\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionA++;\n                }\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionB++;\n                }\n               let wrapped: number = 0;\n                phaseA += phaseDeltaA * directionA;\n                phaseB += phaseDeltaB * directionB;\n                if (chipWaveLoopMode === 2) {\n                    // once\n                    if (directionA === 1) {\n                        if (phaseA > waveLength) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < 0) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > waveLength) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < 0) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 3) {\n                    // loop once\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 0) {\n                    // loop\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 1) {\n                    // ping-pong\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            directionA = -1;\n                           wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            directionA = 1;\n                           wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            directionB = -1;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            directionB = 1;\n                            wrapped = 1;\n                        }\n                    }\n               }\n                let waveA = 0;\n                let waveB = 0;\n                let inputSample = 0;\n                if (aliases) {\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\n                    prevWaveA = waveA;\n                    prevWaveB = waveB;\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    inputSample = 0;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB;\n                    }\n                }\n                else {\n                    const phaseAInt = Math.floor(phaseA);\n                    const phaseBInt = Math.floor(phaseB);\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\n                    let nextWaveIntegralA = wave[indexA];\n                    let nextWaveIntegralB = wave[indexB];\n                    const phaseRatioA = phaseA - phaseAInt;\n                    const phaseRatioB = phaseB - phaseBInt;\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                        let pwia = 0;\n                        let pwib = 0;\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\n                        const phaseAInt = Math.floor(phaseA_);\n                        const phaseBInt = Math.floor(phaseB_);\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\n                        pwia = wave[indexA];\n                        pwib = wave[indexB];\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\n                        prevWaveIntegralA = pwia;\n                        prevWaveIntegralB = pwib;\n\t\t\t\t   }\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                       waveA = prevWaveA;\n                       waveB = prevWaveB;\n                   } else {\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\n                   }\n                   prevWaveA = waveA;\n                   prevWaveB = waveB;\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB * unisonSign;\n                    }\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                phaseDeltaA *= phaseDeltaScaleA;\n                phaseDeltaB *= phaseDeltaScaleB;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n            }\n            tone.phases[0] = phaseA / waveLength;\n            tone.phases[1] = phaseB / waveLength;\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n            tone.directions[0] = directionA;\n            tone.directions[1] = directionB;\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\n            tone.chipWavePrevWaves[0] = prevWaveA;\n            tone.chipWavePrevWaves[1] = prevWaveB;\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }\n        // advloop addition\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n        let prevWaveIntegralA: number = 0;\n        let prevWaveIntegralB: number = 0;\n\n        if (!aliases) {\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            prevWaveIntegralA = +wave[indexA];\n            prevWaveIntegralB = +wave[indexB];\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n        }\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            let waveA: number;\n            let waveB: number;\n            let inputSample: number;\n\n            if (aliases) {\n                waveA = wave[(0 | phaseA) % waveLength];\n                waveB = wave[(0 | phaseB) % waveLength];\n                inputSample = waveA + waveB;\n            } else {\n                const phaseAInt: number = phaseA | 0;\n                const phaseBInt: number = phaseB | 0;\n                const indexA: number = phaseAInt % waveLength;\n                const indexB: number = phaseBInt % waveLength;\n                let nextWaveIntegralA: number = wave[indexA];\n                let nextWaveIntegralB: number = wave[indexB];\n                const phaseRatioA: number = phaseA - phaseAInt;\n                const phaseRatioB: number = phaseB - phaseBInt;\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n                prevWaveIntegralA = nextWaveIntegralA;\n                prevWaveIntegralB = nextWaveIntegralB;\n                inputSample = waveA + waveB * unisonSign;\n            }\n\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t//BUGFIX FROM JUMMBOX\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n\t\t//BUGFIX FROM JUMMBOX\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const phaseAInt: number = phaseA | 0;\n        const phaseBInt: number = phaseB | 0;\n        const indexA: number = phaseAInt % waveLength;\n        const indexB: number = phaseBInt % waveLength;\n        const phaseRatioA: number = phaseA - phaseAInt;\n        const phaseRatioB: number = phaseB - phaseBInt;\n        let prevWaveIntegralA: number = +wave[indexA];\n        let prevWaveIntegralB: number = +wave[indexB];\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            let nextWaveIntegralA: number = wave[indexA];\n            let nextWaveIntegralB: number = wave[indexB];\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n            prevWaveIntegralA = nextWaveIntegralA;\n            prevWaveIntegralB = nextWaveIntegralB;\n\n            const inputSample: number = waveA + waveB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\n        // The source code is processed as a string before being compiled, in order to\n        // handle the unison feature. If unison is disabled or set to none, then only one\n        // string voice is required, otherwise two string voices are required. We only want\n        // to compute the minimum possible number of string voices, so omit the code for\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\n        // each required voice, replacing the \"#\" with the voice index.\n\n        const voiceCount: number = instrumentState.unisonVoices;\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n\n\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`\n\n            const sampleList: string[] = [];\n            for (let voice: number = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\n            }\n\n            pickedStringSource += sampleList.join(\" + \");\n\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`\n\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice: number = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n\n            //console.log(pickedStringSource);\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\n\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\n        const usesRingModulation: boolean = effectsIncludeRM(instrumentState.effects);\n        const usesPhaser: boolean = effectsIncludePhaser(instrumentState.effects);\n        const usesInvertWave: boolean = effectsIncludeInvertWave(instrumentState.effects) && instrumentState.invertWave;\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\n        signature = signature << 1; if (usesRingModulation) signature = signature | 1;\n        signature = signature << 1; if (usesPhaser) signature = signature | 1;\n        signature = signature << 1; if (usesInvertWave) signature = signature | 1;\n\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\n\n            effectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\n            }\n\n            if(usesInvertWave) {\n                effectsSource += `\n                let isInverted = +instrumentState.invertWave;\n                `\n            }\n\n            if (usesDistortion) {\n                // Distortion can sometimes create noticeable aliasing.\n                // It seems the established industry best practice for distortion antialiasing\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\n                // at the original nyquist frequency), perform the distortion, then downsample\n                // (the lowpass again followed by dropping in-between samples). This is\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\n                // introducing latency and/or time smearing, since no true brick wall filter\n                // exists. For the time being, I've opted to instead generate in-between input\n                // samples using fractional delay all-pass filters, and after distorting them,\n                // I \"downsample\" these with a simple weighted sum.\n\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\n            }\n\n            if (usesRingModulation) {\n                effectsSource += `\n                let ringModMix = +instrumentState.ringModMix;\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\n                let ringModPhase = +instrumentState.ringModPhase;\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\n                let rmWaveformIndex = +instrumentState.rmWaveformIndex;\n                let rmPulseWidth = +instrumentState.rmPulseWidth;\n\n                let waveform = Config.operatorWaves[rmWaveformIndex].samples; // index presumably comes from a dropdown\n                if (rmWaveformIndex == 2) {\n                    waveform = Synth.getOperatorWave(rmWaveformIndex, rmPulseWidth).samples; \n                }\n                const waveformLength = waveform.length - 1;\n                `\n            }\n\n            if (usesPhaser) {\n                effectsSource += `\n                \n                const phaserSamples = instrumentState.phaserSamples;\n                const phaserPrevInputs = instrumentState.phaserPrevInputs;\n                let phaserStages = instrumentState.phaserStages;\n                let phaserStagesInt = Math.floor(phaserStages);\n                const phaserStagesDelta = instrumentState.phaserStagesDelta;\n                const phaserFeedbackMultDelta = +instrumentState.phaserFeedbackMultDelta;\n                let phaserFeedbackMult = +instrumentState.phaserFeedbackMult;\n                const phaserMixDelta = +instrumentState.phaserMixDelta;\n                let phaserMix = +instrumentState.phaserMix;\n                const phaserBreakCoefDelta = +instrumentState.phaserBreakCoefDelta;\n                let phaserBreakCoef = +instrumentState.phaserBreakCoef;\n                `\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\n            }\n\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\n\n            if(usesInvertWave) {\n                effectsSource += `\n                    sample = sample*-1;\n                `\n            }\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\n            }\n\n            if (usesRingModulation) {\n                effectsSource += ` \n\n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\n                sample = sample * (1 - ringModMix) + ringModOutput * ringModMix;\n\n                ringModMix += ringModMixDelta;\n                ringModPhase += ringModPhaseDelta;\n                ringModPhase = ringModPhase % 1.0;\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\n\n                `}\n\n            if (usesPhaser) {\n                effectsSource += `\n                        const phaserFeedback = phaserSamples[Math.max(0,phaserStagesInt - 1)] * phaserFeedbackMult;\n                        for (let stage = 0; stage < phaserStagesInt; stage++) {\n                            const phaserInput = stage === 0 ? sample + phaserFeedback : phaserSamples[stage - 1];\n                            const phaserPrevInput = phaserPrevInputs[stage];\n                            const phaserSample = phaserSamples[stage];\n                            const phaserNextOutput = phaserBreakCoef * phaserInput + phaserPrevInput - phaserBreakCoef * phaserSample;\n                            phaserPrevInputs[stage] = phaserInput;\n                            phaserSamples[stage] = phaserNextOutput;\n                        }\n                        const phaserOutput = phaserSamples[Math.max(0,phaserStagesInt - 1)];\n                        sample = sample + phaserOutput * phaserMix;\n                        phaserFeedbackMult += phaserFeedbackMultDelta;\n                        phaserBreakCoef += phaserBreakCoefDelta;\n                        phaserMix += phaserMixDelta;\n                        phaserStages += phaserStagesDelta;\n                        /*phaserStagesInt = Math.floor(phaserStages);*/\n                    `\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\n            } else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\n            }\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\n\n            }\n\n            if (usesRingModulation) {\n                effectsSource += ` \n\n                instrumentState.ringModMix = ringModMix;\n                instrumentState.ringModMixDelta = ringModMixDelta;\n                instrumentState.ringModPhase = ringModPhase;\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\n                instrumentState.rmWaveformIndex = rmWaveformIndex;\n                instrumentState.rmPulseWidth = rmPulseWidth;\n                `}\n\n            if (usesPhaser) {\n                effectsSource += `\n                \n                for (let stage = 0; stage < phaserStages; stage++) {\n                    if (!Number.isFinite(phaserPrevInputs[stage]) || Math.abs(phaserPrevInputs[stage]) < epsilon) phaserPrevInputs[stage] = 0.0;\n                    if (!Number.isFinite(phaserSamples[stage]) || Math.abs(phaserSamples[stage]) < epsilon) phaserSamples[stage] = 0.0;\n                }\n                \n                instrumentState.phaserMix = phaserMix;\n                instrumentState.phaserFeedbackMult = phaserFeedbackMult;\n                instrumentState.phaserBreakCoef = phaserBreakCoef;\n                `\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\n            }\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\n            }\n\n            effectsSource += \"}\";\n\n            //console.log(effectsSource);\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0];\n        let phaseDeltaB: number = tone.phaseDeltas[1];\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1);\n        let phaseB: number = (tone.phases[1] % 1);\n\n        let pulseWidth: number = tone.pulseWidth;\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            const sawPhaseA: number = phaseA % 1;\n            const sawPhaseB: number = (phaseA + pulseWidth) % 1;\n            const sawPhaseC: number = phaseB % 1;\n            const sawPhaseD: number = (phaseB + pulseWidth) % 1;\n\n            let pulseWaveA: number = sawPhaseB - sawPhaseA;\n            let pulseWaveB: number = sawPhaseD - sawPhaseC;\n\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrumentState.aliases) {\n                if (sawPhaseA < phaseDeltaA) {\n                    var t = sawPhaseA / phaseDeltaA;\n                    pulseWaveA += (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseA > 1.0 - phaseDeltaA) {\n                    var t = (sawPhaseA - 1.0) / phaseDeltaA;\n                    pulseWaveA += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseB < phaseDeltaA) {\n                    var t = sawPhaseB / phaseDeltaA;\n                    pulseWaveA -= (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseB > 1.0 - phaseDeltaA) {\n                    var t = (sawPhaseB - 1.0) / phaseDeltaA;\n                    pulseWaveA -= (t + t + t * t + 1) * 0.5;\n                }\n\n                if (sawPhaseC < phaseDeltaB) {\n                    var t = sawPhaseC / phaseDeltaB;\n                    pulseWaveB += (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseC > 1.0 - phaseDeltaB) {\n                    var t = (sawPhaseC - 1.0) / phaseDeltaB;\n                    pulseWaveB += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseD < phaseDeltaB) {\n                    var t = sawPhaseD / phaseDeltaB;\n                    pulseWaveB -= (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseD > 1.0 - phaseDeltaB) {\n                    var t = (sawPhaseD - 1.0) / phaseDeltaB;\n                    pulseWaveB -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n            const inputSample: number = pulseWaveA + pulseWaveB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            pulseWidth += pulseWidthDelta;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA;\n        tone.phases[1] = phaseB;\n        tone.phaseDeltas[0] = phaseDeltaA;\n        tone.phaseDeltas[1] = phaseDeltaB;\n        tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\n\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phases: number[] = tone.phases;\n\n\t\tlet dynamism: number = +tone.supersawDynamism;\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\n\t\tlet shape: number = +tone.supersawShape;\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\n\t\tlet delayLength: number = +tone.supersawDelayLength;\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t: number = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                } else if (phase > 1.0 - phaseDelta) {\n                    var t: number = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n\t\t\tphases[0] = phase;\n\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\n\t\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\n\t\t\t\tsupersawSample += phase * dynamism;\n\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t: number = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n\n\t\t\t\tphases[i] = phase;\n\t\t\t}\n\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\n\t\t\tconst upperIndex: number = lowerIndex + 1;\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n\t\t\tdelayIndex++;\n\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\tdynamism += dynamismDelta;\n\t\t\tshape += shapeDelta;\n\t\t\tdelayLength += delayLengthDelta;\n\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.supersawDynamism = dynamism;\n\t\ttone.supersawShape = shape;\n\t\ttone.supersawDelayLength = delayLength;\n\t\ttone.supersawDelayIndex = delayIndex;\n\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\n    private static fmSourceTemplate: string[] = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\n\n    private static operatorSourceTemplate: string[] = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\n\n        private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n            const wave: Float32Array = instrumentState.wave!;\n            \n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n                tone.phases[1] = tone.phases[0];\n            let phaseDeltaA: number = tone.phaseDeltas[0];\n            let phaseDeltaB: number = tone.phaseDeltas[1];\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n            let expression: number = +tone.expression;\n            const expressionDelta: number = +tone.expressionDelta;\n            let phaseA: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\n            let phaseB: number = (tone.phases[1] % 1) * Config.chipNoiseLength;\n            if (tone.phases[0] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phaseA = Math.random() * Config.chipNoiseLength;\n                if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n                    phaseB = phaseA;\n            }\n            if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phaseB = Math.random() * Config.chipNoiseLength;\n            }\n            const phaseMask: number = Config.chipNoiseLength - 1;\n            let noiseSampleA: number = +tone.noiseSampleA;\n            let noiseSampleB: number = +tone.noiseSampleB;\n    \n            const filters: DynamicBiquadFilter[] = tone.noteFilters;\n            const filterCount: number = tone.noteFilterCount | 0;\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n            const applyFilters: Function = Synth.applyFilters;\n    \n            // This is for a \"legacy\" style simplified 1st order lowpass filter with\n            // a cutoff frequency that is relative to the tone's fundamental frequency.\n            const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA * instrumentState.noisePitchFilterMult);\n            const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB * instrumentState.noisePitchFilterMult);\n    \n            const stopIndex: number = bufferIndex + runLength;\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                const waveSampleA: number = wave[phaseA & phaseMask];\n                const waveSampleB: number = wave[phaseB & phaseMask];\n    \n                noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\n                noiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\n    \n                const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\n                const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample;\n    \n                phaseA += phaseDeltaA;\n                phaseB += phaseDeltaB;\n                phaseDeltaA *= phaseDeltaScaleA;\n                phaseDeltaB *= phaseDeltaScaleB;\n    \n                const output: number = sample * expression;\n                expression += expressionDelta;\n    \n                data[sampleIndex] += output;\n            }\n    \n            tone.phases[0] = phaseA / Config.chipNoiseLength;\n            tone.phases[1] = phaseB / Config.chipNoiseLength;\n            tone.phaseDeltas[0] = phaseDeltaA;\n            tone.phaseDeltas[1] = phaseDeltaB;\n            tone.expression = expression;\n            tone.noiseSampleA = noiseSampleA;\n            tone.noiseSampleB = noiseSampleB;\n    \n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }\n\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const samplesInPeriod: number = (1 << 7);\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * samplesInPeriod;\n\t\tlet phaseDeltaB: number = tone.phaseDeltas[1] * samplesInPeriod;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n\t\tconst phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let noiseSampleA: number = +tone.noiseSampleA;\n\t\tlet noiseSampleB: number = +tone.noiseSampleB;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phaseA: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n\t\tlet phaseB: number = (tone.phases[1] % 1) * Config.spectrumNoiseLength;\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phaseA = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaA;\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\n                phaseB = phaseA;\n        }\n        if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phaseB = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaB;\n        }\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA);\n        const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseAInt: number = phaseA | 0;\n\t\t\tconst phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt & phaseMask;\n\t\t\tconst indexB: number = phaseBInt & phaseMask;\n            let waveSampleA: number = wave[indexA];\n\t\t\tlet waveSampleB: number = wave[indexB];\n            const phaseRatioA: number = phaseA - phaseAInt;\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\n            waveSampleA += (wave[indexA + 1] - waveSampleA) * phaseRatioA;\n\t\t\twaveSampleB += (wave[indexB + 1] - waveSampleB) * phaseRatioB;\n\n            noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\n\t\t\tnoiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\n\n\n            const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseA += phaseDeltaA;\n\t\t\tphaseB += phaseDeltaB;\n            phaseDeltaA *= phaseDeltaScaleA;\n\t\t\tphaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / Config.spectrumNoiseLength;\n        tone.phases[1] = phaseB / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDeltaA / samplesInPeriod;\n        tone.phaseDeltas[1] = phaseDeltaB / samplesInPeriod;\n        tone.expression = expression;\n        tone.noiseSampleA = noiseSampleA;\n        tone.noiseSampleB = noiseSampleB;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let noiseSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        // Note: present modulator value is tone.expressionStarts[0].\n\n        if (!synth.song) return;\n\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n        // Flagged as invalid because unused by current settings, skip\n        if (instrument.invalidModulators[mod]) return;\n\n        let setting: number = instrument.modulators[mod];\n\n        // Generate list of used instruments\n        let usedInstruments: number[] = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\n            usedInstruments.push(0);\n        } else {\n            // All\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            // Active\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\n            } else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n            }\n\n            // Reset arps, but only at the start of the note\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            // Denote next bar skip\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            // Extra info for eq filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.eqFilterType) {\n\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            // Extra info for note filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            } else if (setting == Config.modulators.dictionary[\"individual envelope speed\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n\n                let speed: number = tone.expression + tone.expressionDelta;\n                if (Number.isInteger(speed)) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = Config.perEnvelopeSpeedIndices[speed];\n                } else {\n                    //linear interpolation\n                    speed = (1 - (speed % 1)) * Config.perEnvelopeSpeedIndices[Math.floor(speed)] + (speed % 1) * Config.perEnvelopeSpeedIndices[Math.ceil(speed)];\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = speed;\n                }\n            }\n        }\n    }\n\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\n        let phase: number = Math.random() * waveLength;\n        const phaseMask: number = waveLength - 1;\n\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\n        // otherwise they pop. Try to find a zero crossing.\n        let indexPrev: number = phase & phaseMask;\n        let wavePrev: number = wave[indexPrev];\n        const stride: number = 16;\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext: number = (indexPrev + stride) & phaseMask;\n            const waveNext: number = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\n                for (let i: number = 0; i < stride; i++) {\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext: number = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        // Found the zero crossing again! Now let's find the exact intersection.\n                        const slope: number = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    } else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            } else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n\n        return phase;\n    }\n\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    public static noteSizeToVolumeMult(size: number): number {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    public static volumeMultToNoteSize(volumeMult: number): number {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n\n    public static fadeInSettingToSeconds(setting: number): number {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    public static secondsToFadeInSetting(seconds: number): number {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    public static fadeOutSettingToTicks(setting: number): number {\n        return Config.fadeOutTicks[setting];\n    }\n    public static ticksToFadeOutSetting(ticks: number): number {\n        let lower: number = Config.fadeOutTicks[0];\n        if (ticks <= lower) return 0;\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper: number = Config.fadeOutTicks[i];\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n\n    public static detuneToCents(detune: number): number {\n        // BeepBox formula, for reference:\n        // return detune * (Math.abs(detune) + 1) / 2;\n        return detune - Config.detuneCenter;\n    }\n    public static centsToDetune(cents: number): number {\n        // BeepBox formula, for reference:\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\n        return cents + Config.detuneCenter;\n    }\n\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n\n    public getSamplesPerTick(): number {\n        if (this.song == null) return 0;\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n\n    public static fittingPowerOfTwo(x: number): number {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\n        let reset: boolean = false;\n        for (const filter of filters) {\n            const output1: number = Math.abs(filter.output1);\n            const output2: number = Math.abs(filter.output2);\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon) filter.output1 = 0.0;\n            if (output2 < epsilon) filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\n        while (true) {\n            lastIndex--;\n            const index: number = lastIndex & mask;\n            const sample: number = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\n            delayLine[index] = 0.0;\n        }\n    }\n\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\n        for (let i: number = 0; i < filterCount; i++) {\n            const filter: DynamicBiquadFilter = filters[i];\n            const output1: number = filter.output1;\n            const output2: number = filter.output2;\n            const a1: number = filter.a1;\n            const a2: number = filter.a2;\n            const b0: number = filter.b0;\n            const b1: number = filter.b1;\n            const b2: number = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            } else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            // Updating the input values is waste if the next filter doesn't exist...\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n\n    public computeTicksSinceStart(ofBar: boolean = false) {\n        const beatsPerBar = this.song?.beatsPerBar ? this.song?.beatsPerBar : 8;\n        if (ofBar) {\n            return Config.ticksPerPart * Config.partsPerBeat * beatsPerBar * this.bar;\n        } else {\n            return this.tick + Config.ticksPerPart * (this.part + Config.partsPerBeat * (this.beat + beatsPerBar * this.bar));\n        }\n    }\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };","import {ColorConfig} from \"../editor/ColorConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\n\ndocument.head.appendChild(HTML.style({type: \"text/css\"}, `\n\t:root {\n\t\t--button-size: 26px;\n\t\t--settings-area-width: 192px;\n\t\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\n\t\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\n\t\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\n\t\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\n\t\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\n\t\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\n\t\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\n\t\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\n\t\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\n\t\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\n\t\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\n\t\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\n\t\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\n\t\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\n\t\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t\t</g> \\\n\t\t\t</svg>');\n\t\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\n\t\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\n\t\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\n\t\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\n\t\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\n\t\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\n\t\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\n\t\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\n\t\t\t\t<defs> \\\n\t\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t</linearGradient> \\\n\t\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t\t</linearGradient> \\\n\t\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t</radialGradient> \\\n\t\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t\t</linearGradient> \\\n\t\t\t\t\t<radialGradient id=\"membrane\"> \\\n\t\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\n\t\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\n\t\t\t\t\t</radialGradient> \\\n\t\t\t\t</defs> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\n\t\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\n\t\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\n\t\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\n\t\t\t</svg>');\n\t\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\n\t\t\t\t<defs> \\\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t\t</linearGradient> \\\n\t\t\t\t</defs> \\\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\n\t\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\n\t\t\t</svg>');\n\t--mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\n\t\t\t\t<defs> \\\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t\t</linearGradient> \\\n\t\t\t\t</defs> \\\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\n\t\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\n\t\t\t</svg>');\n\t}\n\n\tbody {\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tbackground: ${ColorConfig.songPlayerMargin};\n\t}\n\t.songPlayerContainer {\n\t\tdisplay:grid; \n\t\tgrid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n\t\tgrid-template-rows: 92.6vh 20vh; \n\t\tgrid-template-columns: minmax(0px,0px);\n\t}\n\t.layout-option {\n\t\twidth: 25%;\n\t}\n\t.timeline-bar-progress {\n\t\tbackground: var(--progress-bar, var(--text-selection, rgb(0, 255, 0)));\n\t}\n\t.layout-option input:checked ~ * {\n\t\tcolor:var(--primary-text) !important;\n\t}\n\th1 {\n\t\tfont-weight: bold;\n\t\tfont-size: 14px;\n\t\tline-height: 22px;\n\t\ttext-align: initial;\n\t\tmargin: 0;\n\t}\n\tbutton.closePrompt::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tpointer-events: none;\n\t\tbackground: currentColor;\n\t\tmask-image: var(--close-symbol);\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t\t-webkit-mask-image: var(--close-symbol);\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t}\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 12px;\n\t\tline-height: 22px;\n\t\twhite-space: nowrap;\n\t\tcolor: ${ColorConfig.linkAccent};\n\t}\n\tbutton {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-family: inherit;\n\t}\n\tbutton:hover, button:focus {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\t.playButton, .pauseButton {\n\t\tpadding-left: 24px;\n\t\tpadding-right: 6px;\n\t}\n\t.playButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t.pauseButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t\n\tinput[type=range] {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\theight: 16px;\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\ttouch-action: pan-y;\n\t}\n\tinput[type=range]:focus {\n\t\toutline: none;\n\t}\n\tinput[type=range]::-webkit-slider-runnable-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]::-webkit-slider-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\t-webkit-appearance: none;\n\t\tmargin-top: -6px;\n\t}\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tborder: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n\tinput[type=range]::-ms-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tborder-color: transparent;\n\t}\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-ms-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n`)); ","import { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nexport class SongPlayerLayout {\n    public static layoutLookup: Map<number, SongPlayerLayout> = new Map<number, SongPlayerLayout>();\n    private static readonly _spLayoutMap: {[K: string]: string} = { \n        \"classic\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        \n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        } \n        `,\n        \"top\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'control-center control-center' 'visualizer visualizer'; \n            grid-template-rows: 7.4vh 92.6vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }    \n        `,\n        \"shitbox4\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: skew(30deg,20deg) scale(0.5);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }    \n        `,\n        \"boxbeep\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(-1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        `,\n        \"piano\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        `,\n        \"vertical\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'piano piano' 'control-center control-center'; \n            grid-template-rows: 82.6vh 10vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(0);\n        }\n        `,\n        \"middle\": `\n        .songPlayerContainer {\n            display:grid; \n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \n            grid-template-rows: 92.6vh 7.4vh; \n            grid-template-columns: minmax(0px,0px);\n        }\n        div.visualizer {\n            transform: scale(1);\n            }\n        .timelineContainer {\n            transform: translateX(50vw);\n        }\n        `,\n    }\n\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\n\n    public static setLayout(layout: string): void {\n\t\tthis._styleElement.textContent = this._spLayoutMap[layout];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\nimport { ColorConfig } from \"../editor/ColorConfig\";\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth, Song } from \"../synth/synth\";\nimport \"./style\";\nimport { oscilascopeCanvas } from \"../global/Oscilascope\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongPlayerLayout } from \"./Layout\";\n\n\tconst {a, button, div, h1, input, canvas, form, label,h2} = HTML;\n\tconst {svg, circle, rect, path} = SVG;\n\n\tconst isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\n\tconst colorTheme: string | null = getLocalStorage(\"colorTheme\");\n\tconst setSpLayout: string | null = getLocalStorage(\"spLayout\");\n\tSongPlayerLayout.setLayout(setSpLayout === null ? \"classic\" : setSpLayout);\n\n\tlet prevHash: string | null = null;\n\tlet id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\n\tlet pauseButtonDisplayed: boolean = false;\n\tlet animationRequest: number | null;\n\tlet zoomEnabled: boolean = false;\n\tlet timelineWidth: number = 1;\n\tlet outVolumeHistoricTimer: number = 0;\n\tlet outVolumeHistoricCap: number = 0;\n\n\tconst synth: Synth = new Synth();\n\tconst oscilascope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: isMobile? 144:288, height: isMobile?32:64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;` , id: \"oscilascopeAll\" }), isMobile?1:2);\n\tconst showOscilloscope: boolean = getLocalStorage(\"showOscilloscope\") != \"false\";\n\tif (!showOscilloscope) {\n\t\toscilascope.canvas.style.display = \"none\";\n\t\tsynth.oscEnabled = false;\n\t}\n\n\tconst closePrompt: HTMLButtonElement = button({class:\"closePrompt\",style:\"width: 32px; height: 32px; float: right; position: absolute;top: 8px;right: 8px;\"});\n\tconst _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%; height: 32px;\"}, \"Okay\");\n\n\tconst _form: HTMLFormElement = form({style: \"display: flex; gap: 10px; flex-wrap: wrap; justify-content: center;\"},\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"classic\",style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Classic\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"top\",style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"23\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"16\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\n\t\t\t\t\t\t<rect x=\"2\" y=\"10\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"12\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"14\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Top\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"shitbox4\", style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"3\"  width=\"1\"  height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\t\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\n\t\t\t\t\t\t<rect x=\"2\" y=\"6\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"shitBox4\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"boxbeep\", style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"21\" y=\"5\" width=\"1\" height=\"5\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"BoxBeep\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"piano\", style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t<rect x=\"4\" y=\"3\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"4\" y=\"11\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"4\" y=\"5\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"4\" y=\"7\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"4\" y=\"9\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Music Box\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"vertical\", style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"5\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"8\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"12\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"16\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\t\t\t\t\t<rect x=\"20\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\n\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Vertical\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"middle\", style:\"display:none;\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t<rect x=\"4\" y=\"3\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"13\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"4\" y=\"11\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"4\" y=\"5\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"4\" y=\"7\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"4\" y=\"9\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"15\" y=\"3\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"15\" y=\"11\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"15\" y=\"5\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"15\" y=\"7\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\n\t\t\t\t<rect x=\"15\" y=\"9\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\n\n\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Middle\"),\n\t\t\t),\n\t\t);\n\n\t\tconst layoutContainer: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px; margin: auto;text-align: center;background: var(--editor-background);border-radius: 15px;border: 4px solid var(--ui-widget-background);color: var(--primary-text);padding: 20px;display: flex;flex-direction: column;position: relative;box-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\"},\n\t\t\tdiv({class:\"promptTitle\"}, h2({class:\"layoutExt\",style:\"text-align: inherit;\"}, \"\"), h2({class:\"layoutTitle\"}, \"Layout\")),\n\t\t\t\t_form,\n\t\t\t\tdiv({style: \"margin-top: 1em;\"},\n\t\t\t\t_okayButton,\n\t\t\t\t),\n\t\t\t\tclosePrompt,\n\t\t);\n\n\tlet titleText: HTMLHeadingElement = h1({class:\"songTitle\", style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\n\t\tlet layoutStuffs: HTMLButtonElement = button({class:\"songPlayerLayoutsButton\", style: \"margin: 0 4px; height: 42px; width: 90px;\"}, \"Layouts\");\n\t\tlet editLink: HTMLAnchorElement = a({target: \"_top\", style: \"margin: 0 4px;\"}, \"✎ Edit\");\n\t\tlet copyLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⎘ Copy URL\");\n\t\tlet shareLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⤳ Share\");\n\t\tlet fullscreenLink: HTMLAnchorElement = a({target: \"_top\", class:\"fullscreenLink\", style: \"margin: 0 4px;\"}, \"⇱ Fullscreen\");\n\t\tlet shortenSongLink: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", class:\"shortUrlLink\", style: \"margin: 0 4px;\"}, \"… Shorten URL\");\n\t\t//let hideUrlButton: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", style: \"margin: 0 4px;\"}, \"Hide URL\");\n\n\t\n\n\tlet draggingPlayhead: boolean = false;\n\t\tconst playButton: HTMLButtonElement = button({style: \"width: 100%; height: 100%; max-height: 50px;\"});\n\t\tconst playButtonContainer: HTMLDivElement = div({class: \"playButtonContainer\",style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\"},\n\t\tplayButton,\n\t);\n\t\tconst loopIcon: SVGPathElement = path({d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\"});\n\t\tconst loopButton: HTMLButtonElement = button({title: \"loop\", class:\"spIcon loopIcon\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"}, svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\n\t\tloopIcon,\n\t));\n\t\n\n\t\tconst volumeIcon: SVGSVGElement = svg({class:\"spIcon volumeIcon\", style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\"},\n\t\t\tpath({fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\"}),\n\t);\n\t\t\n\tconst volumeSlider: HTMLInputElement = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\n\t\n\t\tconst zoomIcon: SVGSVGElement = svg({class:\"spIcon zoomIcon\", width: 12, height: 12, viewBox: \"0 0 12 12\"},\n\t\t\tcircle({cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\"}),\n\t\t\tpath({stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\"}),\n\t);\n\t\tconst zoomButton2: HTMLButtonElement = button({title: \"zoom\", style: \"background: #581b3e; width: 100%; height: 100%; display: none;\"}, \"Zoom\");\n\t\tconst zoomButton: HTMLButtonElement = button({title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"},\n\t\tzoomIcon,\n\t\tzoomButton2,\n\t);\n\t\n\t\tconst timeline: SVGSVGElement = svg({class: \"timeline\",style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\"});\n\t\tconst playhead: HTMLDivElement = div({class: \"playhead\",style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;`});\n\t\tconst piano = svg({ style: \"pointer-events: none; display: block; margin: 0 auto;\" });\n\t    const pianoContainer = div({ class: \"piano\", style: \"grid-area: piano;\" }, piano);\n\t\tconst timelineContainer: HTMLDivElement = div({class: \"timelineContainer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\"}, timeline, playhead);\n\t\tconst visualizationContainer: HTMLDivElement = div({class: \"visualizer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative; align-items: center; overflow: hidden; grid-area: visualizer;\"}, timelineContainer);\n\t\tlet noteFlashElementsPerBar: (SVGPathElement[])[];\n\t\tlet currentNoteFlashElements: SVGPathElement[] = [];\n\t\tlet currentNoteFlashBar: number = -1;\n\t\tconst notesFlashWhenPlayed: boolean = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\n\t\n\tconst outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\n\tconst outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\n\tconst outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\n\tconst stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\n\tconst stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\n\tconst stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\n\tconst gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\n\tconst defs: SVGDefsElement = SVG.defs({}, gradient);\n\tconst volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" },\n\t\tdefs,\n\t\toutVolumeBarBg,\n\t\toutVolumeBar,\n\t\toutVolumeCap,\n\t);\n\tconst timelineBarProgress: HTMLDivElement = div({ class:`timeline-bar-progress`, style: `pointer-events: none; overflow: hidden; width: 5%; height: 100%; z-index: 5;`});\n\tconst timelineBar: HTMLDivElement = div({ style:  `overflow: hidden; margin: auto; width: 90%; height: 50%; background: var(--ui-widget-background);`},timelineBarProgress);\n\tconst timelineBarContainer: HTMLDivElement = div({ style: `pointer-events: none; overflow: hidden; margin: auto; width: 160px; height: 10px; `}, timelineBar);\n\tconst volumeBarContainerDiv: HTMLDivElement = div({class:`volBarContainer`, style:\"display:flex; flex-direction:column;\"}, volumeBarContainer, timelineBarContainer);\n\tconst promptContainer: HTMLDivElement = div({class:\"promptContainer\",style:\"display:none; backdrop-filter: saturate(1.5) blur(4px); width: 100%; height: 100%; position: fixed; z-index: 999; display: flex; justify-content: center; align-items: center;\"});\n\tpromptContainer.style.display = \"none\";\n\tconst songPlayerContainer: HTMLDivElement = div({class:\"songPlayerContainer\"});\n\tsongPlayerContainer.appendChild(visualizationContainer);\n\tsongPlayerContainer.appendChild(pianoContainer);\n\tsongPlayerContainer.appendChild(\n\t\t\tdiv({class: \"control-center\",id: \"control-center\",style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center; grid-area: control-center;`},\n\t\t\t\tdiv({class: \"control-center row\",id:\"row1\",style: `display: flex; align-items: center;`},\n\t\t\t\t\tplayButtonContainer,\n\t\t\t\t\tloopButton,\n\t\t\t\t\tvolumeIcon,\n\t\t\t\t\tvolumeSlider,\n\t\t\t\t\tzoomButton,\n\t\t\t\t\tvolumeBarContainerDiv,\n\t\t\t\t\toscilascope.canvas, //make it auto remove itself later\n\t\t\t\t\t),\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row2\",style: `display: flex; align-items: center;`},\n\t\t\t\t\ttitleText,\n\t\t\t\t\tlayoutStuffs,\n\t\t\t\t\teditLink,\n\t\t\t\t\tcopyLink,\n\t\t\t\t\tshareLink,\n\t\t\t\t\tshortenSongLink,\n\t\t\t\t),\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row3\",style: `display: flex; align-items: center;`},\n\t\t\t\t\t),\n\t\t\t),\n\t);\n\tdocument.body.appendChild(songPlayerContainer);\n\tsongPlayerContainer.appendChild(promptContainer);\n\tpromptContainer.appendChild(layoutContainer);\n\t\n\tif (isMobile) {\n\t\tconst controlCenterId = document.getElementById('control-center');\n\t\tconst controlCenterRow3 = document.getElementById('row3');\n\t\toscilascope.canvas.style.display = 'none';\n\t\tcopyLink.style.display = \"none\";\n\t\tcontrolCenterId!.style.flexDirection = \"column\";\n\t\tlayoutStuffs.style.height = \"24px\";\n\t\tzoomButton2.style.display = \"unset\";\n\t\tzoomIcon.style.display = \"none\";\n\t\tzoomButton.style.width = \"48px\";\n\t\tzoomButton.style.height = \"19px\";\n\t\tzoomButton.style.flex = \"unset\";\n\t\tcontrolCenterRow3?.appendChild(titleText);\n\t} else {\n\t\tconst controlCenterId = document.getElementById('control-center');\n\t\tconst controlCenterRow1 = document.getElementById('row1');\n\t\tconst controlCenterRow3 = document.getElementById('row3');\n\t\tcontrolCenterId!.style.alignItems = \"unset\";\n\t\tcontrolCenterId!.style.justifyContent = \"space-between\";\n\t\tcontrolCenterRow1?.appendChild(titleText);\n\t\tcontrolCenterRow3!.style.display = \"none\";\n\t}\n\n\t// Some browsers have an option to \"block third-party cookies\" (it's enabled by\n\t// default in icognito Chrome windows) that throws an error on trying to access\n\t// localStorage from cross-domain iframe such as this song player, so wrap the\n\t// access in a try-catch block to ignore the error instead of interrupting\n\t// execution.\n\tfunction setLocalStorage(key: string, value: string): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem(key, value);\n\t\t} catch (error) {\n\t\t\t// Ignore the error since we can't fix it.\n\t\t}\n\t}\n\tfunction getLocalStorage(key: string): string | null {\n\t\ttry {\n\t\t\treturn localStorage.getItem(key);\n\t\t} catch (error) {\n\t\t\t// Ignore the error since we can't fix it.\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tfunction removeFromUnorderedArray<T>(array: T[], index: number): void {\n\t\tif (array.length < 1) {\n\t\t\t// Don't need to do anything when `array` is empty.\n\t\t\treturn;\n\t\t}\n\t\tif (index === array.length - 1) {\n\t\t\t// Trivial case.\n\t\t\tarray.pop();\n\t\t} else if (index >= 0 && index < array.length - 1) {\n\t\t\t// The idea here is that we want to remove an element from the array\n\t\t\t// quickly, and the fastest way to do that is to use `array.pop()`. As\n\t\t\t// the name of this function says, we assume `array` to be unordered,\n\t\t\t// so this trick is okay to do.\n\t\t\tconst lastElement: T = array.pop()!;\n\t\t\tarray[index] = lastElement;\n\t\t}\n\t}\n\n\tfunction loadSong(songString: string, reuseParams: boolean): void {\n\t\tsynth.setSong(songString);\n\t\tsynth.snapToStart();\n\t\tconst updatedSongString: string = synth.song!.toBase64String();\n\t\teditLink.href = \"../#\" + updatedSongString;\n\t\t//@jummbus - these lines convert old url vers loaded into the player to the new url ver. The problem is, if special chars are included,\n\t\t// they appear to get double-encoded (e.g. the '%' in %20 is encoded again), which breaks the link. Disabled for now until I have a chance\n\t\t// to look into it more.\n\t\t//const hashQueryParams = new URLSearchParams(reuseParams ? location.hash.slice(1) : \"\");\n\t\t//hashQueryParams.set(\"song\", updatedSongString);\n\t\t//location.hash = hashQueryParams.toString();\n\t}\n\t\n\tfunction hashUpdatedExternally(): void {\n\t\tlet myHash: string = location.hash;\n\t\tif (prevHash == myHash || myHash == \"\") return;\n\t\t\t\n\t\tprevHash = myHash;\n\t\t\t\n\t\tif (myHash.charAt(0) == \"#\") {\n\t\t\tmyHash = myHash.substring(1);\n\t\t}\n\t\t\t\n\t\t\n\t\tfullscreenLink.href = location.href;\n\t\t\t\n\t\t\t// @TODO: This can be moved back into splitting merely on & once samples\n\t\t\t// are reworked so that the URLs don't clash with the overall URL syntax\n\t\t\t// that's assumed to be respected here (and probably elsewhere...)\n\t\tfor (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\n\t\t\tlet equalsIndex: number = parameter.indexOf(\"=\");\n\t\t\tif (equalsIndex != -1) {\n\t\t\t\tlet paramName: string = parameter.substring(0, equalsIndex);\n\t\t\t\tlet value: string = parameter.substring(equalsIndex + 1);\n\t\t\t\tswitch (paramName) {\n\t\t\t\t\tcase \"song\":\n\t\t\t\t\t\tloadSong(value, true);\n\t\t\t\t\t\tif (synth.song) {\n\t\t\t\t\t\t\ttitleText.textContent = synth.song.title;\n\t\t\t\t\t\t\tif (synth.song != null) {\n\t\t\t\t\t\t\t\tif (synth.song.setSongTheme != null) {\n\t\t\t\t\t\t\t\tif (synth.song?.setSongTheme == \"none\") {\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); } else {\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(synth.song.setSongTheme);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case \"title\":\n\t\t\t\t\t//\ttitleText.textContent = decodeURIComponent(value);\n\t\t\t\t\t//\tbreak;\n\t\t\t\t\tcase \"loop\":\n\t\t\t\t\t\tsynth.loopRepeatCount = (value != \"1\") ? 0 : -1;\n\t\t\t\t\t\trenderLoopIcon();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloadSong(myHash, false);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\trenderTimeline();\n\t}\n\t\n\tfunction onWindowResize(): void {\n\t\tpiano.style.width = \"0\";\n\t\trenderTimeline();\n\t}\n\n\tfunction shortenSongPlayerUrl(): void {\n\t\tlet shortenerStrategy: string = \"https://tinyurl.com/api-create.php?url=\";\n\t\twindow.open(shortenerStrategy + encodeURIComponent(new URL(\"#song=\" + synth.song!.toBase64String(), location.href).href));\n\t}\n\t\n\tlet pauseIfAnotherPlayerStartsHandle: ReturnType<typeof setInterval> | null = null;\n\tfunction pauseIfAnotherPlayerStarts(): void {\n\t\tif (!synth.playing) {\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t\treturn;\n\t\t}\n\t\n\t\tconst storedPlayerId: string | null = getLocalStorage(\"playerId\");\n\t\tif (storedPlayerId != null && storedPlayerId != id) {\n\t\t\tonTogglePlay();\n\t\t\trenderPlayhead();\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t}\n\t}\n\t\n\tfunction animate(): void {\n\t\tif (synth.playing) {\n\t\t\tanimationRequest = requestAnimationFrame(animate);\n\t\t\trenderPlayhead();\n\t\n\t\t\tvolumeUpdate();\n\t\t}\n\t\tif (pauseButtonDisplayed != synth.playing) {\n\t\t\trenderPlayButton();\n\t\t}\n\t\n\t}\n\t\n\tfunction volumeUpdate(): void {\n\t\tif (synth.song == null) {\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\n\t\t\treturn;\n\t}\n\t\toutVolumeHistoricTimer--;\n\t\tif (outVolumeHistoricTimer <= 0) {\n\t\t\toutVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (synth.song.outVolumeCap > outVolumeHistoricCap) {\n\t\t\toutVolumeHistoricCap = synth.song.outVolumeCap;\n\t\t\toutVolumeHistoricTimer = 50;\n\t\t}\n\t\n\t\tanimateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\n\t\n\t\tif (!synth.playing) {\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\n\t\t}\n\t}\n\t\n\tfunction animateVolume(useOutVolumeCap: number, historicOutCap: number): void {\n\t\toutVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\n\t\toutVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n\t}\n\n\tfunction onTogglePlay(): void {\n\t\tif (synth.song != null) {\n\t\t\tif (animationRequest != null) cancelAnimationFrame(animationRequest);\n\t\t\tanimationRequest = null;\n\t\t\tif (synth.playing) {\n\t\t\t\tsynth.pause();\n\t\t\t\tvolumeUpdate();\n\t\t\t} else {\n\t\t\t\tsynth.play();\n\t\t\t\tsetLocalStorage(\"playerId\", id);\n\t\t\t\tanimate();\n\t\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t\t\tpauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\n\t\t\t}\n\t\t}\n\t\trenderPlayButton();\n\t}\n\t\n\t\t\t// I know you're blind so I'll put comments before and after these events so you can easily spot them later. No you don't need to thank me :eeheehee:\n\n\tfunction onLayoutButton(): void {\n\t\tpromptContainer.style.display = \"flex\";\n\t}\n\n\tfunction onExitButton(): void {\n\t\tpromptContainer.style.display = \"none\";\n\t}\n\t\n\tfunction onLayoutPicked(): void {\n\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\n\t\tpromptContainer.style.display = \"none\";\n\t\twindow.localStorage.setItem(\"spLayout\", (<any> _form.elements)[\"spLayout\"].value);\n\t\trenderTimeline();\n\t}\n\n\t\t// The end of the layout event code.\n\n\tfunction onToggleLoop(): void {\n\t\tif (synth.loopRepeatCount == -1) {\n\t\t\tsynth.loopRepeatCount = 0;\n\t\t} else {\n\t\t\tsynth.loopRepeatCount = -1;\n\t\t}\n\t\trenderLoopIcon();\n\t}\n\t\n\tfunction onVolumeChange(): void {\n\t\tsetLocalStorage(\"volume\", volumeSlider.value);\n\t\tsetSynthVolume();\n\t}\n\t\n\tfunction onToggleZoom(): void {\n\t\tzoomEnabled = !zoomEnabled;\n\t\trenderZoomIcon();\n\t\trenderTimeline();\n\t}\n\t\n\tfunction onTimelineMouseDown(event: MouseEvent): void {\n\t\tdraggingPlayhead = true;\n\t\tonTimelineMouseMove(event);\n\t}\n\t\n\tfunction onTimelineMouseMove(event: MouseEvent): void {\n\t\tif (!draggingPlayhead) return;\n\t\tevent.preventDefault();\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\t\tif (useVertical) {\n\t\tonTimelineCursorMove(event.clientY || event.pageY); \n\t\t} else {\n\t\tonTimelineCursorMove(event.clientX || event.pageX);\t\n\t\t}\n\t}\n\t\n\tfunction onTimelineTouchDown(event: TouchEvent): void {\n\t\tdraggingPlayhead = true;\n\t\tonTimelineTouchMove(event);\n\t}\n\t\n\tfunction onTimelineTouchMove(event: TouchEvent): void {\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\t\tif (useVertical) {\n\t\tonTimelineCursorMove(event.touches[0].clientY); }\n\t\telse {\n\t\tonTimelineCursorMove(event.touches[0].clientX); }\n\t}\n\t\n\tfunction onTimelineCursorMove(mouseX: number): void {\n\t\tif (draggingPlayhead && synth.song != null) {\n\t\t\t\n\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\n\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\t\t\tconst useBoxBeep = ((<any> _form.elements)[\"spLayout\"].value == \"boxbeep\") || (window.localStorage.getItem(\"spLayout\") == \"boxbeep\");\n\t\t\tif (!useVertical && !useBoxBeep) {\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left); \n\t\t\t} else if (useVertical) {\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.bottom) / (boundingRect.top - boundingRect.bottom);\t\n\t\t\t} else if (useBoxBeep) {\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.right) / (boundingRect.left - boundingRect.right);\t\n\t\t\t}\n\t\t\tsynth.computeLatestModValues();\n\t\t\trenderPlayhead();\n\t\t}\n\t}\n\t\n\tfunction onTimelineCursorUp(): void {\n\t\tdraggingPlayhead = false;\n\t}\n\t\n\tfunction setSynthVolume(): void {\n\t\tconst volume: number = +volumeSlider.value;\n\t\tsynth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\n\t}\n\t\n\tfunction renderPlayhead(): void {\n\n\t\t\tconst maxPer = 144;\n\n\t\t\tif (synth.song != null) {\n\t\t\t\tlet pos: number = synth.playhead / synth.song.barCount;\n\n\t\t\t\ttimelineBarProgress.style.width = Math.round((maxPer*pos/maxPer)*100)+\"%\";\n\n\t\t\t\tconst usePiano = ((<any> _form.elements)[\"spLayout\"].value == \"piano\") || (window.localStorage.getItem(\"spLayout\") == \"piano\");\n\t\t\t\tconst useMiddle = ((<any> _form.elements)[\"spLayout\"].value == \"middle\") || (window.localStorage.getItem(\"spLayout\") == \"middle\");\n\t\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\t\t\t\tif (usePiano) {\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\n\t\t\t\t} else if (useMiddle) {\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\n\t\t\t\t} else if (useVertical) {\n\t\t\t\t\tconst boundingRect = visualizationContainer.getBoundingClientRect();\n                \tconst o = boundingRect.height / 2;\n                 \tplayhead.style.left = (timelineWidth * pos) + \"px\";\n                \ttimelineContainer.style.bottom = \"-\" + (timelineWidth * pos) + \"px\";\n\t               \ttimelineContainer.style.top = (timelineWidth * pos + o) + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \n\t\t\t\t\ttimelineContainer.style.left = \"0\";\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\n\t\t\t\t\t\n\t\t\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\n\t\t\t\t\t\tvisualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width); \n\t\t\t\t}\n\n\n\t\t\t\t// this is note flash shit so don't worry bout it\n\t\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\t\tconst playheadBar: number = Math.floor(synth.playhead);\n\t\t\t\t\tconst modPlayhead: number = synth.playhead - playheadBar;\n\t\t\t\t\tconst partsPerBar: number = synth.song.beatsPerBar * Config.partsPerBeat;\n\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[playheadBar];\n\t\t\n\t\t\t\t\tif (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\n\t\t\t\t\t\tfor (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\n\t\t\t\t\t\t\tconst outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\n\t\t\t\t\t\t\tconst isInvisible: boolean = element.style.opacity === \"0\";\n\t\t\t\t\t\t\tif (outsideOfCurrentBar && isInvisible) {\n\t\t\t\t\t\t\t\tremoveFromUnorderedArray(currentNoteFlashElements, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\n\t\t\t\t\t\t\tvar element: SVGPathElement = noteFlashElementsForThisBar[i];\n\t\t\t\t\t\t\tcurrentNoteFlashElements.push(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst kc = piano.children.length;\n\t\t\t\t\t\tfor (let i = 0; i < kc; i++) {\n\t\t\t\t\t\t\tconst k = piano.children[i];\n\t\t\t\t\t\t\tconst kf = k.getAttribute(\"original-fill\");\n\t\t\t\t\t\t\tk.setAttribute(\"fill\", kf!);\n\t\t\t\t\t\t}\n\t\t\t\t\tif (currentNoteFlashElements != null) {\n\t\t\t\t\t\tfor (var i = 0; i < currentNoteFlashElements.length; i++) {\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\n\t\t\t\t\t\t\tconst noteStart: number = Number(element.getAttribute(\"note-start\")) / partsPerBar;\n\t\t\t\t\t\t\tconst noteEnd: number = Number(element.getAttribute(\"note-end\")) / partsPerBar;\n\t\t\t\t\t\t\tconst noteBar: number = Number(element.getAttribute(\"note-bar\"));const p = Number(element.getAttribute(\"note-pitch\"));\n\t\t\t\t\t\t\tconst isNoise = element.getAttribute(\"note-noise\") === \"true\";\n\t\t\t\t\t\t\tconst k = piano.children[p];\n\t\t\t\t\t\t\t//const kf = k?.getAttribute(\"original-fill\");\n\t\t\t\t\t\t\tconst kf2 = element.getAttribute(\"note-color\")\n\t\t\t\t\t\t\tif ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\n\t\t\t\t\t\t\t\tconst dist: number = noteEnd - noteStart;\n\t\t\t\t\t\t\t\tconst opacity = (1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2)));\n\t                            element.style.opacity = String(opacity);\n                            if (!isNoise) if (opacity > 0.05) k?.setAttribute(\"fill\", kf2!);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telement.style.opacity = \"0\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcurrentNoteFlashBar = playheadBar;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tfunction renderTimeline(): void {\n\t\ttimeline.innerHTML = \"\";\n\t\tif (synth.song == null) return;\n\t\t\n\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\n\t\t\t\n\t\tlet timelineHeight: number;\n\t\tlet windowOctaves: number;\n\t\tlet windowPitchCount: number;\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\n\n\t\t\t\tif (zoomEnabled) {\n\t\t\t\t\ttimelineHeight = useVertical ? boundingRect.width : boundingRect.height;\n\t\t\t\t\twindowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\n\t\t\t\t\tconst semitoneHeight: number = (timelineHeight - 1) / windowPitchCount;\n\t\t\t\t\tconst targetBeatWidth: number = Math.max(8, semitoneHeight * 4);\n\t\t\t\t\ttimelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\n\t\t\t\t\tif (useVertical) {\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineHeight / 2}px) scaleY(-1)`; \n\t\t\t\t\t\tpianoContainer.style.display = \"unset\";\n\t\t\t\t\t\tif (!isMobile) {\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\"; }\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 0vh 7.4vh\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelineContainer.style.left = \"0px\";\n\t\t\t\t\t } else {\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\n\t\t\t\t\t\tpianoContainer.style.display = \"none\";\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\";\n\t\t\t\t\t }\n\t\t\t\t} else {\n\t\t\t\t\tpianoContainer.style.display = \"none\";\n\t\t\t\t\ttimelineWidth = boundingRect.width;\n\t\t\t\t\tconst targetSemitoneHeight: number = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\n\t\t\t\t\ttimelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\n\t\t\t\t\twindowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\n\t\t\t\t\tif (useVertical) {\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineWidth / 2}px) scaleY(-1)`;\n\t\t\t\t\t\tif (isMobile) {\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 0vh 7.4vh\"; }\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"92.6vh 0vh 7.4vh\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttimelineContainer.style.left = \"0px\";\n\t\t\t\t\t } else {\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\";\n\t\t\t\t\t }\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\ttimelineContainer.style.width = timelineWidth + \"px\";\n\t\t\t\ttimelineContainer.style.height = timelineHeight + \"px\";\n\t\t\t\ttimeline.style.width = timelineWidth + \"px\";\n\t\t\t\ttimeline.style.height = timelineHeight + \"px\";\n\t\t\t\t\t\n\t\t\t\tconst barWidth: number = timelineWidth / synth.song.barCount;\n\t\t\t\tconst partWidth: number = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\n\t\t\t\n\t\t\t\t\tconst wavePitchHeight: number = (timelineHeight-1) / windowPitchCount;\n\t\t\t\t\tconst drumPitchHeight: number =  (timelineHeight-1) / Config.drumCount;\n\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount + 1; bar++) {\n\t\t\t\t\tconst color: string = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\n\t\t\t\t\t\ttimeline.appendChild(rect({x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color}));\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tfor (let octave: number = 0; octave <= windowOctaves; octave++) {\n\t\t\t\t\ttimeline.appendChild(rect({x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75}));\n\t\t\t\t} \n\t\t\t\t// note flash colors\n\t\t\tlet noteFlashColor: string = \"#ffffff\";\n\t\t\tlet noteFlashColorSecondary: string = \"#ffffff77\";\n\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\tnoteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff\";\n\t\t\t\tnoteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\n\t\t\t}\n\n\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\tnoteFlashElementsPerBar = [];\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\n\t\t\t\t\tnoteFlashElementsPerBar.push([]);\n\t\t\t\t}\n\t\t\t\tcurrentNoteFlashBar = -1;\n\t\t\t}\n\n\t\t\tfor (let channel: number = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\n\n\t\t\t\tconst isNoise: boolean = synth.song.getChannelIsNoise(channel);\n\t\t\t\tconst pitchHeight: number = isNoise ? drumPitchHeight : wavePitchHeight;\n\t\t\t\t\t\n\t\t\t\tconst configuredOctaveScroll: number = synth.song.channels[channel].octave;\n\t\t\t\tconst newOctaveScroll: number = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\n\t\t\t\t\t\n\t\t\t\tconst offsetY: number = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\n\t\t\t\t\n\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\n\t\t\t\t\tconst pattern: Pattern | null = synth.song.getPattern(channel, bar);\n\t\t\t\t\tif (pattern == null) continue;\n\t\t\t\t\tconst offsetX: number = bar * barWidth;\n\t\t\t\t\t\t\n\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\t\t\t\tconst note: Note = pattern.notes[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\n\t\t\t\t\t\t\tconst d: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n\t\t\t\t\t\t\t\tconst noteElement: SVGPathElement = path({d: d, fill: ColorConfig.getChannelColor(synth.song, channel).primaryChannel});\n\t\t\t\t\t\t\tif (isNoise) noteElement.style.opacity = String(0.6);\n\t\t\t\t\t\t\ttimeline.appendChild(noteElement);\n\n\t\t\t\t\t\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\t\t\t\t\tconst dflash: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n\t\t\t\t\t\t\t\t//const noteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\n\t\t\t\t\t\t\t\t//const noteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff77\";\n\t\t\t\t\t\t\t\tconst noteFlashElement: SVGPathElement = path({d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor)});\n\t\t\t\t\t\t\t\tnoteFlashElement.style.opacity = \"0\";\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-start', String(note.start));\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-end', String(\n\t\t\t\t\t\t\t\t\tnote.end\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-pitch', String(pitch));\n\t                           \tnoteFlashElement.setAttribute('note-noise', String(isNoise));\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-bar', String(bar));\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-color', String(noteElement.getAttribute(\"fill\")));\n\t\t\t\t\t\t\t\ttimeline.appendChild(noteFlashElement);\n\t\t\t\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[bar];\n\t\t\t\t\t\t\t\tnoteFlashElementsForThisBar.push(noteFlashElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst useClassic = ((<any> _form.elements)[\"spLayout\"].value == \"classic\") || (window.localStorage.getItem(\"spLayout\") == \"classic\");\n\t\t\t\tconst useTop = ((<any> _form.elements)[\"spLayout\"].value == \"top\") || (window.localStorage.getItem(\"spLayout\") == \"top\");\n\t\t\t\tconst useShitbox4 = ((<any> _form.elements)[\"spLayout\"].value == \"shitbox4\") || (window.localStorage.getItem(\"spLayout\") == \"shitbox4\");\n\t\t\t\tconst useBoxBeep = ((<any> _form.elements)[\"spLayout\"].value == \"boxbeep\") || (window.localStorage.getItem(\"spLayout\") == \"boxbeep\");\n\t\t\t\tconst useMusicbox = ((<any> _form.elements)[\"spLayout\"].value == \"piano\") || (window.localStorage.getItem(\"spLayout\") == \"piano\");\n\t\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\n\t\t\t\tconst useMiddle = ((<any> _form.elements)[\"spLayout\"].value == \"middle\") || (window.localStorage.getItem(\"spLayout\") == \"middle\");\n\t\t\t\n\t\t\t\tif (isMobile) { \n\t\t\t\t\tif (useClassic || useBoxBeep || useShitbox4 || useMusicbox || useMiddle) {\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 7.4vh\";\n\t\t\t\t\t} else if (useTop) {\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"7.4vh 78vh\";\n\t\t\t\t\t} else if (!useClassic && !useBoxBeep && !useShitbox4 && !useMusicbox && !useMiddle && !useVertical) {\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 7.4vh\";\n\t\t\t\t\t} \n\t\t\t\t} \n\n\t}\n\t\n\t\trenderPlayhead();\n\t\tconst pianoContainerBoundingRect = pianoContainer.getBoundingClientRect();\n\t\trenderPiano(piano, timelineHeight, pianoContainerBoundingRect.height, windowOctaves, synth.song);\n\t}\n\t\n\tfunction drawNote(pitch: number, start: number, pins: NotePin[], radius: number, offsetX: number, offsetY: number, partWidth: number, pitchHeight: number): string {\n\t\tlet d: string = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `; \n\t\tfor (let i: number = 0; i < pins.length; i++) {\n\t\t\tconst pin: NotePin = pins[i];\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\n\t\t\td += `L ${x} ${y - radius * expression} `;\n\t\t}\n\t\tfor (let i: number = pins.length - 1; i >= 0; i--) {\n\t\t\tconst pin: NotePin = pins[i];\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\n\t\t\td += `L ${x} ${y + radius * expression} `;\n\t\t}\n\t\treturn d;\n\t}\n\t\n\tfunction renderPiano(element: SVGSVGElement, width: number, height: number, octaves: number, song: Song): void {\n\t\tif (song == null) return;\n\t\telement.innerHTML = \"\";\n\t\telement.style.width = width + \"px\";\n\t\telement.style.height = height + \"px\";\n\t\tconst kc = octaves * 12 + 1;\n\t\tconst kw = width / kc;\n\t\tconst kh = height;\n\t\tfor (let i = 0; i < kc; i++) {\n\t\t\tconst pitchNameIndex = (i + Config.keys[song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\tconst isWhiteKey = Config.keys[pitchNameIndex].isWhiteKey;\n\t\t\tconst color = isWhiteKey ? \"white\" : \"black\";\n\t\t\telement.appendChild(rect({\n\t\t\t\tx: i / kc * width,\n\t\t\t\ty: 0,\n\t\t\t\twidth: kw,\n\t\t\t\theight: kh,\n\t\t\t\tstroke: \"rgba(0, 0, 0, 0.5)\",\n\t\t\t\t\"stroke-width\": 2,\n\t\t\t\t\"original-fill\": color,\n\t\t\t\tfill: color,\n\t\t\t}));\n\t\t}\n\t}\n\n\tfunction renderPlayButton(): void {\n\t\tif (synth.playing) {\n\t\t\tplayButton.classList.remove(\"playButton\");\n\t\t\tplayButton.classList.add(\"pauseButton\");\n\t\t\tplayButton.title = \"Pause (Space)\";\n\t\t\tplayButton.textContent = \"Pause\";\n\t\t} else {\n\t\t\tplayButton.classList.remove(\"pauseButton\");\n\t\t\tplayButton.classList.add(\"playButton\");\n\t\t\tplayButton.title = \"Play (Space)\";\n\t\t\tplayButton.textContent = \"Play\";\n\t\t}\n\t\tpauseButtonDisplayed = synth.playing;\n\t}\n\t\n\tfunction renderLoopIcon(): void {\n\t\tloopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\n\t}\n\t\n\tfunction renderZoomIcon(): void {\n\t\tzoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\n\t}\n\t\n\tfunction onKeyPressed(event: KeyboardEvent): void {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 70: // first bar\n\t\t\t\tsynth.playhead = 0;\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 32: // space\n\t\t\t\tonTogglePlay();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 219: // left brace\n\t\t\t\tsynth.goToPrevBar();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\trenderPlayhead();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 221: // right brace\n\t\t\t\tsynth.goToNextBar();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\trenderPlayhead();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\t\tcase 80: // p\n\t\t\tif (event.shiftKey) {\n\t\t\t\thashUpdatedExternally();\n\t\t\t\tlocation.href =\"../#\" + synth.song!.toBase64String();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tbreak;\t\n\t\t}\n\t}\n\t\n\tfunction onCopyClicked(): void {\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\n\t\tlet nav: any;\n\t\tnav = navigator;\n\t\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\n\t\t\tnav.clipboard.writeText(location.href).catch(() => {\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", location.href);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n\t\ttextField.textContent = location.href;\n\t\tdocument.body.appendChild(textField);\n\t\ttextField.select();\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\n\t\ttextField.remove();\n\t\tif (!succeeded) window.prompt(\"Copy this:\", location.href);\n\t}\n\t\n\tfunction onShareClicked(): void {\n\t\t(<any>navigator).share({ url: location.href });\n\t}\n\t\n\t\tif ( top !== self ) {\n\t\t// In an iframe.\n\t\tcopyLink.style.display = \"none\";\n\t\tshareLink.style.display = \"none\";\n\t} else {\n\t\t// Fullscreen.\n\t\tfullscreenLink.style.display = \"none\";\n\t\tif (!(\"share\" in navigator)) shareLink.style.display = \"none\";\n\t}\n\t\n\tif (getLocalStorage(\"volume\") != null) {\n\t\tvolumeSlider.value = getLocalStorage(\"volume\")!;\n\t}\n\tsetSynthVolume();\n\t\n\twindow.addEventListener(\"resize\", onWindowResize);\n\twindow.addEventListener(\"keydown\", onKeyPressed);\n\t\n\ttimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\n\twindow.addEventListener(\"mousemove\", onTimelineMouseMove);\n\twindow.addEventListener(\"mouseup\", onTimelineCursorUp);\n\ttimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\n\ttimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\n\ttimeline.addEventListener(\"touchend\", onTimelineCursorUp);\n\ttimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\n\n\tdocument.addEventListener('visibilitychange', e=>{\n\t\tif (document.visibilityState === 'visible') {\n\t\t\tif (getLocalStorage(\"spLayout\") != (<any> _form.elements)[\"spLayout\"].value) {\n\t\t\t\t(<any> _form.elements)[\"spLayout\"].value = getLocalStorage(\"spLayout\");\n\t\t\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\n\t\t\t\trenderTimeline();\n\t\t\t}\n\t   } else {\n\t   }  \n   })\n\n\tlayoutStuffs.addEventListener(\"click\", onLayoutButton);\n\tclosePrompt.addEventListener(\"click\", onExitButton);\n\t_okayButton.addEventListener(\"click\", onLayoutPicked);\n\tplayButton.addEventListener(\"click\", onTogglePlay);\n\tloopButton.addEventListener(\"click\", onToggleLoop);\n\tvolumeSlider.addEventListener(\"input\", onVolumeChange);\n\tzoomButton.addEventListener(\"click\", onToggleZoom);\n\tcopyLink.addEventListener(\"click\", onCopyClicked);\n\tshareLink.addEventListener(\"click\", onShareClicked);\n\twindow.addEventListener(\"hashchange\", hashUpdatedExternally);\n\tshortenSongLink.addEventListener(\"click\", shortenSongPlayerUrl);\n\t\n\thashUpdatedExternally();\n\trenderLoopIcon();\n\trenderZoomIcon();\n\trenderPlayButton();\n\n\n\n\t// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\n\t\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth};","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\n\nexport class oscilascopeCanvas {\n    public _EventUpdateCanvas:Function;\n\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\n            if(directlinkR) {\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-L\") : ColorConfig.getComputed(\"--primary-text\");\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-R\") : ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n                    \n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n            }\n        };\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\n    }\n\n    \n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;wTAiFO,MAAMA,EAAqC,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,cAAe,gBAAiB,WAAY,gBAAiB,MAAO,aAsQ3K,MAAMC,EAAyC,I,MARlD,WAAAC,GACHC,KAAKC,YAAc,GACnBD,KAAKE,SAAW,GAChBF,KAAKG,aAAe,EACpBH,KAAKI,cAAgB,C,GAMhB,MAAOC,UAA0BC,MAKnC,WAAAP,CAAYI,EAAsBC,EAAuBG,GAC5DC,MAAM,gBACNR,KAAKG,aAAeA,EACpBH,KAAKI,cAAgBA,EAClBJ,KAAKO,cAAgBA,C,EAQnB,MAAOE,UAAyBC,YAClC,WAAAX,GACHS,O,EAIM,MAAMG,EAAqC,IAAIF,EAEhD,SAAgBG,EAAmBC,EAAaC,EAAuBC,EAAiCC,EAAqBC,G,yCAQ/H,MAAMC,EAA2B,IAAIC,aAAa,CAAEC,WAAYH,IAChE,IAAII,GAA0C,EAC9C,MAAMC,EAAWC,EAAOC,UAAUV,GAC5BW,EAAcF,EAAOG,aAAaZ,GAClCa,EAAiBJ,EAAOK,gBAAgBd,GAQ9Ce,MAAMhB,GAAKiB,MAAMC,GACfA,EAASC,GAKPD,EAASE,eAHZnC,EAAmBG,YAAYa,GAAc,EACtCoB,QAAQC,OAAO,IAAIC,MAAM,4BAG9BN,MAAMG,GACLf,EAAyBmB,gBAAgBJ,KAC1CH,MAAMQ,IAEZ,MAAMC,EAAUC,EAAWC,MAAMC,KAAKJ,EAAYK,eAAe,KAC3DC,EAAoBC,EAAgBN,GAC1CjB,EAASiB,QAAUK,EACnBnB,EAAYc,QAAUA,EACtBZ,EAAeY,QAAUA,EACrBvB,EAA4C,8BAC5CD,EAAkC,kBAA2C,MAAvCC,EAAkC,kBAAYA,EAAkC,kBAAI,EAC1HD,EAAgC,gBAAyC,MAArCC,EAAgC,gBAAYA,EAAgC,gBAAIuB,EAAQO,OAAS,EACrI/B,EAAiC,iBAA0C,MAAtCC,EAAiC,iBAAYA,EAAiC,iBAAI,EACvHD,EAAsC,sBAAIC,EAAsC,sBAChFD,EAAoC,oBAA6C,MAAzCC,EAAoC,oBAAYA,EAAoC,oBAAI,GAEpIlB,EAAmBM,gBACnBN,EAAmBG,YAAYa,GAAc,EAC7CH,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACnBN,EAAmBS,gBAElBc,IACDA,GAAiC,EACjCH,EAAyB8B,QAC5B,IACKC,OAAOC,IAEbpD,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBS,gBAChB4C,QAAQD,MAAM,kBAAoBrC,EAAM,MAAQqC,GAChDvC,EAAiBoC,cAAc,IAAI1C,EAClCP,EAAmBK,aACnBL,EAAmBM,cACnBN,EAAmBS,gBAElBc,IACDA,GAAiC,EACjCH,EAAyB8B,QAC5B,G,GAED,CAuGD,SAASI,EAAWvC,GAehB,OAd8B,IAAIqB,SAAQ,CAACmB,EAASlB,KACvD,IAAKZ,EAAO+B,2BAA4B,CACpC,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM7C,EACb2C,SAASG,KAAKC,YAAYL,GAC1BA,EAAOM,iBAAiB,QAASC,IACpCT,GAAS,GAET,IAOF,CAEM,SAAUU,EAAmBC,GAC/B,MACMC,EAAyC1C,EAAOC,UADzB,GACiDe,QACxE2B,EAA+B3C,EAAOK,gBAFf,GAE6CW,QAE1E,GAAW,GAAPyB,EAAU,CAEjB,MAAMxC,EAAY,CACd,CAAE2C,KAAM,oBAAqBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACtG,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACvG,CAAEJ,KAAM,sBAAuBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACzG,CAAEJ,KAAM,mBAAoBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACtG,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KAC1G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAC7G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KAC/G,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KACnH,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzG,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GAC1G,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACzG,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,KACnH,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACzG,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,8BAA+BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAClH,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7G,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACpH,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACnH,CAAEJ,KAAM,oBAAqBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,IACvG,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,GAC/G,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC/G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC7G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC5G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC9G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC7G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC/G,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACjH,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC9G,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC9G,CAAEJ,KAAM,uCAAwCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC3H,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACjH,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACpH,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACnH,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC9G,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzG,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC9G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC7G,CAAEJ,KAAM,wBAAyBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC5G,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7G,CAAEJ,KAAM,mCAAoCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACvH,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC5H,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACtH,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC5H,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACrH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC9G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC9G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC3H,CAAEJ,KAAM,yCAA0CC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC5H,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAClH,CAAEJ,KAAM,8BAA+BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACjH,CAAEJ,KAAM,qCAAsCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IACxH,CAAEJ,KAAM,0CAA2CC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7H,CAAEJ,KAAM,mCAAoCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACtH,CAAEJ,KAAM,uCAAwCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC1H,CAAEJ,KAAM,oCAAqCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IACvH,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC/G,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACrH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,KAGlHzE,EAAmBK,cAAgBqB,EAAUsB,OAI7C,MAAM0B,EAAqBjD,EAAOK,gBAAgBkB,OAClD,IAAK,MAAMxB,KAAYE,EAAW,CAC9B,MAAMV,EAAwBS,EAAOK,gBAAgBkB,OAC/CrB,EAAc,CAAEgD,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GACxNvC,EAAiB,CAAE8C,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GAC3NQ,EAAqB,CAAED,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS0B,GACrO1C,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB+C,WAAWrD,EAAS6C,MAAQxC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAaiD,WAAWrD,EAAS6C,MAAQ1C,EAChDF,EAAOC,UAAUV,GAAiB4D,EAClCnD,EAAOC,UAAUmD,WAAWrD,EAAS6C,MAAQ1C,EAC7C3B,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBI,SAASY,GAAiB,eAChD,CAEDsC,EAAW,cACVtB,MAAK,IAAMsB,EAAW,iBACtBtB,MAAK,IAAMsB,EAAW,iBACtBtB,MAAK,IAAMsB,EAAW,oBACtBtB,MAAK,IAAMsB,EAAW,sBACtBtB,MAAK,IAAMsB,EAAW,sBACtBtB,MAAK,KAGF,MAAM8C,EAAkC,CAC3CpC,EAAWqC,YACXrC,EAAWsC,aACXtC,EAAWuC,aACXvC,EAAWwC,WACXxC,EAAWyC,iBACXzC,EAAW0C,eACX1C,EAAW2C,iBACX3C,EAAW4C,eACX5C,EAAW6C,uBACX7C,EAAW8C,aACX9C,EAAW+C,mBACX/C,EAAWgD,cACXhD,EAAWiD,aACXjD,EAAWkD,kBACXlD,EAAWmD,aACXnD,EAAWoD,oBACXpD,EAAWqD,qBACXrD,EAAWsD,iBACXtD,EAAWuD,uBACXvD,EAAWwD,qBACXxD,EAAWyD,YACXzD,EAAW0D,qBACX1D,EAAW2D,gBACX3D,EAAW4D,iBACX5D,EAAW6D,mBACX7D,EAAW8D,iBACX9D,EAAW+D,iBACX/D,EAAWgE,aACXhE,EAAWiE,eACXjE,EAAWkE,gBACXlE,EAAWmE,eACXnE,EAAWoE,iBACXpE,EAAWqE,mBACXrE,EAAWsE,cACXtE,EAAWuE,cACXvE,EAAWwE,OACXxE,EAAWyE,UACXzE,EAAW0E,eACX1E,EAAW2E,aACX3E,EAAW4E,gBACX5E,EAAW6E,eACX7E,EAAW8E,gBACX9E,EAAW+E,MACX/E,EAAWgF,UACXhF,EAAWiF,UACXjF,EAAWkF,SACXlF,EAAWmF,UACXnF,EAAWoF,iBACXpF,EAAWqF,iBACXrF,EAAWsF,gBACXtF,EAAWuF,qBACXvF,EAAWwF,gBACXxF,EAAWyF,WACXzF,EAAW0F,YACX1F,EAAW2F,YACX3F,EAAW4F,YACX5F,EAAW6F,UACX7F,EAAW8F,WACX9F,EAAW+F,eACX/F,EAAWgG,gBACXhG,EAAWiG,aACXjG,EAAWkG,YACXlG,EAAWmG,iBACXnG,EAAWoG,mBACXpG,EAAWqG,eACXrG,EAAWsG,kBACXtG,EAAWuG,eACXvG,EAAWwG,WACXxG,EAAWyG,cACXzG,EAAW0G,WAER,IAAIC,EAA8B,EAClC,IAAK,MAAMC,KAAkBxE,EAAiB,CACjD,MAAM9D,EAAwB0D,EAAa2E,EAC3C5H,EAAOG,aAAaZ,GAAeyB,QAAU6G,EAC7C7H,EAAOK,gBAAgBd,GAAeyB,QAAU6G,EAChD7H,EAAOC,UAAUV,GAAeyB,QAAUM,EAAgBuG,GAC1DtJ,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBM,gBACnBO,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACbN,EAAmBS,gBAE7B4I,GACI,IAGD,MACI,GAAW,GAAPnF,EAAU,CAEtB,MAAMxC,EAAY,CACd,CAAE2C,KAAM,mBAAoBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACrG,CAAEJ,KAAM,cAAeC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAChG,CAAEJ,KAAM,eAAgBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACjG,CAAEJ,KAAM,iBAAkBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,IAGvGzE,EAAmBK,cAAgBqB,EAAUsB,OAI7C,MAAM0B,EAAqBjD,EAAOK,gBAAgBkB,OAClD,IAAK,MAAMxB,KAAYE,EAAW,CAC9B,MAAMV,EAAwBS,EAAOK,gBAAgBkB,OAC/CrB,EAAc,CAAEgD,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GACxNvC,EAAiB,CAAE8C,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GAC3NQ,EAAqB,CAAED,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS0B,GACrO1C,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB+C,WAAWrD,EAAS6C,MAAQxC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAaiD,WAAWrD,EAAS6C,MAAQ1C,EAChDF,EAAOC,UAAUV,GAAiB4D,EAClCnD,EAAOC,UAAUmD,WAAWrD,EAAS6C,MAAQ1C,EAC7C3B,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBI,SAASY,GAAiB,mBAChD,CAEDsC,EAAW,yBACVtB,MAAK,KAGF,MAAM8C,EAAkC,CAC3CpC,EAAW6G,wBACX7G,EAAW8G,mBACX9G,EAAW+G,iBACX/G,EAAWgH,sBAER,IAAIL,EAA8B,EAClC,IAAK,MAAMC,KAAkBxE,EAAiB,CACjD,MAAM9D,EAAwB0D,EAAa2E,EAC3C5H,EAAOG,aAAaZ,GAAeyB,QAAU6G,EAC7C7H,EAAOK,gBAAgBd,GAAeyB,QAAU6G,EAChD7H,EAAOC,UAAUV,GAAeyB,QAAUM,EAAgBuG,GAC1DtJ,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBM,gBACnBO,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACbN,EAAmBS,gBAE7B4I,GACI,IAED,MACI,GAAW,GAAPnF,EAAU,CAEtB,MAAMxC,EAAY,CACd,CAAE2C,KAAM,MAAOC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACxF,CAAEJ,KAAM,UAAWC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GAC3F,CAAEJ,KAAM,QAASC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACzF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,QAASC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC1F,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzF,CAAEJ,KAAM,cAAeC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAChG,CAAEJ,KAAM,MAAOC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,KAG7FzE,EAAmBK,cAAgBqB,EAAUsB,OAI7C,MAAM0B,EAAqBjD,EAAOK,gBAAgBkB,OAClD,IAAK,MAAMxB,KAAYE,EAAW,CAC9B,MAAMV,EAAwBS,EAAOK,gBAAgBkB,OAC/CrB,EAAc,CAAEgD,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GACxNvC,EAAiB,CAAE8C,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS2B,GAC3NQ,EAAqB,CAAED,MAAO3D,EAAeqD,KAAM7C,EAAS6C,KAAMC,WAAY9C,EAAS8C,WAAYC,UAAW/C,EAAS+C,UAAWC,aAAchD,EAASgD,aAAcC,kBAAmBjD,EAASiD,kBAAmBhC,QAAS0B,GACrO1C,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB+C,WAAWrD,EAAS6C,MAAQxC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAaiD,WAAWrD,EAAS6C,MAAQ1C,EAChDF,EAAOC,UAAUV,GAAiB4D,EAClCnD,EAAOC,UAAUmD,WAAWrD,EAAS6C,MAAQ1C,EAC7C3B,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBI,SAASY,GAAiB,sBAChD,CAEDsC,EAAW,6BACVtB,MAAK,KAGF,MAAM8C,EAAkC,CAC3CpC,EAAWiH,mBACXjH,EAAWkH,uBACXlH,EAAWmH,qBACXnH,EAAWoH,oBACXpH,EAAWqH,qBACXrH,EAAWsH,oBACXtH,EAAWuH,0BACXvH,EAAWwH,aACXxH,EAAWyH,cACXzH,EAAW0H,oBACX1H,EAAW2H,qBAER,IAAIhB,EAA8B,EAClC,IAAK,MAAMC,KAAkBxE,EAAiB,CACjD,MAAM9D,EAAwB0D,EAAa2E,EAC3C5H,EAAOG,aAAaZ,GAAeyB,QAAU6G,EAC7C7H,EAAOK,gBAAgBd,GAAeyB,QAAU6G,EAChD7H,EAAOC,UAAUV,GAAeyB,QAAUM,EAAgBuG,GAC1DtJ,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBM,gBACnBO,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACpBN,EAAmBS,gBAEtB4I,GACI,IAED,MAEGhG,QAAQiH,IAAI,kCAEpB,C,MAEa7I,GAmoCb,SAASiB,EAAW6H,GAChB,IAAIC,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIF,EAAKvH,OAAQyH,IAAKD,GAAOD,EAAKE,GAC1D,MAAMC,EAAkBF,EAAMD,EAAKvH,OACnC,IAAK,IAAIyH,EAAY,EAAGA,EAAIF,EAAKvH,OAAQyH,IAAKF,EAAKE,IAAMC,EAIzD,OAHA3H,EAAgBwH,GAEhBA,EAAKI,KAAK,GACH,IAAIC,aAAaL,EAC5B,CACA,SAASM,EAAuBN,GAC5B,IAAIO,EAAe,EAEnBpI,EAAW6H,GAGX,IAAK,IAAIE,EAAY,EAAGA,EAAIF,EAAKvH,OAAS,EAAGyH,IACzCK,GAAQC,KAAKC,IAAIT,EAAKE,IAE1B,MAAMQ,EAAkBH,GAAQP,EAAKvH,OAAS,GAE9C,IAAK,IAAIyH,EAAY,EAAGA,EAAIF,EAAKvH,OAAS,EAAGyH,IACzCF,EAAKE,GAAKF,EAAKE,GAAKQ,EAGxB,OAAO,IAAIL,aAAaL,EAE5B,CACM,SAAUxH,EAAgBwH,GAE5B,IAAIW,EAAqB,EACrBC,EAAwB,IAAIP,aAAaL,EAAKvH,QAClD,IAAK,IAAIyH,EAAY,EAAGA,EAAIF,EAAKvH,OAAQyH,IACrCU,EAAQV,GAAKS,EACbA,GAAcX,EAAKE,GAGvB,OAAOU,CACX,CAWM,SAAUC,EAAmBC,GAI/B,OAAOA,EAAc5J,EAAsB,eAC/C,C,SAQgB6J,EAAY3G,EAAe4G,EAA8CC,GACrF,IAAIjB,EAA4B9I,EAAOgK,WAAW9G,GAAOlC,QACzD,GAAY,MAAR8H,EAAc,CAIpB,GAHMA,EAAO,IAAIK,aAAanJ,EAAOiK,gBAAkB,GACjDjK,EAAOgK,WAAW9G,GAAOlC,QAAU8H,EAE5B,GAAT5F,EAAY,CAEf,IAAIgH,EAAqB,EACzB,IAAK,IAAIlB,EAAY,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAbkB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,CACb,CACD,MAAM,GAAa,GAATjH,EAEV,IAAK,IAAI8F,EAAY,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IACnDF,EAAKE,GAAqB,EAAhBM,KAAKc,SAAiB,OAE3B,GAAa,GAATlH,EAAY,CAEtB,IAAIgH,EAAqB,EACzB,IAAK,IAAIlB,EAAY,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAbkB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,CACb,CACD,MAAM,GAAa,GAATjH,EAAY,CAEtB,IAAIgH,EAAqB,EACzB,IAAK,IAAIlB,EAAY,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAbkB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,IAEdD,EAAaC,CACb,CACD,MAAM,GAAa,GAATjH,EAEVmH,EAAkBvB,EAAM9I,EAAOiK,gBAAiB,GAAI,GAAI,EAAG,EAAG,GAC9DI,EAAkBvB,EAAM9I,EAAOiK,gBAAiB,GAAI,GAAI,MAAO,MAAO,GACtEH,EAA6BhB,EAAM9I,EAAOiK,iBAC1CF,EAAuBjB,EAAM,EAAMQ,KAAKgB,KAAKtK,EAAOiK,uBAC9C,GAAa,GAAT/G,EAGV,IADA,IAAIgH,EAAa,EACRlB,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAbkB,GAAwB,EAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,CACb,MACK,GAAa,GAATjH,EAEVmH,EAAkBvB,EAAM9I,EAAOiK,gBAAiB,EAAG,GAAI,EAAG,EAAG,GAC7DI,EAAkBvB,EAAM9I,EAAOiK,gBAAiB,GAAI,IAAK,GAAI,EAAG,GAChEH,EAA6BhB,EAAM9I,EAAOiK,iBAC1CF,EAAuBjB,EAAM,EAAMQ,KAAKgB,KAAKtK,EAAOiK,uBAC9C,GAAa,GAAT/G,EAGV,IADIgH,EAAa,EACRlB,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAbkB,IAAyC,GAAhBZ,KAAKc,SAAgB,GAAK,EAExB,IAAhCF,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,CACb,MACK,GAAa,GAATjH,EAGV,IADIgH,EAAa,EACRlB,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAChDF,EAAKE,IAAmB,EAAbkB,GAAkB,EAAM,GAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,CACJ,MACE,GAAa,GAATjH,EAAY,CAEnB,IAAIgH,EAAqB,EACzB,IAAK,IAAIlB,EAAY,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CACrDF,EAAKE,GAAwB,GAAL,EAAbkB,GAAwB,IACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,QAEjBD,EAAaC,CAChB,CACV,MACO,GAAa,IAATjH,EACE,IAAK,IAAI8F,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IACxCF,EAAKE,GAAKM,KAAKiB,MAAMjB,KAAKc,eAGrC,GAAa,IAATlH,EAEG,IADIgH,EAAa,EACRlB,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAE7C,IAAImB,EADJrB,EAAKE,GAAKM,KAAKiB,MAAoB,EAAbL,GAEgB,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC5BC,GAAa,IAEjBD,EAAaC,CAChB,MAET,GAAa,IAATjH,EACI,IAAK,IAAI8F,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAC9C,IAAIwB,EAA2BlB,KAAKc,SAChDtB,EAAKE,GAAKM,KAAKmB,IAAID,EAA0BlB,KAAKoB,MAAMF,GAC9C,MAET,GAAa,IAATtH,EAAa,CACrB,IAA4ByH,EAAIC,EAAIC,EAAIC,EAApCC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EACzBF,EAAKC,EAAKC,EAAKN,EAAKC,EAAKC,EAAKC,EAAK,EAEnC,IAAK,IAAI9B,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAEhD+B,EAAK,OAAUA,EAAa,UADxBG,EAAwB,EAAhB5B,KAAKc,SAAe,GAEhCY,EAAK,OAAUA,EAAa,SAARE,EACpBD,EAAK,KAAUA,EAAa,QAARC,EACpBP,EAAK,MAAUA,EAAa,SAARO,EACpBN,EAAK,IAAUA,EAAa,SAARM,EACpBL,GAAM,MAASA,EAAa,QAARK,EACpBpC,EAAKE,GAAK+B,EAAKC,EAAKC,EAAKN,EAAKC,EAAKC,EAAKC,EAAa,MAARI,EAC7CpC,EAAKE,IAAM,IACX8B,EAAa,QAARI,CAEO,CACJ,KACL,IAAa,IAAThI,EAaT,MAAM,IAAIrC,MAAM,4BAA8BqC,GAZ7C,IAAIiI,EAAU,EAEF,IAAK,IAAInC,EAAI,EAAGA,EAAIhJ,EAAOiK,gBAAiBjB,IAAK,CAC5D,IAAIkC,EAAwB,EAAhB5B,KAAKc,SAAe,EAChCtB,EAAKE,IAAMmC,EAAW,IAAOD,GAAU,KACvCC,EAAUrC,EAAKE,GACfF,EAAKE,IAAM,EAEC,CAKd,CAEKF,EAAK9I,EAAOiK,iBAAmBnB,EAAK,EACvC,CAED,OAAOA,CACX,CAEgB,SAAAuB,EAAkBvB,EAAoBsC,EAAoBC,EAAmBC,EAAoBC,EAAkBC,EAAmBC,GAClJ,MAEMC,EAA4C,EAAzBpC,KAAKmB,IAAI,EAAGY,GAC/BM,EAAoBrC,KAAKsC,IAAIR,GAAc,EAA6B,EAA1B9B,KAAKmB,IAAI,EAAGa,IAC1DO,EAA0BhC,EAAY,EAAG,KAAM,MACrD,IAAIiC,EAA4B,EAChC,IAAK,IAAI9C,EAAY0C,EAAU1C,EAAI2C,EAAW3C,IAAK,CAE/C,IAAI+C,EAAiBR,GAAYC,EAAYD,IAAajC,KAAK0C,KAAKhD,GAAKqC,IAAcC,EAAaD,GAChGY,EAAoB3C,KAAKmB,IAAI,EAAkB,GAAdsB,EAAS,GAAS,GAAKA,EAE5DE,GAAa3C,KAAKmB,IAAIzB,EAVK,KAUeyC,GAE1CK,GAAqBG,EAQrBA,GAAaJ,EAAU7C,GACvB,MAAMkD,EAAkB,aAAgBlD,EAAIA,EAAIM,KAAK6C,GAAK,EAE1DrD,EAAKE,GAAKM,KAAK8C,IAAIF,GAAWD,EAC9BnD,EAAKsC,EAAapC,GAAKM,KAAK+C,IAAIH,GAAWD,CAC9C,CAED,OAAOH,CACX,CA0BA,SAASQ,EAAmBC,EAAqB,GAC7C,MAAMzD,EAAqB,IAAIK,aAAanJ,EAAOwM,eAAiB,GAC9DC,EAAsBzM,EAAOwM,eAAiB,EACpD,IAAK,IAAIxD,EAAY,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IACnDF,EAAKE,GACoG,IAD5FM,KAAKC,IAAIP,EAAIyD,GAAeF,EAAavM,EAAOwM,eAAiB,GACrElD,KAAKC,IAAIP,EAAIhJ,EAAOwM,eAAiBC,GAAeF,EAAavM,EAAOwM,eAAiB,GAAW,EAEjH,OAAO1D,CACX,CAEA,SAAS4D,EAAgBC,GAAmB,GACxC,MAAM7D,EAAqB,IAAIK,aAAanJ,EAAOwM,eAAiB,GACpE,IAAK,IAAIxD,EAAY,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IACnDF,EAAKE,GAA4C,GAArCA,EAAKhJ,EAAOwM,eAAiB,GAAcxM,EAAOwM,eAAkB,EAAI,EACpF1D,EAAKE,GAAK2D,GAAW7D,EAAKE,GAAKF,EAAKE,GAExC,OAAOF,CACX,C,SAwBgB8D,EAAsBC,EAAoBC,EAA4BC,GAClF,IAAIC,EAAyChN,EAAOiN,iBAAiBJ,EAAa,GAClF,OAAuB,MAAnBG,GACkB,GAAdH,GAAwC,GAArBC,IACnBE,EAAkB,CAAC,EAAG,EAAG,EAAG,IAEzBA,EAAgBD,EAAWC,EAAgBzL,SAE3CwL,EAAWF,CAE1B,CAGM,SAAUK,EAAmCC,GAC/C,MAAM/J,EAA4B,GAClC,IAAK,IAAI4F,EAAY,EAAGA,EAAImE,EAAM5L,OAAQyH,IAAK,CAC3C,MAAMoE,EAAaD,EAAMnE,GACzBoE,EAAMlK,MAAQ8F,EACd5F,EAAWgK,EAAMxK,MAAWwK,CAC/B,CACD,MAAMC,EAAsDF,EAE5D,OADAE,EAAOjK,WAAaA,EACbiK,CACX,CAEM,SAAUC,EAAyBC,GACrC,OAAmD,IAApC,KAAPA,EACZ,CACM,SAAUC,EAAoBD,GAChC,OAA8C,IAA/B,KAAPA,EACZ,CACM,SAAUE,EAAyBF,GACrC,OAAmD,IAApC,IAAPA,EACZ,CACM,SAAUG,EAAqBH,GACjC,OAA+C,IAAhC,IAAPA,EACZ,CACM,SAAUI,EAAsBJ,GAClC,OAAgD,IAAjC,IAAPA,EACZ,CACM,SAAUK,EAAyBL,GACrC,OAAmD,IAApC,GAAPA,EACZ,CACM,SAAUM,EAAyBN,GACrC,OAAmD,IAApC,EAAPA,EACZ,CACM,SAAUO,EAAyBP,GACrC,OAAmD,IAApC,GAAPA,EACZ,CACM,SAAUQ,EAAsBR,GAClC,OAAgD,IAAjC,EAAPA,EACZ,CACM,SAAUS,EAAqBT,GACjC,OAA+C,IAAhC,EAAPA,EACZ,CACM,SAAUU,EAAmBV,GAC/B,OAA6C,IAA9B,GAAPA,EACZ,CACM,SAAUW,EAAqBX,GACjC,OAA+C,IAAhC,EAAPA,EACZ,CACM,SAAUY,EAAiBZ,GAC7B,OAAuD,IAAxC,KAAPA,EACZ,CACM,SAAUa,EAAqBb,GACjC,OAA+C,IAAhC,KAAPA,EACZ,CACM,SAAUc,EAAwBd,GACpC,OAAkD,IAAnC,MAAPA,EACZ,CACM,SAAUe,EAAyBf,GACrC,OAAmD,IAApC,MAAPA,EACZ,CA3gDkBvN,EAAYuO,cAAY,GACxBvO,EAAOwO,QAAW,GAClBxO,EAAQyO,SAAW,GACnBzO,EAAS0O,UAAW,EACpB1O,EAAU2O,WAAW,IAErB3O,EAA0B+B,4BAAY,EAEtC/B,EAAU4O,WAAW,WAGZ5O,EAAM6O,OAA2B3B,EAAU,CAGpE,CAAEtK,KAAM,OAAQkM,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC3G,CAAEnM,KAAM,QAASkM,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACpH,CAAEnM,KAAM,QAASkM,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACpH,CAAEnM,KAAM,aAAckM,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IAC5H,CAAEnM,KAAM,SAAUkM,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,IACrH,CAAEnM,KAAM,SAAUkM,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IACpH,CAAEnM,KAAM,WAAYkM,SAAU,WAAYC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACxH,CAAEnM,KAAM,UAAWkM,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAEnM,KAAM,kBAAmBkM,SAAU,kBAAmBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,IACtI,CAAEnM,KAAM,oBAAqBkM,SAAU,oBAAqBC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC1I,CAAEnM,KAAM,iBAAkBkM,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAEnM,KAAM,iBAAkBkM,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAEnM,KAAM,gBAAiBkM,SAAU,gBAAiBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACnI,CAAEnM,KAAM,cAAekM,SAAU,cAAeC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAK,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC9H,CAAEnM,KAAM,QAASkM,SAAU,QAASC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAM,IACnH,CAAEnM,KAAM,UAAWkM,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAEnM,KAAM,mBAAoBkM,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC1I,CAAEnM,KAAM,mBAAoBkM,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,IAC1I,CAAEnM,KAAM,aAAckM,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IAC7H,CAAEnM,KAAM,YAAakM,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,IAC1H,CAAEnM,KAAM,YAAakM,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,IAC5H,CAAEnM,KAAM,aAAckM,SAAU,aAAcC,MAAM,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAM,IAEhI,CAAEnM,KAAM,cAAekM,SAAU,cAAeC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAM,GAAM,GAAO,GAAM,IAC7H,CAAEnM,KAAM,OAAQkM,SAAU,sEAAuEC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,IAC1K,CAAEnM,KAAM,aAAckM,SAAU,MAAOC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,IAE7H,CAAEnM,KAAM,MAAOkM,SAAU,QAASC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,IAIrH,CAAEnM,KAAM,SAAUkM,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,MAE9F/O,EAAIgP,KAAyB9B,EAAU,CAC7D,CAAEtK,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,KAAMqM,YAAY,EAAOC,UAAW,IAC5C,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,KAAMqM,YAAY,EAAOC,UAAW,IAC5C,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,KAAMqM,YAAY,EAAOC,UAAW,IAC5C,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,KAAMqM,YAAY,EAAOC,UAAW,IAC5C,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,IAC1C,CAAEtM,KAAM,KAAMqM,YAAY,EAAOC,UAAW,IACtC,CAAEtM,KAAM,IAAKqM,YAAY,EAAMC,UAAW,MAU1BlP,EAAAmP,oBAA6C,EAAE,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACtFnP,EAAQoP,SAA8B,EACtCpP,EAAQqP,SAA8B,IACtCrP,EAASsP,WAA8B,EACvCtP,EAASuP,UAA6B,EACnCvP,EAAcwP,eAAwB,GACtCxP,EAAkByP,mBAAoB,EACtCzP,EAAgB0P,iBAAsB,EACtC1P,EAAW2P,YAA2B,IACtC3P,EAAa4P,cAAyBtG,KAAKmB,IAAI,GAAM,IACrDzK,EAAa6P,cAAyB,IACtC7P,EAAe8P,gBAAuBxG,KAAKmB,IAAI,GAAM,KACxDzK,EAAW+P,YAA2B,GACnC/P,EAAqBgQ,sBAAiB,MACtChQ,EAAAiQ,sBAAsCjQ,EAAOgQ,sBAAwB,EACrEhQ,EAAckQ,eAAwB,GACtClQ,EAAmBmQ,oBAAmB,GACtCnQ,EAAeoQ,gBAAuB,GACtCpQ,EAAaqQ,cAAyB,EACtCrQ,EAAasQ,cAAyB,IACtCtQ,EAAeuQ,gBAAuB,EACtCvQ,EAAewQ,gBAAuB,GACtCxQ,EAAcyQ,eAAwB,EACzCzQ,EAAc0Q,eAAwB,GACtC1Q,EAAW2Q,YAA2B,EACtC3Q,EAAW4Q,YAA2B,KACnC5Q,EAAkB6Q,mBAAoB,EACtC7Q,EAAyB8Q,0BAAa,GAEtC9Q,EAAyB+Q,0BAAa,GACzC/Q,EAAYgR,aAA0B,GACtChR,EAAYiR,aAA0B,EACtCjR,EAAgBkR,iBAAsB,EACtClR,EAAgBiN,iBAAyC,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrLjN,EAAOmR,QAA4BjE,EAAU,CACnE,CAAEtK,KAAM,mBAAoBwO,aAAc,EAAiFC,kBAAmB,CAAC,IAC/I,CAAEzO,KAAM,kBAAmBwO,aAAc,EAAiFC,kBAAmB,CAAC,EAAG,IACjJ,CAAEzO,KAAM,gBAAiBwO,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,GAAW,KACnL,CAAEzO,KAAM,gBAAiBwO,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,EAAU,GAAW,KAC7L,CAAEzO,KAAM,kBAAmBwO,aAAc,EAAwFC,kBAAmB,MACpJ,CAAEzO,KAAM,kBAAmBwO,aAAc,EAAwFC,kBAAmB,MACpJ,CAAEzO,KAAM,sBAAuBwO,aAAc,GAA2EC,kBAAmB,MAC3I,CAAEzO,KAAM,WAAYwO,aAAc,GAAyFC,kBAAmB,QAGrHrR,EAAmBsR,oBAA0B,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,MAAO,gBAAiB,WAAY,cAAe,MAAO,SACtKtR,EAAgCuR,iCAA2B,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAC5HvR,EAAkBwR,mBAAW,OAC7BxR,EAAgByR,iBAAW,IAC3BzR,EAAmB0R,oBAAW,IAC9B1R,EAAsB2R,uBAAW,GACjC3R,EAAqB4R,sBAAW,IAChC5R,EAAuB6R,wBAAW,KAClC7R,EAAiB8R,kBAAW,OAC5B9R,EAAsB+R,uBAAY,QAClC/R,EAA0BgS,2BAAW,KACrChS,EAAoBiS,qBAAW,KAC/BjS,EAAoBkS,qBAAW,IAC3ClS,EAAYG,aAA8B+M,EAAU,CAC3D,CAAEtK,KAAM,UAAWC,WAAY,IAAM7B,QAASC,EAAW,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,KAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAAO,IAAM,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,MAC1Z,CAAE2B,KAAM,WAAYC,WAAY,EAAK7B,QAASC,EAAW,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,MAChd,CAAE2B,KAAM,SAAUC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,KAC9D,CAAE2B,KAAM,YAAaC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,KAC7E,CAAE2B,KAAM,YAAaC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACrG,CAAE2B,KAAM,WAAYC,WAAY,IAAM7B,QAASC,EAAW,CAAC,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAa,GAAe,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,MAC3d,CAAE2B,KAAM,aAAcC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,EAAK,GAAM,IAAM,IAAM,IAAM,GAAK,EAAK,GAAK,GAAK,GAAK,MAChJ,CAAE2B,KAAM,eAAgBC,WAAY,GAAK7B,QAASC,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,KAChJ,CAAE2B,KAAM,QAASC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,EAAK,GAAM,EAAK,EAAK,KAClF,CAAE2B,KAAM,OAAQC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC3O,CAAExG,KAAM,QAASC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,KACvJ,CAAExG,KAAM,OAAQC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACvO,CAAExG,KAAM,iBAAkBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAExG,KAAM,gBAAiBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC7O,CAAExG,KAAM,WAAYC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAExG,KAAM,UAAWC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACxO,CAAExG,KAAM,UAAWC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACpO,CAAExG,KAAM,kBAAmBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,GAAM,MACrP,CAAExG,KAAM,QAASC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC5O,CAAExG,KAAM,YAAaC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC9O,CAAExG,KAAM,SAAUC,WAAY,GAAK7B,QAASC,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,KACltC,CAAE2B,KAAM,YAAaC,WAAY,EAAK7B,QAASC,EAAW,CAAC,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAc,GAAc,GAAc,GAAc,GAAc,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,MAEre,CAAE2B,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACnI,CAAExG,KAAM,sBAAuBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,EAAK,MAAQ,MAAQ,MAAQ,GAAK,IAAM,KAAO,EAAK,EAAK,MAAQ,GAAK,KAAO,KAAO,GAAK,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAC9S,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,IAAM,IAAM,KAAO,KAAO,KAAO,KAC1J,CAAExG,KAAM,aAAcC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAK,OAChH,CAAExG,KAAM,gBAAiBC,WAAY,GAAK7B,QAASoI,EAAuB,EAAE,GAAK,IAAK,GAAM,IAAM,KAAO,KAC3G,CAAExG,KAAM,cAAeC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,IAAM,KAAO,GAAK,IAAM,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,GAAK,KAAO,KAAO,GAAK,KAAO,IAAM,KAAO,IAAM,IAAM,KAAO,EAAG,KAAO,IAAM,IAAM,KAAO,IAAM,KAAO,GAAK,KAAO,KAAO,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,GAAK,IAAM,GAAK,KAAO,IAAM,GAAM,KAAO,MAAQ,IAAM,KAAO,IAAM,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,MAAQ,MAAQ,IAAM,MAAQ,KAAO,MAAQ,KAAO,KAAO,MAAQ,GAAI,MAAQ,KAAO,KAAO,MAAQ,KAAO,MAAQ,IAAM,MAAQ,MAAQ,IAAM,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAAO,IAAM,MAAQ,OACnrB,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACpJ,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACxJ,CAAExG,KAAM,kBAAmBC,WAAY,GAAK7B,QAASoI,EAAupqB,CAAExG,KAAM,yBAA0BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,GAAW,EAAM,EAAK,EAAM,KACvH,CAAExG,KAAM,eAAgBC,WAAY,IAAM7B,QAASoI,EAAuB,EAAE,IAAM,GAAM,KAAO,MAAQ,IAAM,IAAM,IAAM,IAAM,MAAQ,MAAQ,IAAM,MAAQ,IAAM,KAAO,MAAQ,KAAO,MAAQ,KAAO,IAAM,KAAO,KAAO,KAAO,IAAM,MAAQ,KAAO,IAAM,GAAK,IAAM,IAAM,KAAO,GAAK,IAAM,IAAM,KAAO,IAAM,IAAM,KAAO,GAAK,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,GAAK,KAAO,IAAM,GAAK,KAAO,GAAM,KAAO,KAAO,KAAO,KAAO,GAAK,GAAK,KAAO,GAAK,IAAM,IAAM,IAAM,EAAK,IAAM,IAAM,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,IAAM,MAAQ,IAAM,IAAM,KAAO,KAAO,IAAM,GAAM,MAC7oB,CAAExG,KAAM,eAAgBC,WAAY,IAAM7B,QAASoI,EAAuB,EAAE,GAAM,KAAO,MAAQ,IAAM,KAAO,IAAM,MAAQ,KAAO,IAAM,IAAM,MAAQ,KAAO,MAAQ,IAAM,MAAQ,IAAM,EAAK,KAAO,KAAO,IAAM,GAAM,IAAM,KAAO,IAAM,KAAO,IAAM,GAAM,IAAM,KAAO,KAAO,GAAM,KAAO,IAAM,IAAM,IAAM,KAAO,IAAM,IAAM,GAAM,IAAM,KAAO,KAAO,KAAO,KAAO,GAAM,IAAM,IAAM,EAAK,GAAK,KAAO,KAAO,GAAK,KAAO,GAAK,GAAK,IAAM,GAAK,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,IAAM,GAAK,GAAK,KAAO,IAAM,IAAM,KAAO,KAAO,KAAO,MAAQ,KAAO,KAAO,KAAO,KAAO,IAAM,KAAO,MAAQ,IAAM,MAAQ,KAAO,QAC1mB,CAAExG,KAAM,uBAAwBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,IAAM,IAAM,IAAM,IAAM,IAAM,KAC5H,CAAExG,KAAM,cAAeC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,GAAM,EAAK,EAAK,KAAM,KAAM,KAAM,GAAM,IAAM,KAC1H,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,KAAM,IAAK,KAAM,OAC/F,CAAExG,KAAM,iBAAkBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAI,IAAM,GAAI,OACjG,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAK,EAAK,IAAK,EAAK,GAAM,OAC5G,CAAExG,KAAM,kBAAmBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,MAC5K,CAAExG,KAAM,wBAAyBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACrI,CAAExG,KAAM,0BAA2BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,GAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,KAErM,CAAExG,KAAM,sBAAuBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAK,IAAK,KAAM,IAAK,IAAK,OACrG,CAAExG,KAAM,kBAAmBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACtH,CAAExG,KAAM,sBAAuBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC9G,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,KAAM,IAAK,IAAK,KAChG,CAAExG,KAAM,mBAAoBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpL,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,KAC5J,CAAExG,KAAM,uBAAwBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC1G,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,KAAM,IAAK,KAAM,OAC/F,CAAExG,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,KACrI,CAAExG,KAAM,qBAAsBC,WAAY,IAAK7B,QAASoI,EAAuB,CAAC,IAAK,IAAa,KAAQ,IAAK,IAAa,KAAQ,GAAK,KAAQ,GAAK,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,KAAM,QAAc,IAAc,KAAQ,IAAM,KAAQ,KAAM,EAAc,EAAa,IAAO,IAAM,IAAO,IAAM,IAAa,OAAa,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,GAAK,IAAO,GAAK,IAAY,IAAO,GAAK,OAC/e,CAAExG,KAAM,sBAAuBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,EAAK,KAAM,GAAM,GAAM,MAAO,KAEpH,CAAExG,KAAM,qBAAsBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAC/e,CAAExG,KAAM,sBAAuBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,GAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChS,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,IAAM,IAAK,MAAO,QACnG,CAAExG,KAAM,sBAAuBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,MAAQ,MAAQ,MAAQ,GAAK,IAAM,KAAO,GAAM,GAAM,OAAS,IAAM,MAAQ,MAAQ,IAAM,MAAQ,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAQ,MAAQ,KAAO,OAAS,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAGjU,CAAExG,KAAM,kBAAmBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,IAAM,KACxF,CAAExG,KAAM,2BAA4BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,KACrK,CAAExG,KAAM,4BAA6BC,WAAY,GAAI7B,QAASoI,EAAuB,CAAC,GAAM,EAAK,GAAM,EAAK,KAC5G,CAAExG,KAAM,0BAA2BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,EAAK,GAAM,EAAK,GAAM,KAEjH,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,EAAW,IAAM,IAAM,EAAK,IAAM,GAAM,MAC7H,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAM,EAAM,IAAQ,EAAM,GAAa,GAAM,MAAQ,MAEnI,CAAExG,KAAM,qBAAsBC,WAAY,EAAK7B,QAASoI,EAAuB,CAAC,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,KACzH,CAAExG,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,IAAK,EAAK,KAAM,KAAM,GAAM,OAEzG,CAAExG,KAAM,kBAAmBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,GAAM,IAAM,IAAM,KAAM,KAAO,EAAK,GAAM,IAAM,IAAM,KAAM,OAC3I,CAAExG,KAAM,oBAAqBC,WAAY,IAAK7B,QAASoI,EAAuB,CAAC,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,KAClH,CAAExG,KAAM,uBAAwBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,IAAK,KAAM,EAAG,KAAM,IAAK,KAAM,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,KAE5K,CAAExG,KAAM,gBAAiBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,IAAK,EAAK,MAAO,GAAK,KAAM,GAAK,GAAM,IAAK,IAAK,EAAK,IAAM,IAAK,GAAK,MAAO,GAAM,OAC/J,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,KAAO,OAG1H,CAAExG,KAAM,eAAgBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,KAAM,KAAM,MAAO,MAAO,GAAM,KAE7H,CAAExG,KAAM,sBAAuBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,IAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,OACjK,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KACzH,CAAExG,KAAM,oBAAqBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,KAGlI,CAAExG,KAAM,yBAA0BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/U,CAAExG,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzU,CAAExG,KAAM,qBAAsBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAE1S,CAAExG,KAAM,mBAAoBC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,GAAM,KAChF,CAAE2B,KAAM,mBAAoBC,WAAY,GAAK7B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,KAEhG,CAAE2B,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,GAAK,EAAG,GAAK,KAAM,IAAM,IAAM,IAAM,GAAK,GAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,EAAG,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,GAAK,GAAK,MAC9O,CAAExG,KAAM,oBAAqBC,WAAY,IAAM7B,QAASoI,EAAuB,CAAC,GAAM,GAAM,GAAM,EAAK,GAAK,GAAK,GAAK,GAAK,IAAM,IAAK,GAAI,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACxc,CAAExG,KAAM,mBAAoBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,GAAK,GAAI,GAAI,MAAO,GAAI,KAAM,KAAM,GAAI,MAAO,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,KAAM,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAAO,KAAO,GAAI,IAAM,KAAM,KAAM,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,IAAK,EAAI,KAAM,KAAM,KAAM,EAAG,MAAO,GAAI,GAAI,KAAM,GAAI,GAAI,MAAO,MAAO,GAAI,GAAI,KAAM,EAAG,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,IAAK,EAAG,GAAI,IAAM,GAAI,KAAM,GAAI,GAAI,GAAI,MAAO,GAAI,GAAI,KAEzkB,CAAExG,KAAM,0BAA2BC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnQ,CAAExG,KAAM,wBAAyBC,WAAY,GAAK7B,QAASoI,EAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,KAAM,GAAI,EAAG,EAAG,GAAI,KAEzI,CAAExG,KAAM,yBAA0BC,WAAY,EAAK7B,QAASoI,EAAup4Q,CAAExG,KAAM,+BAAgCC,WAAY,GAAK7B,QAASoI,EAAuB,EAAE,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,MAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAS,QAAS,OAAQ,OAAQ,MAAQ,MAAQ,MAAQ,QAAS,OAAQ,OAAQ,OAAQ,MAAQ,QAAS,QAAS,QAAS,QAAS,OAAQ,MAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,OAAQ,OAAQ,QAAS,OAAQ,QAAS,QAAS,OAAQ,QAAS,OAAS,OAAQ,OAAQ,OAAQ,OAAQ,MAAQ,OAAQ,OAAQ,MAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,QAAS,OAAS,QAAS,YAIl3BpJ,EAAAC,UAsxCT,SAA8BkS,GAChC,MAAMC,EAA4B,IAAIlR,MAAgBiR,EAAI5Q,QACpD6B,EAAmC,GACzC,IAAK,IAAI4F,EAAY,EAAGA,EAAIoJ,EAAS7Q,OAAQyH,IAAK,CAC9CoJ,EAASpJ,GAAKqJ,OAAOC,OAAO,GAAIH,EAAInJ,IACpC,MAAMoE,EAAagF,EAASpJ,GAC5BoE,EAAMlK,MAAQ8F,EACd5F,EAAWgK,EAAMxK,MAAkBwK,CACtC,CACD,IAAK,IAAImF,KAAOnP,EACZA,EAAWmP,GAAKvR,QAAUM,EAAgB8B,EAAWmP,GAAKvR,SAE9D,MAAMqM,EAAoE+E,EAE1E,OADA/E,EAAOjK,WAAaA,EACbiK,CACX,CAryCsDmF,CAAoBxS,EAAOG,cAClEH,EAAAK,gBAA6CL,EAAOG,aAEpDH,EAAAyS,mCAA6CzS,EAAOC,UAAUsB,OAGrDvB,EAAUgK,WAA+BkD,EAAU,CACzE,CAAEtK,KAAM,QAASC,WAAY,IAAMqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MACnG,CAAE4B,KAAM,QAASC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,EAAKC,QAAQ,EAAM3R,QAAS,MAE9F,CAAE4B,KAAM,QAASC,WAAY,GAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAClG,CAAE4B,KAAM,OAAQC,WAAY,GAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MACjG,CAAE4B,KAAM,SAAUC,WAAY,IAAKqM,UAAW,GAAIwD,gBAAiB,EAAKC,QAAQ,EAAM3R,QAAS,MAC/F,CAAE4B,KAAM,QAASC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAClG,CAAE4B,KAAM,OAAQC,WAAY,IAAKqM,UAAW,IAAKwD,gBAAiB,KAAQC,QAAQ,EAAM3R,QAAS,MACjG,CAAE4B,KAAM,SAAUC,WAAY,KAAOqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAC/F,CAAE4B,KAAM,WAAYC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MACrG,CAAE4B,KAAM,SAAUC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAEzG,CAAE4B,KAAM,cAAeC,WAAY,GAAKqM,UAAW,MAAOwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAC3G,CAAE4B,KAAM,iBAAkBC,WAAY,GAAKqM,UAAW,MAAOwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MAE9G,CAAE4B,KAAM,YAAaC,WAAY,GAAKqM,UAAW,GAAIwD,gBAAiB,KAAQC,QAAQ,EAAO3R,QAAS,MACtG,CAAE4B,KAAM,OAAQC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,EAAKC,QAAQ,EAAM3R,QAAS,MAC7F,CAAE4B,KAAM,WAAYC,WAAY,EAAKqM,UAAW,GAAIwD,gBAAiB,EAAKC,QAAQ,EAAM3R,QAAS,QAGxEhB,EAAA4S,eAAyB,EAAM,EAC/B5S,EAAe6S,gBAAW,GAC1B7S,EAA0B8S,2BAAW,GACrC9S,EAAqB+S,sBAAW,IAChC/S,EAAegT,gBAAWhT,EAAO+S,sBAAwBzJ,KAAKmB,IAAI,EAAKzK,EAAO4S,gBAAkB5S,EAAO6S,gBAAkB,EAAI7S,EAAO8S,6BACpI9S,EAAeiT,gBAAW,EAC1BjT,EAAekT,gBAAW,GAC1BlT,EAAgBmT,iBAAW,EAC3BnT,EAAAoT,eAAyB,GACzBpT,EAAeqT,gBAAW,EAC1BrT,EAAesT,gBAA0B,CAAC,WAAY,YAAa,QACnEtT,EAAgBuT,iBAAW,GAE3BvT,EAAoBwT,qBAAW,GAC/BxT,EAAqByT,sBAAW,EAEhCzT,EAAW0T,YAAW,GACtB1T,EAAA2T,aAAsC,EAAE,IAAK,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAChF3T,EAAc4T,eAAW,EACzB5T,EAAmB6T,oBAAW,GACjC7T,EAAW8T,YAAgC5G,EAAU,CACrE,CAAEtK,KAAM,SAAUmR,YAAY,EAAOC,WAAW,EAAOC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAC9G,CAAEvR,KAAM,YAAamR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAChH,CAAEvR,KAAM,WAAYmR,YAAY,EAAMC,WAAW,EAAMC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAC9G,CAAEvR,KAAM,QAASmR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAMC,WAAY,EAAGC,yBAAyB,GAC3G,CAAEvR,KAAM,mBAAoBmR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAMC,WAAY,EAAGC,yBAAyB,KAEtGnU,EAAQoU,SAA6BlH,EAAU,CAC/D,CAAEtK,KAAM,OAAQqJ,UAAW,EAAKoI,KAAM,EAAGC,WAAY,GACrD,CAAE1R,KAAM,QAASqJ,UAAW,IAAMoI,KAAM,EAAGC,WAAY,GACvD,CAAE1R,KAAM,UAAWqJ,UAAW,GAAKoI,KAAM,EAAGC,WAAY,IACxD,CAAE1R,KAAM,QAASqJ,UAAW,IAAMoI,KAAM,EAAGC,WAAY,GACvD,CAAE1R,KAAM,QAASqJ,UAAW,GAAKoI,KAAM,EAAGC,WAAY,KActCtU,EAAYuU,aAAiCrH,EAAU,CAC7E,CAAEtK,KAAM,SAAU4R,eAAgB,CAAC,KAAOC,OAAQ,KAClD,CAAE7R,KAAM,QAAS4R,eAAgB,CAAC,IAAM,OAAc,KAAWC,OAAQ,UAInDzU,EAAa0U,cAA0B,CAAC,EAAG,MAAQ,KAAO,GAAK,IAAM,EAAI,EAAG,GAAK,GAAK,EAAI,EAAG,IAAM,GAAK,GAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAChS1U,EAAO2U,QAA4BzH,EAAU,CAC7D,CAAEtK,KAAM,OAAQgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,EAAKjS,WAAY,IAAKkS,KAAM,GAC5E,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKjS,WAAY,GAAKkS,KAAM,GACjF,CAAEnS,KAAM,MAAOgS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GAC7E,CAAEnS,KAAM,aAAcgS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GACnF,CAAEnS,KAAM,YAAagS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKjS,WAAY,GAAKkS,KAAM,GAClF,CAAEnS,KAAM,QAASgS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,IAAKjS,WAAY,GAAKkS,KAAM,GAC7E,CAAEnS,KAAM,SAAUgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,EAAKjS,WAAY,GAAKkS,KAAM,GAC9E,CAAEnS,KAAM,QAASgS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKjS,WAAY,EAAKkS,MAAO,GAC/E,CAAEnS,KAAM,QAASgS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,IAC9E,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,IAAMjS,WAAY,GAAKkS,MAAO,IAClF,CAAEnS,KAAM,eAAgBgS,OAAQ,EAAGC,OAAQ,KAAMC,QAAS,EAAKjS,WAAY,GAAKkS,MAAO,IAC7F,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GAChF,CAAEnS,KAAM,SAAUgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,IAAMjS,WAAY,EAAKkS,KAAM,GAC/E,CAAEnS,KAAM,SAAUgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAKjS,WAAY,IAAMkS,KAAM,GAC/E,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAGjS,WAAY,KAAOkS,KAAM,GAC/E,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGjS,WAAY,IAAMkS,KAAM,GAC5E,CAAEnS,KAAM,OAAQgS,OAAQ,EAAGC,OAAQ,EAAGC,QAAS,EAAGjS,WAAY,EAAKkS,KAAM,GACzE,CAAEnS,KAAM,QAASgS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAAKjS,WAAY,KAAOkS,KAAM,GAC7E,CAAEnS,KAAM,aAAcgS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAKjS,WAAY,GAAKkS,KAAM,GAClF,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GACjF,CAAEnS,KAAM,SAAUgS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GAC9E,CAAEnS,KAAM,YAAagS,OAAQ,EAAGC,OAAQ,GAAIC,OAAQ,EAAKjS,WAAY,EAAKkS,KAAM,GAChF,CAAEnS,KAAM,OAAQgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAMjS,WAAY,EAAKkS,KAAM,GAC7E,CAAEnS,KAAM,SAAUgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAKjS,WAAY,EAAKkS,KAAM,GAC3E,CAAEnS,KAAM,UAAWgS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,IAAMjS,WAAY,GAAKkS,KAAM,GAC7E,CAAEnS,KAAM,YAAagS,OAAQ,EAAGC,OAAQ,MAAQC,OAAQ,GAAKjS,WAAY,GAAKkS,MAAO,KAC3F,CAAEnS,KAAM,OAAQgS,OAAQ,EAAGC,OAAQ,GAAIC,QAAS,EAAGjS,WAAY,EAAKkS,MAAO,KAIlD/U,EAAAgV,YAAqC,CAAC,SAAU,SAAU,UAAW,aAAc,aAAc,cAAe,OAAQ,cAAe,SAAU,UAAW,kBAAmB,aAAc,kBAAmB,SAAU,aAAc,eACxOhV,EAAWiV,YAA8B,wCACzCjV,EAAWkV,YAAW,EACzBlV,EAAWmV,YAAW,GAGtBnV,EAAcoV,eAAW,MACzBpV,EAASqV,UAAW,GACpBrV,EAAAsV,OAAoC,EAAnBtV,EAAOqV,UACxBrV,EAAkBuV,mBAAW,KAC1BvV,EAAWwV,YAAW,EACtBxV,EAAYyV,aAAW,EACvBzV,EAAc0V,eAAW,GACzB1V,EAAgB2V,iBAAW,IAC3B3V,EAAa4V,cAAW,IACxB5V,EAAa6V,cAAW,EACxB7V,EAAmB8V,oBAAW,EAC9B9V,EAAgB+V,iBAAW,MAC3B/V,EAAAgW,mBAA2D,CAAC,CAAC,KAAM,IAAM,MAAO,CAAC,KAAM,KAAM,OAC7FhW,EAAAiW,mBAA2D,CAAC,CAAC,EAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IACxFjW,EAAckW,eAAWlW,EAAO+V,kBAAoB,EAAM/V,EAAOgW,mBAAmB,GAAGG,OAAOnW,EAAOgW,mBAAmB,IAAII,QAAO,CAACC,EAAGC,IAAMhN,KAAKiN,IAAIF,EAAGC,MAC5JtW,EAAMwW,OAA2BtJ,EAAU,CAC3D,CAAEtK,KAAM,eAAgB6T,gBAAgB,EAAOC,aAAa,EAAOC,WAAY,EAAGC,YAAY,GAC9F,CAAEhU,KAAM,QAAS6T,gBAAgB,EAAOC,aAAa,EAAOC,WAAY,EAAGC,YAAY,GACvF,CAAEhU,KAAM,WAAY6T,gBAAgB,EAAOC,aAAa,EAAMC,WAAY,EAAGC,YAAY,GACzF,CAAEhU,KAAM,kBAAmB6T,gBAAgB,EAAMC,aAAa,EAAOC,WAAY,EAAGC,YAAY,KAE7E5W,EAAY6W,aAAW,EACvB7W,EAAa8W,cAAW,EAC3B9W,EAAA+W,wBAAkCzN,KAAKiN,IAAIvW,EAAO6W,aAAc7W,EAAO8W,cAAc,GAClF9W,EAAUgX,WAA+B9J,EAAU,CACtE,CAAEtK,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KACxG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,KACtG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACtG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,KACvG,CAAEvU,KAAM,UAAWqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAClG,CAAEvU,KAAM,UAAWqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACjG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACrG,CAAEvU,KAAM,UAAWqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACjG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,KAC3G,CAAEvU,KAAM,UAAWqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,KAChG,CAAEvU,KAAM,YAAaqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAEvU,KAAM,UAAWqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,KAC/F,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,KACxG,CAAEvU,KAAM,aAAcqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,OAE3FnX,EAAaoX,cAA+BlK,EAAU,CAEzE,CAAEtK,KAAM,SAAUqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAGzH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACtH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KACrH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,KACrH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KAEpH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,CAAC,GAAI,KACzH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,KACzH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KAC3H,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KAC1H,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,KACzH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAChI,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KAC5H,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KAE5H,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACvH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KAC1H,CAAEvU,KAAM,kBAAmBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KAC3H,CAAEvU,KAAM,kBAAmBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACzH,CAAEvU,KAAM,kBAAmBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KAC1I,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACvH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACtH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACtH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KAErH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KACxH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAKC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KACzH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACnH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAKC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,KACvH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KACrH,CAAEvU,KAAM,gBAAiBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACxH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAClH,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjH,CAAEvU,KAAM,mBAAoBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,KACzJ,CAAEvU,KAAM,eAAgBqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,KACrJ,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,KAC7H,CAAEvU,KAAM,cAAeqU,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,OAEvGnX,EAAAqX,wBAAiD,CAAC,EAAK,KAAO,KAAO,KAAO,KAAO,MACtFrX,EAAoBsX,qBAAW,GAC5BtX,EAAmBuX,oBAAuCrK,EAAU,CACvF,CAAEtK,KAAM,QAAS4U,KAAM,KAAOC,SAAU,EAAKC,cAAe,GAC5D,CAAE9U,KAAM,QAAS4U,KAAM,IAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAE9U,KAAM,OAAQ4U,KAAM,GAAKC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,QAAS4U,KAAM,IAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,MAAO4U,KAAM,EAAKC,SAAU,IAAKC,eAAgB,GACzD,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,MAAO4U,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,OAAQ4U,KAAM,IAAKC,UAAW,IAAMC,cAAe,GAC3D,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,MAAO4U,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,KAAM4U,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAC1D,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAExD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAC1D,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAExD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAC1D,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAExD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAE9U,KAAM,OAAQ4U,KAAM,GAAMC,UAAW,EAAKC,eAAgB,GAEhE,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GAC1D,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,MAAO4U,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAE9U,KAAM,OAAQ4U,KAAM,IAAOC,SAAU,EAAKC,cAAe,KAIjC1X,EAAS2X,UAA8BzK,EAAU,CACpE,CAAEtK,KAAM,OAAQyR,KAAI,EAAqBuD,MAAO,GAChD,CAAEhV,KAAM,YAAayR,KAAI,EAAyBuD,MAAO,GACzD,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,GAClD,CAAEhV,KAAM,WAAYyR,KAAI,EAAsBuD,MAAO,KACrD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,IACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,WAAYyR,KAAI,EAAsBuD,MAAO,KACrD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,IACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,WAAYyR,KAAI,EAAsBuD,MAAO,KACrD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,IACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,UAAWyR,KAAI,EAAsBuD,MAAO,GACpD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,GAAsBuD,MAAO,IACrD,CAAEhV,KAAM,UAAWyR,KAAI,GAAsBuD,MAAO,IACpD,CAAEhV,KAAM,UAAWyR,KAAI,GAAsBuD,MAAO,GACpD,CAAEhV,KAAM,UAAWyR,KAAI,GAAsBuD,MAAO,GACpD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,KACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,IACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,IACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,GACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,KACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,KACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,IACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,GACtD,CAAEhV,KAAM,WAAYyR,KAAI,GAAuBuD,MAAO,GACtD,CAAEhV,KAAM,UAAWyR,KAAI,GAAqBuD,MAAO,KACnD,CAAEhV,KAAM,UAAWyR,KAAI,GAAqBuD,MAAO,KACnD,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,IAClD,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,GAClD,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,GAElD,CAAEhV,KAAM,UAAWyR,KAAI,GAAuBuD,MAAO,IAC3D,CAAEhV,KAAM,UAAWyR,KAAI,GAAuBuD,MAAO,GACrD,CAAEhV,KAAM,UAAWyR,KAAI,GAAuBuD,MAAO,GAErD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GAC7C,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,IACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,GACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAoBuD,MAAO,KACnD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,IACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,GACxD,CAAEhV,KAAM,WAAYyR,KAAI,EAAyBuD,MAAO,KAE3D,CAAEhV,KAAM,YAAayR,KAAI,EAAoBuD,MAAO,IACjD,CAAEhV,KAAM,YAAayR,KAAI,EAAyBuD,MAAO,IACzD,CAAEhV,KAAM,kBAAmByR,KAAI,EAAoBuD,MAAO,GAE1D,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,GAClD,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,IAClD,CAAEhV,KAAM,SAAUyR,KAAI,GAAqBuD,MAAO,MAG/B5X,EAAY6X,aAA8B3K,EAAU,CACvE,CAAEtK,KAAM,OAAQyR,KAAI,EAAqBuD,MAAO,GAChD,CAAEhV,KAAM,YAAayR,KAAI,EAAyBuD,MAAO,GACzD,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,GAClD,CAAEhV,KAAM,SAAUyR,KAAI,EAA6BuD,MAAO,GAC1D,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,GAClD,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,IAClD,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,IAClD,CAAEhV,KAAM,QAASyR,KAAI,EAAsBuD,MAAO,IAClD,CAAEhV,KAAM,MAAOyR,KAAI,EAAoBuD,MAAO,GAC9C,CAAEhV,KAAM,QAASyR,KAAI,GAAsBuD,MAAO,IAClD,CAAEhV,KAAM,SAAUyR,KAAI,GAAuBuD,MAAO,IACpD,CAAEhV,KAAM,SAAUyR,KAAI,GAAuBuD,MAAO,IACpD,CAAEhV,KAAM,OAAQyR,KAAI,GAAqBuD,MAAO,IAChD,CAAEhV,KAAM,OAAQyR,KAAI,GAAqBuD,MAAO,GAChD,CAAEhV,KAAM,OAAQyR,KAAI,GAAqBuD,MAAO,KAGhC5X,EAAS8X,UAA8B5K,EAAU,CACvE,CAAEtK,KAAM,KAAMmV,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,KACrC,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACrC,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACrC,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACrC,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACzC,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACzC,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7C,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEnV,KAAM,cAAemV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjD,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACtC,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACrC,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC5C,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAEnV,KAAM,YAAamV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC/C,CAAEnV,KAAM,YAAamV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC/C,CAAEnV,KAAM,YAAamV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,KAClD,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAG,EAAG,EAAE,OAEhD/X,EAAYgY,aAA8B9K,EAAU,CAEvE,CAAEtK,KAAM,SAAUmV,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAE7D,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAC7C,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KAC7C,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC7C,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC7C,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC7C,CAAEnV,KAAM,KAAMmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC7C,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACjD,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KACrD,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACrD,CAAEnV,KAAM,cAAemV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACzD,CAAEnV,KAAM,iBAAkBmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7D,CAAEnV,KAAM,oBAAqBmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjE,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAEnV,KAAM,cAAemV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACxD,CAAEnV,KAAM,cAAemV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACxD,CAAEnV,KAAM,cAAemV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC1D,CAAEnV,KAAM,gBAAiBmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7D,CAAEnV,KAAM,gBAAiBmV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7D,CAAEnV,KAAM,cAAemV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC3D,CAAEnV,KAAM,cAAemV,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC3D,CAAEnV,KAAM,gBAAiBmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,KACpE,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,OAE1H/X,EAAAiK,gBAA0B,MAC1BjK,EAAAiY,oBAA8B,MAC9BjY,EAAiBkY,kBAAW,GAC5BlY,EAAqBmY,sBAAW,GAChCnY,EAA8BoY,+BAAW,EACzCpY,EAAwBqY,yBAAW,EACnCrY,EAAWsY,aAAY,GAAKtY,EAAOqY,0BAA4B,EAC/DrY,EAAsBuY,uBAAW,GACjCvY,EAAiBwY,kBAAW,GAC5BxY,EAAAyY,iCAA2C,IAC3CzY,EAAyB0Y,0BAAW,EACpC1Y,EAAY2Y,cAAY,GAAK3Y,EAAO0Y,2BAA6B,EACjE1Y,EAAA4Y,oBAA8B,KAC9B5Y,EAAe6Y,gBAAW,IAC1B7Y,EAAmB8Y,oBAAW,GAC9B9Y,EAAkB+Y,mBAAW,EAChC/Y,EAAmBgZ,oBAAW,EAC9BhZ,EAAiBiZ,kBAAW,GAC5BjZ,EAAgBkZ,iBAAW,EACxBlZ,EAAoBmZ,qBAAW,EAC/BnZ,EAAoBoZ,qBAAW,GAC/BpZ,EAAoBqZ,qBAAW,EAC/BrZ,EAAoBsZ,qBAAW,GAC/BtZ,EAAkBuZ,mBAAW,EAC7BvZ,EAAkBwZ,mBAAW,GAC7BxZ,EAAayZ,cAAW,EACxBzZ,EAAgB0Z,iBAAW,GAC3B1Z,EAAS2Z,UAAW,GACpB3Z,EAAY4Z,aAAW,EACvB5Z,EAAQ6Z,SAAW,EACnB7Z,EAAQ8Z,SAAW9Z,EAAO4Z,aAAe5Z,EAAO0Z,iBAChD1Z,EAAA+Z,uBAAuD,EAAtB/Z,EAAO6W,aACxC7W,EAAuBga,wBAAa,CAAC,GAAW,EAAM,GAAM,EAAM,GAAM,GAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,EAAM,EAAK,GAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,EAAK,GAAO,GAAM,EAAM,EAAK,IAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,IAAW,IAAW,EAAM,EAAK,GAAO,EAAK,GAAO,EAAK,GAAKC,KAAI5D,GAAK/M,KAAK0C,KAAKqK,GAAKrW,EAAO0Z,mBACvV1Z,EAAAka,gBAA0Bla,EAAOga,wBAAwBzY,OACzDvB,EAAAma,iBAA2Bna,EAAOka,iBAAmB,EACrDla,EAAYoa,aAAW,IACvBpa,EAASqa,UAAW,IACpBra,EAASsa,UAAW,EACpBta,EAAaua,cAAW,EACxBva,EAAawa,cAAW,IACxBxa,EAAeya,gBAAW,EAC1Bza,EAAe0a,gBAAW,EAC1B1a,EAAe2a,iBAAY,GAC3B3a,EAAe4a,gBAAW,GAC1B5a,EAAe6a,iBAAY,GAC3B7a,EAAe8a,gBAAW,GAC1B9a,EAAmB+a,qBAAY,EAC/B/a,EAAmBgb,oBAAW,EAC9Bhb,EAAaib,eAAY,EACzBjb,EAAakb,cAAW,EACxBlb,EAAAwM,eAAyB,IACzBxM,EAAAmb,aAAuBnb,EAAOwM,eAAiB,EAC/CxM,EAAQob,SAgtBnC,WACI,MAAMtS,EAAqB,IAAIK,aAAanJ,EAAOwM,eAAiB,GACpE,IAAK,IAAIxD,EAAY,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IACnDF,EAAKE,GAAKM,KAAK+C,IAAIrD,EAAIM,KAAK6C,GAAK,EAAMnM,EAAOwM,gBAElD,OAAO1D,CACX,CAttBoDuS,GAEzBrb,EAAAsb,wBAAoC,CAAC,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,GAAK,IAAM,GAAK,MAAQ,GAAK,GAAK,GAAK,MAAQ,GAAK,IAAM,GAAK,GAAK,EAAG,KAAM,OAAQ,IAAK,OAAQ,KAAM,EAAG,KAAM,IAAK,KAAM,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACxVtb,EAAAub,0BAAgD,CACnE,EAAG,EACH,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,GAAK,GACL,GAAK,GACL,IAAM,GACN,GAAK,GACL,MAAQ,GACR,GAAK,GACL,GAAK,GACL,GAAK,GACL,MAAQ,GACR,GAAK,GACL,IAAM,GACN,GAAK,GACL,GAAK,GACL,EAAG,GACH,KAAM,GACN,OAAQ,GACR,IAAK,GACL,OAAQ,GACR,KAAM,GACN,EAAG,GACH,KAAM,GACN,IAAK,GACL,KAAM,GACN,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,IAAK,GACL,IAAK,IAGcvb,EAAmBwb,oBAAW,EAC9Bxb,EAAmByb,oBAAW,EAC9Bzb,EAAqB0b,sBAAW,GAChC1b,EAAsB2b,uBAAW,GAGjC3b,EAAgC4b,iCAAW,IAC3C5b,EAA+B6b,gCAAW,GAC1C7b,EAA8B8b,+BAAW,EACzC9b,EAAmB+b,oBAAW,IAE9B/b,EAAegc,gBAAW,EAC1Bhc,EAAkBic,mBAAW,GAC7Bjc,EAAekc,gBAAW,IAC1Blc,EAAqBmc,uBAAY,EACpCnc,EAAAoc,iBAA0C,CAAC,SAAU,YAElDpc,EAAmBqc,oBAAW,GAC9Brc,EAAoBsc,qBAAW,GAC/Btc,EAA2Buc,4BAAW,EAEtCvc,EAAgBwc,iBAAW,GAC3Bxc,EAAsByc,uBAAW,GACjCzc,EAA2B0c,4BAAsCxP,EAAU,CAC9F,CAAEtK,KAAM,OAA0B+Z,aAAc,KAAgDC,YAAa,OAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,MAC3Q,CAAEra,KAAM,aAA0B+Z,aAAY,EAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,MAC3Q,CAAEra,KAAM,aAA0B+Z,aAAY,EAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,OAC3Q,CAAEra,KAAM,gBAA0B+Z,aAAY,EAAkDC,YAAa,UAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,KAC3Q,CAAEra,KAAM,SAA0B+Z,aAAY,EAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,iBAC3Q,CAAEra,KAAM,oBAA0B+Z,aAAqD,EAASC,YAAa,WAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU/c,EAAO8W,cAAc,EAAKkG,OAAQ,KAA4BC,sBAAuB,QAC3Q,CAAEra,KAAM,oBAA0B+Z,aAAqD,GAASC,YAAa,aAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU/c,EAAO8W,cAAc,EAAKkG,OAAQ,KAA4BC,sBAAuB,QAC3Q,CAAEra,KAAM,oBAA0B+Z,aAAY,GAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,QAC3Q,CAAEra,KAAM,aAA0B+Z,aAAY,GAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,SAA0B+Z,aAAY,GAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,EAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,eAA0B+Z,aAAY,GAAkDC,YAAa,gBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA0B,EAAUC,sBAAuB,MAC3Q,CAAEra,KAAM,qBAA0B+Z,aAAY,EAAkDC,YAAa,kBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,iBAA0B+Z,aAAY,GAAkDC,YAAa,mBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU/c,EAAOqT,gBAAmB2J,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,gBAA0B+Z,aAAY,GAAkDC,YAAa,iBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,OAC3Q,CAAEra,KAAM,mBAA0B+Z,aAAY,GAAkDC,YAAa,WAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,KACjR,CAAEra,KAAM,iBAA0B+Z,aAAY,GAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,KAC3Q,CAAEra,KAAM,gBAA0B+Z,aAAY,GAAkDC,YAAa,YAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAQ,KAA4BC,sBAAuB,KACrQ,CAAEra,KAAM,aAA0B+Z,aAAY,GAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,GAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,YAA0B+Z,aAAY,GAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,GAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,iBAA0B+Z,aAAY,GAAkDC,YAAa,kBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,GAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,eAA0B+Z,aAAY,GAAkDC,YAAa,gBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,GAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,iBAA0B+Z,aAAY,GAAkDC,YAAa,WAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAiC,GAAGC,sBAAuB,MAC3Q,CAAEra,KAAM,mBAA0B+Z,aAAY,GAAkDC,YAAa,cAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAiC,GAAGC,sBAAuB,MAC3Q,CAAEra,KAAM,aAA0B+Z,aAAY,GAAkDC,YAAa,aAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,yBAA0B+Z,aAAY,GAAkDC,YAAa,WAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,sBAA0B+Z,aAAY,GAAkDC,YAAa,aAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA6B,EAAOC,sBAAuB,MAC3Q,CAAEra,KAAM,SAA0B+Z,aAAY,GAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,EAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,cAA0B+Z,aAAY,GAAkDC,YAAa,eAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAuB,EAAaC,sBAAuB,MAC3Q,CAAEra,KAAM,SAA0B+Z,aAAY,GAAkDC,YAAa,SAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAyB,EAAWC,sBAAuB,MAC3Q,CAAEra,KAAM,UAA0B+Z,aAAY,GAAkDC,YAAa,UAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAA0B,EAAUC,sBAAuB,MAC3Q,CAAEra,KAAM,gBAA0B+Z,aAAY,GAAkDC,YAAa,iBAAuBC,YAAY,EAAQC,UAAU,EAAUC,SAAU,EAA0BC,OAAwB,GAAYC,sBAAuB,QAYxPjd,EAAakd,cAAkChQ,EAAU,CAClF,CAAEtK,KAAM,OAAQ5B,QAAShB,EAAOob,UAChC,CAAExY,KAAM,WAAY5B,QA8kBtB,WACI,MAAM8H,EAAqB,IAAIK,aAAanJ,EAAOwM,eAAiB,GACpE,IAAK,IAAIxD,EAAY,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IACnDF,EAAKE,GAAKM,KAAK6T,KAAK7T,KAAK+C,IAAIrD,EAAIM,KAAK6C,GAAK,EAAMnM,EAAOwM,kBAAoBlD,KAAK6C,GAAK,GAE1F,OAAOrD,CACX,CAplB+BsU,IAC7B,CAAExa,KAAM,cAAe5B,QAASsL,KAChC,CAAE1J,KAAM,WAAY5B,QAAS0L,KAC7B,CAAE9J,KAAM,OAAQ5B,QAAS0L,GAAgB,IACzC,CAAE9J,KAAM,YAAa5B,QAklBvB,SAA+Bqc,EAAgB,GAC3C,MAAMvU,EAAqB,IAAIK,aAAanJ,EAAOwM,eAAiB,GACpE,IAAK,IAAIxD,EAAY,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IACnDF,EAAKE,GAAKM,KAAKiN,KAAK,EAAKjN,KAAKsC,IAAI,EAAKtC,KAAK6T,KAAK7T,KAAK+C,IAAIrD,EAAIM,KAAK6C,GAAK,EAAMnM,EAAOwM,iBAAmB6Q,IAE5G,OAAOvU,CACX,CAxlBgCwU,CAAsB,IACjD,CAAE1a,KAAM,aAAc5B,QA0nB1B,WACO,MAAM8H,EAAO,IAAIK,aAAanJ,EAAOwM,eAAiB,GACtD,IAAK,IAAIxD,EAAI,EAAGA,EAAIhJ,EAAOwM,eAAiB,EAAGxD,IAC3CF,EAAKE,GAAKM,KAAKiB,MAAMjB,KAAK+C,IAAIrD,EAAIM,KAAK6C,GAAK,EAAMnM,EAAOwM,iBAE7D,OAAO1D,CACd,CAhoBmCyU,MAITvd,EAAgBwd,iBAAkCtQ,EAAU,CAC/E,CAAEtK,KAAM,KAAM5B,QAASsL,EAAmB,MAC1C,CAAE1J,KAAM,KAAM5B,QAASsL,EAAmB,MAC1C,CAAE1J,KAAM,QAAS5B,QAASsL,EAAmB,OAC7C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,MAC3C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,EAAI,IAC/C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,KAC3C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,EAAI,IAC/C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,MAC3C,CAAE1J,KAAM,QAAS5B,QAASsL,EAAmB,OAC7C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,MAC3C,CAAE1J,KAAM,MAAO5B,QAASsL,EAAmB,QAKxBtM,EAAeyd,gBAAW,GAG1Bzd,EAAU0d,WAA+BxQ,EAAU,CACtE,CAAEtK,KAAM,OACJ+a,UAAW,OACXC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAmC,GACrGC,WAAY,iBACZC,WAAY,CAAE,4JAA6J,gBAC/K,CAAEtb,KAAM,cACJ+a,UAAW,SACXC,UAAW,IAAKC,WAAY,IAAKC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAmC,GACzGC,WAAY,cACZC,WAAY,CAAE,yFAA0F,oGAAqG,qCACjN,CAAEtb,KAAM,QACJ+a,UAAW,QACXC,UAAW5d,EAAOqP,SAAWrP,EAAOoP,SAAUyO,WAAYvU,KAAK6U,MAAMne,EAAOqP,SAAWrP,EAAOoP,UAAY,GAAI0O,SAAS,EAAMC,kBAAmB/d,EAAOoP,SAAU4O,iBAAmC,GACpMC,WAAY,aACZC,WAAY,CAAE,kFAAmF,4LAA6L,wFAAyF,oCAC3X,CAAEtb,KAAM,cACJ+a,UAAW,SACXC,UAAgC,EAArB5d,EAAO+P,YAAiB8N,WAAY7d,EAAO+P,YAAa+N,SAAS,EAAMC,mBAAoB/d,EAAO+P,YAAaiO,iBAAmC,GAC7JC,WAAY,cACZC,WAAY,CAAE,iKAAkK,qJAAsJ,iCAC1U,CAAEtb,KAAM,WACJ+a,UAAW,WACXC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAmC,GACrGC,WAAY,iBACZC,WAAY,CAAE,yJAA0J,yNAA0N,4GAA6G,gBACnf,CAAEtb,KAAM,cACJ+a,UAAW,YACXC,UAAW5d,EAAOmV,YAAa0I,WAAYvU,KAAK6U,KAAKne,EAAOmV,YAAc,GAAI2I,SAAS,EAAOC,kBAAmBzU,KAAK6U,MAAMne,EAAOmV,YAAc,GAAM6I,iBAAmC,GAC1LC,WAAY,cACZC,WAAY,CAAE,0FAA2F,qOAAsO,wdAAyd,qNAAsN,iCAClgC,CAAEtb,KAAM,MACJ+a,UAAW,MACXC,UAAW5d,EAAOsV,OAAQuI,WAAYvU,KAAK6U,KAAKne,EAAOsV,OAAS,GAAIwI,SAAS,EAAOC,kBAAmB,EAAGC,iBAAoC,EAC9IC,WAAY,qBACZC,WAAY,CAAE,sFAAuF,+KAAgL,oCACzR,CAAEtb,KAAM,SACJ+a,UAAW,SACXC,UAAW5d,EAAO+P,YAAa8N,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,EACvHC,WAAY,oBACZC,WAAY,CAAE,oFAAqF,8EAA+E,8BACtL,CAAEtb,KAAM,aACJ+a,UAAW,aACXC,UAAW5d,EAAOgc,gBAAgB,EAAG6B,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EACjIC,WAAY,wBACZC,WAAY,CAAE,uGAAwG,kFAAmF,8BAC7M,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAE,mHAAoH,6KAA8K,qGAAsG,qCAC1Z,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,oHAAqH,6KAA8K,qGAAsG,qCAC1Z,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACzZ,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,oHAAqH,6KAA8K,qGAAsG,qCAC1Z,CAAEtb,KAAM,cACJ+a,UAAW,cACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,sHAAuH,6KAA8K,qGAAsG,qCAC5Z,CAAEtb,KAAM,cACJ+a,UAAW,cACXC,UAAW5d,EAAO6Y,gBAAiBgF,WAAY7d,EAAO6Y,gBAAiBiF,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAChJC,WAAY,cACZC,WAAY,CAAC,qGAAsG,0LAA2L,2IAA4I,sCAC9b,CAAEtb,KAAM,SACJ+a,UAAW,SACXC,UAAW5d,EAAOqa,UAAYra,EAAOsa,UAAWuD,WAAY7d,EAAOoa,aAAc0D,SAAS,EAAOC,mBAAoB/d,EAAOoa,aAAc4D,iBAAmC,EAC7KC,WAAY,oBACZC,WAAY,CAAC,qFAAsF,8PAA+P,sCACtW,CAAEtb,KAAM,gBACJ+a,UAAW,gBACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAoC,EACxGC,WAAY,gBACZC,WAAY,CAAC,4HAA6H,oKAAqK,0CACnT,CAAEtb,KAAM,cACJ+a,UAAW,SACXC,UAAW5d,EAAOwa,cAAgBxa,EAAOua,cAAesD,WAAYvU,KAAK6U,MAAMne,EAAOwa,cAAgBxa,EAAOua,eAAiB,GAAIuD,SAAS,EAAMC,mBAAoB,IAAKC,iBAAmC,GAC7MC,WAAY,cACZC,WAAY,CAAC,8FAA+F,gSAAiS,sCACjZ,CAAEtb,KAAM,gBACJ+a,UAAW,gBACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAoC,EACxGC,WAAY,gBACZC,WAAY,CAAC,yFAA0F,4KAA6K,8BACxR,CAAEtb,KAAM,gBACJ+a,UAAW,gBACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAoC,EACxGC,WAAY,gBACZC,WAAY,CAAC,oIAAqI,+NAAgO,0CACtX,CAAEtb,KAAM,YACJ+a,UAAW,YACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkC,GACvGC,WAAY,iBACZC,WAAY,CAAC,qHAAsH,+GAC/H,gCAAiC,6BAA8B,qCAAsC,yCAA0C,uCAAwC,yCAA0C,uCAAwC,yCAA0C,wCAAyC,wCAAyC,8BAC7Y,CAAEtb,KAAM,YACJ+a,UAAW,YACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAoC,EACzGC,WAAY,gBACZC,WAAY,CAAC,0GAA2G,4LAA6L,8BACzT,CAAEtb,KAAM,YACJ+a,UAAW,YACXC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkC,GACrGC,WAAY,iBACZC,WAAY,CAAC,2SAA4S,qKAAsK,gBACne,CAAEtb,KAAM,YACJ+a,UAAW,QACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACvGC,WAAY,YACZC,WAAY,CAAC,+EAAgF,wjBAAyjB,+PAAgQ,0LAA2L,8BACrlC,CAAEtb,KAAM,cACJ+a,UAAW,QACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EAC3GC,WAAY,cACZC,WAAY,CAAC,iFAAkF,0jBAA2jB,+PAAgQ,0LAA2L,8BACzlC,CAAEtb,KAAM,YACJ+a,UAAW,WACXC,UAAW5d,EAAOuc,4BAA4B,EAAGsB,WAAYvU,KAAKiB,MAAMvK,EAAOuc,4BAA8B,GAAIuB,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EAC9LC,WAAY,uBACZC,WAAY,CAAC,0FAA2F,0IAA2I,8BACvP,CAAEtb,KAAM,aACJ+a,UAAW,aACXC,UAAW5d,EAAOqc,oBAAoB,EAAGwB,WAAYvU,KAAKiB,MAAMvK,EAAOqc,oBAAsB,GAAIyB,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EAC9KC,WAAY,6BACZC,WAAY,CAAC,iGAAkG,sJAAuJ,8BAC1Q,CAAEtb,KAAM,OACJ+a,UAAW,OACXC,UAAW5d,EAAO0P,iBAAiB,EAAGmO,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAiC,EAC5HC,WAAY,0BACZC,WAAY,CAAC,wGAAyG,4KAA6K,8BACvS,CAAEtb,KAAM,aACJ+a,UAAW,aACXC,UAAW5d,EAAOwP,eAAgBqO,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC1HC,WAAY,wBACZC,WAAY,CAAC,4FAA6F,8GAA+G,2CAE7N,CAAEtb,KAAM,SACJ+a,UAAW,SACXC,UAAW5d,EAAOwV,YAAc,EAAGqI,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,EAC3HC,WAAY,oBACZC,WAAY,CAAC,6FAA8F,oHAAqH,8BACpO,CAAEtb,KAAM,cACJ+a,UAAW,YACXC,UAAW5d,EAAOwT,qBAAuB,EAAGqK,WAAY7d,EAAOwT,qBAAuB,EAAGsK,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAClKC,WAAY,6BACZC,WAAY,CAAC,qGAAsG,iLAAkL,8BACzS,CAAEtb,KAAM,eACJ+a,UAAW,aACXC,UAAW5d,EAAOyT,sBAAwB,EAAGoK,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACrIC,WAAY,sBACZC,WAAY,CAAC,uGAAwG,wPAAyP,8BAClX,CAAEtb,KAAM,gBACJ+a,UAAW,YACXC,UAAW5d,EAAOwT,qBAAuB,EAAGqK,WAAY7d,EAAOwT,qBAAuB,EAAGsK,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EACtKC,WAAY,+BACZC,WAAY,CAAC,qGAAsG,iLAAkL,8BACzS,CAAEtb,KAAM,iBACJ+a,UAAW,aACXC,UAAW5d,EAAOyT,sBAAwB,EAAGoK,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAuC,EACzIC,WAAY,wBACZC,WAAY,CAAC,uGAAwG,wPAAyP,8BAClX,CAAEtb,KAAM,cACJ+a,UAAW,cACXC,UAAW5d,EAAOka,gBAAkB,EAAG2D,WAAY7d,EAAOma,iBAAkB2D,SAAS,EAAOC,mBAAoB/d,EAAOma,iBAAkB6D,iBAAuC,EAChLC,WAAY,cACZC,WAAY,CAAC,+FAAgG,sLAAuL,sCACxS,CAAEtb,KAAM,UACJ+a,UAAW,UACXC,UAAW5d,EAAOic,mBAAqB,EAAG4B,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAClIC,WAAY,wBACZC,WAAY,CAAC,oGAAqG,2JAA4J,8BAClR,CAAEtb,KAAM,aACJ+a,UAAW,WACXC,UAAW5d,EAAOmV,YAAa0I,WAAYvU,KAAK6U,KAAKne,EAAOmV,YAAc,GAAI2I,SAAS,EAAOC,kBAAmBzU,KAAK6U,MAAMne,EAAOmV,YAAc,GAAM6I,iBAAmC,GAC1LC,WAAY,aACZC,WAAY,CAAC,6FAA8F,qSAAsS,yJAA0J,iCAC/iB,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACzZ,CAAEtb,KAAM,cACJ+a,UAAW,OACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,cACZC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACzZ,CAAEtb,KAAM,iBACJ+a,UAAW,iBACXC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGK,uBAAuB,EAAMJ,iBAAmC,GACpIC,WAAY,iBACZC,WAAY,CAAC,oIAAqI,gBACtJ,CAAEtb,KAAM,iBACJ+a,UAAW,cACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,iBACZC,WAAY,CAAC,+EAAgF,sRACzF,gCAAiC,6BAA8B,qCAAsC,yCAA0C,uCAAwC,yCAA0C,uCAAwC,yCAA0C,wCAAyC,wCAAyC,8BAC7Y,CAAEtb,KAAM,WACJ+a,UAAW,WACXC,UAAW5d,EAAOgZ,oBAAqB6E,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC/HC,WAAY,oBACZC,WAAY,CAAC,iGAAkG,gOAAiO,8BACpV,CAAEtb,KAAM,SACJ+a,UAAW,SACXC,UAAW5d,EAAOiZ,kBAAmB4E,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC7HC,WAAY,kBACZC,WAAY,CAAC,6FAA8F,sMAAuM,8BACtT,CAAEtb,KAAM,YACJ+a,UAAW,YACXC,UAAW5d,EAAOkZ,iBAAkB2E,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC5HC,WAAY,iBACZC,WAAY,CAAC,+FAAgG,oKAAqK,kCACtR,CAAEtb,KAAM,gBACJ+a,UAAW,iBACXC,UAA8C,EAAnC5d,EAAOuc,4BAA+BsB,WAAY7d,EAAOuc,4BAA6BuB,SAAS,EAAMC,mBAAoB/d,EAAOuc,4BAA6ByB,iBAAmC,GAC3MC,WAAY,iBACZC,WAAY,CAAE,uKAAwK,+JAAgK,iCAC1V,CAAEtb,KAAM,iBACJ+a,UAAW,iBACXC,UAAsC,EAA3B5d,EAAOqc,oBAAuBwB,WAAY7d,EAAOqc,oBAAqByB,SAAS,EAAMC,mBAAoB/d,EAAOqc,oBAAqB2B,iBAAmC,GACnLC,WAAY,kBACZC,WAAY,CAAE,8LAA+L,+JAAgK,iCACjX,CAAEtb,KAAM,eACJ+a,UAAW,eACXC,UAAyB,EAAd5d,EAAOsV,OAAUuI,WAAY7d,EAAOsV,OAAQwI,SAAS,EAAMC,mBAAoB/d,EAAOsV,OAAQ0I,iBAAoC,EAC7IC,WAAY,eACZC,WAAY,CAAE,8JAA+J,kOAAmO,2BACpZ,CAAEtb,KAAM,cACJ+a,UAAW,cACXC,UAA8B,EAAnB5d,EAAOwV,YAAeqI,WAAY7d,EAAOwV,YAAasI,SAAS,EAAMC,mBAAoB/d,EAAOwV,YAAawI,iBAAmC,GAC3JC,WAAY,cACZC,WAAY,CAAE,iKAAkK,yJAA0J,iCAC9U,CAAEtb,KAAM,kBACJ+a,UAAW,kBACXC,UAAkC,EAAvB5d,EAAOgc,gBAAmB6B,WAAY7d,EAAOgc,gBAAiB8B,SAAS,EAAMC,mBAAoB/d,EAAOgc,gBAAiBgC,iBAAmC,GACvKC,WAAY,kBACZC,WAAY,CAAE,6KAA8K,qKAAsK,iCACtW,CAAEtb,KAAM,kBACJ+a,UAAW,kBACXC,UAAW5d,EAAOyV,aAAcoI,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxHC,WAAY,kBACZC,WAAY,CAAE,uEAAwE,8BAC1F,CAAEtb,KAAM,uBACJ+a,UAAW,2BACXC,UAA+B,EAApB5d,EAAOyV,aAAgBoI,WAAY7d,EAAOyV,aAAcqI,SAAS,EAAMC,mBAAoB/d,EAAOyV,aAAcuI,iBAAmC,GAC9JC,WAAY,2BACZC,WAAY,CAAE,6EAA8E,iCAChG,CAAEtb,KAAM,iBACJ+a,UAAW,0BACXC,UAAW5d,EAAO0V,eAAgBmI,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC1HC,WAAY,0BACZC,WAAY,CAAE,8FAA+F,8BACjH,CAAEtb,KAAM,SACJ+a,UAAW,SACXC,UAAW5d,EAAOkQ,eAAgB2N,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC1HC,WAAY,oBACZC,WAAY,CAAE,wFAAyF,8EAA+E,8BAC1L,CAAEtb,KAAM,mBACJ+a,UAAW,mBACXC,UAAW5d,EAAOoQ,gBAAiByN,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC3HC,WAAY,mBACZC,WAAY,CAAE,mGAAoG,mFAAoF,8BAC1M,CAAEtb,KAAM,kBACJ+a,UAAW,kBACXC,UAAW5d,EAAOmQ,oBAAqB0N,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC/HC,WAAY,kBACZC,WAAY,CAAE,sGAAuG,uFAAwF,8BACjN,CAAEtb,KAAM,gBACJ+a,UAAW,gBACXC,UAAW5d,EAAOwQ,gBAAiBqN,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GAC3HC,WAAY,gBACZC,WAAY,CAAE,4GAA6G,qFAAsF,8BACrN,CAAEtb,KAAM,mBACJ+a,UAAW,mBACXC,UAAmC,EAAvB5d,EAAOka,gBAAmB,EAAG2D,WAAY7d,EAAOka,gBAAiB4D,SAAS,EAAMC,kBAA2C,EAAvB/d,EAAOka,gBAAmB8D,iBAAuC,EACjLC,WAAY,uBACZC,WAAY,CAAC,iKAAkK,sLAAuL,mCAC1W,CAAEtb,KAAM,4BACJ+a,UAAW,aACXC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAmC,GACxGC,WAAY,4BACZC,WAAY,CAAC,qFAAsF,0QAA0Q,yCAA0C,4CAA6C,2CAA4C,4CAA6C,yCAA0C,8CAA+C,yCAA0C,mCAAoC,qCAAsC,mCAAoC,mCAAoC,mCAAoC,gCAAiC,gC,6rBCv/Dn3B,SAAAG,EAAwEC,EAAYC,G,oBACnG,IAAkB,IAAAC,EAAAC,EAAAF,GAAIG,EAAAF,EAAAG,QAAED,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAAnB,IAAME,EAAGH,EAAAtR,MACb,GAAIyR,aAAeC,KAClBR,EAAQjc,YAAYwc,QACd,GAAmB,iBAARA,EACjBP,EAAQjc,YAAYJ,SAAS8c,eAAeF,SACtC,GAAmB,mBAARA,EACjBR,EAAiBC,EAAS,CAACO,WACrB,GAAI3d,MAAM8d,QAAQH,GACxBR,EAAiBC,EAASO,QACpB,GAAIA,GAAyB,oBAAXI,QAA0D,mBAAzBJ,EAAII,OAAOC,UACpEb,EAAiBC,EAAaa,EAAAN,SACxB,GAAIA,GAAOA,EAAIrgB,cAAgB6T,QAAUiM,aAAmBc,Q,IAElE,IAAkB,IAAAC,GAAAC,OAAA,EAAAb,EAAApM,OAAOrD,KAAK6P,KAAIU,EAAAF,EAAAV,QAAEY,EAAAX,KAAAW,EAAAF,EAAAV,OAAA,CAA/B,IAAMpM,EAAGgN,EAAAnS,MACPA,EAAQyR,EAAItM,GAST,GAAY,UAARA,EACS,iBAAVnF,EACVkR,EAAQkB,aAAa,QAASpS,GACpBlM,MAAM8d,QAAQH,IAASzR,GAA2B,oBAAX6R,QAA4D,mBAA3B7R,EAAM6R,OAAOC,UAC/FZ,EAAQkB,aAAa,QAASL,EAAI/R,GAAOqS,KAAK,MAE9C7d,QAAQ8d,KAAK,WAAanN,EAAM,WAAcnF,EAAQ,QAAWkR,EAAQqB,QAAU,kBAE9E,GAAY,UAARpN,EACV,GAAInF,GAASA,EAAM5O,cAAgB6T,O,IAClC,IAAuB,IAAAuN,GAAAC,OAAA,EAAApB,EAAApM,OAAOrD,KAAK5B,KAAM0S,EAAAF,EAAAjB,QAAEmB,EAAAlB,KAAAkB,EAAAF,EAAAjB,OAAA,CAAtC,IAAMoB,EAAQD,EAAA1S,MACd2S,KAAuCzB,EAAS0B,MAE5C1B,EAAS0B,MAAMD,GAAY3S,EAAM2S,GAGbzB,EAAS0B,MAAMC,YAAYF,EAAU3S,EAAM2S,GAEvE,C,uGAEDzB,EAAQkB,aAAajN,EAAKnF,OAEC,mBAAlB,EAEJkR,EAAS/L,GAAOnF,EACM,kBAAlB,EAENA,EAAOkR,EAAQkB,aAAajN,EAAK,IAChC+L,EAAQ4B,gBAAgB3N,GAG7B+L,EAAQkB,aAAajN,EAAKnF,EAE3B,C,uGAGDkR,EAAQjc,YAAYJ,SAAS8c,eAAeF,GAE7C,C,kGACD,OAAOP,CACR,CAEO,IAAM6B,EAAgB,6B,gUC8IhBC,E,eD5Ia,IAAmB7B,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA/e,OAAnB8e,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAC5C,OAAOpe,SAASse,cAAcC,yBAAyBjC,EAAKkB,OAC7D,EC2IagB,E,eDxIY,IAAmBlC,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA/e,OAAnB8e,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAU3C,IATA,IAAMK,EAA6Bze,SAAS0e,yBAQtCC,GAAqB,IAAIC,WAAYC,gBAAgB,2CAA+CvC,EAAKkB,OAAS,SAAU,iBAAiBsB,gBACnH,OAAzBH,EAAUI,YAChB/e,SAASgf,WAAWL,EAAUI,YAAY,GAC1CN,EAASre,YAAYue,EAAUI,YAGhC,OAAON,CACR,E,WC0HWQ,GACJd,EAAMc,GAAQ,W,IAAC,IAAmB3C,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA/e,OAAnB8e,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAAiBpc,SAASC,cAAcgf,GAAO3C,EAA/C,C,MAD9C,IAAmB,IAAA4C,EAAA1C,EAAA,+jBAA+jB2C,MAAM,MAAI/B,EAAA8B,EAAAxC,QAAAU,EAAAT,KAAAS,EAAA8B,EAAAxC,OAAA,C,EAA7kBU,EAAAjS,MAEd,C,iHACUiU,GAEV,GADMZ,EAAKY,GAAQ,W,IAAC,IAAmB9C,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA/e,OAAnB8e,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAA8Bpc,SAASqf,gBAAgBnB,EAAOkB,GAAO9C,EAArE,EACxC,IAAIgD,KAAKF,GAAO,CACnB,IAAMG,EAAgBH,EAAKI,QAAQ,KAAM,KACnChB,EAAKe,GAAiB,W,IAAC,IAAmBjD,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA/e,OAAnB8e,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAA8Bpc,SAASqf,gBAAgBnB,EAAOkB,GAAO9C,EAArE,CACrD,C,MALF,IAAmB,IAAAgB,EAAAd,EAAA,8vBAA8vB2C,MAAM,MAAIxB,GAAAL,EAAAZ,QAAAiB,GAAAhB,KAAAgB,GAAAL,EAAAZ,OAAA,C,EAA5wBiB,GAAAxS,MAMd,C,0GCjNYsU,GAitqBF,kBAAOC,GACVljB,KAAKmjB,YAAYC,O,CAGjB,8BAAOC,CAAwBzN,EAAc0N,GAE7C,IAAKtjB,KAAKujB,iBAAkB,CACxB,IAAIC,EACJ,OAAQ5N,GACJ,YACI4N,EAA2D,IAApDP,GAAYQ,YAAY,yBAC5CR,GAAYS,cAAcJ,EAAUL,GAAYS,cAAc5gB,QAC9DmgB,GAAYS,cAAcJ,GAAWK,OAAOV,GAAYQ,YAAY,0BAA4BR,GAAYS,cAAc5gB,SAC7G,MAEJ,UACI0gB,EAAyD,IAAlDP,GAAYQ,YAAY,uBAC5CR,GAAYW,YAAYN,EAAUL,GAAYW,YAAY9gB,QAC1DmgB,GAAYW,YAAYN,GAAWK,OAAOV,GAAYQ,YAAY,wBAA0BR,GAAYW,YAAY9gB,SACvG,MAGJ,QACI0gB,EAA2D,IAApDP,GAAYQ,YAAY,yBAC5CR,GAAYY,cAAcP,EAAUL,GAAYY,cAAc/gB,QAC9DmgB,GAAYY,cAAcP,GAAWK,OAAOV,GAAYQ,YAAY,0BAA4BR,GAAYY,cAAc/gB,SAIrH,IAAIghB,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUd,GAAYQ,YAAaK,EAAME,KAAKR,EAAKO,kBAAsC,IAIlDE,eAH/BhB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKS,gBAAoC,IAGXC,cAFnEjB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKU,eAAmC,IAEwBC,YADtGlB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKW,aAAiC,IAE1G,CACD,OAAQvO,GACJ,YAAgB,CACZ,MAAMwO,GAAoCC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FC,GAAyCH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FE,GAAoCJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FG,GAAyCL,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FI,GAAoCN,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FK,GAAyCP,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FM,GAAkCR,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxFO,GAAuCT,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7FQ,GAAkCV,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxFS,GAAuCX,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7FU,GAAkCZ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxFW,GAAuCb,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7FY,GAAiCd,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvFa,GAAsCf,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5Fc,GAAiChB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvFe,GAAsCjB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5FgB,GAAiClB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvFiB,GAAsCnB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5FkB,GAA+BpB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFmB,GAAoCrB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FoB,GAA+BtB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFqB,GAAoCvB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FsB,GAA+BxB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFuB,GAAoCzB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAEhG,IAaIwB,EAAkC,CAAEhC,iBAbN,SAAYK,EAA6Bd,GAAWkB,EAAiCjjB,EAAOsZ,qBAAwB,KAAO,IAAO,MAC5J4J,EAA2BnB,GAAWoB,GAAiC,OACvEC,EAA2BrB,GAAWsB,GAAiC,KAWAX,eAV/C,SAAYY,EAA2BvB,GAAWwB,EAA+BvjB,EAAOsZ,qBAAwB,KAAO,IAAO,MACtJkK,EAAyBzB,GAAW0B,GAA+B,OACnEC,EAAyB3B,GAAW4B,GAA+B,KAQuChB,cAPnF,SAAYiB,EAA0B7B,GAAW8B,EAA8B7jB,EAAOsZ,qBAAwB,KAAO,IAAO,MACnJwK,EAAwB/B,GAAWgC,GAA8B,OACjEC,EAAwBjC,GAAWkC,GAA8B,KAK0ErB,YAJtH,SAAYsB,EAAwBnC,GAAWoC,EAA4BnkB,EAAOsZ,qBAAwB,KAAO,IAAO,MAC7I8K,EAAsBrC,GAAWsC,GAA4B,OAC7DC,EAAsBvC,GAAWwC,GAA4B,MAIrE,OADA7C,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CACV,CAAC,UAAc,CAEZ,MAAMC,GAAkC3B,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxF0B,GAAuC5B,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7F2B,GAAkC7B,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxF4B,GAAuC9B,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7F6B,GAAkC/B,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxF8B,GAAuChC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7F+B,GAAgCjC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACtFgC,GAAqClC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC3FiC,GAAgCnC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACtFkC,GAAqCpC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC3FmC,GAAgCrC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACtFoC,GAAqCtC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC3FqC,GAA+BvC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFsC,GAAoCxC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FuC,GAA+BzC,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFwC,GAAoC1C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FyC,GAA+B3C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrF0C,GAAoC5C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1F2C,GAA6B7C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BACnF4C,GAAkC9C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gCACxF6C,GAA6B/C,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BACnF8C,GAAkChD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gCACxF+C,GAA6BjD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BACnFgD,GAAkClD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gCAE9F,IAaIwB,EAAkC,CAAEhC,iBAbN,SAAYiC,EAA2B1C,GAAW2C,EAA+B1kB,EAAOwZ,mBAAsB,KAAO,IAAO,MACtJmL,EAAyB5C,GAAW6C,GAA+B,OACnEC,EAAyB9C,GAAW+C,GAA+B,KAWIpC,eAV/C,SAAYqC,EAAyBhD,GAAWiD,EAA6BhlB,EAAOwZ,mBAAsB,KAAO,IAAO,MAChJyL,EAAuBlD,GAAWmD,GAA6B,OAC/DC,EAAuBpD,GAAWqD,GAA6B,KAQ2CzC,cAPnF,SAAY0C,EAAwBtD,GAAWuD,EAA4BtlB,EAAOwZ,mBAAsB,KAAO,IAAO,MAC7I+L,EAAsBxD,GAAWyD,GAA4B,OAC7DC,EAAsB1D,GAAW2D,GAA4B,KAK8E9C,YAJtH,SAAY+C,EAAsB5D,GAAW6D,EAA0B5lB,EAAOwZ,mBAAsB,KAAO,IAAO,MACvIqM,EAAoB9D,GAAW+D,GAA0B,OACzDC,EAAoBhE,GAAWiE,GAA0B,MAIjE,OADAtE,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CACV,CAED,QAAS,CACL,MAAMyB,GAAoCnD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FkD,GAAyCpD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FmD,GAAoCrD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FoD,GAAyCtD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FqD,GAAoCvD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCAC1FsD,GAAyCxD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC/FuD,GAAkCzD,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxFwD,GAAuC1D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7FyD,GAAkC3D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxF0D,GAAuC5D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7F2D,GAAkC7D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACxF4D,GAAuC9D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC7F6D,GAAiC/D,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvF8D,GAAsChE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5F+D,GAAiCjE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvFgE,GAAsClE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5FiE,GAAiCnE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACvFkE,GAAsCpE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC5FmE,GAA+BrE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFoE,GAAoCtE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FqE,GAA+BvE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFsE,GAAoCxE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAC1FuE,GAA+BzE,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACrFwE,GAAoC1E,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAEhG,IAaIwB,EAAkC,CAAEhC,iBAbN,SAAYyD,EAA4BlE,GAAWmE,EAAgClmB,EAAOoZ,qBAAwB,KAAO,IAAO,MAC1J+M,GAA4B,GAAMC,EAAgC9c,KAAKme,MAAM1F,EAAU,IAAQ,OAC/FsE,GAA4B,GAAMC,EAAgChd,KAAKme,MAAM1F,EAAU,IAAQ,KAWxBW,eAV/C,SAAY6D,EAA0BxE,GAAWyE,EAA8BxmB,EAAOoZ,qBAAwB,KAAO,IAAO,MACpJqN,GAA0B,GAAMC,EAA8Bpd,KAAKme,MAAM1F,EAAU,IAAQ,OAC3F4E,GAA0B,GAAMC,EAA8Btd,KAAKme,MAAM1F,EAAU,IAAQ,KAQeY,cAPnF,SAAYkE,EAAyB9E,GAAW+E,EAA6B9mB,EAAOoZ,qBAAwB,KAAO,IAAO,MACjJ2N,GAAyB,GAAMC,EAA6B1d,KAAKme,MAAM1F,EAAU,IAAQ,OACzFkF,GAAyB,GAAMC,EAA6B5d,KAAKme,MAAM1F,EAAU,IAAQ,KAKkDa,YAJtH,SAAYuE,EAAuBpF,GAAWqF,EAA2BpnB,EAAOoZ,qBAAwB,KAAO,IAAO,MAC3IiO,GAAuB,GAAMC,EAA2Bhe,KAAKme,MAAM1F,EAAU,IAAQ,OACrFwF,GAAuB,GAAMC,EAA2Ble,KAAKme,MAAM1F,EAAU,IAAQ,MAI7F,OADAL,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CACV,E,CAKF,8BAAOkD,CAAwBC,EAAY5F,GAC9C,GAAKtjB,KAAKujB,iBAWN,OAAON,GAAYkG,gBAAgBD,EAAM5F,GAXjB,CACxB,IAAIE,EAAsBP,GAAYkG,gBAAgBD,EAAM5F,GAE5D,IAAIQ,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUd,GAAYQ,YAAaK,EAAME,KAAKR,EAAKO,kBAAsC,IAIlDE,eAH/BhB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKS,gBAAoC,IAGXC,cAFnEjB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKU,eAAmC,IAEwBC,YADtGlB,GAAYQ,YAAaK,EAAME,KAAKR,EAAKW,aAAiC,IAE1G,C,CAME,sBAAOgF,CAAgBD,EAAY5F,GACtC,GAAKtjB,KAAKujB,iBAgBL,CAED,GAAIN,GAAYE,YAAYiG,IAAI9F,GAC5B,OAAOL,GAAYE,YAAYkG,IAAI/F,GAInC,GAAIA,EAAU4F,EAAKI,kBAAmB,CAGjD,IAamBvD,EAAkC,CAAEhC,iBAbrB,QAAW/jB,KAAKupB,2BAA8BjG,EAAUtjB,KAAKwpB,gCAAkCjoB,EAAOoZ,qBAAwB,KAAO,IAAO,IAC3K3a,KAAKypB,4BAA8B,EAAKzpB,KAAK0pB,gCAAkC7e,KAAKme,MAAM1F,EAAU,IAAQ,KAC5GtjB,KAAK2pB,4BAA8B,EAAK3pB,KAAK4pB,gCAAkC/e,KAAKme,MAAM1F,EAAU,IAAQ,KAWjBW,eAV/D,QAAWjkB,KAAK6pB,yBAA4BvG,EAAUtjB,KAAK8pB,8BAAgCvoB,EAAOoZ,qBAAwB,KAAO,IAAO,IACpK3a,KAAK+pB,0BAA4B,EAAK/pB,KAAKgqB,8BAAgCnf,KAAKme,MAAM1F,EAAU,IAAQ,KACxGtjB,KAAKiqB,0BAA4B,EAAKjqB,KAAKkqB,8BAAgCrf,KAAKme,MAAM1F,EAAU,IAAQ,KAQsBY,cAPnG,QAAWlkB,KAAKmqB,wBAA2B7G,EAAUtjB,KAAKoqB,6BAA+B7oB,EAAOoZ,qBAAwB,KAAO,IAAO,IACjK3a,KAAKqqB,yBAA2B,EAAKrqB,KAAKsqB,6BAA+Bzf,KAAKme,MAAM1F,EAAU,IAAQ,KACtGtjB,KAAKuqB,yBAA2B,EAAKvqB,KAAKwqB,6BAA+B3f,KAAKme,MAAM1F,EAAU,IAAQ,KAKyDa,YAJtI,QAAWnkB,KAAKyqB,sBAAyBnH,EAAUtjB,KAAK0qB,2BAA6BnpB,EAAOoZ,qBAAwB,KAAO,IAAO,IAC3J3a,KAAK2qB,uBAAyB,EAAK3qB,KAAK4qB,2BAA6B/f,KAAKme,MAAM1F,EAAU,IAAQ,KAClGtjB,KAAK6qB,uBAAyB,EAAK7qB,KAAK8qB,2BAA6BjgB,KAAKme,MAAM1F,EAAU,IAAQ,MAItF,OADAL,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CAEV,CACI,GAAIzC,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,kBAAmB,CAE/E,IAamBhF,EAAkC,CAAEhC,iBAbrB,QAAW/jB,KAAKgrB,4BAAgC1H,EAAU4F,EAAKI,mBAAqBtpB,KAAKirB,gCAAmC1pB,EAAOsZ,qBAAwB,KAAO,IAAO,KACxM7a,KAAKkrB,2BAA6B5H,EAAUtjB,KAAKmrB,iCAAmC,MACpFnrB,KAAKorB,2BAA6B9H,EAAUtjB,KAAKqrB,iCAAmC,KAWOpH,eAV/D,QAAWjkB,KAAKsrB,0BAA8BhI,EAAU4F,EAAKI,mBAAqBtpB,KAAKurB,8BAAiChqB,EAAOsZ,qBAAwB,KAAO,IAAO,KACjM7a,KAAKwrB,yBAA2BlI,EAAUtjB,KAAKyrB,+BAAiC,MAChFzrB,KAAK0rB,yBAA2BpI,EAAUtjB,KAAK2rB,+BAAiC,KAQ8CzH,cAPnG,QAAWlkB,KAAK4rB,yBAA6BtI,EAAU4F,EAAKI,mBAAqBtpB,KAAK6rB,6BAAgCtqB,EAAOsZ,qBAAwB,KAAO,IAAO,KAC9L7a,KAAK8rB,wBAA0BxI,EAAUtjB,KAAK+rB,8BAAgC,MAC9E/rB,KAAKgsB,wBAA0B1I,EAAUtjB,KAAKisB,8BAAgC,KAKiF9H,YAJtI,QAAWnkB,KAAKksB,uBAA2B5I,EAAU4F,EAAKI,mBAAqBtpB,KAAKmsB,2BAA8B5qB,EAAOsZ,qBAAwB,KAAO,IAAO,KACxL7a,KAAKosB,sBAAwB9I,EAAUtjB,KAAKqsB,4BAA8B,MAC1ErsB,KAAKssB,sBAAwBhJ,EAAUtjB,KAAKusB,4BAA8B,MAI9D,OADAtJ,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CACV,CACI,CAEhB,IAamBA,EAAkC,CAAEhC,iBAbrB,QAAW/jB,KAAKwsB,0BAA8BlJ,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqB/qB,KAAKysB,8BAAiClrB,EAAOwZ,mBAAsB,KAAO,IAAO,KAC1N/a,KAAK0sB,yBAA2BpJ,EAAUtjB,KAAK2sB,+BAAiC,MAChF3sB,KAAK4sB,yBAA2BtJ,EAAUtjB,KAAK6sB,+BAAiC,KAWU5I,eAV9D,QAAWjkB,KAAK8sB,wBAA4BxJ,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqB/qB,KAAK+sB,4BAA+BxrB,EAAOwZ,mBAAsB,KAAO,IAAO,KACpN/a,KAAKgtB,uBAAyB1J,EAAUtjB,KAAKitB,6BAA+B,MAC5EjtB,KAAKktB,uBAAyB5J,EAAUtjB,KAAKmtB,6BAA+B,KAQiDjJ,cAPlG,QAAWlkB,KAAKotB,uBAA2B9J,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqB/qB,KAAKqtB,2BAA8B9rB,EAAOwZ,mBAAsB,KAAO,IAAO,KACjN/a,KAAKstB,sBAAwBhK,EAAUtjB,KAAKutB,4BAA8B,MAC1EvtB,KAAKwtB,sBAAwBlK,EAAUtjB,KAAKytB,4BAA8B,KAKoFtJ,YAJrI,QAAWnkB,KAAK0tB,qBAAyBpK,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqB/qB,KAAK2tB,yBAA4BpsB,EAAOwZ,mBAAsB,KAAO,IAAO,KAC3M/a,KAAK4tB,oBAAsBtK,EAAUtjB,KAAK6tB,0BAA4B,MACtE7tB,KAAK8tB,oBAAsBxK,EAAUtjB,KAAK+tB,0BAA4B,MAI3D,OADA9K,GAAYE,YAAYnf,IAAIsf,EAASyC,GAC9BA,CACV,CAER,CAjFN,OAAIzC,EAAU4F,EAAKI,kBACyC,IAApDrG,GAAYQ,YAAY,yBAC7BR,GAAYY,cAAcP,EAAUL,GAAYY,cAAc/gB,QAC9DmgB,GAAYY,cAAeP,EAAUK,OAAOV,GAAYQ,YAAY,0BAA6BR,GAAYY,cAAc/gB,QAC1GwgB,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,kBACY,IAApD9H,GAAYQ,YAAY,yBACzCR,GAAYS,eAAeJ,EAAU4F,EAAKI,mBAAqBrG,GAAYS,cAAc5gB,QACzFmgB,GAAYS,eAAgBJ,EAAU4F,EAAKI,mBAAqB3F,OAAOV,GAAYQ,YAAY,0BAA6BR,GAAYS,cAAc5gB,QAEnF,IAAlDmgB,GAAYQ,YAAY,uBACzCR,GAAYW,aAAaN,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqB9H,GAAYW,YAAY9gB,QAC9GmgB,GAAYW,aAAcN,EAAU4F,EAAKI,kBAAoBJ,EAAK6B,mBAAqBpH,OAAOV,GAAYQ,YAAY,wBAA2BR,GAAYW,YAAY9gB,O,CA2EvK,uBAAOkrB,CAAiB7pB,EAAcwK,G,OAEnB,QAAxBsf,EAAAjuB,KAAKskB,EAAc4J,aAAK,IAAAD,OAAA,EAAAA,EAAEE,SAAS,IAAoB5M,MAAMC,YAAYrd,EAAMwK,E,CAG1E,yBAAOyf,G,MACb,OAAiC,QAA1BH,EAAAjuB,KAAKskB,EAAc4J,aAAO,IAAAD,OAAA,EAAAA,EAAAE,SAAS,GAAGE,O,CAGvC,mBAAOC,GACb,OAAOtuB,KAAKskB,EAAciK,W,CAGjB,eAAOC,CAASrqB,GACzB,IAAIsqB,EAAgBzuB,KAAK0uB,OAAOvqB,GACnBwqB,MAATF,IAAoBA,EAAQzuB,KAAK0uB,OAAO,qBAC5C1uB,KAAKskB,EAAciK,YAAcE,EACjCzuB,KAAK4uB,gBAAkBzqB,EAEjB,MAAM0qB,EAA8BrrB,SAASsrB,cAAc,4BACzC,MAAdD,GACAA,EAAW9N,aAAa,UAAWsD,iBAAiB7gB,SAAS8e,iBAAiBiC,iBAAiB,2BAGnGvkB,KAAKkjB,cAEXljB,KAAKujB,iBAA2G,QAAvFc,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uBAAuBwK,OACtG/uB,KAAKgvB,gBAAyG,QAAtF3K,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,sBAAsBwK,OAEpG/uB,KAAKivB,eAAiB5K,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mBAC5EvkB,KAAKkvB,wBAA0B7K,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACrFvkB,KAAKmvB,qBAAuB9K,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,2BAClFvkB,KAAKovB,sBAAwB/K,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACnFvkB,KAAKqvB,mBAAqBhL,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,yBAChFvkB,KAAKsvB,wBAA0BjL,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACrFvkB,KAAKuvB,qBAAuBlL,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,2BAE9EvkB,KAAKujB,mBACRvjB,KAAKupB,4BAA8BlF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAKwpB,iCAAmCnF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAKypB,4BAA8BpF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAK0pB,iCAAmCrF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAK2pB,4BAA8BtF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAK4pB,iCAAmCvF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAK6pB,0BAA4BxF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAK8pB,+BAAiCzF,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK+pB,0BAA4B1F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAKgqB,+BAAiC3F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAKiqB,0BAA4B5F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAKkqB,+BAAiC7F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAKmqB,yBAA2B9F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAKoqB,8BAAgC/F,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAKqqB,yBAA2BhG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAKsqB,8BAAgCjG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAKuqB,yBAA2BlG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAKwqB,8BAAgCnG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAKyqB,uBAAyBpG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAK0qB,4BAA8BrG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAK2qB,uBAAyBtG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAK4qB,4BAA8BvG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAK6qB,uBAAyBxG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAK8qB,4BAA8BzG,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAEzFvkB,KAAKgrB,4BAA8B3G,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAKirB,iCAAmC5G,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAKkrB,4BAA8B7G,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAKmrB,iCAAmC9G,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAKorB,4BAA8B/G,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,iCACzFvkB,KAAKqrB,iCAAmChH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,uCAC9FvkB,KAAKsrB,0BAA4BjH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAKurB,+BAAiClH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAKwrB,0BAA4BnH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAKyrB,+BAAiCpH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK0rB,0BAA4BrH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAK2rB,+BAAiCtH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK4rB,yBAA2BvH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAK6rB,8BAAgCxH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAK8rB,yBAA2BzH,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAK+rB,8BAAgC1H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAKgsB,yBAA2B3H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,8BACtFvkB,KAAKisB,8BAAgC5H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,oCAC3FvkB,KAAKksB,uBAAyB7H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKmsB,4BAA8B9H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAKosB,uBAAyB/H,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKqsB,4BAA8BhI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAKssB,uBAAyBjI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKusB,4BAA8BlI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCAEzFvkB,KAAKwsB,0BAA4BnI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAKysB,+BAAiCpI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK0sB,0BAA4BrI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAK2sB,+BAAiCtI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK4sB,0BAA4BvI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,+BACvFvkB,KAAK6sB,+BAAiCxI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,qCAC5FvkB,KAAK8sB,wBAA0BzI,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACrFvkB,KAAK+sB,6BAA+B1I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC1FvkB,KAAKgtB,wBAA0B3I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACrFvkB,KAAKitB,6BAA+B5I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC1FvkB,KAAKktB,wBAA0B7I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,6BACrFvkB,KAAKmtB,6BAA+B9I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,mCAC1FvkB,KAAKotB,uBAAyB/I,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKqtB,4BAA8BhJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAKstB,uBAAyBjJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKutB,4BAA8BlJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAKwtB,uBAAyBnJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,4BACpFvkB,KAAKytB,4BAA8BpJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,kCACzFvkB,KAAK0tB,qBAAuBrJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BAClFvkB,KAAK2tB,0BAA4BtJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gCACvFvkB,KAAK4tB,qBAAuBvJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BAClFvkB,KAAK6tB,0BAA4BxJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gCACvFvkB,KAAK8tB,qBAAuBzJ,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,0BAClFvkB,KAAK+tB,0BAA4B1J,iBAAiBrkB,KAAKskB,GAAeC,iBAAiB,gC,CAQ/E,kBAAOd,CAAYtf,GACtB,OAAOkgB,iBAAiBrkB,KAAKskB,GAAeC,iBAAiBpgB,E,EA5lrBnD8e,GAAAE,YAA0C,IAAIqM,IACjDvM,GAAgBM,kBAAY,EAC5BN,GAAe+L,iBAAY,EAC3B/L,GAAe2L,gBAAW,UACd3L,GAAAyL,OAAqC,CAC1D,mBAAoB,usdA8VxB,uBAAwB,k8ZAuUxB,iBAAkB,g4dAiWnB,eAAgB,ulKAmId,iBAAkB,4weAsWpB,gBAAiB,shmBAkhBjB,sBAAuB,o+lBAygBtBe,aAAgB,+0hBAyfhBC,SAAY,u7gBA8eXC,QAAW,s0bAuXRC,MAAS,ilNAkMZ,gBAAiB,4gMAoIlBC,YAAe,2/PA4Mf,YAAa,4lMAwKZ,oBAAqB,s0MAwLtBC,QAAW,2xXA0UX,iBAAkB,08VA0SlB,YAAa,80LAmKZC,UAAa,oxQAwOb,aAAc,29aAsTX,aAAc,oj6BA8xBjB,iBAAkB,sxKA8IlB,kBAAmB,gxKA8InB,oBAAqB,gzLA0JrBC,QAAW,k8JAyHX,gBAAiB,23fA2UjB,sBAAuB,gkLA2IvB,eAAgB,06KAuIhB,gBAAiB,kshBAgXd,eAAgB,2jKA0Hd,mBAAoB,otKA0HpB,gBAAiB,uhLA2IjB,kBAAmB,w+JAyHnBC,OAAU,k/JAyHjB,WAAY,84bAuSLC,OAAU,2gKAwHf,WAAY,2lZA2QPC,SAAY,ygJAwHZ,aAAc,2gLAyId,cAAe,y/JAyHfC,aAAgB,6qIA8HhBC,IAAO,0nJA4HPC,UAAa,opJA4HbC,OAAU,kpJA4HVC,MAAS,inJA4HTC,OAAU,+mJA4HVC,MAAS,gnJA4HT,iBAAkB,+gJAuHlBC,OAAU,+lJA4HVC,OAAU,uoJA2HV1iB,QAAW,qnJA2HX2iB,OAAU,qhJAuHhB,WAAY,6sZAsSN,YAAa,8rJA6HnB,gBAAiB,uuJA2HXC,UAAa,yiJA0HbC,WAAc,6mJA2HdC,KAAQ,61IAiHdC,UACC,ylJAyHF,cAAe,wkJA2Hf,gBAAiB,u4XA0QjB,gBAAiB,g0DAkDhB,iBAAkB,o5KAwIjB,WAAY,28KAoIZ,eAAgB,87KA0IhB,eAAgB,87KA0IhB,iBAAkB,87KA0IlB,mBAAoB,87KA0IpB,iBAAkB,87KA0IlB,gBAAiB,87KA0IjB,aAAc,87KA0Id,cAAe,87KA0If,iBAAkB,+xLAmJlB,kBAAmB,0vLAmJnB,iBAAkB,w5KAyIlB,iBAAkB,2yLAmJlB,mBAAoB,0yLAmJpB,gBAAiB,0yLAmJjB,kBAAmB,k9LAiJnB,eAAgB,69LAiJhB,iBAAkB,09LAiJlB,iBAAkB,09LAiJlB,iBAAkB,w9LAiJlB,eAAgB,2wLAkJhB,iBAAkB,utMAkKlB,eAAgB,44LAuJhB,gBAAiB,siKAsIjBC,OAAU,0/JA4HV,kBAAmB,qlKA8HnBC,SAAY,okKA8HZC,SAAY,woLAiJZ,cAAe,4pNAwLd,cAAe,gwKA8Hf,cAAe,wtMA+KhB,qBAAsB,6lNAwLtB,gBAAiB,k9NAiMjBC,SAAY,+rMAuKZC,QAAW,4jKA8HbC,OAAU,mnJAoHP,uBAAwB,+wHAyHzB,iBAAkB,u8JAqHnB,kBAAmB,8oJA8HjB,eAAgB,krBAuBb,iBAAkB,4yKA8HrB,mBAAoB,47KAkIrB,cAAe,yuKA8HdC,OAAU,6lKA6HXC,OAAU,6lKA6HTC,SAAY,4uMAyKZC,SAAY,oyJAoHbC,aAAgB,stJA2HhBC,OACD,i+IAsHAC,SAAY,y1JA2HV,eAAgB,+uBA2BjB,gBAAiB,ujLA2IlB,YAAY,gwLAkKdC,QAAW,mjJAiIV,eAAgB,onHAkHf,gBAAiB,+9GA8GjBC,WAAc,29JAqJdC,WAAc,y9JAoJdC,aAAgB,2/HAyHbC,OAAU,GAAGC,aAAaC,QAAQ,iBAAmB,6iJAoH/BpP,GAAUqP,WAAW,qBACrBrP,GAAgBsP,iBAAW,2BAC3BtP,GAAYuP,aAAW,uBACvBvP,GAAQwP,SAAW,kBACnBxP,GAAWyP,YAAW,sBACtBzP,GAAa0P,cAAW,wBACxB1P,GAAY2P,aAAW,uBACvB3P,GAAa4P,cAAW,wBACxB5P,GAAgB6P,iBAAW,4BAC3B7P,GAAU8P,WAAW,qBACrB9P,GAAY+P,aAAW,6BACvB/P,GAAUgQ,WAAW,qBACrBhQ,GAAkBiQ,mBAAW,8BAC7BjQ,GAAakQ,cAAW,yBACxBlQ,GAAemQ,gBAAW,0BAC1BnQ,GAAKoQ,MAAW,eAChBpQ,GAASqQ,UAAW,oBACvBrQ,GAASsQ,UAAW,oBAEpBtQ,GAAUuQ,WAAW,+CAErBvQ,GAAgBwQ,iBAAW,2BAC3BxQ,GAAgByQ,iBAAW,2BAC3BzQ,GAAgB0Q,iBAAW,2BAE3B1Q,GAAgB2Q,iBAAW,2BAC3B3Q,GAAgB4Q,iBAAW,2BAE3B5Q,GAAgB6Q,iBAAW,2BAC3B7Q,GAAgB8Q,iBAAW,2BAC3B9Q,GAAiB+Q,kBAAW,4BAC5B/Q,GAAiBgR,kBAAW,4BAEzBhR,GAAaiR,cAAW,yBACxBjR,GAAakR,cAAW,yBACxBlR,GAAiBmR,kBAAW,8BAC5BnR,GAAiBoR,kBAAW,8BAK/BpR,GAAgBqR,iBAAW,4BAC3BrR,GAAWsR,YAAW,sBACnBtR,GAAeuR,gBAAW,2BAC1BvR,GAAwBuE,yBAAW,qCACnCvE,GAA6BwE,8BAAW,2CACxCxE,GAAwByE,yBAAW,qCACnCzE,GAA6B0E,8BAAW,2CACxC1E,GAAwB2E,yBAAW,qCACnC3E,GAA6B4E,8BAAW,2CACxC5E,GAAsB6E,uBAAW,mCACjC7E,GAA2B8E,4BAAW,yCACtC9E,GAAsB+E,uBAAW,mCACjC/E,GAA2BgF,4BAAW,yCACtChF,GAAsBiF,uBAAW,mCACjCjF,GAA2BkF,4BAAW,yCACtClF,GAAqBmF,sBAAW,kCAChCnF,GAA0BoF,2BAAW,wCACrCpF,GAAqBqF,sBAAW,kCAChCrF,GAA0BsF,2BAAW,wCACrCtF,GAAqBuF,sBAAW,kCAChCvF,GAA0BwF,2BAAW,wCACrCxF,GAAmByF,oBAAW,gCAC9BzF,GAAwB0F,yBAAW,sCACnC1F,GAAmB2F,oBAAW,gCAC9B3F,GAAwB4F,yBAAW,sCACnC5F,GAAmB6F,oBAAW,gCAC9B7F,GAAwB8F,yBAAW,sCACnC9F,GAAsB+C,uBAAW,mCACjC/C,GAA2BgD,4BAAW,yCACtChD,GAAsBiD,uBAAW,mCACjCjD,GAA2BkD,4BAAW,yCACtClD,GAAsBmD,uBAAW,mCACjCnD,GAA2BoD,4BAAW,yCACtCpD,GAAoBqD,qBAAW,iCAC/BrD,GAAyBsD,0BAAW,uCACpCtD,GAAoBuD,qBAAW,iCAC/BvD,GAAyBwD,0BAAW,uCACpCxD,GAAoByD,qBAAW,iCAC/BzD,GAAyB0D,0BAAW,uCACpC1D,GAAmB2D,oBAAW,gCAC9B3D,GAAwB4D,yBAAW,sCACnC5D,GAAmB6D,oBAAW,gCAC9B7D,GAAwB8D,yBAAW,sCACnC9D,GAAmB+D,oBAAW,gCAC9B/D,GAAwBgE,yBAAW,sCACnChE,GAAiBiE,kBAAW,8BAC5BjE,GAAsBkE,uBAAW,oCACjClE,GAAiBmE,kBAAW,8BAC5BnE,GAAsBoE,uBAAW,oCACjCpE,GAAiBqE,kBAAW,8BAC5BrE,GAAsBsE,uBAAW,oCACjCtE,GAAwBmB,yBAAW,qCACnCnB,GAA6BuB,8BAAW,2CACxCvB,GAAwBwB,yBAAW,qCACnCxB,GAA6ByB,8BAAW,2CACxCzB,GAAwB0B,yBAAW,qCACnC1B,GAA6B2B,8BAAW,2CACxC3B,GAAsB4B,uBAAW,mCACjC5B,GAA2B6B,4BAAW,yCACtC7B,GAAsB8B,uBAAW,mCACjC9B,GAA2B+B,4BAAW,yCACtC/B,GAAsBgC,uBAAW,mCACjChC,GAA2BiC,4BAAW,yCACtCjC,GAAqBkC,sBAAW,kCAChClC,GAA0BmC,2BAAW,wCACrCnC,GAAqBoC,sBAAW,kCAChCpC,GAA0BqC,2BAAW,wCACrCrC,GAAqBsC,sBAAW,kCAChCtC,GAA0BuC,2BAAW,wCACrCvC,GAAmBwC,oBAAW,gCAC9BxC,GAAwByC,yBAAW,sCACnCzC,GAAmB0C,oBAAW,gCAC9B1C,GAAwB2C,yBAAW,sCACnC3C,GAAmB4C,oBAAW,gCAC9B5C,GAAwB6C,yBAAW,sCACnC7C,GAAkBwR,mBAAW,+BAC7BxR,GAAqByR,sBAAW,mCAChCzR,GAAkB0R,mBAAW,+BAC7B1R,GAAqB2R,sBAAW,mCAChC3R,GAAgB4R,iBAAW,6BAC3B5R,GAAmB6R,oBAAW,iCAC9B7R,GAAuB8R,wBAAW,mCAClC9R,GAAoB+R,qBAAW,gCAC/B/R,GAAgBgS,iBAAW,2BAC3BhS,GAAkBiS,mBAAW,6BAC7BjS,GAAekS,gBAAW,2BAC1BlS,GAAemS,gBAAW,2BAC1BnS,GAAgBoS,iBAAW,4BAC3BpS,GAAaqS,cAAW,yBACxBrS,GAAesS,gBAAW,2BAC1BtS,GAAqBuS,sBAAW,kCAChCvS,GAAmBwS,oBAAW,gCAC9BxS,GAAmByS,oBAAW,+BAC9BzS,GAAqB0S,sBAAW,iCACnC1S,GAAc2S,eAAW,yBACzB3S,GAAmB4S,oBAAW,8BAEvC5S,GAA0BsG,2BAAW,EACrCtG,GAA+BuG,gCAAW,EAC1CvG,GAA0BwG,2BAAW,EACrCxG,GAA+ByG,gCAAW,EAC1CzG,GAA0B0G,2BAAW,EACrC1G,GAA+B2G,gCAAW,EAC1C3G,GAAwB4G,yBAAW,EACnC5G,GAA6B6G,8BAAW,EACxC7G,GAAwB8G,yBAAW,EACnC9G,GAA6B+G,8BAAW,EACxC/G,GAAwBgH,yBAAW,EACnChH,GAA6BiH,8BAAW,EACxCjH,GAAuBkH,wBAAW,EAClClH,GAA4BmH,6BAAW,EACvCnH,GAAuBoH,wBAAW,EAClCpH,GAA4BqH,6BAAW,EACvCrH,GAAuBsH,wBAAW,EAClCtH,GAA4BuH,6BAAW,EACvCvH,GAAqBwH,sBAAW,EAChCxH,GAA0ByH,2BAAW,EACrCzH,GAAqB0H,sBAAW,EAChC1H,GAA0B2H,2BAAW,EACrC3H,GAAqB4H,sBAAW,EAChC5H,GAA0B6H,2BAAW,EACrC7H,GAAwBuJ,yBAAW,EACnCvJ,GAA6BwJ,8BAAW,EACxCxJ,GAAwByJ,yBAAW,EACnCzJ,GAA6B0J,8BAAW,EACxC1J,GAAwB2J,yBAAW,EACnC3J,GAA6B4J,8BAAW,EACxC5J,GAAsB6J,uBAAW,EACjC7J,GAA2B8J,4BAAW,EACtC9J,GAAsB+J,uBAAW,EACjC/J,GAA2BgK,4BAAW,EACtChK,GAAsBiK,uBAAW,EACjCjK,GAA2BkK,4BAAW,EACtClK,GAAqBmK,sBAAW,EAChCnK,GAA0BoK,2BAAW,EACrCpK,GAAqBqK,sBAAW,EAChCrK,GAA0BsK,2BAAW,EACrCtK,GAAqBuK,sBAAW,EAChCvK,GAA0BwK,2BAAW,EACrCxK,GAAmByK,oBAAW,EAC9BzK,GAAwB0K,yBAAW,EACnC1K,GAAmB2K,oBAAW,EAC9B3K,GAAwB4K,yBAAW,EACnC5K,GAAmB6K,oBAAW,EAC9B7K,GAAwB8K,yBAAW,EACnC9K,GAA0B+H,2BAAW,EACrC/H,GAA+BgI,gCAAW,EAC1ChI,GAA0BiI,2BAAW,EACrCjI,GAA+BkI,gCAAW,EAC1ClI,GAA0BmI,2BAAW,EACrCnI,GAA+BoI,gCAAW,EAC1CpI,GAAwBqI,yBAAW,EACnCrI,GAA6BsI,8BAAW,EACxCtI,GAAwBuI,yBAAW,EACnCvI,GAA6BwI,8BAAW,EACxCxI,GAAwByI,yBAAW,EACnCzI,GAA6B0I,8BAAW,EACxC1I,GAAuB2I,wBAAW,EAClC3I,GAA4B4I,6BAAW,EACvC5I,GAAuB6I,wBAAW,EAClC7I,GAA4B8I,6BAAW,EACvC9I,GAAuB+I,wBAAW,EAClC/I,GAA4BgJ,6BAAW,EACvChJ,GAAqBiJ,sBAAW,EAChCjJ,GAA0BkJ,2BAAW,EACrClJ,GAAqBmJ,sBAAW,EAChCnJ,GAA0BoJ,2BAAW,EACrCpJ,GAAqBqJ,sBAAW,EAChCrJ,GAA0BsJ,2BAAW,EAErCtJ,GAAcgM,eAAW,GACzBhM,GAAuBiM,wBAAW,GAClCjM,GAAoBkM,qBAAW,GAC/BlM,GAAqBmM,sBAAW,GAChCnM,GAAkBoM,mBAAW,GAC7BpM,GAAuBqM,wBAAW,GAClCrM,GAAoBsM,qBAAW,GAEnBtM,GAAaY,cAAmCpV,EAAU,CAC7E,CACItK,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,UACN4f,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,+BAEvB,CACUhgB,KAAM,UACN4f,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,+BACd,CACChgB,KAAM,UACN4f,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,iCAGElB,GAAaS,cAAmCjV,EAAU,CAC7E,CACItK,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACChgB,KAAM,SACN4f,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,gCAGElB,GAAWW,YAAmCnV,EAAU,CAC3E,CACItK,KAAM,OACN4f,iBAAkB,gCAClBE,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACChgB,KAAM,OACN4f,iBAAkB,gCAClBE,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACChgB,KAAM,OACN4f,iBAAkB,gCAClBE,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACChgB,KAAM,OACN4f,iBAAkB,gCAClBE,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,8BAsRGlB,GAAAqB,EAAkC9gB,SAASG,KAAKC,YAAY+d,EAAKJ,MAAM,CAAE3L,KAAM,cC79qB1E,4FAA4FkN,KAAKgT,UAAUC,W,MAM/HC,GA8EF,oBAAOC,CAAcC,GACxB,MAAMC,EAAwBD,GAAe,EACvCE,EAAoC,GAAdF,EAC5B,OAAOF,cAAY,EAAZA,GAAcK,iBAAiBF,GAAeG,QAAQF,E,CAG1D,+BAAOG,CAAyBC,GACnC,IAAK,IAAIL,EAAwB,EAAGA,EAAgBH,GAAaK,iBAAiBvzB,OAAQqzB,IAAiB,CACvG,MAAMM,EAA2BT,GAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcK,EAASH,QAAQxzB,OAAQszB,IAAe,CACpF,MAAMM,EAAiBD,EAASH,QAAQF,GACxC,GAAIM,EAAOC,aAAeD,EAAOE,aAAeJ,EAAS,OAAQL,GAAiB,GAAKC,CAC1F,CACJ,CACD,OAAO,I,CAGJ,wBAAOS,CAAkBC,GAC5B,IAAK,IAAIX,EAAwB,EAAGA,EAAgBH,GAAaK,iBAAiBvzB,OAAQqzB,IAAiB,CACvG,MAAMM,EAA2BT,GAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcK,EAASH,QAAQxzB,OAAQszB,IAAe,CAEpF,GADuBK,EAASH,QAAQF,GAC7BjyB,MAAQ2yB,EAAY,OAAQX,GAAiB,GAAKC,CAChE,CACJ,CACD,OAAO,I,CAGJ,yBAAOW,CAAmBC,G,MAC7B,OAA6D,QAAtD/I,EAAA+H,GAAaK,iBAAiB,GAAGC,QAAQ3xB,kBAAa,IAAAspB,OAAA,EAAAA,EAAApuB,aAAW,EAAXA,EAAcm3B,G,ECxHnE,SAAA1rB,GAAsBoD,EAAoBuoB,GACzD,IAAK,IAAI1sB,EAAY,EAAGA,EAAImE,EAAM5L,OAAQyH,IACzCmE,EAAMnE,IAAM0sB,CAEd,CAMA,SAASC,GAAUC,GAClB,IALD,SAAoBA,GACnB,SAASA,GAAOA,EAAKA,EAAI,EAC1B,CAGMC,CAAWD,GAAI,MAAM,IAAI/0B,MAAM,0CACpC,OAAOyI,KAAKiB,MAAMjB,KAAKT,IAAI+sB,GAAKtsB,KAAKT,IAAI,GAC1C,CAuOgB,SAAAiB,GAA4BqD,EAAoB2oB,GAC/D,MAAMC,EAAsBJ,GAAUG,GACtC,GAAIA,EAAkB,EAAG,MAAM,IAAIj1B,MAAM,wCAGzC,IAAK,IAAIm1B,EAAeD,EAAc,EAAGC,GAAQ,EAAGA,IAAQ,CAC3D,MAAMC,EAAoB,GAAKD,EACzBE,EAAuBD,GAAa,EACpCE,EAAiBF,GAAa,EAC9BG,EAAqC,EAAV9sB,KAAK6C,GAAWgqB,EAC3CE,EAAuB/sB,KAAK8C,IAAIgqB,GAChCE,EAAuBhtB,KAAK+C,IAAI+pB,GAChCG,EAA+B,EAAMF,EAE3C,IAAK,IAAIpzB,EAAqB,EAAGA,EAAa6yB,EAAiB7yB,GAAckzB,EAAQ,CACpF,MAAMK,EAAsBvzB,EACtBwzB,EAAoBD,EAAcN,EAClCQ,EAAsBF,EAAcP,EACpCU,EAAoBD,EAAcR,EAClCU,EAAoBF,EAAcT,EAClCY,EAAqB1pB,EAAMqpB,GAC3BM,EAAqB3pB,EAAMupB,GACjCvpB,EAAMqpB,GAAeK,EAAaC,EAClC3pB,EAAMspB,IAAc,EACpBtpB,EAAMupB,GAAeG,EAAaC,EAClC3pB,EAAMwpB,IAAc,EACpB,IAAII,EAAYV,EACZW,GAAaV,EACbW,EAAgB,EAChBC,EAAgB,EACpB,IAAK,IAAIh0B,EAAgB,EAAGA,EAAQgzB,EAAchzB,IAAS,CAC1D,MAAMi0B,EAAkBX,EAActzB,EAChCk0B,EAAkBV,EAAcxzB,EAChCm0B,EAAkBX,EAAcxzB,EAC/Bo0B,EAAkBV,EAAc1zB,EACjCq0B,EAAgBpqB,EAAMgqB,GACtBK,EAAgBrqB,EAAMiqB,GACtBK,EAAgBtqB,EAAMkqB,GACtBK,EAAgBvqB,EAAMmqB,GACtBK,EAAgBJ,EAAQC,EACxBI,EAAgBH,EAAQC,EAC9BvqB,EAAMgqB,GAAWI,EAAQC,EACzBrqB,EAAMiqB,GAAWM,EAAQD,EACzBtqB,EAAMkqB,GAAWM,EAAQZ,EAAIa,EAAQZ,EACrC7pB,EAAMmqB,GAAWM,EAAQb,EAAIY,EAAQX,EACrC,MAAMa,EAAgBtB,EAAuBQ,EAAIE,EAC3Ca,EAAgBvB,EAAuBS,EAAIE,EACjDD,EAAQF,EACRG,EAAQF,EACRD,EAAIc,EACJb,EAAIc,CACJ,CACD,CACD,CAmCD,IAAK,IAAI50B,EAAgB,EAAGA,EAAQ4yB,EAAiB5yB,GAAS,EAAG,CAChE,MAAM60B,EAAiB70B,EAAQ,EACzB80B,EAAiB90B,EAAQ,EACzB+0B,EAAiB/0B,EAAQ,EACxBq0B,EAAgBpqB,EAAMjK,GACvBs0B,EAAgC,EAAhBrqB,EAAM4qB,GACtBG,EAAgB/qB,EAAM6qB,GACtBG,EAAgC,EAAhBhrB,EAAM8qB,GACtBN,EAAgBJ,EAAQW,EACxBN,EAAgBL,EAAQW,EAC7B/qB,EAAMjK,GAAUy0B,EAAQH,EACzBrqB,EAAM4qB,GAAUJ,EAAQH,EACxBrqB,EAAM6qB,GAAUJ,EAAQO,EACxBhrB,EAAM8qB,GAAUL,EAAQO,CACxB,EAxUF,SAA0BhrB,EAAoB2oB,GAC7C,MAAMsC,EAAmBzC,GAAUG,GACnC,GAAIsC,EAAW,GAAI,MAAM,IAAIv3B,MAAM,mDACnC,MAAMw3B,EAAqB,GAAKD,EAChC,IAAK,IAAIpvB,EAAY,EAAGA,EAAI8sB,EAAiB9sB,IAAK,CAEjD,IAAIsvB,EAKJ,GAJAA,GAAU,MAAJtvB,IAAe,GAAW,MAAJA,IAAe,EAC3CsvB,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,EAC3CA,GAAU,MAAJA,IAAe,GAAW,KAAJA,IAAe,EAC1CA,GAAMA,GAAe,GAAa,IAANA,IAAe,IAAOD,EAC/CC,EAAItvB,EAAG,CACV,IAAIuvB,EAAeprB,EAAMnE,GACzBmE,EAAMnE,GAAKmE,EAAMmrB,GACjBnrB,EAAMmrB,GAAKC,CACX,CACD,CACF,CAyTCC,CAAiBrrB,EAAO2oB,EACzB,CD/U2BrB,GAAOgE,QAAW,MAClBhE,GAAAiE,mBAA6B,WAAajE,GAAagE,QAEvDhE,GAAekE,gBAAW,qBAE1BlE,GAAAmE,QAAmB,QAAQrX,KAAKgT,UAAUsE,WAAa,YAAYtX,KAAKgT,UAAUC,YAAc,uBAAuBjT,KAAKgT,UAAUsE,WAAa,sBAAsBtX,KAAKgT,UAAUC,WACxLC,GAAAqE,WAAqBrE,GAAamE,QAAU,IAAM,QAClDnE,GAAAsE,SAAmBtE,GAAamE,QAAU,UAAY,UAI/DnE,GAAoBuE,sBAAY,EAEvBvE,GAAgBK,iBAAoC5nB,EAAU,CACjF,CACItK,KAAM,qBAAsBmyB,QAAkC7nB,EAAU,CACpE,CAAEtK,KAAMtE,EAAW,GAAuB26B,WAAU,GACpD,CAAEr2B,KAAMtE,EAAW,GAAqB26B,WAAU,GAClD,CAAEr2B,KAAMtE,EAAW,GAAwB26B,WAAU,GACrD,CAAEr2B,KAAMtE,EAAW,GAA2B26B,WAAU,GACxD,CAAEr2B,KAAMtE,EAAW,GAA0B26B,WAAU,GACvD,CAAEr2B,KAAMtE,EAAW,GAA4B26B,WAAU,GACzD,CAAEr2B,KAAMtE,EAAW,GAAsB26B,WAAU,GACnD,CAAEr2B,KAAMtE,EAAW,GAA+B26B,WAAU,GAC5D,CAAEr2B,KAAMtE,EAAW,GAA2B26B,WAAU,GACxD,CAAEr2B,KAAMtE,EAAW,GAAiC26B,WAAU,GAC9D,CAAEr2B,KAAMtE,EAAW,IAAwB26B,WAAU,OAG7D,CACIr2B,KAAM,mBAAoBmyB,QAAkC7nB,EAAU,CAClE,CAAEtK,KAAM,cAAeyyB,YAAa,GAAI6D,SAAU,CAAE7kB,KAAQ,OAAQ8kB,SAAY,GAAI5rB,QAAW,CAAC,YAAa6rB,WAAc,SAAUC,cAAiB,EAAG1lB,cAAiB,EAAG2lB,MAAS,eAAgBxwB,KAAQ,SAAUywB,OAAU,OAAQ5hB,UAAa,KACvP,CAAE/U,KAAM,eAAgByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,MAAMmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMtsB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAO3vB,WAAa,GAAGowB,cAAgB,EAAEriB,UAAY,GAAGsiB,QAAS,IACvV,CAAEr3B,KAAM,cAAeyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,QAAQmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMtsB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAOzwB,KAAO,QAAQ6O,UAAY,GAAGsiB,QAAS,IACrU,CAAEr3B,KAAM,UAAWyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAKC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMtsB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,KAAKC,kBAAoB,EAAEC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,GAAGsiB,QAAS,OAGnwB,CACIr3B,KAAM,eAAgBmyB,QAAkC7nB,EAAU,CAC9D,CAAEtK,KAAM,iBAAkByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGC,cAAgB,GAAGltB,QAAU,CAAC,UAAU,eAAemtB,oBAAsB,GAAGZ,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,MAAMC,kBAAoB,GAAGC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,cAAc3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,aAAaC,SAAW,SAASjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,IAAKC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,IACvrD,CAAEr3B,KAAM,oBAAqByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,kBAAkB,eAAe6rB,WAAa,YAAY4B,qBAAsB,EAAMN,oBAAsB,GAAGZ,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,KAAKC,kBAAoB,EAAEC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,cAAc3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAIC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,SAASjuB,SAAU,EAAMkuB,iBAAmB,IAAIC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,IAC9xC,CAAEr3B,KAAM,oBAAqByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,QAAQmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,kBAAkB,eAAe6rB,WAAa,YAAY4B,qBAAsB,EAAMN,oBAAsB,GAAGZ,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAOzwB,KAAO,QAAQ6O,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAIC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,SAASjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,SAASjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,IACj+B,CAAEr3B,KAAM,YAAayyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,SAASzB,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,CAAC,CAACnmB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,SAAST,cAAgB,GAAGltB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,MAAMC,kBAAoB,GAAGC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,cAAc3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,OAAOruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,KAAMd,QAAS,IACtrC,CAAEr3B,KAAM,UAAWyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,cAAc,eAAemtB,oBAAsB,GAAGS,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,GAAGC,gBAAkB,GAAGzB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,UAAUC,aAAe,WAAWC,kBAAoB,GAAGC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,MAAMruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAI73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAI73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAI73B,MAAQ,IAAI+2B,QAAS,OAGxsG,CACIr3B,KAAM,eAAgBmyB,QAAkC7nB,EAAU,CAC9D,CAAEtK,KAAM,eAAgByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMY,cAAgB,GAAGltB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,KAAKC,kBAAoB,EAAEC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,MAAMruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,IAAI+2B,QAAS,IACjkC,CAAEr3B,KAAM,gBAAiByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,OAAOmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,QAAQ,CAAC7mB,KAAO,YAAY4mB,SAAW,IAAIC,WAAa,QAASzB,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,CAAC,CAACnmB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,QAAQ,CAAC7mB,KAAO,YAAY4mB,SAAW,IAAIC,WAAa,QAAS3tB,QAAU,CAAC,UAAU,aAAa,aAAa,SAAS,UAAUiuB,WAAa,GAAGC,SAAU,EAAMC,iBAAmB,IAAIC,uBAAyB,GAAGC,UAAY,GAAGC,WAAa,EAAEC,eAAiB,GAAGC,aAAe,EAAEjC,IAAM,EAAEC,SAAW,GAAGiC,OAAS,GAAG3C,cAAgB,EAAE1lB,aAAe,GAAG4lB,OAAS,UAAUzwB,KAAO,WAAWmzB,6BAA8B,EAAMC,kBAAoB,EAAEC,gBAAkB,GAAGC,iBAAmB,EAAEC,uBAAwB,EAAMC,oBAAsB,EAAE3kB,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,MAAMd,QAAS,IACvrC,CAAEr3B,KAAM,WAAYyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,MAAMmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,eAAe4tB,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,CAAC,CAACjnB,KAAO,WAAW4mB,SAAW,IAAKC,WAAa,SAASK,gBAAkB,CAAC,CAAClnB,KAAO,WAAW4mB,SAAW,IAAKC,WAAa,SAASpB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAO3vB,WAAa,GAAGowB,cAAgB,EAAEriB,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAKkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,MAAMd,QAAS,IAC90B,CAAEr3B,KAAM,gBAAiByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,WAAWmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,SAASzB,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,CAAC,CAACnmB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,SAAS3tB,QAAU,CAAC,UAAU,cAAc,OAAO,UAAU4tB,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,CAAC,CAACjnB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,GAAG,CAAC7mB,KAAO,YAAY4mB,SAAW,OAAOC,WAAa,KAAMK,gBAAkB,CAAC,CAAClnB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,GAAG,CAAC7mB,KAAO,YAAY4mB,SAAW,OAAOC,WAAa,KAAMqB,gBAAkB,CAAC,CAACloB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,SAASpB,IAAM,EAAEC,SAAW,EAAEyC,YAAc,GAAGC,eAAiB,GAAIT,OAAS,EAAE3C,cAAgB,EAAE1lB,cAAgB,EAAE/J,WAAa,GAAGowB,cAAgB,EAAE0C,SAAW,IAAI7nB,OAAS,GAAG8nB,MAAQ,EAAEhlB,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,GAAG,CAACJ,OAAS,qBAAqBC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,IACjuC,CAAEr3B,KAAM,YAAayyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,gBAAgBmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,WAAWusB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEipB,UAAY,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKrD,OAAS,SAASsD,cAAgB,EAAEllB,UAAY,GAAGsiB,QAAS,IAC5c,CAAEr3B,KAAM,aAAcyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,MAAMmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,KAAMC,WAAa,OAAQzB,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,CAAC,CAACnmB,KAAO,WAAW4mB,SAAW,KAAMC,WAAa,OAAQ3tB,QAAU,CAAC,UAAU,kBAAkB,eAAe6rB,WAAa,YAAY4B,qBAAsB,EAAMG,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,CAAC,CAACjnB,KAAO,OAAO4mB,SAAW,OAAOC,WAAa,GAAG,CAAC7mB,KAAO,YAAY4mB,SAAW,IAAIC,WAAa,IAAIK,gBAAkB,CAAC,CAAClnB,KAAO,OAAO4mB,SAAW,OAAOC,WAAa,GAAG,CAAC7mB,KAAO,YAAY4mB,SAAW,IAAIC,WAAa,IAAIpB,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,SAAS3vB,WAAa,GAAGowB,cAAgB,EAAEriB,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,MAAMjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,GAAIC,sBAAwB,IAAIR,SAAW,GAAG,CAACI,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,GAAIC,sBAAwB,GAAG,CAACJ,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,OAG1vC,CACIr3B,KAAM,eAAgBmyB,QAAkC7nB,EAAU,CAC9D,CAAEtK,KAAM,WAAYyyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,OAAOmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,SAASzB,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMtsB,QAAU,CAAC,UAAU,SAAS,aAAa,OAAO,UAAUuvB,aAAe,GAAGtB,WAAa,GAAGC,SAAU,EAAM3B,IAAM,EAAEC,SAAW,GAAGyC,YAAc,GAAGC,eAAiB,EAAET,OAAS,GAAG3C,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,SAASzwB,KAAO,WAAWmzB,6BAA8B,EAAMC,kBAAoB,EAAEC,gBAAkB,GAAGC,iBAAmB,EAAEC,uBAAwB,EAAMC,oBAAsB,EAAE3kB,UAAY,GAAGsiB,QAAS,IACnqB,CAAEr3B,KAAM,mBAAoByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,OAAOmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,kBAAkB,UAAU,SAAS,QAAQ6rB,WAAa,SAAS4B,qBAAsB,EAAM+B,QAAU,UAAUC,aAAe,GAAIC,aAAe,KAAKC,aAAe,GAAGC,YAAc,EAAEC,OAAS,GAAGZ,YAAc,GAAGC,eAAiB,EAAEpD,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAOzwB,KAAO,WAAWmzB,6BAA8B,EAAMC,kBAAoB,EAAEC,gBAAkB,GAAGC,iBAAmB,EAAEC,uBAAwB,EAAMC,oBAAsB,EAAE3kB,UAAY,GAAGsiB,QAAS,IACpsB,CAAEr3B,KAAM,kBAAmByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,OAAOmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,UAAU,cAAc,OAAO,UAAUwvB,QAAU,SAASC,aAAe,IAAKC,aAAe,GAAGC,aAAe,GAAGC,YAAc,EAAEhC,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,CAAC,CAACjnB,KAAO,YAAY4mB,SAAW,MAAMC,WAAa,IAAK,CAAC7mB,KAAO,OAAO4mB,SAAW,OAAOC,WAAa,IAAIK,gBAAkB,CAAC,CAAClnB,KAAO,YAAY4mB,SAAW,MAAMC,WAAa,IAAK,CAAC7mB,KAAO,OAAO4mB,SAAW,OAAOC,WAAa,IAAIpB,IAAM,EAAEC,SAAW,GAAGyC,YAAc,GAAGC,eAAiB,GAAIT,OAAS,GAAG3C,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAOzwB,KAAO,WAAWmzB,6BAA8B,EAAMC,kBAAoB,EAAEC,gBAAkB,GAAGC,iBAAmB,EAAEC,uBAAwB,EAAMC,oBAAsB,EAAE3kB,UAAY,GAAGsiB,QAAS,OAGr+B,CACIr3B,KAAM,iBAAkBmyB,QAAkC7nB,EAAU,CAChE,CAAEtK,KAAM,sBAAuByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,KAAKmlB,OAAS,EAAEL,SAAW,CAAC,CAAC9kB,KAAO,WAAW4mB,SAAW,SAASC,WAAa,QAASzB,cAAe,EAAKC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMY,cAAgB,GAAGltB,QAAU,CAAC,UAAU,UAAU,cAAc,aAAa,cAAcwvB,QAAU,QAAQC,aAAe,IAAKC,aAAe,EAAEC,aAAe,GAAGC,YAAc,EAAEhC,gBAAiB,EAAMC,cAAgB,GAAGC,eAAiB,EAAEC,WAAa,CAAC,CAACjnB,KAAO,YAAY4mB,SAAW,MAAMC,WAAa,IAAK,CAAC7mB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,IAAIK,gBAAkB,CAAC,CAAClnB,KAAO,YAAY4mB,SAAW,MAAMC,WAAa,IAAK,CAAC7mB,KAAO,WAAW4mB,SAAW,QAAQC,WAAa,IAAIM,WAAa,GAAGC,SAAU,EAAMC,iBAAmB,IAAIC,uBAAyB,GAAG7B,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAEumB,UAAY,YAAYC,aAAe,WAAWC,kBAAoB,GAAGC,UAAY,CAAC,CAACC,UAAY,KAAKruB,UAAY,GAAGsuB,SAAW,cAAc3wB,WAAa,GAAG,CAAC0wB,UAAY,MAAMruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,MAAMruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,MAAMruB,UAAY,GAAGsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,GAAG,CAAC0wB,UAAY,KAAKruB,UAAY,EAAEsuB,SAAW,OAAO3wB,WAAa,IAAI+N,UAAY,CAAC,CAACgjB,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,GAAG,CAACy3B,OAAS,oBAAoBC,SAAW,OAAOjuB,SAAU,EAAMkuB,iBAAmB,GAAGC,sBAAwB,EAAEC,sBAAwB,EAAE73B,MAAQ,IAAI+2B,QAAS,OAG/zD,CACJr3B,KAAM,gBAAiBmyB,QAAkC7nB,EAAU,CAC/D,CAAEtK,KAAM,0BAA2ByyB,YAAa,GAAI6D,SAAU,CAAC7kB,KAAO,QAAQmlB,OAAS,EAAEL,SAAW,GAAGM,cAAe,EAAMC,YAAc,GAAGC,aAAe,EAAEC,cAAgB,GAAGC,kBAAmB,EAAMW,cAAgB,GAAGjtB,QAAU,CAAC,UAAU,UAAUquB,UAAY,IAAIC,WAAa,GAAGC,eAAiB,IAAIC,aAAe,IAAIjC,IAAM,EAAEC,SAAW,GAAGV,cAAgB,EAAE1lB,cAAgB,EAAE4lB,OAAS,OAAOzwB,KAAO,QAAQ6O,UAAY,CAAC,CAACgjB,OAAS,aAAaC,SAAW,QAAQjuB,SAAU,EAAMkuB,iBAAmB,EAAEC,sBAAwB,EAAEC,sBAAwB,IAAId,QAAS,S,ME9F3jBoD,GAAb,WAAA7+B,GACSC,KAAS6+B,EAAW,EACpB7+B,KAAA8+B,EAAgC,MAACnQ,GACjC3uB,KAAK++B,EAAW,EAChB/+B,KAAOg/B,EAAW,EAClBh/B,KAAMi/B,EAAW,C,CAElB,SAAAC,CAAUrf,GACZ7f,KAAKi/B,GAAUj/B,KAAK6+B,GAAW7+B,KAAKm/B,IACxCn/B,KAAKg/B,EAAWh/B,KAAKg/B,EAAU,EAAKh/B,KAAK++B,EACzC/+B,KAAK8+B,EAAQ9+B,KAAKg/B,GAAWnf,EAC7B7f,KAAKi/B,G,CAEC,QAAAG,CAASvf,GACX7f,KAAKi/B,GAAUj/B,KAAK6+B,GAAW7+B,KAAKm/B,IACxCn/B,KAAK8+B,EAAS9+B,KAAKg/B,EAAUh/B,KAAKi/B,EAAUj/B,KAAK++B,GAASlf,EAC1D7f,KAAKi/B,G,CAEC,QAAAI,GACN,GAAIr/B,KAAKi/B,GAAU,EAAG,MAAM,IAAI78B,MAAM,4BACtC,MAAMyd,EAAgB7f,KAAK8+B,EAAQ9+B,KAAKg/B,GAIxC,OAHAh/B,KAAK8+B,EAAQ9+B,KAAKg/B,QAAWrQ,EAC7B3uB,KAAKg/B,EAAWh/B,KAAKg/B,EAAU,EAAKh/B,KAAK++B,EACzC/+B,KAAKi/B,IACEpf,C,CAED,OAAAyf,GACN,GAAIt/B,KAAKi/B,GAAU,EAAG,MAAM,IAAI78B,MAAM,4BACtCpC,KAAKi/B,IACL,MAAMx6B,EAAiBzE,KAAKg/B,EAAUh/B,KAAKi/B,EAAUj/B,KAAK++B,EACpDlf,EAAgB7f,KAAK8+B,EAAQr6B,GAEnC,OADAzE,KAAK8+B,EAAQr6B,QAASkqB,EACf9O,C,CAED,SAAA0f,GACN,GAAIv/B,KAAKi/B,GAAU,EAAG,MAAM,IAAI78B,MAAM,4BACtC,OAAUpC,KAAK8+B,EAAQ9+B,KAAKg/B,E,CAEtB,QAAAQ,GACN,GAAIx/B,KAAKi/B,GAAU,EAAG,MAAM,IAAI78B,MAAM,4BACtC,OAAUpC,KAAK8+B,EAAS9+B,KAAKg/B,EAAUh/B,KAAKi/B,EAAS,EAAKj/B,KAAK++B,E,CAEzD,KAAAU,GACN,OAAOz/B,KAAKi/B,C,CAEN,GAAAj7B,CAAIS,EAAeob,GACzB,GAAIpb,EAAQ,GAAKA,GAASzE,KAAKi/B,EAAQ,MAAM,IAAI78B,MAAM,iBACvDpC,KAAK8+B,EAAS9+B,KAAKg/B,EAAUv6B,EAASzE,KAAK++B,GAASlf,C,CAE9C,GAAAwJ,CAAI5kB,GACV,GAAIA,EAAQ,GAAKA,GAASzE,KAAKi/B,EAAQ,MAAM,IAAI78B,MAAM,iBACvD,OAAUpC,KAAK8+B,EAAS9+B,KAAKg/B,EAAUv6B,EAASzE,KAAK++B,E,CAE/C,MAAAW,CAAOj7B,GACb,GAAIA,EAAQ,GAAKA,GAASzE,KAAKi/B,EAAQ,MAAM,IAAI78B,MAAM,iBACvD,GAAIqC,GAAUzE,KAAKi/B,GAAU,EAAI,CAChC,KAAOx6B,EAAQ,GACdzE,KAAKgE,IAAIS,EAAOzE,KAAKqpB,IAAI5kB,EAAQ,IACjCA,IAEDzE,KAAKq/B,UACL,KAAM,CAEN,IADA56B,IACOA,EAAQzE,KAAKi/B,GACnBj/B,KAAKgE,IAAIS,EAAQ,EAAGzE,KAAKqpB,IAAI5kB,IAC7BA,IAEDzE,KAAKs/B,SACL,C,CAEM,CAAAH,GACP,GAAIn/B,KAAK6+B,GAAa,WAAY,MAAM,IAAIz8B,MAAM,qBAClDpC,KAAK6+B,EAAY7+B,KAAK6+B,GAAa,EACnC,MAAMc,EAAkC3/B,KAAK8+B,EACvCpzB,EAAkC,IAAIjJ,MAAMzC,KAAK6+B,GACjDe,EAA6B,EAAd5/B,KAAKi/B,EACpB5oB,EAAgC,EAAfrW,KAAKg/B,EAC5B,IAAK,IAAIz0B,EAAI,EAAGA,EAAIq1B,EAAMr1B,IACzBmB,EAAUnB,GAAKo1B,EAAWtpB,EAAS9L,EAAKvK,KAAK++B,GAE9C,IAAK,IAAIx0B,EAAIq1B,EAAMr1B,EAAIvK,KAAK6+B,EAAWt0B,IACtCmB,EAAUnB,QAAKokB,EAEhB3uB,KAAKg/B,EAAU,EACfh/B,KAAK8+B,EAAUpzB,EACf1L,KAAK++B,EAAQ/+B,KAAK6+B,EAAY,C,ECzCzB,MAAMgB,GAAsB,IA7CnC,MAII,WAAA9/B,GAHQC,KAAY8/B,aAAY,GACxB9/B,KAAS+/B,UAAO,GAGpB//B,KAAK8/B,aAAe,GACpB9/B,KAAK+/B,UAAY,E,CAId,KAAAC,CAAMC,EAAmBC,EAAgBC,GAC5C,GAAiCxR,MAA7B3uB,KAAK+/B,UAAUE,GAAnB,CAGAjgC,KAAK8/B,aAAar1B,KAAKw1B,GACvB,IAAK,IAAI11B,EAAY,EAAGA,EAAIvK,KAAK+/B,UAAUE,GAAWn9B,OAAQyH,IAC1DvK,KAAK+/B,UAAUE,GAAW11B,GAAG21B,EAAUC,GAE3CngC,KAAK8/B,aAAaM,KALjB,C,CAQE,MAAAC,CAAOJ,EAAiBK,GACM3R,MAA7B3uB,KAAK+/B,UAAUE,KACfjgC,KAAK+/B,UAAUE,GAAa,IAEhCjgC,KAAK+/B,UAAUE,GAAWx1B,KAAK61B,E,CAG5B,QAAAC,CAASN,EAAmBK,GAC/B,GAAiC3R,MAA7B3uB,KAAK+/B,UAAUE,GACf,OAEJ,MAAMO,EAAQxgC,KAAK+/B,UAAUE,GAAWQ,QAAQH,IAClC,GAAVE,GACAxgC,KAAK+/B,UAAUE,GAAWS,OAAOF,EAAO,E,CAGzC,WAAAG,CAAYV,GACkBtR,MAA7B3uB,KAAK+/B,UAAUE,KAGnBjgC,KAAK+/B,UAAUE,GAAW,G,SCoJrBW,GAAb,WAAA7gC,GACiBC,KAAA6gC,EAAc,CAAC,GACf7gC,KAAA8gC,EAAc,CAAC,GACxB9gC,KAAK+gC,MAAW,C,CAEhB,kBAAAC,CAAmBvE,GAEzBz8B,KAAK8gC,EAAE,GAAKrE,EACZz8B,KAAK+gC,MAAQ,C,CAGP,0BAAAE,CAA2BC,GAKjC,MAAMC,EAAY,EAAMt2B,KAAKu2B,IAA6B,GAAzBF,GAC3BG,EAAa,EAAMF,EACzBnhC,KAAK6gC,EAAE,IAAM,EAAMM,GAAKE,EACxBrhC,KAAK8gC,EAAE,GAAK9gC,KAAK8gC,EAAE,GAAK,EAAIO,EAC5BrhC,KAAK+gC,MAAQ,C,CAGP,yBAAAO,CAA0BJ,GAahC,MAAMC,EAAY,EAAMt2B,KAAK+C,IAA6B,GAAzBszB,GACjClhC,KAAK6gC,EAAE,GAAKM,EAAI,EAChBnhC,KAAK8gC,EAAE,GAAKK,EACZnhC,KAAK8gC,EAAE,GAAK,EASZ9gC,KAAK+gC,MAAQ,C,CAGP,2BAAAQ,CAA4BL,GAGlC,MAAMC,EAAY,EAAMt2B,KAAKu2B,IAA6B,GAAzBF,GAC3BG,EAAa,EAAMF,EACzBnhC,KAAK6gC,EAAE,IAAM,EAAMM,GAAKE,EACxBrhC,KAAK8gC,EAAE,GAAKK,EAAIE,EAChBrhC,KAAK8gC,EAAE,IAAMK,EAAIE,EACjBrhC,KAAK+gC,MAAQ,C,CAcP,iBAAAS,CAAkBN,EAAgCO,GAQxD,MAAML,EAAcv2B,KAAKu2B,IAA6B,GAAzBF,GACvBQ,EAAmB72B,KAAKgB,KAAK41B,GAC7BN,GAAaC,EAAMM,EAAW,IAAMN,EAAMM,EAAW,GAE3D1hC,KAAK6gC,EAAE,GAAKM,EADO,EAEnBnhC,KAAK8gC,EAAE,IAAM,EAAMK,EAAIM,GAAmB,EAAMN,IAAE,EAClDnhC,KAAK8gC,EAAE,IAAM,EAAMK,EAAIM,GAAmB,EAAMN,IAAE,EAClDnhC,KAAK+gC,MAAQ,C,CAGP,+BAAAY,CAAgCT,GACtC,MAAMC,GAAat2B,KAAK+C,IAAIszB,GAA0B,GAAOr2B,KAAK8C,IAAIuzB,GACtElhC,KAAK6gC,EAAE,GAAKM,EACZnhC,KAAK8gC,EAAE,GAAKK,EACZnhC,KAAK8gC,EAAE,GAAK,EACZ9gC,KAAK+gC,MAAQ,C,CAeP,8BAAAa,CAA+BC,GAIrC,MAAMV,GAAa,EAAMU,IAAU,EAAMA,GACzC7hC,KAAK6gC,EAAE,GAAKM,EACZnhC,KAAK8gC,EAAE,GAAKK,EACZnhC,KAAK8gC,EAAE,GAAK,EACZ9gC,KAAK+gC,MAAQ,C,CAGP,0BAAAe,CAA2BZ,EAAgCa,GAMjE,MAAMC,EAAgBn3B,KAAK+C,IAAIszB,IAA2B,EAAMa,GAC1Dp0B,EAAc9C,KAAK8C,IAAIuzB,GACvBG,EAAa,EAAMW,EACzBhiC,KAAK6gC,EAAE,IAAM,EAAIlzB,EAAM0zB,EACvBrhC,KAAK6gC,EAAE,IAAM,EAAImB,GAASX,EAC1BrhC,KAAK8gC,EAAE,GAAK9gC,KAAK8gC,EAAE,IAAM,EAAInzB,IAAQ,EAAI0zB,GACzCrhC,KAAK8gC,EAAE,IAAM,EAAInzB,GAAO0zB,EACxBrhC,KAAK+gC,MAAQ,C,CAGP,yBAAAkB,CAA0Bf,EAAgCa,GAOhE,MAAMZ,EAAY,EAAMt2B,KAAK+C,IAAIszB,EAAyB,GACpDgB,EAA0B,EAAM,GAAO,EAAMH,GAC7CI,EAAmBD,EAAkBA,GAAmB,EAAMf,GACpEnhC,KAAK6gC,EAAE,GAAK,EAAIM,GAAKA,EAAI,GAAOA,EAAEgB,EAAW,EAC7CniC,KAAK6gC,EAAE,IAAMM,EAAI,IAAQA,EAAIA,EAAEgB,EAAW,GAC1CniC,KAAK8gC,EAAE,GAAKK,EAAEA,EACdnhC,KAAK8gC,EAAE,GAAK,EACZ9gC,KAAK8gC,EAAE,GAAK,EACZ9gC,KAAK+gC,MAAQ,C,CAGP,2BAAAqB,CAA4BlB,EAAgCa,GAClE,MAAMC,EAAgBn3B,KAAK+C,IAAIszB,IAA2B,EAAIa,GACxDp0B,EAAc9C,KAAK8C,IAAIuzB,GACvBG,EAAa,EAAMW,EACzBhiC,KAAK6gC,EAAE,IAAM,EAAIlzB,EAAM0zB,EACvBrhC,KAAK6gC,EAAE,IAAM,EAAMmB,GAASX,EAC5BrhC,KAAK8gC,EAAE,GAAK9gC,KAAK8gC,EAAE,IAAM,EAAMnzB,IAAQ,EAAI0zB,GAC3CrhC,KAAK8gC,EAAE,KAAO,EAAMnzB,GAAO0zB,EAC3BrhC,KAAK+gC,MAAQ,C,CAeP,iBAAAsB,CAAkBnB,EAAgCO,EAAyBa,GACjF,MAAMC,EAAY13B,KAAKgB,KAAK41B,GACtBnJ,EAAYztB,KAAK8C,IAAIuzB,GACrBsB,EAAgBD,EAAI,EACpBE,EAAiBF,EAAI,EACrBP,EAAmD,GAAnCn3B,KAAK+C,IAAIszB,GAAgCr2B,KAAKgB,KAAM22B,EAAQD,GAAM,EAAMD,EAAQ,GAAO,GACvGI,EAAsB,EAAM73B,KAAKgB,KAAK02B,GAAKP,EAC3CX,EAAgBmB,EAASC,EAASnK,EAAIoK,EAC5C1iC,KAAK6gC,EAAE,GAAM,GAAS4B,EAASD,EAASlK,GAAmB+I,EAC3DrhC,KAAK6gC,EAAE,IAAe2B,EAASC,EAASnK,EAAIoK,GAAerB,EAC3DrhC,KAAK8gC,EAAE,GAAUyB,GAAKC,EAASC,EAASnK,EAAIoK,GAAerB,EAC3DrhC,KAAK8gC,EAAE,IAAM,EAAIyB,GAAKE,EAASD,EAASlK,GAAmB+I,EAC3DrhC,KAAK8gC,EAAE,GAAUyB,GAAKC,EAASC,EAASnK,EAAIoK,GAAerB,EAC3DrhC,KAAK+gC,MAAQ,C,CAGP,YAAA4B,CAAazB,EAAgCa,EAAwBa,GAC3E,MAAMlB,EAAmB72B,KAAKgB,KAAKk2B,GAC7Bc,EAAoBD,EAAiB1B,GAA0BQ,GAAY,EAAIA,EAAW,EAAEA,GAE5FM,EAAgBn3B,KAAKu2B,IAAgB,GAAZyB,GACzBxB,EAAa,EAAMW,EAAQN,EACjC1hC,KAAK8gC,EAAE,IAAM,EAAMkB,EAAQN,GAAYL,EACvCrhC,KAAK8gC,EAAE,GAAK9gC,KAAK6gC,EAAE,IAAM,EAAMh2B,KAAK8C,IAAIuzB,GAA0BG,EAClErhC,KAAK8gC,EAAE,IAAM,EAAMkB,EAAQN,GAAYL,EACvCrhC,KAAK6gC,EAAE,IAAM,EAAMmB,EAAQN,GAAYL,EACvCrhC,KAAK+gC,MAAQ,C,QAsCF+B,GAAb,WAAA/iC,GACQC,KAAI+iC,KAAW,EACf/iC,KAAIgjC,KAAW,EACfhjC,KAAKijC,MAAW,C,CAEhB,OAAAC,CAAQC,EAA4BC,GAC1CpjC,KAAKqjC,eAAeF,EAAQt4B,KAAK8C,IAAIy1B,GAAmBv4B,KAAK+C,IAAIw1B,G,CAG3D,cAAAC,CAAeF,EAA4BJ,EAAcC,GAC/D,MAAMnC,EAAcsC,EAAOtC,EACrBC,EAAcqC,EAAOrC,EACrBwC,EAAiBP,EACjBQ,GAAkBP,EACxB,IAAIQ,EAAkB1C,EAAE,GAAKA,EAAE,GAAKwC,EAChCG,EAAkB3C,EAAE,GAAKyC,EACzBG,EAAoB,EAAM7C,EAAE,GAAKyC,EACjCK,EAAoB9C,EAAE,GAAK0C,EAC3BK,EAAgBN,EAChBO,EAAgBN,EACpB,IAAK,IAAIh5B,EAAY,EAAGA,GAAK44B,EAAOpC,MAAOx2B,IAAK,CAC/C,MACMu5B,EAAmBF,EAAQL,EAASM,EAAQP,EAClDM,EAFyBA,EAAQN,EAASO,EAAQN,EAGlDM,EAAQC,EACRN,GAAW1C,EAAEv2B,GAAKq5B,EAClBH,GAAW3C,EAAEv2B,GAAKs5B,EAClBH,GAAa7C,EAAEt2B,GAAKq5B,EACpBD,GAAa9C,EAAEt2B,GAAKs5B,CACpB,CACD7jC,KAAKijC,MAAQS,EAAYA,EAAYC,EAAYA,EACjD3jC,KAAK+iC,KAAOS,EAAUE,EAAYD,EAAUE,EAC5C3jC,KAAKgjC,KAAOS,EAAUC,EAAYF,EAAUG,C,CAGtC,SAAAI,GACN,OAAOl5B,KAAKgB,KAAK7L,KAAK+iC,KAAO/iC,KAAK+iC,KAAO/iC,KAAKgjC,KAAOhjC,KAAKgjC,MAAQhjC,KAAKijC,K,CAGjE,KAAAe,GACN,OAAOn5B,KAAKo5B,MAAMjkC,KAAKgjC,KAAMhjC,KAAK+iC,K,QAIvBmB,GAAb,WAAAnkC,GACQC,KAAEmkC,GAAW,EACbnkC,KAAEokC,GAAW,EACbpkC,KAAEsM,GAAW,EACbtM,KAAEuM,GAAW,EACbvM,KAAEwM,GAAW,EACbxM,KAAOqkC,QAAW,EAClBrkC,KAAOskC,QAAW,EAClBtkC,KAAOukC,QAAW,EAClBvkC,KAAOwkC,QAAW,EAClBxkC,KAAOykC,QAAW,EAClBzkC,KAAO0kC,QAAW,EAClB1kC,KAAO2kC,QAAW,EAKlB3kC,KAAkC4kC,oCAAY,C,CAE9C,WAAAC,GACN7kC,KAAK0kC,QAAU,EACf1kC,KAAK2kC,QAAU,C,CAGT,4BAAAG,CAA6BC,EAA2BC,EAAyBC,EAAmBL,GAC1G,GAAmB,GAAfG,EAAMhE,OAA2B,GAAbiE,EAAIjE,MAAY,MAAM,IAAI3+B,MAClDpC,KAAKmkC,GAAKY,EAAMlE,EAAE,GAClB7gC,KAAKokC,GAAKW,EAAMlE,EAAE,GAClB7gC,KAAKsM,GAAKy4B,EAAMjE,EAAE,GAClB9gC,KAAKuM,GAAKw4B,EAAMjE,EAAE,GAClB9gC,KAAKwM,GAAKu4B,EAAMjE,EAAE,GAClB9gC,KAAKqkC,SAAWW,EAAInE,EAAE,GAAKkE,EAAMlE,EAAE,IAAMoE,EACzCjlC,KAAKskC,SAAWU,EAAInE,EAAE,GAAKkE,EAAMlE,EAAE,IAAMoE,EACrCL,GACH5kC,KAAKukC,QAAU15B,KAAKmB,IAAIg5B,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,GAAImE,GAC/CjlC,KAAKwkC,QAAU35B,KAAKmB,IAAIg5B,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,GAAImE,GAC/CjlC,KAAKykC,QAAU55B,KAAKmB,IAAIg5B,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,GAAImE,KAE/CjlC,KAAKukC,SAAWS,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,IAAMmE,EACzCjlC,KAAKwkC,SAAWQ,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,IAAMmE,EACzCjlC,KAAKykC,SAAWO,EAAIlE,EAAE,GAAKiE,EAAMjE,EAAE,IAAMmE,GAE1CjlC,KAAK4kC,mCAAqCA,C,EAatC,SAAUM,GAAsBz3B,GACrC,OAAO,EAAM5C,KAAKs6B,KAAe,GAAV13B,EACxB,CCthBA,MAAM23B,GAAY,WACZC,GAAY,WACZC,GAAY,WACZC,GAAY,UACZC,GAAY,UAClB,IAAIC,GAMG,SAASC,GAASC,EAAOC,EAAO,GACnC,MAAMC,EAA0B,iBAAVF,GAAsBF,KAAY,IAAIK,aAAeC,OAAOJ,GAASA,EACrF7E,EAAI+E,EAoBV,IAAIG,EAAOJ,EAAOJ,GAAa,WAC3BnvB,EAAS,EACb,GAAIyqB,EAAEh+B,QAAU,GAAI,CAChB,MAAMmjC,EAAO,CACRL,EAAOR,GAAYC,GAAa,WAChCO,EAAOP,GAAa,WACpBO,EAAO,EAAK,WACZA,EAAOR,GAAa,YAwBnBtE,EAAI+E,EACJK,EAAQpF,EAAEh+B,OAAS,GACzB,IAAIqjC,EAAO,EACX,IAAK9vB,EAAS,GAAa,WAATA,IAAwB6vB,EAAO7vB,GAAU,EAAG,CAC1D,MAAM9L,EAAI8L,EACJ+vB,EAAStF,EAAEv2B,EAAI,IAAMu2B,EAAEv2B,EAAI,IAAM,GACjC87B,EAASvF,EAAEv2B,EAAI,IAAMu2B,EAAEv2B,EAAI,IAAM,GACjC+7B,EAASF,EAASf,IAAcgB,EAAShB,IAAc,IAC7D,IAAIW,EAAOC,EAAKE,GAAQG,EAAU,WAClCN,EAAOA,GAAO,GAAOA,IAAQ,GAC7B,MAAMO,EAAa,MAANP,EACPQ,EAAOR,IAAQ,GACrBC,EAAKE,GAASI,EAAOnB,IAAcoB,EAAOpB,IAAc,IAAO,WAC/De,EAAQA,EAAO,EAAK,CAChC,CAUQH,GACOC,EAAK,IAAM,EAAMA,EAAK,KAAO,KAC1BA,EAAK,IAAM,EAAMA,EAAK,KAAO,KAC7BA,EAAK,IAAM,GAAOA,EAAK,KAAO,KAC9BA,EAAK,IAAM,GAAOA,EAAK,KAAO,IAChC,UAChB,CAUID,EAAOA,EAAMH,EAAO/iC,OAAU,WAe9B,MAAMojC,EAAQL,EAAO/iC,OAAS,EAC9B,KAAOuT,GAAU6vB,EAAO7vB,GAAU,EAAG,CACjC,MAAM9L,EAAI8L,EACJ+vB,EAAStF,EAAEv2B,EAAI,IAAMu2B,EAAEv2B,EAAI,IAAM,GACjC87B,EAASvF,EAAEv2B,EAAI,IAAMu2B,EAAEv2B,EAAI,IAAM,GAEvCy7B,EAAOA,GADOI,EAASd,IAAce,EAASf,IAAc,KACtC,WACtBU,EAAOA,GAAO,GAAOA,IAAQ,GAC7BA,GAAc,MAANA,GAAgBT,KAAeS,IAAQ,IAAMT,IAAc,IAAO,UAClF,CAWI,KAAOlvB,EAASyqB,EAAEh+B,SAAUuT,EAAQ,CAEhC2vB,GADalF,EAAEzqB,GACImvB,GACnBQ,EAAOA,GAAO,GAAOA,IAAQ,GAC7BA,GAAc,MAANA,GAAgBZ,KAAeY,IAAQ,IAAMZ,IAAc,IAAO,UAClF,CAmBI,OANAY,GAAaA,IAAQ,GACrBA,IAAe,MAANA,GAAgBX,GAAa,cAAiBW,IAAQ,IAAMX,IAAc,IACnFW,GAAaA,IAAQ,GACrBA,IAAe,MAANA,GAAgBV,GAAa,cAAiBU,IAAQ,IAAMV,IAAc,IACnFU,GAAaA,IAAQ,GAEdA,EAAM,EAAIA,EAAM,WAAaA,CACxC,CC/IA,MAAMS,GAAO,M,SAkBGC,GAAMv5B,EAAa2K,EAAa6uB,GAE5C,OAAIA,IADJ7uB,GAAY,GAEJ6uB,GAAOx5B,EAAYw5B,EACXx5B,EAEL2K,CAEf,CAWA,SAAS8uB,GAAcz5B,EAAa2K,EAAa6uB,GAC7C,GAAIx5B,GAAOw5B,GAAOA,GAAO7uB,EAAK,OAAO6uB,EACrC,MAAM,IAAIvkC,MAAM,SAASukC,mBAAqBx5B,MAAQ2K,KAC1D,CAUgB,SAAA+uB,GAAyBtO,EAAWuO,GAChD,IAAIl4B,EAAqBm4B,WAAWxO,GAEpC,OADI5U,OAAOqjB,MAAMp4B,KAASA,EAASk4B,GAC5Bl4B,CACX,CAUgB,SAAAq4B,GAAuB1O,EAAWuO,GAC9C,IAAIl4B,EAAqBs4B,SAAS3O,GAElC,OADI5U,OAAOqjB,MAAMp4B,KAASA,EAASk4B,GAC5Bl4B,CACX,CAQA,SAASu4B,GAAkBtB,EAAkBjuB,GAEzCiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,GAAgB,IAElDiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,GAAgB,KAElDiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,GAAgB,KAElDiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,GAAgB,KAElDiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,EAAgB,KAElDiuB,EAAOp7B,KAAK28B,GAAqBxvB,IAAC,EAAgB,IACtD,CAWA,SAASyvB,GAAkBC,EAAoBC,GAC3C,IAAI3vB,EAAY,EAahB,OAXAA,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5D3vB,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5D3vB,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5D3vB,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5D3vB,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,EAE5D3vB,GAAK4vB,GAAoBF,EAAWG,WAAWF,OAAa,EACrD3vB,CACX,CAYA,SAAS8vB,GAAqB7B,EAAkB8B,EAAWpP,EAAWqP,EAAWC,EAAWt9B,EAAWu2B,GACnG+E,EAAOp7B,KAAK28B,GAAoBO,IAGhC9B,EAAOp7B,KAAK28B,GAAoBzjB,OAAQ4U,EAAI,KAC5C,IAAIuP,EAASj9B,KAAKiB,MAAoB,IAAdjB,KAAKC,IAAIytB,IAC7BwP,EAAgBl9B,KAAKme,MAAM8e,EAAS,IACxCjC,EAAOp7B,KAAK28B,GAAoBU,EAAS,IAAKV,GAAoBW,EAAgB,IAAKX,GAAoBv8B,KAAKme,MAAM+e,EAAgB,MAEtIlC,EAAOp7B,KAAK28B,GAAoBzjB,OAAQikB,EAAI,KAC5C,IAAII,EAASn9B,KAAKiB,MAAoB,IAAdjB,KAAKC,IAAI88B,IAC7BK,EAAgBp9B,KAAKme,MAAMgf,EAAS,IACxCnC,EAAOp7B,KAAK28B,GAAoBY,EAAS,IAAKZ,GAAoBa,EAAgB,IAAKb,GAAoBv8B,KAAKme,MAAMif,EAAgB,MAEtIpC,EAAOp7B,KAAK28B,GAAoBzjB,OAAQkkB,EAAI,KAC5C,IAAIK,EAASr9B,KAAKiB,MAAoB,IAAdjB,KAAKC,IAAI+8B,IACjChC,EAAOp7B,KAAK28B,GAAoBc,EAAS,IAAKd,GAAoBv8B,KAAKme,MAAMkf,EAAS,MAEtFrC,EAAOp7B,KAAK28B,GAAoBzjB,OAAQpZ,EAAI,KAC5C,IAAI49B,EAASt9B,KAAKiB,MAAoB,IAAdjB,KAAKC,IAAIP,IACjCs7B,EAAOp7B,KAAK28B,GAAoBe,EAAS,IAAKf,GAAoBv8B,KAAKme,MAAMmf,EAAS,MAEtFtC,EAAOp7B,KAAK28B,IAAqBtG,GACrC,CAOA,SAASsH,GAA+BC,GACpC,IAAIv0B,EAAc4yB,GAAM,EAAGnlC,EAAOgP,KAAKzN,OAAQulC,GAC3CC,EAAiB,EAoBrB,OAjBoB,KAAhBD,GAEAv0B,EAAM,EACNw0B,EAAS,GACc,KAAhBD,GAEPv0B,EAAM,EACNw0B,GAAU,GACa,KAAhBD,GAEPv0B,EAAM,EACNw0B,GAAU,GACa,KAAhBD,IAEPv0B,EAAM,EACNw0B,GAAU,GAEP,CAACx0B,EAAKw0B,EACjB,CAqJA,MAAMlB,GAA6C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEjxe,MAAMe,GAMF,WAAAxoC,CAAYyoC,EAAgBhkC,EAAoB2zB,GAJxCn4B,KAAKyoC,EAAa,GAElBzoC,KAAU0oC,EAAW,EAGzB,IAAK,IAAIn+B,EAAY/F,EAAY+F,EAAI4tB,EAAW5tB,IAAK,CACjD,MAAMoE,EAAgB64B,GAAoBgB,EAAOf,WAAWl9B,IAC5DvK,KAAKyoC,EAAMh+B,KAAMkE,GAAS,EAAK,GAC/B3O,KAAKyoC,EAAMh+B,KAAMkE,GAAS,EAAK,GAC/B3O,KAAKyoC,EAAMh+B,KAAMkE,GAAS,EAAK,GAC/B3O,KAAKyoC,EAAMh+B,KAAMkE,GAAS,EAAK,GAC/B3O,KAAKyoC,EAAMh+B,KAAMkE,GAAS,EAAK,GAC/B3O,KAAKyoC,EAAMh+B,KAAa,EAARkE,EACnB,C,CAOE,IAAAg6B,CAAKhP,GACR,IAAI/qB,EAAiB,EACrB,KAAO+qB,EAAW,GACd/qB,IAAmB,EACnBA,GAAU5O,KAAKyoC,EAAMzoC,KAAK0oC,KAC1B/O,IAEJ,OAAO/qB,C,CASJ,YAAAg6B,CAAaC,EAAkBC,GAClC,IAAIl6B,EAAiBi6B,EACjBE,EAAkBD,EACtB,KAAO9oC,KAAKyoC,EAAMzoC,KAAK0oC,MACnB95B,GAAU,GAAKm6B,EACfA,IAEJ,KAAOA,EAAU,GACbA,IACI/oC,KAAKyoC,EAAMzoC,KAAK0oC,OAChB95B,GAAU,GAAKm6B,GAGvB,OAAOn6B,C,CAMJ,gBAAAo6B,GACH,OAAOhpC,KAAK4oC,aAAa,EAAG,E,CAMzB,sBAAAK,GACH,OAAOjpC,KAAK4oC,aAAa,EAAG,E,CAMzB,YAAAM,GACH,OAAOlpC,KAAK4oC,aAAa,EAAG,E,CAMzB,iBAAAO,GACH,OAAInpC,KAAK2oC,KAAK,IACF3oC,KAAK4oC,aAAa,EAAG,GAEtB5oC,KAAK4oC,aAAa,EAAG,E,EAKxC,MAAMQ,GAAN,WAAArpC,GACYC,KAAMqpC,EAAW,EACjBrpC,KAAKyoC,EAAa,E,CAEnB,KAAArlB,GACHpjB,KAAKqpC,EAAS,C,CAGX,KAAAC,CAAM3P,EAAkBhrB,GAE3B,IADAgrB,IACOA,GAAY,GACf35B,KAAKyoC,EAAMzoC,KAAKqpC,KAAa16B,IAAUgrB,EAAY,EACnDA,G,CAID,aAAA4P,CAAcV,EAAkBC,EAAiBn6B,GACpD,GAAIA,EAAQk6B,EAAU,MAAM,IAAIzmC,MAAM,uBACtCuM,GAASk6B,EACT,IAAIE,EAAkBD,EACtB,KAAOn6B,GAAU,GAAKo6B,GAClB/oC,KAAKyoC,EAAMzoC,KAAKqpC,KAAY,EAC5B16B,GAAS,GAAKo6B,EACdA,IAGJ,IADA/oC,KAAKyoC,EAAMzoC,KAAKqpC,KAAY,EACrBN,EAAU,GACbA,IACA/oC,KAAKyoC,EAAMzoC,KAAKqpC,KAAa16B,IAAUo6B,EAAW,C,CAInD,iBAAAS,CAAkB76B,GACrB3O,KAAKupC,cAAc,EAAG,EAAG56B,E,CAGtB,aAAA86B,CAAc96B,GACjB3O,KAAKupC,cAAc,EAAG,EAAG56B,E,CAGtB,kBAAA+6B,CAAmB/6B,GAClBA,EAAQ,GACR3O,KAAKspC,MAAM,EAAG,GACdtpC,KAAKupC,cAAc,EAAG,GAAI56B,KAE1B3O,KAAKspC,MAAM,EAAG,GACdtpC,KAAKupC,cAAc,EAAG,EAAG56B,G,CAI1B,MAAA+I,CAAOiyB,GACV,IAAK,IAAIp/B,EAAY,EAAGA,EAAIo/B,EAAMN,EAAQ9+B,IACtCvK,KAAKyoC,EAAMzoC,KAAKqpC,KAAYM,EAAMlB,EAAMl+B,E,CAIzC,YAAAq/B,CAAa/D,GAEhB,IAAK,IAAIt7B,EAAY,EAAGA,EAAIvK,KAAKqpC,EAAQ9+B,GAAK,EAAG,CAC7C,MAAMoE,EAAiB3O,KAAKyoC,EAAMl+B,IAAM,EAAMvK,KAAKyoC,EAAMl+B,EAAI,IAAM,EAAMvK,KAAKyoC,EAAMl+B,EAAI,IAAM,EAAMvK,KAAKyoC,EAAMl+B,EAAI,IAAM,EAAMvK,KAAKyoC,EAAMl+B,EAAI,IAAM,EAAKvK,KAAKyoC,EAAMl+B,EAAI,GACxKs7B,EAAOp7B,KAAK28B,GAAoBz4B,GACnC,CACD,OAAOk3B,C,CAGJ,YAAAgE,GACH,OAAOh/B,KAAK6U,KAAK1f,KAAKqpC,EAAS,E,WAUvBS,GAAYC,EAAkBC,EAAcpK,GACxD,MAAO,CAAEmK,SAAUA,EAAUC,KAAMA,EAAMpK,KAAMA,EACnD,C,MAEaqK,GAOT,WAAAlqC,CAAmBmqC,EAAenF,EAAeC,EAAapF,EAAcuK,GAAmB,GAC3FnqC,KAAKoqC,QAAU,CAACF,GAChBlqC,KAAKqqC,KAAO,CAACP,GAAY,EAAG,EAAGlK,GAAOkK,GAAY,EAAG9E,EAAMD,EAAOoF,EAAU,EAAIvK,IAChF5/B,KAAK+kC,MAAQA,EACb/kC,KAAKglC,IAAMA,EACXhlC,KAAKsqC,sBAAuB,C,CAGzB,gBAAAC,GACH,IAAIC,EAAsC,EACtCC,EAAuB,EAC3B,IAAK,IAAIC,EAAmB,EAAGA,EAAW1qC,KAAKqqC,KAAKvnC,OAAQ4nC,IAAY,CACpE,MAAMC,EAAgB3qC,KAAKqqC,KAAKK,EAAW,GACrCE,EAAgB5qC,KAAKqqC,KAAKK,GAChC,GAAIC,EAAKZ,UAAYa,EAAKb,SAAU,CAChC,MAAMc,EAAmBD,EAAKZ,KAAOW,EAAKX,KACtCQ,EAA8BK,IAC9BL,EAA8BK,EAC9BJ,EAAeE,EAAKZ,SAE3B,CACJ,CACD,GAAmC,GAA/BS,EAAkC,CAClC,IAAIM,EAAsB,EAC1B,IAAK,IAAIJ,EAAmB,EAAGA,EAAW1qC,KAAKqqC,KAAKvnC,OAAQ4nC,IAAY,CACpE,MAAMK,EAAe/qC,KAAKqqC,KAAKK,GAC3BI,EAAcC,EAAInL,OAClBkL,EAAcC,EAAInL,KAClB6K,EAAeM,EAAIhB,SAE1B,CACJ,CACD,OAAOU,C,CAGJ,KAAAO,GACH,MAAMC,EAAgB,IAAIhB,IAAM,EAAGjqC,KAAK+kC,MAAO/kC,KAAKglC,IAAK,GACzDiG,EAAQb,QAAUpqC,KAAKoqC,QAAQ1yB,SAC/BuzB,EAAQZ,KAAO,GACf,IAAK,MAAMU,KAAO/qC,KAAKqqC,KACnBY,EAAQZ,KAAK5/B,KAAKq/B,GAAYiB,EAAIhB,SAAUgB,EAAIf,KAAMe,EAAInL,OAG9D,OADAqL,EAAQX,qBAAuBtqC,KAAKsqC,qBAC7BW,C,CAGJ,cAAAC,CAAeC,GAClB,IAAIC,EACJ,IAAKA,EAAc,EAAGA,EAAcprC,KAAKqqC,KAAKvnC,OAAS,KAC/C9C,KAAKqqC,KAAKe,GAAapB,KAAOhqC,KAAK+kC,MAAQoG,GADOC,KAG1D,OAAOA,C,QAIFC,GAAb,WAAAtrC,GACWC,KAAKsrC,MAAW,GACPtrC,KAAAurC,YAAwB,CAAC,E,CAElC,UAAAC,GACH,MAAM58B,EAAiB,GACvB,IAAK,MAAM68B,KAAQzrC,KAAKsrC,MACpB18B,EAAOnE,KAAKghC,EAAKT,SAErB,OAAOp8B,C,CAGJ,KAAA88B,GACH1rC,KAAKsrC,MAAMxoC,OAAS,EACpB9C,KAAKurC,YAAY,GAAK,EACtBvrC,KAAKurC,YAAYzoC,OAAS,C,CAGvB,YAAA6oC,CAAaziB,EAAY5F,EAAkBsoB,GAC9C,MAAMC,EAAsB,GAC5B,IAAK,MAAMJ,KAAQzrC,KAAKsrC,MAAO,CAE3B,IAAItU,EAAyB1T,EAAQioB,YAAYvrC,KAAKurC,YAAY,IAC9DO,EAAcjhC,KAAKiN,IAAI,EAAGvW,EAAO6Z,SAAWqwB,EAAKrB,QAAQ,GAAK,GAC9D2B,EAAoB7iB,EAAK8iB,uBAAuBJ,EAAc5U,EAAW/X,WAAW6sB,GAAM9U,EAAWiV,eAAeH,IACxH,MAAMI,EAAuB,GAC7B,IAAK,MAAMnB,KAAOU,EAAKpB,KAAM,CACzB,IAAI8B,EAAiBP,EAAe/gC,KAAKiB,MAAMi/B,EAAInL,MAAQ/0B,KAAKiB,MAAiB,IAAXi/B,EAAInL,KAAamM,GACvFG,EAAWzhC,KAAK,CACZ2hC,MAASrB,EAAIf,KAAOyB,EAAK1G,OAASxjC,EAAOmR,QAAQwW,EAAKmjB,QAAQ15B,aAAepR,EAAOgR,aACpF+5B,UAAavB,EAAIhB,SACjBhP,OAAUoR,EACVI,OAAUX,GAEjB,CAED,MAAMY,EAAkB,CACpBpC,QAAWqB,EAAKrB,QAChBqC,OAAUP,GAEI,GAAdT,EAAK1G,QACLyH,EAAiC,qBAAIf,EAAKnB,sBAE9CuB,EAAUphC,KAAK+hC,EAClB,CAED,MAAME,EAAqB,CAAEpB,MAASO,GAItC,OAHI3iB,EAAKyjB,qBACLD,EAA2B,YAAI1sC,KAAKurC,YAAY/vB,KAAIjR,GAAKA,EAAI,KAE1DmiC,C,CAGJ,cAAAE,CAAeF,EAAoBxjB,EAAY5F,EAAkBupB,EAA8BC,EAAyBlB,EAAuBz7B,EAAqB,QACvK,MAAM48B,EAAiB58B,EAAW68B,cAClC,GAAI9jB,EAAKyjB,mBACL,GAAIlqC,MAAM8d,QAAQmsB,EAA2B,aAAI,CAC7C,MAAMnB,EAAqBmB,EAA2B,YAChDO,EAA0BvG,GAAMnlC,EAAO6Q,mBAAoB8W,EAAKgkB,sCAAsC5pB,GAAW,EAAGioB,EAAYzoC,QACtI,IAAK,IAAI+2B,EAAY,EAAGA,EAAIoT,EAAiBpT,IACzC75B,KAAKurC,YAAY1R,GAAK6M,GAAM,EAAGpjB,EAAQioB,YAAYzoC,QAA0B,EAAjByoC,EAAY1R,IAAU,GAEtF75B,KAAKurC,YAAYzoC,OAASmqC,CAC7B,MACGjtC,KAAKurC,YAAY,GAAK7E,GAAM,EAAGpjB,EAAQioB,YAAYzoC,QAAuC,EAA9B4pC,EAA0B,YAAS,GAC/F1sC,KAAKurC,YAAYzoC,OAAS,EAIlC,GAAI4pC,EAAqB,OAAKA,EAAqB,MAAE5pC,OAAS,EAAG,CAC7D,MAAMqqC,EAAuBtiC,KAAKsC,IAAI+b,EAAKkkB,YAAc7rC,EAAOgR,cAAgBq5B,EAAerqC,EAAO6Z,SAAW,GAAIsxB,EAAqB,MAAE5pC,SAAW,GAIvJ,IAAK,IAAI+2B,EAAY,EAAGA,EAAI6S,EAAqB,MAAE5pC,UAC3C+2B,GAAKsT,GAD8CtT,IAAK,CAG5D,MAAM2S,EAAaE,EAAqB,MAAE7S,GAC1C,KAAK2S,GAAeA,EAAoB,SAAOA,EAAoB,QAAE1pC,QAAU,GAAO0pC,EAAmB,QAAOA,EAAmB,OAAE1pC,QAAU,GAC3I,SAGJ,MAAM2oC,EAAa,IAAIxB,GAAK,EAAG,EAAG,EAAG,GACrCwB,EAAKrB,QAAU,GACfqB,EAAKpB,KAAO,GAEZ,IAAK,IAAIgD,EAAY,EAAGA,EAAIb,EAAoB,QAAE1pC,OAAQuqC,IAAK,CAC3D,MAAMnD,EAA2C,EAA3BsC,EAAoB,QAAEa,GAC5C,IAAoC,GAAhC5B,EAAKrB,QAAQ3J,QAAQyJ,KACzBuB,EAAKrB,QAAQ3/B,KAAKy/B,GACduB,EAAKrB,QAAQtnC,QAAUvB,EAAO6W,cAAc,KACnD,CACD,GAAIqzB,EAAKrB,QAAQtnC,OAAS,EAAG,SAG7B,IAAIwqC,EAAwB,EACxBtW,EAAyB1T,EAAQioB,YAAYvrC,KAAKurC,YAAY,IAC9DO,EAAcjhC,KAAKiN,IAAI,EAAGvW,EAAO6Z,SAAWqwB,EAAKrB,QAAQ,GAAK,GAClE,IAAK,IAAIiD,EAAY,EAAGA,EAAIb,EAAmB,OAAE1pC,OAAQuqC,IAAK,CAC1D,MAAME,EAAmBf,EAAmB,OAAEa,GAC9C,GAAmB1e,MAAf4e,GAAmD5e,MAAvB4e,EAAkB,KAAgB,SAClE,MAAMxD,EAAgDpb,MAA5B4e,EAAuB,UAAkB,EAAgC,EAA3BA,EAAuB,UAEzFvD,EAAen/B,KAAKiB,OAAQyhC,EAAkB,KAAKhsC,EAAOgR,aAAes6B,GAG/E,IAIIjN,EAJAmM,EAAoB7iB,EAAK8iB,uBAAuBJ,EAAc5U,EAAW/X,WAAW6sB,GAAM9U,EAAWiV,eAAeH,IAMpHlM,EADyBjR,MAAzB4e,EAAoB,OACbxB,EACyBpd,MAAzB4e,EAAoB,OACpB1iC,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI4+B,EAAWlhC,KAAKiB,OAA+B,EAAxByhC,EAAoB,QAASxB,EAAY,QAG3D,EAAxBwB,EAAoB,QAAS,EAAK1iC,KAAKiB,MAA8B,EAAxByhC,EAAoB,QAAS1iC,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI4+B,EAAWlhC,KAAKiB,OAA+B,EAAxByhC,EAAoB,QAASxB,EAAY,OAGxK/B,EAAO9gB,EAAKkkB,YAAc7rC,EAAOgR,eACb,GAApBk5B,EAAKpB,KAAKvnC,SAEV2oC,EAAK1G,MAAQiF,EACbsD,EAAgBvD,GAMpB0B,EAAKpB,KAAK5/B,KAAKq/B,GAAYC,EAAWuD,EAAetD,EAAOyB,EAAK1G,MAAOnF,IAC3E,CACD,GAAI6L,EAAKpB,KAAKvnC,OAAS,EAAG,SAE1B2oC,EAAKzG,IAAMyG,EAAKpB,KAAKoB,EAAKpB,KAAKvnC,OAAS,GAAGknC,KAAOyB,EAAK1G,MAEvD,MAAM1pB,EAAmByxB,EAAiBvrC,EAAO2Z,UAAY,EAAI3Z,EAAO8Z,SACxE,IAAImyB,EAAsBnyB,EACtBoyB,EAAuB,EAC3B,IAAK,IAAIJ,EAAY,EAAGA,EAAI5B,EAAKrB,QAAQtnC,OAAQuqC,IAC7C5B,EAAKrB,QAAQiD,IAAMC,GACf7B,EAAKrB,QAAQiD,GAAK,GAAK5B,EAAKrB,QAAQiD,GAAKhyB,KACzCowB,EAAKrB,QAAQ1J,OAAO2M,EAAG,GACvBA,KAEA5B,EAAKrB,QAAQiD,GAAKG,IAAaA,EAAc/B,EAAKrB,QAAQiD,IAC1D5B,EAAKrB,QAAQiD,GAAKI,IAAcA,EAAehC,EAAKrB,QAAQiD,IAEpE,KAAI5B,EAAKrB,QAAQtnC,OAAS,GAA1B,CAEA,IAAK,IAAIuqC,EAAY,EAAGA,EAAI5B,EAAKpB,KAAKvnC,OAAQuqC,IAAK,CAC/C,MAAMtC,EAAeU,EAAKpB,KAAKgD,GAC3BtC,EAAIhB,SAAWyD,EAAc,IAAGzC,EAAIhB,UAAYyD,GAChDzC,EAAIhB,SAAW0D,EAAepyB,IAAU0vB,EAAIhB,SAAW1uB,EAAWoyB,GAClEJ,GAAK,GACDtC,EAAIhB,UAAY0B,EAAKpB,KAAKgD,EAAI,GAAGtD,UACjCgB,EAAIhB,UAAY0B,EAAKpB,KAAKgD,EAAI,GAAGtD,UACjCgB,EAAInL,MAAQ6L,EAAKpB,KAAKgD,EAAI,GAAGzN,MAC7BmL,EAAInL,MAAQ6L,EAAKpB,KAAKgD,EAAI,GAAGzN,OAC7B6L,EAAKpB,KAAK3J,OAAO2M,EAAI,EAAG,GACxBA,IAGX,CAQD,GANkB,GAAd5B,EAAK1G,MACL0G,EAAKnB,sBAA+D,IAAvCkC,EAAiC,qBAE9Df,EAAKnB,sBAAuB,EAGjB,YAAVyC,GAAiC,eAAVA,GAAoC,YAAVA,GAAyB/V,EAAW/X,WAAW6sB,IAAQvqC,EAAO0d,WAAWta,WAAkB,MAAEF,MAC/I,IAAK,MAAMsmC,KAAOU,EAAKpB,KAAM,CACzB,MAAMqD,EAAiB,GACjBC,EAAiB,EACjBC,EAAc7C,EAAInL,KAAO8N,EAC/B3C,EAAInL,KAAOgO,EAAMD,CACpB,CAGL3tC,KAAKsrC,MAAM7gC,KAAKghC,EAhCa,CAiChC,CACJ,C,QAIIoC,GAMT,WAAA9tC,CAAY0E,GALLzE,KAAS67B,UAAW,EACpB77B,KAASwN,UAAW,EACpBxN,KAAQ87B,SAAW,EACnB97B,KAAUmL,WAAW,GAGxBnL,KAAK0rC,MAAMjnC,E,CAGR,KAAAinC,CAAMjnC,GACTzE,KAAK67B,UAAY,EACjB77B,KAAKwN,UAAa/I,GAAS,EAAKlD,EAAOsX,qBAAuB,EAC9D7Y,KAAK87B,SAAW,EAChB97B,KAAKmL,WAAa,C,CAGf,IAAA2iC,CAAKnE,GACR3pC,KAAK67B,UAAY8N,EAAM9N,UACvB77B,KAAKwN,UAAYm8B,EAAMn8B,UACvBxN,KAAK87B,SAAW6N,EAAM7N,SACtB97B,KAAKmL,WAAaw+B,EAAMx+B,U,QAInB4iC,GAMT,WAAAhuC,GALOC,KAAImE,KAAW,GACfnE,KAAYwY,aAAW,EACvBxY,KAAA0Y,YAA0B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/C1Y,KAAiByY,kBAAa,GAGjCzY,KAAKguC,WAAW,E,CAGb,GAAAhqC,CAAIiqC,EAAkBC,GACzBluC,KAAK0rC,QACL1rC,KAAKwY,aAAey1B,EACpB,IAAK,IAAI1jC,EAAI,EAAGA,EAAIvK,KAAK0Y,YAAY5V,OAAQyH,IAAK,CAC9CvK,KAAK0Y,YAAYnO,GAAK2jC,EAAW3jC,GAC7BA,EAAI0jC,IACJjuC,KAAKyY,kBAAkBlO,GAAKA,EAAE,GAElCvK,KAAKmE,MAASoG,EAAE,EAChB,IAAK,IAAIsvB,EAAI,EAAGA,EAAIqU,EAAW3jC,GAAGzH,OAAO+2B,IACrC75B,KAAKmE,MAAQ+pC,EAAW3jC,GAAGsvB,GACvBqU,EAAW3jC,GAAGsvB,GAAKoU,EAAS,IAC5BjuC,KAAKyY,kBAAkBy1B,EAAW3jC,GAAGsvB,GAAK,GAAKtvB,EAAI,GAEvDvK,KAAKmE,MAAQ,IAGbnE,KAAKmE,MADLoG,EAAI0jC,EACS,IAEA,GAEpB,C,CAGE,KAAAvC,GACH1rC,KAAKmE,KAAO,GACZnE,KAAKwY,aAAe,EACpBxY,KAAK0Y,YAAc,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACrD1Y,KAAKyY,kBAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,E,CAGtC,IAAAq1B,CAAKnE,GACR3pC,KAAKmE,KAAOwlC,EAAMxlC,KAClBnE,KAAKwY,aAAemxB,EAAMnxB,aAC1BxY,KAAK0Y,YAAcixB,EAAMjxB,YACzB1Y,KAAKyY,kBAAoBkxB,EAAMlxB,iB,CAG5B,UAAAu1B,CAAWrE,GACd3pC,KAAK0rC,QACL,IAAIhV,EAASn1B,EAAOoX,cAAcgxB,GAClC3pC,KAAKmE,KAAOuyB,EAAOvyB,KACnBnE,KAAKwY,aAAeke,EAAOle,aAC3B,IAAK,IAAIjO,EAAI,EAAGA,EAAImsB,EAAOhe,YAAY5V,OAAQyH,IAC3CvK,KAAK0Y,YAAYnO,GAAK9H,MAAMC,KAAKg0B,EAAOhe,YAAYnO,IACpDvK,KAAKyY,kBAAkBlO,GAAKmsB,EAAOje,kBAAkBlO,E,QAKpD4jC,GAIT,WAAApuC,GAHOC,KAAImE,KAAW,GACfnE,KAAAsZ,QAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAG9CtZ,KAAKguC,WAAW,E,CAGb,GAAAhqC,CAAIoqC,GACPpuC,KAAK0rC,QACL,IAAK,IAAInhC,EAAI,EAAGA,EAAIvK,KAAKsZ,QAAQxW,OAAQyH,IAAK,CAC1CvK,KAAKsZ,QAAQ/O,GAAK6jC,EAAU7jC,GAC5B,IAAK,IAAIsvB,EAAI,EAAGA,EAAIuU,EAAU7jC,GAAGzH,OAAQ+2B,IACrC75B,KAAKmE,MAAQiqC,EAAU7jC,GAAGsvB,GAC1B75B,KAAKmE,MAAQ,IAEjBnE,KAAKmE,MAAQ,GAChB,C,CAGE,KAAAunC,GACH1rC,KAAK0rC,MACL1rC,KAAKmE,KAAO,GACZnE,KAAKsZ,QAAU,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,G,CAGlC,IAAAw0B,CAAKnE,GACR3pC,KAAKmE,KAAOwlC,EAAMxlC,KAClBnE,KAAKsZ,QAAUqwB,EAAMrwB,O,CAGlB,UAAA00B,CAAWrE,GACd3pC,KAAK0rC,QACL,IAAIhV,EAASn1B,EAAOgY,aAAaowB,GACjC,IAAK,IAAIp/B,EAAI,EAAGA,EAAImsB,EAAOpd,QAAQxW,OAAQyH,IAAK,CAC5CvK,KAAKsZ,QAAQ/O,GAAK9H,MAAMC,KAAKg0B,EAAOpd,QAAQ/O,IAC5C,IAAK,IAAIsvB,EAAI,EAAGA,EAAInD,EAAOpd,QAAQ/O,GAAGzH,OAAQ+2B,IAC1C75B,KAAKmE,MAAQuyB,EAAOpd,QAAQ/O,GAAGsvB,GAC/B75B,KAAKmE,MAAQ,IAEjBnE,KAAKmE,MAAQ,GAChB,C,QAIIkqC,GAIT,WAAAtuC,CAAY+sC,GAHL9sC,KAAQsuC,SAAa,GACrBtuC,KAAIuuC,MAAY,EAGnBvuC,KAAK0rC,MAAMoB,E,CAGR,KAAApB,CAAMoB,GACT,IAAK,IAAIviC,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtD,GAAIuiC,EACA9sC,KAAKsuC,SAAS/jC,GAAKM,KAAKiB,MAAMvK,EAAOsY,aAAe,EAAIhP,KAAKgB,KAAK,EAAItB,EAAI,SACvE,CACH,MAAMikC,EAA2B,GAALjkC,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAWA,GAAK,GACvHvK,KAAKsuC,SAAS/jC,GAAKikC,EAAa3jC,KAAKiN,IAAI,EAAGjN,KAAKiB,MAAMvK,EAAOsY,aAAe,EAAItP,EAAI,MAAQ,CAChG,CAELvK,KAAKyuC,qB,CAGF,mBAAAA,GACH,MAAMC,EAAmBC,GAAMC,kBAAkBrtC,EAAOsY,YAAc,GAAK,EAC3E,IAAI00B,EAAe,EACnB,IAAK,MAAMM,KAAS7uC,KAAKsuC,SAAUC,EAASA,EAAOG,EAAYG,IAAW,EAC1E7uC,KAAKuuC,KAAOA,C,EAIpB,MAAMO,GAAN,WAAA/uC,GACWC,KAAIqK,KAAwB,KAC3BrK,KAAK+uC,GAAY,C,CAElB,aAAAC,CAAcvU,EAAwBwU,GACzC,GAAIjvC,KAAK+uC,GAAStU,EAAS8T,KAAM,OAAOvuC,KAAKqK,KAC7CrK,KAAK+uC,EAAQtU,EAAS8T,KAEtB,MAAM5hC,EAAqBpL,EAAOiY,oBACjB,MAAbxZ,KAAKqK,MAAgBrK,KAAKqK,KAAKvH,QAAU6J,EAAa,IACtD3M,KAAKqK,KAAO,IAAIK,aAAaiC,EAAa,IAE9C,MAAMtC,EAAqBrK,KAAKqK,KAEhC,IAAK,IAAIE,EAAY,EAAGA,EAAIoC,EAAYpC,IACpCF,EAAKE,GAAK,EAGd,MAGM2kC,EAAuB,CAAC,EAAG,EAAI,EAAGrkC,KAAK0C,KAAK,EAAI,GAAI,EAAI,EAAG1C,KAAK0C,KAAK,KAAQ,EAAI,EAAG,EAAI,GAC9F,SAAS4hC,EAAqBN,GAC1B,OAAOI,EAAepkC,KAAKme,MAAM6lB,EAAQttC,EAAOoY,gCAAkCu1B,GAAYL,EAAQttC,EAAOoY,gCAAkCpY,EAAOoY,+B,CAG1J,IAAItM,EAA4B,EAChC,IAAK,IAAI9C,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAwB,EAAGnP,IAAK,CAC/D,MAAM6kC,EAAkB7kC,GAAK,EAAK,EAAIkwB,EAAS6T,SAAS/jC,EAAI,GACtD8kC,EAAkB9kC,GAAKhJ,EAAOmY,sBAAyB+gB,EAAS6T,SAAS/sC,EAAOmY,sBAAwB,GAAK+gB,EAAS6T,SAAS/jC,GAC/H+kC,EAAkBH,EAAqB5kC,EAAI,GACjD,IAAIglC,EAAkBJ,EAAqB5kC,GACvCA,GAAKhJ,EAAOmY,wBAAuB61B,EAdb,GACD,KAayCA,EAdxC,KAeZ,GAAVH,GAAyB,GAAVC,IAEnBhiC,GAAqB,IAAOzB,EAAkBvB,EAAMsC,EAAY2iC,EAASC,EAASH,EAAS7tC,EAAOsY,YAAaw1B,EAAS9tC,EAAOsY,aAAc,IAChJ,CAWD,OAVI4gB,EAAS6T,SAAS/sC,EAAOmY,sBAAwB,GAAK,IACtDrM,GAAqB,IAAOzB,EAAkBvB,EAAMsC,EApB1B,GACD,KAmBwDwiC,EAAqB5tC,EAAOmY,uBApBnF,OAoB0J+gB,EAAS6T,SAAS/sC,EAAOmY,sBAAwB,GAAKnY,EAAOsY,YAAa,GAAI,KAGtQxO,GAA4BhB,EAAMsC,GAClCrB,GAAsBjB,EAAM,GAAOQ,KAAKgB,KAAKc,GAAc9B,KAAKmB,IAAIqB,EAAmB,OAGvFhD,EAAKsC,GAActC,EAAK,GAEjBA,C,QAIFmlC,GAIT,WAAAzvC,GAHOC,KAASm+B,UAAa,GACtBn+B,KAAIuuC,MAAY,EAGnBvuC,KAAK0rC,O,CAGF,KAAAA,GACH,IAAK,IAAInhC,EAAY,EAAGA,EAAIhJ,EAAOuY,uBAAwBvP,IACvDvK,KAAKm+B,UAAU5zB,GAAK,EAExBvK,KAAKm+B,UAAU,GAAK58B,EAAO2Y,aAC3Bla,KAAKm+B,UAAU,GAAK58B,EAAO2Y,aAC3Bla,KAAKm+B,UAAU,GAAK58B,EAAO2Y,aAC3Bla,KAAKyuC,qB,CAGF,mBAAAA,GACH,MAAMC,EAAmBC,GAAMC,kBAAkBrtC,EAAO2Y,aAAe,GAAK,EAC5E,IAAIq0B,EAAe,EACnB,IAAK,MAAMM,KAAS7uC,KAAKm+B,UAAWoQ,EAASA,EAAOG,EAAYG,IAAW,EAC3E7uC,KAAKuuC,KAAOA,C,EAIpB,MAAMkB,GAAN,WAAA1vC,GACWC,KAAIqK,KAAwB,KAC3BrK,KAAK+uC,GAAY,C,CAGlB,aAAAC,CAAcvU,EAAyBiV,GAC1C,GAAI1vC,KAAK+uC,GAAStU,EAAS8T,MAAQvuC,KAAK2vC,GAAqBD,EAAgB,OAAO1vC,KAAKqK,KACzFrK,KAAK+uC,EAAQtU,EAAS8T,KACtBvuC,KAAK2vC,EAAoBD,EAEzB,MAAM31B,EAA0E,GAA7C21B,EAAiDnuC,EAAOyY,iCAAmCzY,EAAOwY,kBAE/HpN,EAAqBpL,EAAO4Y,oBAC5B/M,EAA0BhC,EAAY,EAAG,KAAM,MAEpC,MAAbpL,KAAKqK,MAAgBrK,KAAKqK,KAAKvH,QAAU6J,EAAa,IACtD3M,KAAKqK,KAAO,IAAIK,aAAaiC,EAAa,IAE9C,MAAMtC,EAAqBrK,KAAKqK,KAEhC,IAAK,IAAIE,EAAY,EAAGA,EAAIoC,EAAYpC,IACpCF,EAAKE,GAAK,EAId,IAAIqlC,EAAwC,EAE5C,IAAK,IAAIC,EAAwB,EAAGA,EAAgB91B,EAAmB81B,IAAiB,CACpF,MAAMC,EAAuBD,EAAgB,EAC7C,IAAIE,EAAuBF,EAAgBtuC,EAAOuY,uBAAyB2gB,EAAS0D,UAAU0R,GAAiBpV,EAAS0D,UAAU58B,EAAOuY,uBAAyB,GAC9J+1B,GAAiBtuC,EAAOuY,yBACxBi2B,GAAgB,GAAKF,EAAgBtuC,EAAOuY,yBAA2BC,EAAoBxY,EAAOuY,yBAEtG,MAAMk2B,EAA0BD,EAAexuC,EAAO2Y,aACtD,IAAI1M,EAAoB3C,KAAKmB,IAAI,EAAG+jC,EAAexuC,EAAO2Y,aAAe,GAAKrP,KAAKgB,KAAKmkC,GACpFH,EAAgBtuC,EAAOuY,yBACvB81B,GAAiCpiC,GAErCA,GAAa3C,KAAKmB,IAAI8jC,GAdG,KAkBzBtiC,GAAaJ,EAAUyiC,EAAgB,KAEvCxlC,EAAKsC,EAAamjC,GAAgBtiC,CACrC,CAEDnC,GAA4BhB,EAAMsC,GAGlC,MAAMoM,EAAe,EAAIlO,KAAKmB,IAAI4jC,EAA+B,IACjE,IAAK,IAAIrlC,EAAY,EAAGA,EAAIF,EAAKvH,OAAQyH,IAAKF,EAAKE,IAAMwO,EAOzD,OVy/BF,SAA6B1O,GAElC,IAAIW,EAAqB,EACzB,IAAK,IAAIT,EAAY,EAAGA,EAAIF,EAAKvH,OAAQyH,IAAK,CAC7C,MAAMuvB,EAAOzvB,EAAKE,GAClBF,EAAKE,GAAKS,EACVA,GAAc8uB,CACd,CACF,CUtgCQmW,CAAmB5lC,GAGnBA,EAAKsC,GAActC,EAAK,GAEjBA,C,QAIF6lC,GAAb,WAAAnwC,GACWC,KAAImwC,KAAW,EACfnwC,KAAAowC,KAAe7uC,EAAOmT,iBACtB1U,KAAA4V,KAAmC,C,CAEnC,GAAA5R,CAAIqsC,EAAqBC,GAC5BtwC,KAAKmwC,KAAOE,EACZrwC,KAAKowC,KAAOE,C,CAGT,KAAAC,GACH,OAAOL,GAAmBM,sBAAsBxwC,KAAKmwC,K,CAGlD,4BAAOK,CAAsB7hC,GAChC,OAAOpN,EAAO+S,sBAAwBzJ,KAAKmB,IAAI,GAAM2C,EAAQpN,EAAO8S,4BAA8B9S,EAAO4S,e,CAEtG,4BAAOs8B,CAAsBC,GAChC,OAAO7lC,KAAK0C,KAAKmjC,EAAKnvC,EAAO+S,uBAAyB/S,EAAO4S,eAAiB5S,EAAO8S,0B,CAElF,mCAAOs8B,CAA6BD,GACvC,OAAO7lC,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI5L,EAAO6S,gBAAkB,EAAGvJ,KAAKiB,MAAMokC,GAAmBO,sBAAsBC,K,CAGzG,aAAAE,CAAcC,EAAmB,GACpC,MAAMC,GAAiB9wC,KAAKowC,KAAO7uC,EAAOmT,kBAAoBnT,EAAOoT,eAC/Do8B,EAA+C,GAA5B/wC,KAAK4V,KAA2B,GAAO,GAC1Do7B,EAA4BD,GAAWD,EAAQC,GAAWF,EAChE,OAAOhmC,KAAKmB,IAAI,EAAKglC,E,CAElB,2CAAOC,CAAqCxU,GAC/C,OAAO5xB,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI5L,EAAOkT,gBAAkB,EAAG5J,KAAKiB,MAAMjB,KAAK0C,KAAKkvB,GAAcl7B,EAAOoT,eAAiBpT,EAAOmT,mB,CAGvH,cAAAw8B,CAAe/N,EAA4B/hC,EAAoB+vC,EAAmB,EAAKN,EAAmB,GAC7G,MAAM3P,EAAiC,EAAMr2B,KAAK6C,GAAK7C,KAAKiN,IAAIvW,EAAOiT,gBAAiB3J,KAAKsC,IAAI5L,EAAOgT,gBAAiB48B,EAAWnxC,KAAKuwC,UAAYnvC,EAC/Iq7B,EAAqBz8B,KAAK4wC,cAAcC,GAC9C,OAAQ7wC,KAAK4V,MACT,OACIutB,EAAOrB,2BAA2BZ,EAAwBzE,GAC1D,MACJ,OACI0G,EAAOf,4BAA4BlB,EAAwBzE,GAC3D,MACJ,OACI0G,EAAOR,aAAazB,EAAwBzE,EAAY,GACxD,MACJ,QACI,MAAM,IAAIr6B,M,CAIf,yBAAAgvC,GACH,MAAM9I,GAAkBtoC,KAAKmwC,KAAO5uC,EAAO8S,4BAA8B9S,EAAO4S,eAC1Ek9B,GAAmBrxC,KAAKowC,KAAO7uC,EAAOmT,kBAAoBnT,EAAOoT,eACvE,OAAQ3U,KAAK4V,MACT,OACI,MAAM07B,EAA6BzmC,KAAKmB,IAAI,EAAKs8B,GAAU/mC,EAAO+S,sBAAwB,IAEpFi9B,GAAsB1mC,KAAKgB,KAAK,EAAM,EAAMylC,GAAsB,GAAO,EACzEE,EAAuB3mC,KAAK0C,KAAKgkC,GACvC,OAAO1mC,KAAKmB,IAAI,GAAK,GAAMnB,KAAKiN,IAAI,EAAKu5B,EAAU,GAAOxmC,KAAKsC,IAAI,EAAKtC,KAAKiN,KAAK,EAAK,KAAQ05B,EAAe,IAAO3mC,KAAKsC,IAAI,EAAKkkC,EAAU,MACjJ,OACI,OAAOxmC,KAAKmB,IAAI,GAAK,KAAQnB,KAAKiN,IAAI,EAAKu5B,EAAU,GAAOxmC,KAAKsC,IAAI,EAAK,KAAQm7B,EAASz9B,KAAK0C,KAAKhM,EAAO+S,sBAAwB,MAAU,GAAMzJ,KAAKsC,IAAI,EAAKkkC,EAAU,KAChL,OACI,MAAMI,EAA6BnJ,EAASz9B,KAAK0C,KAAKhM,EAAO+S,sBAAwB,KAC/Eo9B,EAAuB7mC,KAAKmB,IAAI,GAAO,EAAMnB,KAAKmB,IAAIylC,EAAqB,EAAK,IAAO,GAC7F,OAAO5mC,KAAKmB,IAAI,GAAK,KAAQnB,KAAKiN,IAAI,EAAKu5B,GAAW,GAAMK,EAAe7mC,KAAKsC,IAAI,EAAKkkC,IAC7F,QACI,MAAM,IAAIjvC,M,QAKbuvC,GAIT,WAAA5xC,GAHgBC,KAAa4xC,cAAyB,GAC/C5xC,KAAiB6xC,kBAAW,EAG/B7xC,KAAK0rC,O,CAGT,KAAAA,GACI1rC,KAAK6xC,kBAAoB,C,CAG7B,QAAAC,CAASl8B,EAAkBy6B,EAAqBC,GAC5C,IAAIyB,EACA/xC,KAAK4xC,cAAc9uC,QAAU9C,KAAK6xC,mBAClCE,EAAe,IAAI7B,GACnBlwC,KAAK4xC,cAAc5xC,KAAK6xC,mBAAqBE,GAE7CA,EAAe/xC,KAAK4xC,cAAc5xC,KAAK6xC,mBAE3C7xC,KAAK6xC,oBACLE,EAAan8B,KAAOA,EACpBm8B,EAAa/tC,IAAIqsC,EAAaC,E,CAG3B,YAAA3E,GACH,MAAMqG,EAAqB,GAC3B,IAAK,IAAIznC,EAAY,EAAGA,EAAIvK,KAAK6xC,kBAAmBtnC,IAAK,CACrD,MAAMskC,EAA4B7uC,KAAK4xC,cAAcrnC,GACrDynC,EAAYvnC,KAAK,CACbmL,KAAQrU,EAAOsT,gBAAgBg6B,EAAMj5B,MACrC4mB,SAAY3xB,KAAKiB,MAAsB,IAAhB+iC,EAAM0B,SAAiB,IAC9C9T,WAAc5xB,KAAKiB,MAA8B,IAAxB+iC,EAAM+B,iBAA2B,KAEjE,CACD,OAAOoB,C,CAGJ,cAAApF,CAAeqF,GAElB,GADAjyC,KAAK4xC,cAAc9uC,OAAS,EACxBmvC,EACA,IAAK,MAAM1E,KAAe0E,EAAc,CACpC,MAAMpD,EAA4B,IAAIqB,GACtCrB,EAAMj5B,KAAOrU,EAAOsT,gBAAgB4rB,QAAQ8M,EAAkB,OACtC,GAAfsB,EAAMj5B,OAAYi5B,EAAMj5B,KAAI,GACN+Y,MAA3B4e,EAAsB,SACtBsB,EAAMsB,KAAOD,GAAmBS,6BAA6BpD,EAAsB,UAEnFsB,EAAMsB,KAAO,EAEgBxhB,MAA7B4e,EAAwB,WACxBsB,EAAMuB,KAAOF,GAAmBe,qCAAqC1D,EAAwB,YAE7FsB,EAAMuB,KAAO7uC,EAAOmT,iBAExB1U,KAAK4xC,cAAcnnC,KAAKokC,EAC3B,CAEL7uC,KAAK6xC,kBAAoB7xC,KAAK4xC,cAAc9uC,M,CAIzC,sBAAOovC,CAAgBC,EAAyBC,GACnD,GAAID,EAAQN,mBAAqBO,EAAQP,kBACrC,OAAO,EACX,IAAK,IAAItnC,EAAY,EAAGA,EAAI4nC,EAAQN,kBAAmBtnC,IACnD,GAAI4nC,EAAQP,cAAcrnC,GAAGqL,MAAQw8B,EAAQR,cAAcrnC,GAAGqL,KAC1D,OAAO,EAEf,OAAO,C,CAIJ,kBAAOy8B,CAAYF,EAAyBC,EAAyBE,GAExE,IAAIC,EAA+B,IAAIZ,GAGvC,GAAe,MAAXQ,EACA,OAAOA,EAEX,GAAe,MAAXC,EACA,OAAOA,EAMX,GAHAE,EAAMznC,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI,EAAGmlC,IAG1BtyC,KAAKkyC,gBAAgBC,EAASC,GAAU,CACxC,IAAK,IAAI7nC,EAAY,EAAGA,EAAI4nC,EAAQN,kBAAmBtnC,IACnDgoC,EAAaX,cAAcrnC,GAAK,IAAI2lC,GACpCqC,EAAaX,cAAcrnC,GAAGqL,KAAOu8B,EAAQP,cAAcrnC,GAAGqL,KAC9D28B,EAAaX,cAAcrnC,GAAG4lC,KAAOgC,EAAQP,cAAcrnC,GAAG4lC,MAAQiC,EAAQR,cAAcrnC,GAAG4lC,KAAOgC,EAAQP,cAAcrnC,GAAG4lC,MAAQmC,EACvIC,EAAaX,cAAcrnC,GAAG6lC,KAAO+B,EAAQP,cAAcrnC,GAAG6lC,MAAQgC,EAAQR,cAAcrnC,GAAG6lC,KAAO+B,EAAQP,cAAcrnC,GAAG6lC,MAAQkC,EAK3I,OAFAC,EAAaV,kBAAoBM,EAAQN,kBAElCU,CACV,CAGG,OAAQD,GAAO,EAAKF,EAAUD,C,CAI/B,qBAAAK,CAAsBC,EAA6BC,EAAgCC,GACtF3yC,KAAK0rC,QAEL,MAEMkH,EAAoE,EAAnC/nC,KAAK6T,KAAKm0B,MAK3CC,EAAqBJ,EAAyB,EAC9CK,EAAiD,GAA1BL,EACvBM,EAA+CC,IAAvBR,EACxBS,EAAoC,GAAdP,EAAU/8B,MAA4C,GAAd+8B,EAAU/8B,MAAkE,IAApC+8B,EAAU/8B,MAAqE,GAAvC+8B,EAAU/8B,KAExJu9B,EAA6B,KAC7BC,EAbkC,IAaWvoC,KAAKmB,IAAI,EAA6D,IAAvDymC,EAAmB,KAC/EY,EAAwBxoC,KAAKsC,IAAIylC,EAAwB,EAAI/nC,KAAK6C,GAAK0lC,EAAWD,GAExF,GAAkB,GAAdR,EAAU/8B,OAA8Bk9B,GAAYE,QAEjD,GAAID,EAAY,CAMnB,MAAMO,EAAuB,IACvBC,EAAwBF,EAAgBxoC,KAAKmB,IAAI,EAAKsnC,GAEtDE,EAAmBL,GADKI,GAAiB,EAAMA,EAAgB1oC,KAAK6C,MACX,EAAM7C,KAAK6C,IACpE2iC,EAAsBH,GAAmBS,6BAA6B6C,GACtEC,EAAkBvD,GAAmBM,sBAAsBH,GAC3DqD,EAAuB,EAAM7oC,KAAK6C,GAAK+lC,EAAUN,EAEjDQ,EAAmC,IAAI/S,GAC7C+S,EAAarS,0BAA0B+R,GACvC,MAAMtxC,EAA8B,IAAI+gC,GACxC/gC,EAASmhC,QAAQyQ,EAAcD,GAC/B,MAAME,EAAuC7xC,EAASgiC,YAEtD,IAAI8P,EAAkBhpC,KAAK0C,KAAKqmC,GAEhCC,EAAqD,KAA1BA,EAAUP,GAA1BA,EAEPJ,IAAWW,EAAUhpC,KAAKsC,IAAI0mC,GAAU,IAC5C,MAAMC,EAAwBjpC,KAAKmB,IAAI,EAAK6nC,GACtCvD,EAAsBJ,GAAmBe,qCAAqC6C,GAEpF9zC,KAAK8xC,SAAQ,EAAqBzB,EAAaC,EAClD,KAAM,CACH,MAAMyD,EAAuB,IAAO,EA7CC,IA6CgClpC,KAAKgB,KAAKhB,KAAKiN,IAAI,EAAK46B,EAAyB,GAAI,IACpHsB,EAAuB,GAAMD,EAI7BE,EAAwBZ,GADAA,GADJA,GADC,EAAMxoC,KAAK6C,GAlDF,IAkDiCylC,GAEVtoC,KAAKmB,IAAIgoC,EAAc,IAAO,GAC1BX,GAAiBW,EAChF,IAAIR,EAEAA,EADAN,EACWC,EAAqBtoC,KAAKsC,IAAI8mC,EAAeZ,EAAgBxoC,KAAKmB,IAAI,EAAG,OAAU,EAAMnB,KAAK6C,IAE9FylC,EAAqBc,GAAiB,EAAMppC,KAAK6C,IAEhE,MAAM2iC,EAAsBH,GAAmBS,6BAA6B6C,GAE5E,IAAIU,EACJ,GAAIhB,EACAgB,EAAmBH,MAChB,CACH,MAAMJ,EAAmC,IAAI/S,GAC7C+S,EAAa1R,0BAA0BoR,EAAeU,GACtD,MAAMhyC,EAA8B,IAAI+gC,GACxC/gC,EAASmhC,QAAQyQ,EAAcM,GAC/BC,EAAmBnyC,EAASgiC,WAC/B,CACI+O,IAAUoB,EAAmBrpC,KAAKsC,IAAI+mC,EAAkBrpC,KAAKgB,KAAK,MACvE,MAAMykC,EAAsBJ,GAAmBe,qCAAqCiD,GAEpFl0C,KAAK8xC,SAAQ,EAAqBzB,EAAaC,EAClD,CAGDtwC,KAAK4xC,cAAc9uC,OAAS9C,KAAK6xC,iB,CAI9B,6BAAAsC,CAA8B1B,EAA6BC,EAAgC0B,GAA2B,GACzHp0C,KAAK0rC,QAEL,MAEMkH,EAAoE,EAAnC/nC,KAAK6T,KAAKm0B,MAK3CE,EAAiD,GAA1BL,GAA+B0B,EACtDjB,EAA6B,KAC7BC,EATkC,IASWvoC,KAAKmB,IAAI,EAA6D,IAAvDymC,EAAmB,KAC/EY,EAAwBxoC,KAAKsC,IAAIylC,EAAwB,EAAI/nC,KAAK6C,GAAK0lC,EAAWD,GAExF,GAAIJ,EAAY,CAMZ,MAAMO,EAAuB,IACvBC,EAAwBF,EAAgBxoC,KAAKmB,IAAI,EAAKsnC,GAEtDE,EAAmBL,GADKI,GAAiB,EAAMA,EAAgB1oC,KAAK6C,MACX,EAAM7C,KAAK6C,IACpE2iC,EAAsBH,GAAmBS,6BAA6B6C,GACtEC,EAAkBvD,GAAmBM,sBAAsBH,GAC3DqD,EAAuB,EAAM7oC,KAAK6C,GAAK+lC,EAAUN,EAEjDQ,EAAmC,IAAI/S,GAC7C+S,EAAarS,0BAA0B+R,GACvC,MAAMtxC,EAA8B,IAAI+gC,GACxC/gC,EAASmhC,QAAQyQ,EAAcD,GAC/B,MAAME,EAAuC7xC,EAASgiC,YAEtD,IAAI8P,EAAkBhpC,KAAK0C,KAAKqmC,GAEhCC,EAAqD,KAA1BA,EAAUP,GAA1BA,EACX,MAAMQ,EAAwBjpC,KAAKmB,IAAI,EAAK6nC,GACtCvD,EAAsBJ,GAAmBe,qCAAqC6C,GAEpF9zC,KAAK8xC,SAAQ,EAAqBzB,EAAaC,EAClD,KAAM,CACH,MAAMyD,EAAuB,IAAO,EArCC,IAqCgClpC,KAAKgB,KAAKhB,KAAKiN,IAAI,EAAK46B,EAAyB,GAAI,IACpHsB,EAAuB,GAAMD,EAI7BE,EAAwBZ,GADAA,GADJA,GADC,EAAMxoC,KAAK6C,GA1CF,IA0CiCylC,GAEVtoC,KAAKmB,IAAIgoC,EAAc,IAAO,GAC1BX,GAAiBW,EAChF,IAAIR,EAEJA,EAAWL,EAAqBc,GAAiB,EAAMppC,KAAK6C,IAC5D,MAAM2iC,EAAsBH,GAAmBO,sBAAsB+C,GAErE,IAAIU,EAEJ,MAAMP,EAAmC,IAAI/S,GAC7C+S,EAAa1R,0BAA0BoR,EAAeU,GACtD,MAAMhyC,EAA8B,IAAI+gC,GACxC/gC,EAASmhC,QAAQyQ,EAAcM,GAC/BC,EAAmBnyC,EAASgiC,YAC5B,MAAMuM,EAAsBJ,GAAmBe,qCAAqCiD,GAEpFl0C,KAAK8xC,SAAQ,EAAqBzB,EAAaC,EAClD,C,QAKI+D,GAqBT,WAAAt0C,CAAmBu0C,GAAAt0C,KAAes0C,gBAAfA,EApBZt0C,KAAMk8B,OAAW,EACjBl8B,KAAKyE,MAAW,EAChBzE,KAAQm8B,SAAW,EAOnBn8B,KAAgBo8B,iBAAW76B,EAAO2X,UAAUlZ,KAAKm8B,UAAUhjB,MAC3DnZ,KAAqBq8B,sBAAW,EAChCr8B,KAAqBs8B,sBAAW,EAEhCt8B,KAAiBu0C,kBAAkB,KAEnCv0C,KAAKw0C,MAAW,EAChBx0C,KAAI4lC,KAAW,EAEf5lC,KAAA87B,SAAsC,EAGzC97B,KAAK0rC,O,CAGT,KAAAA,GACI1rC,KAAKk8B,OAAS,EACdl8B,KAAKyE,MAAQ,EACbzE,KAAKm8B,SAAW,EAChBn8B,KAAKy0C,mBAAqB,EAC1Bz0C,KAAK00C,iBAAmB10C,KAAKs0C,gBAAkB/yC,EAAO2Z,UAAU,EAAI3Z,EAAO8Z,SAC3Erb,KAAKkO,SAAU,EACflO,KAAKs0C,iBAAkB,EACvBt0C,KAAKo8B,iBAAmB76B,EAAO2X,UAAUlZ,KAAKm8B,UAAUhjB,MACxDnZ,KAAKq8B,sBAAwB,EAC7Br8B,KAAKs8B,sBAAwB,EAC7Bt8B,KAAKu0C,kBAAoB,KACzBv0C,KAAKw0C,MAAQ,EACbx0C,KAAK4lC,KAAO,EACZ5lC,KAAK87B,SAAQ,C,CAGV,YAAA6P,GACH,MAAMgJ,EAAsB,CACxBzY,OAAU36B,EAAO0c,4BAA4Bje,KAAKk8B,QAAQ/3B,KAC1Dg4B,SAAY56B,EAAO6X,aAAapZ,KAAKm8B,UAAUh4B,KAC/C+J,QAAWlO,KAAKkO,QAChBkuB,iBAAoBp8B,KAAKo8B,iBACzBC,sBAAyBr8B,KAAKq8B,sBAC9BC,sBAAyBt8B,KAAKs8B,uBAelC,OAbI/6B,EAAO0c,4BAA4Bje,KAAKk8B,QAAQ5d,SAAW,IAC3Dq2B,EAAsB,MAAI30C,KAAKyE,OAEY,SAA3ClD,EAAO6X,aAAapZ,KAAKm8B,UAAUh4B,MACnCwwC,EAAmC,mBAAI30C,KAAKy0C,mBAC5CE,EAAiC,iBAAI30C,KAAK00C,kBACQ,UAA3CnzC,EAAO6X,aAAapZ,KAAKm8B,UAAUh4B,MAC1CwwC,EAAsB,MAAI30C,KAAKw0C,MAC/BG,EAAqB,KAAI30C,KAAK4lC,KAC9B+O,EAAyB,SAAI30C,KAAK87B,UACgB,OAA3Cv6B,EAAO6X,aAAapZ,KAAKm8B,UAAUh4B,OAC1CwwC,EAAyB,SAAI30C,KAAK87B,UAE/B6Y,C,CAGJ,cAAA/H,CAAe+H,EAAqB5H,GACvC/sC,KAAK0rC,QAEL,IAAIxP,EAA2B36B,EAAO0c,4BAA4BtZ,WAAWgwC,EAAuB,QACtF,MAAVzY,IAAgBA,EAAS36B,EAAO0c,4BAA4BtZ,WAAuB,YACvF3E,KAAKk8B,OAASA,EAAOz3B,MAErB,IAAI03B,EAAqB56B,EAAO2X,UAAUvU,WAAiB,KACvDiwC,GAAsB,EACZ,eAAV7H,GAAqC,YAAVA,EACO,YAA9B4H,EAAyB,UACzBxY,EAAW56B,EAAO6X,aAAY,GAC9Bw7B,GAAa,GACwB,WAA9BD,EAAyB,UAChCxY,EAAW56B,EAAO6X,aAAY,GAC9Bw7B,GAAa,GAEbzY,EAAW56B,EAAO6X,aAAazU,WAAWgwC,EAAyB,UAGP,GAA5DpzC,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,MACxDumB,EAAW56B,EAAO6X,aAAY,GAC9Bw7B,GAAa,GAEbzY,EADO56B,EAAO6X,aAAavO,KAAKiN,IAAIvW,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,KAAO,EAAG,IAAInR,MAAK,EACpGlD,EAAO6X,aAAa7X,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,KAAO,GAEnFrU,EAAO6X,aAAa7X,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,MAI/E+Y,MAAZwN,IACgE,GAA5D56B,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,MACxDumB,EAAW56B,EAAO6X,aAAY,GAC9Bw7B,GAAa,GAEbzY,EADO56B,EAAO6X,aAAavO,KAAKiN,IAAIvW,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,KAAO,EAAG,IAAInR,MAAK,EACpGlD,EAAO6X,aAAa7X,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,KAAO,GAEnFrU,EAAO6X,aAAa7X,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAG/+B,OAG/E,MAAZumB,IAAkBA,EAAW56B,EAAO2X,UAAUvU,WAAiB,MACnE3E,KAAKm8B,SAAWA,EAAS13B,MAEMkqB,MAA3BgmB,EAAsB,MACtB30C,KAAKyE,MAAQiiC,GAAM,EAAGnlC,EAAO0c,4BAA4Bje,KAAKk8B,QAAQ5d,SAAoC,EAA1Bq2B,EAAsB,OAEtG30C,KAAKyE,MAAQ,EAG2BkqB,MAAxCgmB,EAAmC,mBACnC30C,KAAKy0C,mBAAqB/N,GAAM,EAAG1mC,KAAKs0C,gBAAkB/yC,EAAO2Z,UAAY3Z,EAAO8Z,SAAW,EAAGs5B,EAAmC,oBAErI30C,KAAKy0C,mBAAqB,EAGY9lB,MAAtCgmB,EAAiC,iBACjC30C,KAAK00C,iBAAmBhO,GAAM,EAAG1mC,KAAKs0C,gBAAkB/yC,EAAO2Z,UAAY3Z,EAAO8Z,SAAW,EAAGs5B,EAAiC,kBAEjI30C,KAAK00C,iBAAmB10C,KAAKs0C,gBAAkB/yC,EAAO2Z,UAAY3Z,EAAO8Z,SAG7Erb,KAAKkO,QAAU2mC,QAAQF,EAAwB,SAELhmB,MAAtCgmB,EAAiC,iBACjC30C,KAAKo8B,iBAAmBuY,EAAiC,iBAEzD30C,KAAKo8B,iBAAmB76B,EAAO2X,UAAUvU,WAAWgwC,EAAyB,UAAGx7B,MAGrCwV,MAA3CgmB,EAAsC,sBACtC30C,KAAKq8B,sBAAwBqK,GAAMnlC,EAAOwb,oBAAqBxb,EAAOyb,oBAAsB,EAAG23B,EAAsC,uBAErI30C,KAAKq8B,sBAAwB,EAGc1N,MAA3CgmB,EAAsC,sBACtC30C,KAAKs8B,sBAAwBoK,GAAMnlC,EAAOwb,oBAAqBxb,EAAOyb,oBAAsB,EAAG23B,EAAsC,uBAErI30C,KAAKs8B,sBAAwB,EAI7BsY,IACI50C,KAAKkO,SACLlO,KAAKs8B,sBAAwBzxB,KAAKme,MAAOhpB,KAAKs8B,sBAAwB,EAAK,IAAM,GACjFt8B,KAAKq8B,sBAAwBxxB,KAAKme,MAAOhpB,KAAKq8B,sBAAwB,EAAK,IAAM,KAEjFr8B,KAAKs8B,sBAAwBzxB,KAAKme,MAA8E,IAAvE,IAAOhpB,KAAKs8B,sBAAwBt8B,KAAKq8B,uBAAyB,IAAW,GACtHr8B,KAAKq8B,sBAAwB,KAIN1N,MAA3BgmB,EAAsB,MACtB30C,KAAKw0C,MAAQ9N,GAAM,EAAGnlC,EAAO2b,uBAAyB,EAAGy3B,EAAsB,OAE/E30C,KAAKw0C,MAAQ,EAGa7lB,MAA1BgmB,EAAqB,KACrB30C,KAAK4lC,KAAOc,GAAM,EAAGnlC,EAAO0b,sBAAwB,EAAG03B,EAAqB,MAE5E30C,KAAK4lC,KAAO,EAGkBjX,MAA9BgmB,EAAyB,SACzB30C,KAAK87B,SAAW6Y,EAAyB,SAEzC30C,KAAK87B,SAAQ,C,QA0BZgZ,GA+GT,WAAA/0C,CAAY+sC,EAAyBlB,GAoBjC,GAlIG5rC,KAAA4V,KAA2C,EAC3C5V,KAAM02B,OAAW,EACjB12B,KAAQsB,SAAW,EAEtBtB,KAA2Bw9B,6BAAY,EACvCx9B,KAAiBy9B,kBAAW,EAC5Bz9B,KAAA09B,gBAAkBn8B,EAAOK,gBAAgB5B,KAAKsB,UAAUiB,QAAQO,OAAS,EACzE9C,KAAgB29B,iBAAW,EAC3B39B,KAAqB49B,uBAAY,EAC1B59B,KAAmB69B,oBAAW,EAElC79B,KAAS+0C,UAAW,EACpB/0C,KAAA06B,SAA2B,IAAIiX,GAC/B3xC,KAAYg7B,cAAY,EACxBh7B,KAAAg1C,kBAA4BzzC,EAAOwT,qBAAuB,EAC1D/U,KAAkBi1C,mBAAW,EAC7Bj1C,KAAA68B,WAA6B,IAAI8U,GACjC3xC,KAAc08B,gBAAY,EAC1B18B,KAAAk1C,oBAA8B3zC,EAAOwT,qBAAuB,EAC5D/U,KAAoBm1C,qBAAW,EAC/Bn1C,KAAYo1C,aAA8B,GAC1Cp1C,KAAcq1C,eAA8B,GAK5Cr1C,KAASkZ,UAAuB,GAChClZ,KAAMs1C,OAAW,EACjBt1C,KAAAu1C,QAAkBh0C,EAAO4T,eACzBnV,KAAaw1C,cAAW,EACxBx1C,KAAU26B,WAAWp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,MAC7DzE,KAAUyV,WAAW,EACrBzV,KAAUy1C,WAAW,EACrBz1C,KAAM01C,OAAW,EACjB11C,KAAOs+B,QAAW,EAClBt+B,KAAQ+pC,SAAW,EACnB/pC,KAAYu+B,aAAW,EACvBv+B,KAAYy+B,aAAW,GACvBz+B,KAAYw+B,aAAW,EACvBx+B,KAAW0+B,YAAW,EACtB1+B,KAAam7B,cAAW,GACxBn7B,KAAgBo7B,kBAAY,EAC5Bp7B,KAAM86B,OAAW,EACjB96B,KAAY21C,aAAW,EACvB31C,KAAY41C,aAAW,EACvB51C,KAAY61C,aAAW,EACvB71C,KAAgB81C,iBAAW,IAC3B91C,KAAU+1C,WAAW,EACrB/1C,KAAYg2C,cAAY,EACxBh2C,KAAO8O,QAAW,EAClB9O,KAAK66B,MAAW,EAChB76B,KAAUkY,WAAW,EACrBlY,KAAM+6B,OAAW,EACjB/6B,KAAAq7B,IAAc95B,EAAOqV,UACrB5W,KAAQs7B,SAAW,GACnBt7B,KAAai2C,cAAW,GACxBj2C,KAAck2C,gBAAY,EAC1Bl2C,KAAam2C,eAAY,EACzBn2C,KAAmBu8B,qBAAY,EAC/Bv8B,KAAOg9B,SAAY,EACnBh9B,KAAAmL,WAAqB5J,EAAO6Y,gBAAgB,EAC5Cpa,KAAau7B,cAAW,EACxBv7B,KAAAo2C,iBAA2B70C,EAAOgZ,oBACrCva,KAAcq2C,eAAWxrC,KAAK6U,KAAKne,EAAOiZ,kBAAoB,GAC9Dxa,KAAas2C,cAAW,EACxBt2C,KAAao+B,cAAW,GACxBp+B,KAAAu2C,kBAAsD,EACnDv2C,KAAU+8B,WAAW,EACrB/8B,KAAcw2C,eAAW,EACzBx2C,KAAgBy2C,iBAAW,EAC3Bz2C,KAAe02C,gBAAW,EAC1B12C,KAAY22C,aAAW,EACvB32C,KAAU42C,WAAW,IACrB52C,KAAc62C,eAAW,EACzB72C,KAAsBk9B,uBAAW,EACjCl9B,KAAM2+B,OAAW,EACjB3+B,KAAMu9B,OAAW,EACjBv9B,KAAW+9B,YAAW,EACtB/9B,KAAS82C,UAAW,EACpB92C,KAAUo9B,WAAW,EACrBp9B,KAAAm9B,UAAoB57B,EAAOkQ,eAAiB,EAC5CzR,KAAcq9B,eAAW,EACzBr9B,KAAYs9B,aAAW,EAEvBt9B,KAAU+2C,YAAY,EAEtB/2C,KAASy7B,UAAW,EACpBz7B,KAAY07B,aAAW,EACvB17B,KAAYg3C,aAAW,EACvBh3C,KAAei3C,gBAAW,EAC1Bj3C,KAAAk3C,gBAAmC,IAAInJ,GACvC/tC,KAAAm3C,mBAAqC,IAAIhJ,GACzCnuC,KAAiB27B,kBAAW,EAC5B37B,KAAAo3C,eAA+B,IAAI1sC,aAAa,IAChD1K,KAAAq3C,uBAAuC,IAAI3sC,aAAa,IAC/C1K,KAAS47B,UAAe,GAExB57B,KAAAs3C,cAA+B,IAAI9H,GACnCxvC,KAAgBu3C,iBAAa,GAC7Bv3C,KAAoBw3C,qBAAmB,GAChDx3C,KAAW4jB,YAAa,GACxB5jB,KAAcy3C,eAAa,GAC3Bz3C,KAAUif,WAAa,GACvBjf,KAAcisC,eAAa,GAC3BjsC,KAAkB03C,mBAAa,GAC/B13C,KAAiB23C,kBAAc,GAC/B33C,KAAA43C,eAAyBr2C,EAAO8Z,SAChCrb,KAAc63C,eAAW,EAEzB73C,KAAiB83C,mBAAY,EAqB5BlM,EACA,IAAK,IAAIE,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAC7C9rC,KAAK4jB,YAAYnZ,MAAM,GACvBzK,KAAKy3C,eAAehtC,KAAK,GACzBzK,KAAKif,WAAWxU,KAAKlJ,EAAO0d,WAAWta,WAAiB,KAAEF,OAIlEzE,KAAK+3C,aAAe,IAAI1J,GAAavB,GACrC,IAAK,IAAIviC,EAAY,EAAGA,EAAIhJ,EAAO8W,cAAc,EAAG9N,IAChDvK,KAAK47B,UAAUrxB,GAAK,IAAIsjC,GAAStjC,GAErC,IAAK,IAAIA,EAAY,EAAGA,EAAIhJ,EAAO2Z,UAAW3Q,IAC1CvK,KAAKu3C,iBAAiBhtC,GAAKhJ,EAAO2X,UAAUvU,WAAW,WAAWF,MAClEzE,KAAKw3C,qBAAqBjtC,GAAK,IAAI8jC,IAAa,GAGpD,IAAK,IAAI9jC,EAAI,EAAGA,EAAI,GAAIA,IACpBvK,KAAKo3C,eAAe7sC,GAAK,GAAKM,KAAKme,MAAO,IAADze,GAG7C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDD,GAAOtK,KAAKo3C,eAAe7sC,GAE/B,MAAMC,EAAkBF,EAAMtK,KAAKo3C,eAAet0C,OAGlD,IAAIkI,EAAqB,EACrBgtC,EAAmB,EACvB,IAAK,IAAIztC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDS,GAAcgtC,EACdA,EAAWh4C,KAAKo3C,eAAe7sC,GAAKC,EACpCxK,KAAKq3C,uBAAuB9sC,GAAKS,EAIrChL,KAAKq3C,uBAAuB,IAAM,EAGlCr3C,KAAK83C,kBAAoBhL,C,CAItB,eAAAmL,CAAgBriC,EAAsBk3B,EAAyBlB,GAE9DA,IAAch2B,EAAI,IACtB5V,KAAK4V,KAAOA,EACZ5V,KAAK02B,OAAS9gB,EACd5V,KAAK+6B,OAAS,EACd/6B,KAAK8O,QAAO,EACZ9O,KAAK2+B,OAASp9B,EAAOwV,YAAc,EACnC/W,KAAKu9B,OAAS,EACdv9B,KAAK+9B,YAAclzB,KAAKme,MAAsC,IAA/BznB,EAAO0P,iBAAmB,IACzDjR,KAAK82C,UAAYjsC,KAAKme,MAAoC,IAA7BznB,EAAOwP,eAAiB,IACrD/Q,KAAK06B,SAASgR,QACd1rC,KAAKg7B,cAAe,EACpBh7B,KAAKg1C,kBAAoBzzC,EAAOwT,qBAAuB,EACvD/U,KAAKi1C,mBAAqB,EAC1B,IAAK,IAAI1qC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IACjDvK,KAAKo1C,aAAa7qC,GAAK,KACvBvK,KAAKq1C,eAAe9qC,GAAK,KA4C7B,OA1CAvK,KAAK68B,WAAW6O,QAChB1rC,KAAK08B,gBAAiB,EACtB18B,KAAKk1C,oBAAsB3zC,EAAOwT,qBAAuB,EACzD/U,KAAKm1C,qBAAuB,EAC5Bn1C,KAAK+8B,WAAalyB,KAAKme,MAAqC,KAA9BznB,EAAOgc,gBAAkB,IACvDvd,KAAK62C,eAAiBhsC,KAAKme,MAAyC,IAAlCznB,EAAOqc,oBAAsB,IAC/D5d,KAAKk9B,uBAAyBryB,KAAKme,MAAiD,IAA1CznB,EAAOuc,4BAA8B,IAE/E9d,KAAKw2C,eAAiB,EACtBx2C,KAAKy2C,iBAAmB,EACxBz2C,KAAK22C,aAAe,EACpB32C,KAAK02C,gBAAkB,EACvB12C,KAAK42C,WAAa,IAElB52C,KAAKo9B,WAAa,EAClBp9B,KAAKq9B,eAAiB,EACtBr9B,KAAKs9B,aAAe,EACpBt9B,KAAKm9B,UAAY57B,EAAOkQ,eAAiB,EAEzCzR,KAAK+2C,YAAa,EAElB/2C,KAAKq7B,IAAM95B,EAAOqV,UAClB5W,KAAKs7B,SAAW,GAChBt7B,KAAKy1C,WAAal0C,EAAOma,iBACzB1b,KAAK01C,OAASn0C,EAAOoa,aACrB3b,KAAKs+B,QAAU,EACft+B,KAAK86B,OAAS,EACd96B,KAAKo+B,cAAgB,GACrBp+B,KAAKu2C,kBAAoBh1C,EAAOmc,sBAAuB,EAAuB,EAC9E1d,KAAKu8B,qBAAsB,EAC3Bv8B,KAAKi2C,cAAgB,GACrBj2C,KAAKm7B,cAAgB,GACrBn7B,KAAKo7B,kBAAmB,EACxBp7B,KAAKm2C,eAAgB,EACrBn2C,KAAKg9B,SAAU,EACfh9B,KAAKs1C,OAAS,EACdt1C,KAAKu1C,QAAUh0C,EAAO4T,eACtBnV,KAAK26B,WAAap5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,MAC1DzE,KAAKw1C,cAAgB,EACrBx1C,KAAK43C,eAAiBr2C,EAAO8Z,SAC7Brb,KAAK63C,eAAiB,EACtB73C,KAAK83C,kBAAoBhL,EACjBl3B,GACJ,OACI5V,KAAKsB,SAAW,EAEhBtB,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAE9CzE,KAAKw9B,6BAA8B,EACnCx9B,KAAKy9B,kBAAoB,EACzBz9B,KAAK09B,gBAAkBn8B,EAAOK,gBAAgB5B,KAAKsB,UAAUiB,QAAQO,OAAS,EAC9E9C,KAAK29B,iBAAmB,EACxB39B,KAAK49B,uBAAwB,EAC7B59B,KAAK69B,oBAAsB,EAE/B,MACJ,OACI79B,KAAKsB,SAAW,EAChBtB,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClD,IAAK,IAAI8F,EAAY,EAAGA,EAAI,GAAIA,IAC5BvK,KAAKo3C,eAAe7sC,GAAK,GAAMM,KAAKme,MAAO,IAADze,GAG9C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDD,GAAOtK,KAAKo3C,eAAe7sC,GAE/B,MAAMC,EAAkBF,EAAMtK,KAAKo3C,eAAet0C,OAGlD,IAAIkI,EAAqB,EACrBgtC,EAAmB,EACvB,IAAK,IAAIztC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDS,GAAcgtC,EACdA,EAAWh4C,KAAKo3C,eAAe7sC,GAAKC,EACpCxK,KAAKq3C,uBAAuB9sC,GAAKS,EAGrChL,KAAKq3C,uBAAuB,IAAM,EAClC,MACJ,OACIr3C,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAW,mBAAmBF,MACzDzE,KAAKy7B,UAAY,EACjBz7B,KAAK07B,aAAe,EACpB17B,KAAK27B,kBAAoB,EACzB,IAAK,IAAIpxB,EAAY,EAAGA,EAAIvK,KAAK47B,UAAU94B,OAAQyH,IAC/CvK,KAAK47B,UAAUrxB,GAAGmhC,MAAMnhC,GAE5B,MACJ,QACIvK,KAAK26B,WAAa,EAClB36B,KAAKs+B,QAAU,EACft+B,KAAK8O,QAAU,EACf9O,KAAK66B,MAAQ,EACb76B,KAAKy7B,UAAY,EACjBz7B,KAAK07B,aAAe,EACpB17B,KAAKg3C,aAAe,EACpBh3C,KAAKi3C,gBAAkB,EACvBj3C,KAAKk3C,gBAAgBlJ,WAAW,GAChChuC,KAAK27B,kBAAoB,EACzB,IAAK,IAAIpxB,EAAY,EAAGA,EAAIvK,KAAK47B,UAAU94B,OAAQyH,IAC/CvK,KAAK47B,UAAUrxB,GAAGmhC,MAAMnhC,GAE5B,MACJ,OACIvK,KAAK+0C,UAAY,EACjB/0C,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClD,MACJ,OACIzE,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,MACtDzE,KAAK+3C,aAAarM,MAAMoB,GACxB,MACJ,OACI9sC,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,MACtD,IAAK,IAAI8F,EAAY,EAAGA,EAAIhJ,EAAO2Z,UAAW3Q,IAC1CvK,KAAKu3C,iBAAiBhtC,GAAKhJ,EAAO2X,UAAUvU,WAAW,WAAWF,MAC9BkqB,MAAhC3uB,KAAKw3C,qBAAqBjtC,KAC1BvK,KAAKw3C,qBAAqBjtC,GAAK,IAAI8jC,IAAa,IAEpDruC,KAAKw3C,qBAAqBjtC,GAAGmhC,MAAMoB,GAEvC,MACJ,OACI9sC,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,MACtDzE,KAAKs3C,cAAc5L,QACnB,MACJ,OACI1rC,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClDzE,KAAKmL,WAAa5J,EAAO6Y,gBAAgB,EACzCpa,KAAKu7B,cAAgB,EACrB,MACJ,OACIv7B,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAkB,MAAEF,MAC/CzE,KAAKs3C,cAAc5L,QACnB,MACJ,QACI1rC,KAAK26B,WAAa,EAClB36B,KAAKs+B,QAAU,EACft+B,KAAK+pC,SAAW,EAChB/pC,KAAK8O,QAAU,EACf9O,KAAK66B,MAAQ,EACb76B,KAAK4jB,YAAc,GACnB5jB,KAAKy3C,eAAiB,GACtBz3C,KAAKif,WAAa,GAClB,IAAK,IAAI6sB,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAC7C9rC,KAAK4jB,YAAYnZ,MAAM,GACvBzK,KAAKy3C,eAAehtC,KAAK,GACzBzK,KAAKif,WAAWxU,KAAKlJ,EAAO0d,WAAWta,WAAiB,KAAEF,OAC1DzE,KAAK23C,kBAAkB7L,IAAO,EAC9B9rC,KAAKisC,eAAeH,GAAO,EAC3B9rC,KAAK03C,mBAAmB5L,GAAO,EAEnC,MACJ,OACR9rC,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClDzE,KAAKo2C,iBAAmB70C,EAAOgZ,oBAC/Bva,KAAKq2C,eAAiBxrC,KAAK6U,KAAKne,EAAOiZ,kBAAoB,GAC3Dxa,KAAKs2C,cAAgB,EACrBt2C,KAAKmL,WAAa5J,EAAO6Y,gBAAgB,EAAI,EACjCpa,KAAKu7B,cAAgB,EACjC,MACQ,QACI,MAAM,IAAIn5B,MAAM,iCAAmCwT,GAKvD5V,KAAK66B,OAASt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,QAEvDzE,KAAK8O,QAAuB,KAAZ9O,KAAK8O,Q,CAKtB,qBAAA0jC,CAAsB0F,EAAgCC,GACzD,IAAI1F,EAA0CyF,EAAeE,aACzD1F,EAA6CwF,EAAehW,gBAC5DmW,EAAwCH,EAAeI,eACvDC,EAAuCL,EAAeM,cACtDC,EAAkDP,EAAeQ,kBACjEC,EAA0CT,EAAeU,iBAGlCjqB,MAAvB8jB,IAAkCA,EAAuD,GAAhCzyC,KAAK4V,KAA+B,EAAI,IACvE+Y,MAA1B+jB,IAAqCA,EAAyB,GAC3C/jB,MAAnB0pB,IAA8BA,EAAkB92C,EAAO2X,UAAUvU,WAAiB,MAChEgqB,MAAlB4pB,IAA6BA,EAAiBh3C,EAAO2X,UAAUvU,WAAqB,GAAT3E,KAAK4V,KAA8B,UAAY,SAC/F+Y,MAA3B8pB,IAAsCA,EAA0B,CAACl3C,EAAO2X,UAAUvU,WAA0C,GAA9B3E,KAAK4V,KAA6B,YAAc,QAASrU,EAAO2X,UAAUvU,WAAiB,KAAGpD,EAAO2X,UAAUvU,WAAiB,KAAGpD,EAAO2X,UAAUvU,WAAiB,OAC9OgqB,MAArBgqB,IAAgCA,EAAoBp3C,EAAO2X,UAAUvU,WAAiB,MAIrCsuC,IAAvBR,GAC+B,GAA1C4F,EAAgBziC,OAA4ByiC,EAAkB92C,EAAO2X,UAAUvU,WAAiB,MAEnH,MAAM6T,EAAuBjX,EAAOgX,WAAWvY,KAAKy7B,WAAWjjB,aAC/D,IAAIqgC,GAA0C,EAC1CC,GAA2C,EAC3CC,EAA8D,GAApBV,EAAgBziC,MAAsD,GAAnB2iC,EAAe3iC,KAChH,GAAa,GAAT5V,KAAK4V,MAAsC,IAAT5V,KAAK4V,KAA8B,CACrEmjC,EAAgCA,GAAiF,GAA/CJ,EAAkB/iC,KACpF,IAAK,IAAIrL,EAAY,EAAGA,EAAIkuC,EAAwB31C,OAAQyH,IACpDA,EAAIiO,EAC+B,GAA/BigC,EAAwBluC,GAAGqL,KAC3BkjC,GAAkC,EAElCD,GAAiC,EAGrCE,EAAgCA,GAA0F,GAAxDN,EAAwBluC,GAAGqL,IAGxG,CAED5V,KAAKw1C,cAAgB,EAER,GAATx1C,KAAK4V,MAAsC,IAAT5V,KAAK4V,OACnCkjC,GAAmCC,EACnC/4C,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAAuB,WAAEF,MAAO,EAAGlD,EAAO2X,UAAUvU,WAAW,aAAaF,OAAO,GAChIo0C,IAAmCE,GAC1C/4C,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAAiB,KAAEF,MAAO,EAAGlD,EAAO2X,UAAUvU,WAAW,aAAaF,OAAO,IAIjH,GAApB4zC,EAAgBziC,MAChB5V,KAAK68B,WAAW6O,QAChB1rC,KAAK08B,gBAAiB,EACtB18B,KAAK06B,SAAS8X,sBAAsBC,EAAqBC,EAAwB2F,GACjFr4C,KAAK8O,UAAW,IACZqpC,GAAqBn4C,KAAKg7B,gBAC1Bh7B,KAAKg7B,cAAe,EACpBh7B,KAAKg1C,kBAAoBvC,EACzBzyC,KAAKi1C,mBAAqBvC,KAG9B1yC,KAAK06B,SAASgR,QAEd1rC,KAAKg7B,cAAe,EACpBh7B,KAAK08B,gBAAiB,EACtB18B,KAAK68B,WAAW2V,sBAAsBC,EAAqBC,EAAwB2F,GACnFr4C,KAAK8O,SAAW,GAChB9O,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAA+B,mBAAEF,MAAO,EAAG4zC,EAAgB5zC,OAAO,IAClH0zC,GAAqBn4C,KAAK08B,kBAC1B18B,KAAK08B,gBAAiB,EACtB18B,KAAKk1C,oBAAsBzC,EAC3BzyC,KAAKm1C,qBAAuBzC,IAIb,GAAnB6F,EAAe3iC,MACf5V,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAAuB,WAAEF,MAAO,EAAG8zC,EAAe9zC,OAAO,GAGjH,IAAK,IAAI8F,EAAY,EAAGA,EAAIkuC,EAAwB31C,OAAQyH,IACpDA,EAAIiO,GAAgBsgC,GACW,GAA/BL,EAAwBluC,GAAGqL,MAC3B5V,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAA8B,kBAAEF,MAAO8F,EAAGkuC,EAAwBluC,GAAG9F,OAAO,GAI9G,GAAtBk0C,EAAkB/iC,MAClB5V,KAAKg5C,YAAYz3C,EAAO0c,4BAA4BtZ,WAA8B,kBAAEF,MAAO,EAAGk0C,EAAkBl0C,OAAO,E,CAIxH,YAAAknC,GACH,MAAMsN,EAAwB,CAC1BrjC,KAAQrU,EAAOsR,oBAAoB7S,KAAK4V,MACxCmlB,OAAU/6B,KAAK+6B,OACfL,SAAY16B,KAAK06B,SAASiR,eAC1B3Q,aAAgBh7B,KAAKg7B,aACrBC,YAAej7B,KAAKg1C,kBACpB9Z,aAAgBl7B,KAAKi1C,mBACrB9Z,cAAiBn7B,KAAKm7B,cACtBC,iBAAoBp7B,KAAKo7B,kBAGzBp7B,KAAK02B,QAAU12B,KAAK4V,OACpBqjC,EAAyB,OAAIj5C,KAAK02B,QAGtC,IAAK,IAAInsB,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IACrB,MAAxBvK,KAAKo1C,aAAa7qC,KAClB0uC,EAAiB,eAAiB1uC,GAAKvK,KAAKo1C,aAAa7qC,GAAIohC,gBAGrE,MAAM78B,EAAoB,GAC1B,IAAK,MAAMyP,KAAUhd,EAAOiV,YACpBxW,KAAK8O,QAAW,GAAKyP,GACrBzP,EAAQrE,KAAKlJ,EAAOgV,YAAYgI,IAqCxC,GAlCA06B,EAA0B,QAAInqC,EAG1BD,EAAyB7O,KAAK8O,WAC9BmqC,EAA6B,WAAI13C,EAAO8T,YAAYrV,KAAK26B,YAAYx2B,KACrE80C,EAAsC,oBAAIj5C,KAAKu8B,oBACG,GAA9Ch7B,EAAO8T,YAAYrV,KAAK26B,YAAYnlB,SAAgByjC,EAA6B,WAAIj5C,KAAKyV,aAE9F1G,EAAoB/O,KAAK8O,WACzBmqC,EAAwB,MAAIj5C,KAAKk5C,WAAW/0C,KAC5C80C,EAAiC,eAAIj5C,KAAKk2C,eAC1C+C,EAAgC,cAAIj5C,KAAKi2C,cACrC10C,EAAOwW,OAAO/X,KAAK66B,OAAO3iB,WAAa,IAAG+gC,EAA6B,WAAIj5C,KAAKkY,aAEpFlJ,EAAyBhP,KAAK8O,WAC9BmqC,EAAsC,oBAAIj5C,KAAKy1C,YAE/CxmC,EAAqBjP,KAAK8O,WAC1BmqC,EAA8B,YAAItK,GAAMwK,cAAcn5C,KAAK01C,SAE3DxmC,EAAsBlP,KAAK8O,YACN,GAAjB9O,KAAKs+B,UACLt+B,KAAKs+B,QAAU,GAEC,GAAhBt+B,KAAKs+B,QACL2a,EAA0B,QAAI13C,EAAOoU,SAAS3V,KAAKs+B,SAASn6B,KAE5D80C,EAA0B,QAAI,SAElCA,EAA+B,aAAIj5C,KAAKu+B,aACxC0a,EAA+B,aAAIj5C,KAAKw+B,aACxCya,EAA+B,aAAIj5C,KAAKy+B,aACxCwa,EAA8B,YAAIj5C,KAAK0+B,aAEvCvvB,EAAyBnP,KAAK8O,SAAU,CACxCmqC,EAAiC,eAAIj5C,KAAK08B,eAC1Cuc,EAAgC,cAAIj5C,KAAKk1C,oBACzC+D,EAAiC,eAAIj5C,KAAKm1C,qBAC1C8D,EAA6B,WAAIj5C,KAAK68B,WAAW8O,eAEjD,IAAK,IAAIphC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IACnB,MAA1BvK,KAAKq1C,eAAe9qC,KACpB0uC,EAAiB,iBAAmB1uC,GAAKvK,KAAKq1C,eAAe9qC,GAAIohC,eAE5E,CAkDD,GAjDIv8B,EAAyBpP,KAAK8O,WAC9BmqC,EAA6B,WAAIpuC,KAAKiB,MAAM,IAAM9L,KAAK+8B,YAAcx7B,EAAOgc,gBAAkB,IAC9F07B,EAA0B,QAAIj5C,KAAKg9B,SAEnC3tB,EAAyBrP,KAAK8O,WAC9BmqC,EAAmC,kBAAK13C,EAAOqc,oBAAsB,EAAI5d,KAAK62C,gBAAkBt1C,EAAOsc,qBACvGo7B,EAAyC,uBAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKk9B,wBAA0B37B,EAAOuc,4BAA8B,KAGlIpO,EAAiB1P,KAAK8O,WACtBmqC,EAA0B,QAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKw2C,gBAAgBj1C,EAAOyV,aAAe,IAC1FiiC,EAA4B,UAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKy2C,kBAAkBl1C,EAAO0V,eAAiB,IAChGgiC,EAAkC,gBAAIj5C,KAAK02C,gBAC3CuC,EAA+B,aAAKpuC,KAAKiB,MAAM,IAAK9L,KAAK22C,cAAcp1C,EAAO6Y,gBAAkB,IAChG6+B,EAA6B,WAAKpuC,KAAKiB,MAAM,IAAK9L,KAAK42C,WAAYr1C,EAAoB,gBAEvFoO,EAAqB3P,KAAK8O,WAC1BmqC,EAA4B,UAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKm9B,WAAW57B,EAAOkQ,eAAiB,IACzFwnC,EAA6B,WAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKo9B,YAAY77B,EAAOoQ,gBAAkB,IAC5FsnC,EAAiC,eAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKq9B,gBAAgB97B,EAAOmQ,oBAAsB,IACxGunC,EAA+B,aAAKpuC,KAAKiB,MAAM,IAAK9L,KAAKs9B,cAAc/7B,EAAOwQ,gBAAkB,KAEhGlC,EAAyB7P,KAAK8O,WAC9BmqC,EAA6B,WAAKj5C,KAAK+2C,YAEvCznC,EAAsBtP,KAAK8O,WAC3BmqC,EAAsB,IAAIpuC,KAAKiB,MAAM,KAAO9L,KAAKq7B,IAAM95B,EAAOqV,WAAarV,EAAOqV,WAClFqiC,EAA2B,SAAIj5C,KAAKs7B,UAEpC/rB,EAAqBvP,KAAK8O,WAC1BmqC,EAAyB,OAAIpuC,KAAKiB,MAAM,IAAM9L,KAAK2+B,QAAUp9B,EAAOwV,YAAc,KAElFvH,EAAmBxP,KAAK8O,WACxBmqC,EAA8B,YAAIpuC,KAAKiB,MAAM,IAAM9L,KAAK+9B,aAAex8B,EAAO0P,iBAAmB,IACjGgoC,EAAiC,eAAIpuC,KAAKiB,MAAM,KAAQ9L,KAAK82C,UAAY,GAAKv1C,EAAOyP,oBAAsBzP,EAAOiR,aAAejR,EAAOgR,eAAiB,KAEzJ9C,EAAqBzP,KAAK8O,WAC1BmqC,EAAyB,OAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKu9B,QAAUh8B,EAAO+P,YAAc,KAElF1B,EAAwB5P,KAAK8O,WAC7BmqC,EAAiC,eAAIj5C,KAAK43C,eAC1CqB,EAAiC,eAAIj5C,KAAK63C,gBAGjC,GAAT73C,KAAK4V,OACLqjC,EAAgC,cAAIpuC,KAAKiB,MAAM,IAAQ6iC,GAAMyK,uBAAuBp5C,KAAKs1C,SAAW,IACpG2D,EAA+B,aAAItK,GAAM0K,sBAAsBr5C,KAAKu1C,UAG3D,GAATv1C,KAAK4V,MAA6C,GAAT5V,KAAK4V,KAAqC,CACnFqjC,EAA4B,UAAI,GAChC,IAAK,IAAI1uC,EAAY,EAAGA,EAAIhJ,EAAOuY,uBAAwBvP,IACvD0uC,EAA4B,UAAE1uC,GAAKM,KAAKiB,MAAM,IAAM9L,KAAKs3C,cAAcnZ,UAAU5zB,GAAKhJ,EAAO2Y,aAEpG,CAeD,GAba,GAATla,KAAK4V,MAAwC,GAAT5V,KAAK4V,MAAuC,GAAT5V,KAAK4V,MAAkD,GAAT5V,KAAK4V,MAAyC,GAAT5V,KAAK4V,MAA6C,GAAT5V,KAAK4V,MAAgD,GAAT5V,KAAK4V,OACpPqjC,EAAyB,OAAIj5C,KAAK86B,QAAUv5B,EAAO2U,QAAQpT,OAAS,SAAWvB,EAAO2U,QAAQlW,KAAK86B,QAAQ32B,KAEvGnE,KAAK86B,QAAUv5B,EAAO2U,QAAQpT,SAC9Bm2C,EAA+B,aAAIj5C,KAAK21C,aACxCsD,EAA+B,aAAIj5C,KAAK41C,aACxCqD,EAA+B,aAAIj5C,KAAK61C,aACxCoD,EAAmC,iBAAIj5C,KAAK81C,iBAC5CmD,EAA6B,WAAIj5C,KAAK+1C,WACtCkD,EAA+B,aAAIj5C,KAAKg2C,eAInC,GAATh2C,KAAK4V,KACLqjC,EAAuB,KAAI13C,EAAOgK,WAAWvL,KAAK+0C,WAAW5wC,UAC1D,GAAa,GAATnE,KAAK4V,KAAiC,CAC7CqjC,EAA2B,SAAI,GAC/B,IAAK,IAAI1uC,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtD0uC,EAA2B,SAAE1uC,GAAKM,KAAKiB,MAAM,IAAM9L,KAAK+3C,aAAazJ,SAAS/jC,GAAKhJ,EAAOsY,YAEjG,MAAM,GAAa,GAAT7Z,KAAK4V,KAAgC,CAC5CqjC,EAAwB,MAAI,GAC5B,IAAK,IAAIpf,EAAY,EAAGA,EAAIt4B,EAAO2Z,UAAW2e,IAAK,CAC/C,MAAMyU,EAAqB,GAC3B,IAAK,IAAI/jC,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtD+jC,EAAS/jC,GAAKM,KAAKiB,MAAM,IAAM9L,KAAKw3C,qBAAqB3d,GAAGyU,SAAS/jC,GAAKhJ,EAAOsY,aAErFo/B,EAAwB,MAAEpf,GAAK,CAC3Bye,eAAkBt4C,KAAKs5C,mBAAmBzf,GAAG11B,KAC7CmqC,SAAYA,EAEnB,CACJ,MAAM,GAAa,GAATtuC,KAAK4V,KACZqjC,EAAuB,KAAI13C,EAAOC,UAAUxB,KAAKsB,UAAU6C,KAC3D80C,EAA8C,4BAAIj5C,KAAKw9B,4BACvDyb,EAAoC,kBAAIj5C,KAAKy9B,kBAC7Cwb,EAAkC,gBAAIj5C,KAAK09B,gBAC3Cub,EAAmC,iBAAIj5C,KAAK29B,iBAC5Csb,EAAwC,sBAAIj5C,KAAK49B,sBACjDqb,EAAsC,oBAAIj5C,KAAK69B,yBAC5C,GAAa,GAAT79B,KAAK4V,KACZqjC,EAA6B,WAAIj5C,KAAKmL,WACtC8tC,EAAgC,cAAIj5C,KAAKu7B,mBACtC,GAAa,GAATv7B,KAAK4V,KACrBqjC,EAA6B,WAAIj5C,KAAKmL,WAC7B8tC,EAAgC,cAAIj5C,KAAKu7B,cAClD0d,EAA2B,SAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKo2C,iBAAmB70C,EAAOgZ,qBAC/E0+B,EAAyB,OAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKq2C,eAAiB90C,EAAOiZ,mBAC3Ey+B,EAAwB,MAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKs2C,cAAgB/0C,EAAOkZ,uBACnE,GAAa,GAATza,KAAK4V,KACNqjC,EAAgC,cAAIpuC,KAAKiB,MAAM,IAAM9L,KAAKo+B,eAAiB78B,EAAOic,mBAAqB,IACnGjc,EAAOmc,wBACnBu7B,EAAoC,kBAAI13C,EAAOoc,iBAAiB3d,KAAKu2C,yBAE1D,GAAa,GAATv2C,KAAK4V,KACZqjC,EAAyB,OAAIj5C,KAAK86B,QAAUv5B,EAAO2U,QAAQpT,OAAS,SAAWvB,EAAO2U,QAAQlW,KAAK86B,QAAQ32B,KACvGnE,KAAK86B,QAAUv5B,EAAO2U,QAAQpT,SAC9Bm2C,EAA+B,aAAIj5C,KAAK21C,aACxCsD,EAA+B,aAAIj5C,KAAK41C,aACxCqD,EAA+B,aAAIj5C,KAAK61C,aACxCoD,EAAmC,iBAAIj5C,KAAK81C,iBAC5CmD,EAA6B,WAAIj5C,KAAK+1C,iBAEvC,GAAa,GAAT/1C,KAAK4V,MAAsC,IAAT5V,KAAK4V,KAA8B,CAC5E,MAAM2jC,EAA0B,GAChC,IAAK,MAAMC,KAAYx5C,KAAK47B,UACxB2d,EAAc9uC,KAAK,CACfoxB,UAAat6B,EAAOuX,oBAAoB0gC,EAAS3d,WAAW13B,KAC5DqJ,UAAagsC,EAAShsC,UACtBsuB,SAAYv6B,EAAOkd,cAAc+6B,EAAS1d,UAAU33B,KACpDgH,WAAcquC,EAASruC,aAG/B,GAAY,GAATnL,KAAK4V,KACJqjC,EAA4B,UAAI13C,EAAOgX,WAAWvY,KAAKy7B,WAAWt3B,KAClE80C,EAA+B,aAAI13C,EAAO8X,UAAUrZ,KAAK07B,cAAcv3B,KACvE80C,EAAoC,kBAAIj5C,KAAK27B,kBAC7Csd,EAA4B,UAAIM,MAC7B,CAIH,GAHAN,EAA4B,UAAI13C,EAAOoX,cAAc3Y,KAAKg3C,cAAc7yC,KACxE80C,EAA+B,aAAI13C,EAAOgY,aAAavZ,KAAKi3C,iBAAiB9yC,KAC7E80C,EAAoC,kBAAIj5C,KAAK27B,kBACrB,GAArB37B,KAAKg3C,aAAkB,CACtB,MAAME,EAAuB,GAC7BA,EAAsB,KAAIl3C,KAAKk3C,gBAAgBx+B,YAC/Cw+B,EAA8B,aAAIl3C,KAAKk3C,gBAAgB1+B,aACvDygC,EAAkC,gBAAI/B,CACzC,CACD,GAA2B,GAAxBl3C,KAAKi3C,gBAAqB,CACzB,MAAMwC,EAAsB,GAC5BA,EAAqB,KAAIz5C,KAAKm3C,mBAAmB79B,QACjD2/B,EAAiC,eAAIQ,CACxC,CAEDR,EAA4B,UAAIM,CACnC,CACJ,MAAM,GAAa,GAATv5C,KAAK4V,KAAuC,CACnDqjC,EAAuB,KAAI13C,EAAOC,UAAUxB,KAAKsB,UAAU6C,KAC3D80C,EAAiC,eAAI,IAAIS,aAAa,IACtDT,EAAyC,uBAAI,IAAIS,aAAa,IAC9D,IAAK,IAAInvC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpD0uC,EAAiC,eAAE1uC,GAAKvK,KAAKo3C,eAAe7sC,EAInE,KAAM,IAAa,IAATvK,KAAK4V,KAcZ,MAAM,IAAIxT,MAAM,gCAbhB62C,EAA8B,YAAI,GAClCA,EAAiC,eAAI,GACrCA,EAA8B,YAAI,GAClCA,EAAiC,eAAI,GACrCA,EAAqC,mBAAI,GACzC,IAAK,IAAInN,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAC7CmN,EAA8B,YAAEnN,GAAO9rC,KAAK4jB,YAAYkoB,GACxDmN,EAAiC,eAAEnN,GAAO9rC,KAAKy3C,eAAe3L,GAC9DmN,EAA8B,YAAEnN,GAAO9rC,KAAKif,WAAW6sB,GACvDmN,EAAiC,eAAEnN,GAAO9rC,KAAKisC,eAAeH,GAC9DmN,EAAqC,mBAAEnN,GAAO9rC,KAAK03C,mBAAmB5L,EAI7E,CAED,MAAM5yB,EAAmB,GACzB,IAAK,IAAI3O,EAAI,EAAGA,EAAIvK,KAAKw1C,cAAejrC,IACpC2O,EAAUzO,KAAKzK,KAAKkZ,UAAU3O,GAAGohC,gBAIrC,OAFAsN,EAA4B,UAAI//B,EAEzB+/B,C,CAIJ,cAAArM,CAAeqM,EAAuBnM,EAAyBlB,EAAuB+N,EAA0BtrC,EAA4BurC,EAA6B,EAAGzpC,EAAqB5O,EAAO4O,YACnLwe,MAApBsqB,IAA+BA,EAAmB,IAEtD,MAAMlM,EAAiB58B,EAAW68B,cAElC,IAAIp3B,EAAuBrU,EAAOsR,oBAAoB4tB,QAAQwY,EAAuB,MA+BrF,GA7BuB,YAAVlM,GAAsD,MAA5BkM,EAAuB,OAAYrjC,EAAOrU,EAAOsR,oBAAoB4tB,QAAQ,WAClG,GAAT7qB,IAAYA,EAAOg2B,EAAY,GAAyBkB,EAAgB,EAAuB,GACxG9sC,KAAKi4C,gBAAgBriC,EAAMk3B,EAAgBlB,GAE3C5rC,KAAK8O,UAAW,EAEkB6f,MAA9BsqB,EAAyB,SACzBj5C,KAAK02B,OAASuiB,EAAyB,SAAM,GAGftqB,MAA9BsqB,EAAyB,OAEzBj5C,KAAK+6B,OADS,WAAVgS,GAAiC,UAAVA,GAAgC,YAAVA,GAAkC,WAAVA,GAAiC,gBAAVA,GAAsC,YAAVA,GAAiC,eAAVA,GAAoC,YAAVA,EAC/JrG,IAAOnlC,EAAOmV,YAAc,EAAInV,EAAOmV,YAAc,EAAK,EAAgC,EAA7BuiC,EAAyB,QAElFpuC,KAAKiB,MAA4E,IAArE46B,GAAM,EAAG,EAAG77B,KAAKiB,MAAM,GAAkC,EAA7BmtC,EAAyB,QAAS,KAAc,GAG1Gj5C,KAAK+6B,OAAS,EAGlB/6B,KAAKm7B,cAAqDxM,MAArCsqB,EAAgC,cAAkBvS,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,kBAAkBwa,UAAY,EAAuC,EAApC85B,EAAgC,eAAS,GAE3ItqB,MAAxCsqB,EAAmC,iBACnCj5C,KAAKo7B,iBAAmB6d,EAAmC,iBAG3Dj5C,KAAKo7B,kBAAmB,EAGxB34B,MAAM8d,QAAQ04B,EAA0B,SAAI,CAC5C,IAAInqC,EAAkB,EACtB,IAAK,IAAIvE,EAAY,EAAGA,EAAI0uC,EAA0B,QAAEn2C,OAAQyH,IAC5DuE,GAAqB,GAAKvN,EAAOgV,YAAYkqB,QAAQwY,EAA0B,QAAE1uC,IAErFvK,KAAK8O,QAAkB,MAAPA,CACnB,KAAM,CAEH,MAAM+qC,EAA+B,CAAC,OAAQ,SAAU,SAAU,mBAClE75C,KAAK8O,QAAU+qC,EAAmBpZ,QAAQwY,EAA0B,UAC/C,GAAjBj5C,KAAK8O,UAAe9O,KAAK8O,QAAoB,GAAT9O,KAAK4V,KAAgC,EAAI,EACpF,CAED5V,KAAK26B,WAAap5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,MAC1D,MAAMq1C,EAA0Bb,EAA6B,YAAKA,EAA2B,SAC7F,GAA0BtqB,MAAtBmrB,EAAiC,CACjC,IAAInf,EAAqCp5B,EAAO8T,YAAY1Q,WAAWm1C,GACvE,GAAyCnrB,MAArCsqB,EAAgC,eAAsDtqB,MAApCsqB,EAA+B,aAAgB,CACjG,MAAMf,EAAuB,CACzB6B,OAAU,CAAEpf,WAAY,YAAaC,cAAe,EAAK1lB,cAAe,GACxE8kC,SAAY,CAAErf,WAAY,YAAaC,cAAe,EAAK1lB,cAAe,GAC1E+kC,OAAU,CAAEtf,WAAY,SAAUC,cAAe,EAAK1lB,cAAe,GACrEglC,KAAQ,CAAEvf,WAAY,SAAUC,cAAe,EAAK1lB,cAAe,GACnEilC,OAAU,CAAExf,WAAY,SAAUC,cAAe,KAAO1lB,cAAe,GACvEklC,KAAQ,CAAEzf,WAAY,SAAUC,cAAe,KAAO1lB,cAAe,GAIrEmlC,MAAS,CAAE1f,WAAY,mBAAoBC,cAAe,KAAO1lB,cAAe,GAChF,aAAc,CAAEylB,WAAY,SAAUC,cAAe,IAAM1lB,aAAc,GACzE,YAAa,CAAEylB,WAAY,SAAUC,cAAe,EAAK1lB,aAAc,IACvE,cAAe,CAAEylB,WAAY,SAAUC,cAAe,MAAQ1lB,aAAc,IAC5E,YAAa,CAAEylB,WAAY,SAAUC,cAAe,IAAM1lB,aAAc,KACzE4kC,GACmBnrB,MAAlBupB,IACAvd,EAAap5B,EAAO8T,YAAY1Q,WAAWuzC,EAAevd,YAE1D36B,KAAKs1C,OAAS3G,GAAM2L,uBAAuBpC,EAAetd,eAC1D56B,KAAKu1C,QAAU5G,GAAM4L,sBAAsBrC,EAAehjC,cAEjE,CACiByZ,MAAdgM,IAAyB36B,KAAK26B,WAAaA,EAAWl2B,OAEtDzE,KAAK26B,YAAcp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,QAE3DzE,KAAK8O,QAAuB,KAAZ9O,KAAK8O,QAE5B,CACqC6f,MAAlCsqB,EAA6B,aAC7Bj5C,KAAKyV,WAAawjC,EAA6B,YAGVtqB,MAArCsqB,EAAgC,gBAChCj5C,KAAKs1C,OAAS3G,GAAM2L,wBAAwBrB,EAAgC,gBAExCtqB,MAApCsqB,EAA+B,eAC/Bj5C,KAAKu1C,QAAU5G,GAAM4L,uBAAuBtB,EAA+B,eAG/E,CAEI,MAAMuB,EAAqBvB,EAAwB,MAC7CwB,EAAuC,CAAEC,QAAW,gBACpD7f,EAA2Bt5B,EAAOwW,OAAOpT,WAAW81C,EAAiBD,KAAmBj5C,EAAOwW,OAAOpT,WAAW61C,GAC1G7rB,MAATkM,EACA76B,KAAK66B,MAAQA,EAAMp2B,MAGN,GAATzE,KAAK4V,KACL5V,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClC,GAATzE,KAAK4V,KACZ5V,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAkB,MAAEF,MAC/B,GAATzE,KAAK4V,KACZ5V,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,MAClC,GAATzE,KAAK4V,MAAoC,IAAT5V,KAAK4V,KAC5C5V,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAW,mBAAmBF,MAEzDzE,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,KAGjE,CACqCkqB,MAAlCsqB,EAA6B,aAC7Bj5C,KAAKkY,WAAa+gC,EAA6B,YAGnDj5C,KAAK86B,OAASv5B,EAAO2U,QAAQvR,WAAiB,KAAEF,MAChD,MAAMk2C,EAAsB1B,EAAyB,QAAKA,EAA2B,UAAKA,EAAyB,OACnH,GAAsBtqB,MAAlBgsB,EAA6B,CAC7B,MAAMC,EAAwC,CAAEC,MAAS,OAAQC,OAAU,QAASC,QAAW,SAAU73C,MAAS,UAC5G43B,EAA6Bv5B,EAAO2U,QAAQvR,WAAWi2C,EAAkBD,KAAoBp5C,EAAO2U,QAAQvR,WAAWg2C,GAC/GhsB,MAAVmM,IAAqB96B,KAAK86B,OAASA,EAAOr2B,OACxB,UAAlBk2C,IAA4B36C,KAAK86B,OAASv5B,EAAO2U,QAAQpT,OAChE,CAuBG,GArBJ9C,KAAK21C,aAAoDhnB,MAApCsqB,EAA+B,aAAkB13C,EAAO2U,QAAQlW,KAAK86B,QAAQ3kB,OAAS8iC,EAA+B,aAC1Ij5C,KAAK41C,aAAoDjnB,MAApCsqB,EAA+B,aAAkB13C,EAAO2U,QAAQlW,KAAK86B,QAAQ1kB,OAAS6iC,EAA+B,aAC1Ij5C,KAAK61C,aAAoDlnB,MAApCsqB,EAA+B,aAAkB13C,EAAO2U,QAAQlW,KAAK86B,QAAQzkB,OAAS4iC,EAA+B,aAC1Ij5C,KAAK81C,iBAA4DnnB,MAAxCsqB,EAAmC,iBAAkB13C,EAAO2U,QAAQlW,KAAK86B,QAAQ12B,WAAa60C,EAAmC,iBAC1Jj5C,KAAK+1C,WAAgDpnB,MAAlCsqB,EAA6B,WAAkB13C,EAAO2U,QAAQlW,KAAK86B,QAAQxkB,KAAO2iC,EAA6B,WAClIj5C,KAAKg2C,aAAoDrnB,MAApCsqB,EAA+B,cAA0BA,EAA+B,aAE3E,kBAA9BA,EAAyB,SAEzBj5C,KAAK86B,OAASv5B,EAAO2U,QAAQvR,WAAgB,IAAEF,MAC/CzE,KAAK66B,MAAQt5B,EAAOwW,OAAOpT,WAAW,mBAAmBF,OAEzDzE,KAAK66B,OAASt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,OAAUhC,MAAM8d,QAAQ04B,EAA0B,WAEzGj5C,KAAK8O,QAAuB,KAAZ9O,KAAK8O,SAGsB6f,MAA3CsqB,EAAsC,sBACtCj5C,KAAKy1C,WAAa/O,GAAM,EAAGnlC,EAAOka,gBAAiB5Q,KAAKiB,OAAOmtC,EAAsC,uBAGnEtqB,MAA9BsqB,EAAyB,OAAgB,CACzC,IAAI+B,EAA8B/B,EAAyB,OAC3Dj5C,KAAK8O,QAAuB,IAAZ9O,KAAK8O,QAGjB9O,KAAKy1C,WADmB,eAAvBuF,GAAiE,kBAAvBA,EACzB,GACa,gBAAvBA,GAAkE,6BAAvBA,EACjC,GACa,eAAvBA,GAAiE,iBAAvBA,EAChC,EACa,gBAAvBA,GAAkE,6BAAvBA,EACjC,EAEA,EAEzB,CACkCrsB,MAAnCsqB,EAA8B,cAC9Bj5C,KAAK01C,OAAShP,GAAMnlC,EAAOsa,UAAWta,EAAOqa,UAAY,EAAG/Q,KAAKiB,MAAM6iC,GAAMsM,eAAehC,EAA8B,gBAG9Hj5C,KAAKs+B,QAAU/8B,EAAOoU,SAAShR,WAAiB,KAAEF,MAClD,MAAMy2C,EAAuBjC,EAA0B,SAAKA,EAAyB,OACrF,GAAuBtqB,MAAnBusB,EAA8B,CAE9B,MAAMC,EAAyC,CAAE,gBAAiB,QAAS,kBAAmB,UAAW,gBAAiB,SACpH7c,EAA+B/8B,EAAOoU,SAAShR,WAAWw2C,EAAmBR,KAAoBp5C,EAAOoU,SAAShR,WAAWu2C,GACnHvsB,MAAX2P,EACAt+B,KAAKs+B,QAAUA,EAAQ75B,MACC,UAAnBy2C,IACLl7C,KAAKs+B,QAAU/8B,EAAOoU,SAAS7S,QAE/B9C,KAAKs+B,SAAW/8B,EAAOoU,SAAS7S,QAChC9C,KAAKu+B,aAAe0a,EAA+B,aACnDj5C,KAAKy+B,aAAewa,EAA+B,aACnDj5C,KAAKw+B,aAAeya,EAA+B,aACnDj5C,KAAK0+B,YAAcua,EAA8B,cAGjDj5C,KAAKu+B,aAAeh9B,EAAOoU,SAAS3V,KAAKs+B,SAAS9wB,UAClDxN,KAAKw+B,aAAej9B,EAAOoU,SAAS3V,KAAKs+B,SAASzoB,WAAa,EAC/D7V,KAAKy+B,aAAe,GACpBz+B,KAAK0+B,YAAcn9B,EAAOoU,SAAS3V,KAAKs+B,SAAS1oB,MAIjD0oB,GAAW/8B,EAAOoU,SAAShR,WAAiB,OAC5C3E,KAAK8O,QAAuB,IAAZ9O,KAAK8O,QAE5B,CA4HD,GA1H+B6f,MAA3BsqB,EAAsB,IACtBj5C,KAAKq7B,IAAMqL,GAAM,EAAGnlC,EAAOsV,OAAS,EAAGhM,KAAKiB,MAAMvK,EAAOqV,WAAuC,EAA1BqiC,EAAsB,KAAS13C,EAAOqV,UAAY,MAErF+X,MAA5BsqB,EAAuB,KAE9Bj5C,KAAKq7B,IAAMqL,GAAM,EAAGnlC,EAAOsV,OAAS,EAAGtV,EAAOqV,WAAyC,GAA5BqiC,EAAuB,MAElFj5C,KAAKq7B,IAAM95B,EAAOqV,UAIlB5W,KAAKq7B,KAAO95B,EAAOqV,YACnB5W,KAAK8O,QAAuB,EAAZ9O,KAAK8O,SAGW6f,MAAhCsqB,EAA2B,SAC3Bj5C,KAAKs7B,SAA2C,EAA/B2d,EAA2B,SAE5Cj5C,KAAKs7B,SAAW,GAGc3M,MAA9BsqB,EAAyB,OACzBj5C,KAAK01C,OAAShP,GAAMnlC,EAAOsa,UAAWta,EAAOqa,UAAY,EAAiC,EAA7Bq9B,EAAyB,QAE9CtqB,MAAnCsqB,EAA8B,cACnCj5C,KAAK01C,OAASn0C,EAAOoa,cAGagT,MAAlCsqB,EAA6B,aAC7Bj5C,KAAK+8B,WAAa2J,GAAM,EAAGnlC,EAAOgc,gBAAiB1S,KAAKiB,OAAOvK,EAAOgc,gBAAkB,IAAuC,EAAjC07B,EAA6B,YAAS,OAG5FtqB,MAAxCsqB,EAAmC,mBACnCj5C,KAAK62C,eAAiBt1C,EAAOqc,oBAAsB,GAAMq7B,EAAmC,iBAAK13C,EAAOsc,sBAE1D8Q,MAA9CsqB,EAAyC,yBACzCj5C,KAAKk9B,uBAAyBwJ,GAAM,EAAGnlC,EAAOuc,4BAA6BjT,KAAKiB,OAAOvK,EAAOuc,4BAA8B,IAAmD,EAA7Cm7B,EAAyC,wBAAS,OAGrJtqB,MAA/BsqB,EAA0B,UAC1Bj5C,KAAKw2C,eAAiB9P,GAAM,EAAGnlC,EAAOyV,aAAcnM,KAAKiB,OAAOvK,EAAOyV,aAAe,IAAoC,EAA9BiiC,EAA0B,SAAS,OAE9FtqB,MAAjCsqB,EAA4B,YAC5Bj5C,KAAKy2C,iBAAmB/P,GAAM,EAAGnlC,EAAO0V,eAAgBpM,KAAKiB,OAAOvK,EAAO0V,eAAiB,IAAsC,EAAhCgiC,EAA4B,WAAS,OAErGtqB,MAAlCsqB,EAA6B,aAC7Bj5C,KAAK+2C,WAAakC,EAA6B,YAERtqB,MAAvCsqB,EAAkC,kBAClCj5C,KAAK02C,gBAAkBhQ,GAAM,EAAGnlC,EAAOkd,cAAc3b,OAAQm2C,EAAkC,kBAE3DtqB,MAApCsqB,EAA+B,eAC/Bj5C,KAAK22C,aAAejQ,GAAM,EAAGnlC,EAAO6Y,gBAAiBvP,KAAKiB,OAAOvK,EAAO6Y,gBAAkB,IAAyC,EAAnC6+B,EAA+B,cAAS,OAEtGtqB,MAAlCsqB,EAA6B,aAC7Bj5C,KAAK42C,WAAalQ,GAAM,EAAGnlC,EAAO4V,cAAetM,KAAKiB,OAAOvK,EAAO4V,cAAgB,IAAuC,EAAjC8hC,EAA6B,YAAS,OAI/FtqB,MAAjCsqB,EAA4B,YAC5Bj5C,KAAKm9B,UAAYuJ,GAAM,EAAGnlC,EAAOkQ,eAAgB5G,KAAKiB,OAAOvK,EAAOkQ,eAAiB,IAAsC,EAAhCwnC,EAA4B,WAAS,OAE9FtqB,MAAlCsqB,EAA6B,aAC7Bj5C,KAAKo9B,WAAasJ,GAAM,EAAGnlC,EAAOoQ,gBAAiB9G,KAAKiB,OAAOvK,EAAOoQ,gBAAkB,IAAuC,EAAjCsnC,EAA6B,YAAS,OAE9FtqB,MAAtCsqB,EAAiC,iBACjCj5C,KAAKq9B,eAAiBqJ,GAAM,EAAGnlC,EAAOmQ,oBAAqB7G,KAAKiB,OAAOvK,EAAOmQ,oBAAsB,IAA2C,EAArCunC,EAAiC,gBAAS,OAEhHtqB,MAApCsqB,EAA+B,eAC/Bj5C,KAAKs9B,aAAeoJ,GAAM,EAAGnlC,EAAOwQ,gBAAiBlH,KAAKiB,OAAOvK,EAAOwQ,gBAAkB,IAAyC,EAAnCknC,EAA+B,cAAS,OAGrGtqB,MAAnCsqB,EAA8B,cAC9Bj5C,KAAK+9B,YAAc2I,GAAM,EAAGnlC,EAAO0P,iBAAkBpG,KAAKiB,OAAOvK,EAAO0P,iBAAmB,IAAwC,EAAlCgoC,EAA8B,aAAS,OAElGtqB,MAAtCsqB,EAAiC,iBACjCj5C,KAAK82C,UAAYpQ,GAAM,EAAGnlC,EAAOwP,eAAgBlG,KAAKiB,OAAQmtC,EAAiC,gBAAM13C,EAAOiR,aAAejR,EAAOgR,cAAgBhR,EAAOyP,mBAAqB,KAG7Kg2B,MAAMiS,EAAyB,UAChCj5C,KAAK2+B,OAAS+H,GAAM,EAAGnlC,EAAOwV,YAAalM,KAAKiB,OAAOvK,EAAOwV,YAAc,IAAmC,EAA7BkiC,EAAyB,QAAS,OAGtFtqB,MAA9BsqB,EAAyB,OACzBj5C,KAAKu9B,OAASmJ,GAAM,EAAGnlC,EAAO+P,YAAazG,KAAKiB,OAAOvK,EAAO+P,YAAc,IAAmC,EAA7B2nC,EAAyB,QAAS,MAEpHj5C,KAAKu9B,OAASqc,EAEwBjrB,MAAtCsqB,EAAiC,iBACjCj5C,KAAK43C,eAAiBqB,EAAiC,gBAEjBtqB,MAAtCsqB,EAAiC,iBACjCj5C,KAAK63C,eAAiBoB,EAAiC,gBAErBtqB,MAAlCsqB,EAA6B,WAC7Bj5C,KAAKmL,WAAau7B,GAAM,EAAGnlC,EAAO6Y,gBAAkB,EAAGvP,KAAKiB,MAAMmtC,EAA6B,aAE/Fj5C,KAAKmL,WAAa5J,EAAO6Y,gBAAgB,EAGJuU,MAArCsqB,EAAgC,cAChCj5C,KAAKu7B,cAAgBmL,GAAM,EAAG,IAAQ77B,KAAKiB,MAAMmtC,EAAgC,gBAEjFj5C,KAAKu7B,cAAgB,EAGW5M,MAAhCsqB,EAA2B,SACpCj5C,KAAKo2C,iBAAmB1P,GAAM,EAAGnlC,EAAOgZ,oBAAsB,EAAG1P,KAAKiB,MAAMvK,EAAOgZ,qBAAsD,EAA/B0+B,EAA2B,UAAS,MAE9Ij5C,KAAKo2C,iBAAmB70C,EAAOgZ,oBAEEoU,MAA9BsqB,EAAyB,OAC5Bj5C,KAAKq2C,eAAiB3P,GAAM,EAAGnlC,EAAOiZ,kBAAoB,EAAG3P,KAAKiB,MAAMvK,EAAOiZ,mBAAkD,EAA7By+B,EAAyB,QAAS,MAEtIj5C,KAAKq2C,eAAiBxrC,KAAK6U,KAAKne,EAAOiZ,kBAAoB,GAE3BmU,MAA7BsqB,EAAwB,MAC3Bj5C,KAAKs2C,cAAgB5P,GAAM,EAAGnlC,EAAOkZ,iBAAmB,EAAG5P,KAAKiB,MAAMvK,EAAOkZ,kBAAgD,EAA5Bw+B,EAAwB,OAAS,MAElIj5C,KAAKs2C,cAAgB,EAGqB3nB,MAAjCsqB,EAA4B,UAAgB,CAC5C,IAAK,IAAI1uC,EAAY,EAAGA,EAAIhJ,EAAOuY,uBAAwBvP,IACvDvK,KAAKs3C,cAAcnZ,UAAU5zB,GAAKM,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI5L,EAAO2Y,aAAcrP,KAAKiB,MAAMvK,EAAO2Y,cAAiB++B,EAA4B,UAAE1uC,GAAM,OAEvJvK,KAAKs3C,cAAc7I,qBACtB,MACGzuC,KAAKs3C,cAAc5L,QAGvB,GAAoC/c,MAAhCsqB,EAA2B,SAC3B,IAAK,IAAI1uC,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDvK,KAAK+3C,aAAazJ,SAAS/jC,GAAKM,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI5L,EAAOsY,YAAahP,KAAKiB,MAAMvK,EAAOsY,aAAgBo/B,EAA2B,SAAE1uC,GAAM,OAC9IvK,KAAK+3C,aAAatJ,2BAGtBzuC,KAAK+3C,aAAarM,MAAMoB,GAGane,MAArCsqB,EAAgC,cAChCj5C,KAAKo+B,cAAgBsI,GAAM,EAAGnlC,EAAOic,mBAAoB3S,KAAKiB,OAAOvK,EAAOic,mBAAqB,IAA0C,EAApCy7B,EAAgC,eAAS,MAEhJj5C,KAAKo+B,cAAgB,GAEzBp+B,KAAKu2C,kBAAoBh1C,EAAOmc,sBAAwBnc,EAAOoc,iBAAiB8iB,QAAQwY,EAAoC,mBAAI,GAClG,GAA3Bj5C,KAAKu2C,oBAAyBv2C,KAAKu2C,kBAAiB,GAE1C,GAATv2C,KAAK4V,OACL5V,KAAK+0C,UAAYxzC,EAAOgK,WAAW6vC,WAAU/wC,GAAQA,EAAKlG,MAAQ80C,EAAuB,OACzD,cAA5BA,EAAuB,OAAmBj5C,KAAK+0C,UAAYxzC,EAAOgK,WAAW6vC,WAAU/wC,GAAqB,QAAbA,EAAKlG,QACxE,kBAA5B80C,EAAuB,OAAuBj5C,KAAK+0C,UAAYxzC,EAAOgK,WAAW6vC,WAAU/wC,GAAqB,YAAbA,EAAKlG,SACrF,GAAnBnE,KAAK+0C,YAAiB/0C,KAAK+0C,UAAY,IAG/C,MAAMsG,EAA0C,CAAElpB,OAAU,YAAampB,OAAU,OAAQ,UAAW,UAAW,UAAW,UAAW,UAAW,WAC5IC,EAAep3C,GACgBwqB,MAA7B0sB,EAAoBl3C,GAA2B5C,EAAO2X,UAAUvU,WAAW02C,EAAoBl3C,IAExF5C,EAAO2X,UAAUvU,WAAWR,GAI3C,GAAa,GAATnE,KAAK4V,MAC4B+Y,MAA7BsqB,EAAwB,MACxB,IAAK,IAAIpf,EAAY,EAAGA,EAAIt4B,EAAO2Z,UAAW2e,IAAK,CAC/C,MAAM2hB,EAAYvC,EAAwB,MAAEpf,GAC5C,GAAYlL,MAAR6sB,EAAJ,CAGA,GADAx7C,KAAKu3C,iBAAiB1d,GAAKt4B,EAAO2X,UAAUvU,WAAW,WAAWF,MACpCkqB,MAA1B6sB,EAAqB,eAAgB,CACrC,MAAMrf,EAAiCof,EAAYC,EAAqB,gBACxD7sB,MAAZwN,IAAuBn8B,KAAKu3C,iBAAiB1d,GAAKsC,EAAS13B,MAClE,CACD,GAAwBkqB,MAApB6sB,EAAe,SACf,IAAK,IAAIjxC,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDvK,KAAKw3C,qBAAqB3d,GAAGyU,SAAS/jC,GAAKM,KAAKiN,IAAI,EAAGjN,KAAKsC,IAAI5L,EAAOsY,YAAahP,KAAKiB,MAAMvK,EAAOsY,aAAgB2hC,EAAe,SAAEjxC,GAAM,OAGrJvK,KAAKw3C,qBAAqB3d,GAAG4U,qBAZN,CAa1B,CAIT,GAAa,GAATzuC,KAAK4V,KAA6B,CAClC,MAAM6lC,EAAsC,CAAEC,SAAY,EAAGC,OAAU,EAAG,aAAc,EAAG,eAAgB,EAAGC,SAAY,EAAG,aAAc,EAAG,eAAgB,EAAGC,MAAS,EAAGC,QAAW,GAC9KC,EAAsC,CAAE,YAAa,GAAI,eAAgB,GAAI,aAAc,GAAIC,IAAO,GAAIC,OAAU,GAAI,aAAc,GAAI,cAAe,GAAI,WAAY,GAAI,kBAAmB,GAAIC,MAAS,GAAIC,MAAS,GAAI,gBAAiB,GAAIC,KAAQ,GAAI,aAAc,GAAIC,QAAW,GAAIC,YAAe,GAAIC,SAAY,GAAI,iBAAkB,GAAI,mBAAoB,IAC9WC,EAAuC,CAAE,cAAe,GAAI,cAAe,GAAI,YAAa,GAAI,WAAY,GAAIC,UAAa,GAAI,eAAgB,GAAI,aAAc,GAAIC,SAAY,GAAI,aAAc,GAAI,cAAe,GAAI,aAAc,GAAI,cAAe,GAAIC,WAAc,GAAI,cAAe,IAC7SC,EAAsC,CAAC,cAAe,GAAI,cAAe,GAAIC,UAAa,GAAI,WAAY,GAAI,cAAe,GAAI,gBAAiB,GAAIC,OAAU,GAAIC,MAAS,GAAI,eAAgB,GAAI,aAAc,GAAG,aAAc,IACpOC,EAAoC,CAACC,MAAS,GAAI,kBAAmB,GAAI,mBAAoB,GAAI,iBAAkB,GAAI,YAAa,GAAI,YAAa,GAAI,gBAAiB,GAAIC,QAAW,GAAI,YAAa,GAAI,eAAgB,GAAI,aAAc,GAAI,cAAe,GAAI,SAAU,GAAI,SAAU,GAAI,aAAc,GAAI,uBAAwB,IAC7UC,EAA4C,CAACC,KAAQ,GAAIC,MAAS,GAAIC,OAAU,GAAIC,IAAO,GAAIC,UAAa,GAAIC,QAAW,GAAIC,UAAa,GAAIC,aAAgB,GAAI,kBAAmB,GAAIC,MAAS,GAAIC,YAAe,GAAI,UAAW,GAAIC,MAAS,GAAIC,gBAAmB,IAAKC,MAAS,IAAK,gBAAiB,IAAK,iBAAkB,IAAK,aAAc,IAAK,mBAAoB,IAAK,kBAAmB,IAAKC,KAAQ,IAAKC,cAAiB,IAAKC,aAAgB,IAAKC,cAAiB,IAAKC,YAAe,IAAKC,UAAa,IAAKC,UAAa,IAAKC,YAAe,IAAKC,QAAW,IAAK,YAAa,IAAKC,QAAW,IAAKC,UAAa,IAAKC,YAAe,KAGznB5+C,KAAKsB,UAAY,EACjB,MAAMu9C,EAAkB5F,EAAuB,KAC/C,IAAK,MAAM6F,IAAS,CAChBrD,EACAM,EACAS,EACAI,EACAI,EACAG,GAEA,IAAsB,GAAlBn9C,KAAKsB,UAAoCqtB,MAAlBmwB,EAAMD,IAA6DlwB,MAApCptB,EAAOC,UAAUs9C,EAAMD,IAAwB,CACrG7+C,KAAKsB,SAAWw9C,EAAMD,GACtB,KACH,CAEL,IAAsB,GAAlB7+C,KAAKsB,SAAgB,CACrB,MAAMy9C,EAAiCx9C,EAAOC,UAAU45C,WAAU/wC,GAAQA,EAAKlG,MAAQ06C,KACxD,GAA3BE,IAA8B/+C,KAAKsB,SAAWy9C,EACrD,EAEW,GAAlB/+C,KAAKsB,WAAgBtB,KAAKsB,SAAW,EAClC,CAED,GAAa,GAATtB,KAAK4V,MAAsC,IAAT5V,KAAK4V,KAA8B,CACrE,GAAY,GAAT5V,KAAK4V,KACJ5V,KAAKy7B,UAAYl6B,EAAOgX,WAAW6iC,WAAU3f,GAAaA,EAAUt3B,MAAQ80C,EAA4B,aACjF,GAAnBj5C,KAAKy7B,YAAiBz7B,KAAKy7B,UAAY,GAC3Cz7B,KAAK07B,aAAen6B,EAAO8X,UAAU+hC,WAAUjZ,GAAYA,EAASh+B,MAAQ80C,EAA+B,gBACjF,GAAtBj5C,KAAK07B,eAAoB17B,KAAK07B,aAAe,QAWjD,GATA17B,KAAKg3C,aAAez1C,EAAOoX,cAAcyiC,WAAUpE,GAAgBA,EAAa7yC,MAAQ80C,EAA4B,aAC1F,GAAtBj5C,KAAKg3C,eAAoBh3C,KAAKg3C,aAAe,GACzB,GAArBh3C,KAAKg3C,aACJh3C,KAAKk3C,gBAAgBlzC,IAAIi1C,EAAkC,gBAAgB,aAAGA,EAAkC,gBAAQ,MAExHj5C,KAAKk3C,gBAAgBlJ,WAAWhuC,KAAKg3C,cAEzCh3C,KAAKi3C,gBAAkB11C,EAAOgY,aAAa6hC,WAAU4D,GAAeA,EAAY76C,MAAQ80C,EAA+B,gBAE1F,GAAzBj5C,KAAKi3C,gBAAuB,CAE5B,IAAIgI,EAAgDxwC,EAAU,CAC1D,CAAEtK,KAAM,QAASmV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,KACjD,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACrD,CAAEnV,KAAM,WAAYmV,QAAS,CAAC,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,KACrD,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAEnV,KAAM,MAAOmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,KACjD,CAAEnV,KAAM,QAASmV,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,KACjD,CAAEnV,KAAM,UAAWmV,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACpD,CAAEnV,KAAM,YAAamV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACxD,CAAEnV,KAAM,cAAemV,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,OAG1D4lC,EAAuBD,EAAwBA,EAAwB7D,WAAUjZ,GAAYA,EAASh+B,MAAQ80C,EAA+B,gBAAK3/B,QAE1HqV,MAAxBuwB,GACAl/C,KAAKi3C,gBAAkB,EACvBj3C,KAAKm3C,mBAAmBnzC,IAAIk7C,IAG5Bl/C,KAAKi3C,gBAAkB,CAE9B,CAGwB,GAAxBj3C,KAAKi3C,iBAAgEtoB,MAAtCsqB,EAAiC,eACjEj5C,KAAKm3C,mBAAmBnzC,IAAIi1C,EAAiC,eAAQ,MAErEj5C,KAAKm3C,mBAAmBnJ,WAAWhuC,KAAKi3C,iBAECtoB,MAAzCsqB,EAAoC,kBACpCj5C,KAAK27B,kBAAoB+K,GAAM,EAAGnlC,EAAOsX,qBAAuB,EAA2C,EAAxCogC,EAAoC,mBAEvGj5C,KAAK27B,kBAAoB,EAG7B,IAAK,IAAI9B,EAAY,EAAGA,EAAIt4B,EAAO8W,eAA0B,IAATrY,KAAK4V,KAA6B,EAAE,GAAIikB,IAAK,CAC7F,MAAM2f,EAAqBx5C,KAAK47B,UAAU/B,GAC1C,IAAIslB,EAWJ,GAVqCxwB,MAAjCsqB,EAA4B,YAAgBkG,EAAiBlG,EAA4B,UAAEpf,IACzElL,MAAlBwwB,IAA6BA,EAAiB,IAElD3F,EAAS3d,UAAYt6B,EAAOuX,oBAAoBsiC,WAAUjL,GAAQA,EAAKhsC,MAAQg7C,EAA0B,aAC9E,GAAvB3F,EAAS3d,YAAiB2d,EAAS3d,UAAY,GAChBlN,MAA/BwwB,EAA0B,UAC1B3F,EAAShsC,UAAYk5B,GAAM,EAAGnlC,EAAOsX,qBAAuB,EAAiC,EAA9BsmC,EAA0B,WAEzF3F,EAAShsC,UAAY,EAESmhB,MAA9BwwB,EAAyB,SAAgB,CAEzC,GAAc,WAAVpS,GAAuBlT,EAAI,EAAG,CAC9B2f,EAAS1d,SAAW,EACpB,QACF,CACF0d,EAAS1d,SAAWv6B,EAAOkd,cAAc28B,WAAU/wC,GAAQA,EAAKlG,MAAQg7C,EAAyB,YACvE,GAAtB3F,EAAS1d,WAEyB,UAA9BqjB,EAAyB,UACzB3F,EAAS1d,SAAWv6B,EAAOkd,cAAc9Z,WAAW,eAAeF,MACnE+0C,EAASruC,WAAa,GACe,WAA9Bg0C,EAAyB,SAChC3F,EAAS1d,SAAWv6B,EAAOkd,cAAc9Z,WAAW,cAAcF,MAElE+0C,EAAS1d,SAAW,EAI/B,MACG0d,EAAS1d,SAAW,EAEYnN,MAAhCwwB,EAA2B,WAC3B3F,EAASruC,WAA4C,EAA/Bg0C,EAA2B,WAEjD3F,EAASruC,WAAa,CAE7B,CACJ,MACI,GAAa,GAATnL,KAAK4V,MACV,GAAIqjC,EAAiC,eAAG,CAEpC,IAAK,IAAI1uC,EAAY,EAAGA,EAAI,GAAIA,IAC5BvK,KAAKo3C,eAAe7sC,GAAK0uC,EAAiC,eAAE1uC,GAIhE,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDD,GAAOtK,KAAKo3C,eAAe7sC,GAE/B,MAAMC,EAAkBF,EAAMtK,KAAKo3C,eAAet0C,OAGlD,IAAIkI,EAAqB,EACrBgtC,EAAmB,EACvB,IAAK,IAAIztC,EAAY,EAAGA,EAAIvK,KAAKo3C,eAAet0C,OAAQyH,IACpDS,GAAcgtC,EACdA,EAAWh4C,KAAKo3C,eAAe7sC,GAAKC,EACpCxK,KAAKq3C,uBAAuB9sC,GAAKS,EAIrChL,KAAKq3C,uBAAuB,IAAM,CACrC,OACE,GAAa,IAATr3C,KAAK4V,MAC2B+Y,MAAnCsqB,EAA8B,YAC9B,IAAK,IAAInN,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAC7C9rC,KAAK4jB,YAAYkoB,GAAOmN,EAA8B,YAAEnN,GACxD9rC,KAAKy3C,eAAe3L,GAAOmN,EAAiC,eAAEnN,GAC9D9rC,KAAKif,WAAW6sB,GAAOmN,EAA8B,YAAEnN,GAEbnd,MAAtCsqB,EAAiC,gBACStqB,MAA1CsqB,EAAqC,qBACzCj5C,KAAK03C,mBAAmB5L,GAAOmN,EAAqC,mBAAEnN,IACtE9rC,KAAKisC,eAAeH,GAAOmN,EAAiC,eAAEnN,GAK1E,GAAa,IAAT9rC,KAAK4V,KAA4B,CAE7B5V,KAAK66B,OAASt5B,EAAOwW,OAAOpT,WAAqB,SAAEF,OAA8CkqB,MAArCsqB,EAAgC,cAC5Fj5C,KAAKi2C,cAAgBgD,EAAgC,cAGrDj5C,KAAKi2C,cAAgB,EAAoB,EAAI,GAGPtnB,MAAtCsqB,EAAiC,eACjCj5C,KAAKk2C,eAAiB+C,EAAiC,eAGvDj5C,KAAKk2C,eAAiB7nC,EAGqBsgB,MAA3CsqB,EAAsC,oBACtCj5C,KAAKu8B,oBAAsB0c,EAAsC,oBAGjEj5C,KAAKu8B,qBAAsB,EAGI5N,MAA/BsqB,EAA0B,QAC1Bj5C,KAAKg9B,QAAUic,EAA0B,QAI/B,UAAVlM,GACA/sC,KAAK8O,QAAuB,EAAZ9O,KAAK8O,QACrB9O,KAAKg9B,SAAU,EACfh9B,KAAK+8B,WAAa,GAElB/8B,KAAKg9B,SAAU,EAIuBrO,MAAtCsqB,EAAiC,iBACjCj5C,KAAK08B,eAAiBuc,EAAiC,gBAElBtqB,MAArCsqB,EAAgC,gBAChCj5C,KAAKk1C,oBAAsB+D,EAAgC,eAErBtqB,MAAtCsqB,EAAiC,iBACjCj5C,KAAKm1C,qBAAuB8D,EAAiC,gBAE3BtqB,MAAlCsqB,EAA6B,WAC7Bj5C,KAAK68B,WAAW+P,eAAeqM,EAA6B,YAE5Dj5C,KAAK68B,WAAW6O,QAEpB,IAAK,IAAInhC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IAC7C9H,MAAM8d,QAAQ04B,EAAiB,iBAAmB1uC,MAClDvK,KAAKq1C,eAAe9qC,GAAK,IAAIonC,GAC7B3xC,KAAKq1C,eAAe9qC,GAAIqiC,eAAeqM,EAAiB,iBAAmB1uC,KAYnF,GATwCokB,MAApCsqB,EAA+B,eAC/Bj5C,KAAKg7B,aAAeie,EAA+B,cAEhBtqB,MAAnCsqB,EAA8B,cAC9Bj5C,KAAKg1C,kBAAoBiE,EAA8B,aAEnBtqB,MAApCsqB,EAA+B,eAC/Bj5C,KAAKi1C,mBAAqBgE,EAA+B,cAEzDx2C,MAAM8d,QAAQ04B,EAA2B,UACzCj5C,KAAK06B,SAASkS,eAAeqM,EAA2B,cACrD,CACHj5C,KAAK06B,SAASgR,QAEd,MAAMwM,EAAiC,GAGjCkH,EAA4B,IAC5BC,EAA4B,GAC5BC,EAA+B,EAerC,GAd0C3wB,MAAtCsqB,EAAiC,eACjCf,EAAeE,aAAe1R,GAAM,EAAG2Y,EAAmBx0C,KAAKiB,MAAOuzC,EAAoB,EAAK,EAAMx0C,KAAKT,KAA0C,EAArC6uC,EAAiC,gBAASmG,GAAqBv0C,KAAK00C,MAEnLrH,EAAeE,aAAyB,GAATp4C,KAAK4V,KAA+B,EAAI,GAEhC+Y,MAAvCsqB,EAAkC,gBAClCf,EAAehW,gBAAkBwE,GAAM,EAAG4Y,EAAsBz0C,KAAKiB,OAAOwzC,EAAuB,IAA4C,EAAtCrG,EAAkC,iBAAS,MAEpJf,EAAehW,gBAAkB,EAGrCgW,EAAeI,eAAiBiD,EAAYtC,EAAiC,gBAC7Ef,EAAeM,cAAgB+C,EAAYtC,EAAgC,eAC3Ef,EAAeU,iBAAmB2C,EAAYtC,EAAmC,kBAC7Ex2C,MAAM8d,QAAQ04B,EAA4B,WAAI,CAC9Cf,EAAeQ,kBAAoB,GACnC,IAAK,IAAI7e,EAAY,EAAGA,EAAIt4B,EAAO8W,eAA0B,IAATrY,KAAK4V,KAA6B,EAAE,GAAIikB,IAAK,CAC7F,IAAIsC,EACoCxN,MAApCsqB,EAA4B,UAAEpf,KAC9BsC,EAAWof,EAAYtC,EAA4B,UAAEpf,GAAa,WAEtEqe,EAAeQ,kBAAkB7e,GAAkBlL,MAAZwN,EAAyBA,EAAW56B,EAAO2X,UAAUvU,WAAiB,IAChH,CACJ,CAGD,GAAkCgqB,MAA9BsqB,EAAyB,OAAgB,CACzC,MAAMuG,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CC,EAA6B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,UAAW,WACpFC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAC7FC,EAAqC,CAAE,gBAAiB,EAAG,iBAAkB,EAAG,eAAgB,EAAG,cAAe,GACxH,IAAIhM,EAAqEhlB,MAA9CgxB,EAAe1G,EAAyB,QAAkB0G,EAAe1G,EAAyB,QAAKyG,EAAYjf,QAAQwY,EAAyB,SAC1J,GAAjBtF,IAAoBA,EAAe,GACvCuE,EAAeE,aAAeoH,EAAe7L,GAC7CuE,EAAeI,eAAiBiD,EAAYkE,EAAiB9L,IAC7DuE,EAAehW,gBAAkB,CACpC,CAEDliC,KAAKwyC,sBAAsB0F,GAAgB,EAC9C,CAED,IAAK,IAAI3tC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IAC7C9H,MAAM8d,QAAQ04B,EAAiB,eAAiB1uC,MAChDvK,KAAKo1C,aAAa7qC,GAAK,IAAIonC,GAC3B3xC,KAAKo1C,aAAa7qC,GAAIqiC,eAAeqM,EAAiB,eAAiB1uC,KAI/E,GAAI9H,MAAM8d,QAAQ04B,EAA4B,WAAI,CAC9C,MAAM2G,EAAuB3G,EAA4B,UACzD,IAAK,IAAI1uC,EAAI,EAAGA,EAAIq1C,EAAc98C,UAC1B9C,KAAKw1C,eAAiBj0C,EAAOwc,kBADKxT,IAAK,CAE3C,MAAMs1C,EAAiC,IAAIxL,GAAiBr0C,KAAK83C,mBAGjE,IAAIrD,EAQAC,EAQAoL,EAlBJD,EAAajT,eAAegT,EAAcr1C,GAAIwiC,GAI1C0H,EAD0C9lB,MAA1CsqB,EAAqC,oBAA4D,MAA1CA,EAAqC,mBACvEA,EAAqC,mBACLtqB,MAA9CsqB,EAAiB,qBAAuB1uC,IAAiEokB,MAA9CsqB,EAAiB,qBAAuB1uC,GACrF0uC,EAAiB,qBAAuB1uC,GAExCs1C,EAAapL,mBAIlCC,EADwC/lB,MAAxCsqB,EAAmC,kBAA0D,MAAxCA,EAAmC,iBACrEA,EAAmC,iBACHtqB,MAA5CsqB,EAAiB,mBAAqB1uC,IAA+D,MAA5C0uC,EAAiB,mBAAqB1uC,GACnF0uC,EAAiB,mBAAqB1uC,GAEtCs1C,EAAanL,iBAIhCoL,EAD2CnxB,MAA3CsqB,EAAiB,kBAAoB1uC,IAA8D,MAA3C0uC,EAAiB,kBAAoB1uC,GAC3E0uC,EAAiB,kBAAoB1uC,GACJokB,MAA5CsqB,EAAuC,sBAA8D,MAA5CA,EAAuC,sBAA6D,SAAhD13C,EAAO2X,UAAU2mC,EAAa1jB,UAAUh4B,KAC1I80C,EAAuC,qBAEvC4G,EAAa3xC,QAEnClO,KAAKg5C,YAAY6G,EAAa3jB,OAAQ2jB,EAAap7C,MAAOo7C,EAAa1jB,UAAU,EAAMsY,EAAoBC,EAAkBoL,EAAiBD,EAAazjB,iBAAkByjB,EAAaxjB,sBAAuBwjB,EAAavjB,sBAAuBujB,EAAarL,MAAOqL,EAAaja,KAAMia,EAAa/jB,SAC5S,CACJ,CACJ,CAEgB,IAATlmB,IACuD+Y,MAAnDsqB,EAA8C,6BAC9Cj5C,KAAKw9B,4BAA8Byb,EAA8C,4BACjFj5C,KAAKy9B,kBAAoBwb,EAAoC,kBAC7Dj5C,KAAK09B,gBAAkBub,EAAkC,gBACzDj5C,KAAK29B,iBAAmBsb,EAAmC,iBAC3Dj5C,KAAK49B,sBAAwBqb,EAAwC,sBACrEj5C,KAAK69B,oBAAsBob,EAAsC,sBAEjEj5C,KAAKw9B,6BAA8B,EACnCx9B,KAAKy9B,kBAAoB,EACzBz9B,KAAK09B,gBAAkBn8B,EAAOK,gBAAgB5B,KAAKsB,UAAUiB,QAAQO,OAAS,EAC9E9C,KAAK29B,iBAAmB,EACxB39B,KAAK49B,uBAAwB,EAC7B59B,KAAK69B,oBAAsB,G,CAMhC,2BAAAkiB,CAA4BC,GACnC,IAAIC,EACJ,GAAID,EAAe,CACfC,EAAUjgD,KAAK68B,WAAWgV,kBAC1B,IAAK,IAAItnC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IACnB,MAA1BvK,KAAKq1C,eAAe9qC,IAAcvK,KAAKq1C,eAAe9qC,GAAIsnC,kBAAoBoO,IAC9EA,EAAUjgD,KAAKq1C,eAAe9qC,GAAIsnC,kBAE7C,KACI,CACDoO,EAAUjgD,KAAK06B,SAASmX,kBACxB,IAAK,IAAItnC,EAAY,EAAGA,EAAIhJ,EAAOuT,iBAAkBvK,IACrB,MAAxBvK,KAAKo1C,aAAa7qC,IAAcvK,KAAKo1C,aAAa7qC,GAAIsnC,kBAAoBoO,IAC1EA,EAAUjgD,KAAKo1C,aAAa7qC,GAAIsnC,kBAE3C,CACD,OAAOoO,C,CAGJ,yBAAOC,CAAmBhW,GAC7B,OAAO,IAAQr/B,KAAKmB,IAAI,GAAMk+B,EAAQ,IAAQ,G,CAG3C,WAAA8O,CAAY9c,EAAgBz3B,EAAe03B,EAAkB/iB,EAAuB2rB,EAAgB,EAAGC,GAAc,EAAI92B,GAAmB,EAAOkuB,GAA2B,EAAIC,EAAgC,EAAGC,EAAgC,EAAGkY,EAAgB,EAAG5O,EAAe,EAAG9J,EAAqC,GACrUkJ,GAAc,GAARA,EAAYA,EAAMhlC,KAAK83C,kBAAoBv2C,EAAO2Z,UAAY,EAAI3Z,EAAO8Z,SAC/E+gB,GAAwC,GAArBA,EAAyBA,EAAmBhjB,EAAe,EAAI7X,EAAO2X,UAAUijB,GAAUhjB,MAC7G,IAAIgnC,GAAqB,EAEzB,GADKngD,KAAKogD,uBAAuBlkB,EAAQz3B,KAAQ07C,GAAY,GACzDngD,KAAKw1C,eAAiBj0C,EAAOwc,iBAAkB,MAAM,IAAI3b,MAC7D,KAAOpC,KAAKkZ,UAAUpW,QAAU9C,KAAKw1C,eAAex1C,KAAKkZ,UAAUlZ,KAAKkZ,UAAUpW,QAAU,IAAIuxC,GAAiBr0C,KAAK83C,mBACtH,MAAMuI,EAAqCrgD,KAAKkZ,UAAUlZ,KAAKw1C,eAC/D6K,EAAiBnkB,OAASikB,EAAY5+C,EAAO0c,4BAA4BtZ,WAAiB,KAAEF,MAAQy3B,EACpGmkB,EAAiB57C,MAAQ07C,EAAY,EAAI17C,EAIrC47C,EAAiBlkB,SAHhB/iB,EAG2B+iB,EAFAuK,GAAM,EAAGnlC,EAAO6X,aAAatW,OAAQvB,EAAO2X,UAAUijB,GAAUvmB,MAIhGyqC,EAAiB5L,mBAAqB1P,EACtCsb,EAAiB3L,iBAAmB1P,EACpCqb,EAAiBnyC,QAAUA,EAC3BmyC,EAAiBjkB,iBAAmBA,EACpCikB,EAAiBhkB,sBAAwBA,EACzCgkB,EAAiB/jB,sBAAwBA,EACzC+jB,EAAiB7L,MAAQA,EACzB6L,EAAiBza,KAAOA,EACxBya,EAAiBvkB,SAAWA,EAC5B97B,KAAKw1C,e,CAGF,sBAAA4K,CAAuBlkB,EAAgBz3B,GAC1C,MAAM67C,EAAqC/+C,EAAO0c,4BAA4Bie,GAC9E,GAAqC,MAAjCokB,EAAiBpiC,cAAiD,QAAzBoiC,EAAiBn8C,KACnE,OAAO,EAEF,GAAIM,GAAS67C,EAAiBhiC,SAC1B,OAAO,EAEX,GAA8C,MAA1CgiC,EAAiB9hC,wBAA+F,GAA9D8hC,EAAiB9hC,sBAAsBiiB,QAAQzgC,KAAK4V,MACtG,OAAO,EAEX,GAA+B,MAA3B0qC,EAAiB/hC,QAAqE,IAAlDve,KAAK8O,QAAW,GAAKwxC,EAAiB/hC,QAC1E,OAAO,EAEX,GAAI+hC,EAAiBjiC,SAAU,CAE3B,IAAIkiC,EAA+BvgD,KAAK68B,WAAWgV,kBAGnD,GAFI7xC,KAAK08B,iBACL6jB,EAAuB,GACvB97C,GAAS87C,EAAsB,OAAO,CAI7C,CACD,MAA8B,qBAAzBD,EAAiBn8C,MAA0D,qBAAzBm8C,EAAiBn8C,QAChEM,GAAS,GAAsC,IAAjCzE,KAAK4V,KAA+B,EAAI,G,CAK3D,2BAAA4qC,GACH,IAAK,IAAIC,EAAwB,EAAGA,EAAgBzgD,KAAKw1C,cAAeiL,IAAiB,CACrF,MAAMvkB,EAAiBl8B,KAAKkZ,UAAUunC,GAAevkB,OAC/Cz3B,EAAgBzE,KAAKkZ,UAAUunC,GAAeh8C,MAC/CzE,KAAKogD,uBAAuBlkB,EAAQz3B,KACrCzE,KAAKkZ,UAAUunC,GAAevkB,OAAS36B,EAAO0c,4BAA4BtZ,WAAiB,KAAEF,MAC7FzE,KAAKkZ,UAAUunC,GAAeh8C,MAAQ,EAE7C,C,CAGE,aAAAi8C,GACH,OAAO7xC,EAAyB7O,KAAK8O,SAAWvN,EAAO8T,YAAYrV,KAAK26B,YACpC,IAA/B36B,KAAK4V,KAA6BrU,EAAO8T,YAAY1Q,WAAsB,UAAIpD,EAAO8T,YAAY1Q,WAAmB,M,CAGvH,gBAAAg8C,GACH,OAAiB,GAAT3gD,KAAK4V,KAAkC,EAAM+4B,GAAMyK,uBAAuBp5C,KAAKs1C,O,CAGpF,eAAAsL,GACH,OAAiB,GAAT5gD,KAAK4V,KAAkCrU,EAAO6T,oBAAsBu5B,GAAM0K,sBAAsBr5C,KAAKu1C,Q,CAG1G,QAAA2D,GACH,OAAOnqC,EAAoB/O,KAAK8O,SAAWvN,EAAOwW,OAAO/X,KAAK66B,OAASt5B,EAAOwW,OAAOpT,WAAyB,Y,CAG3G,kBAAA20C,CAAmBpP,GACtB,GAAuC,GAAnClqC,KAAK4V,KAAgC,MAAM,IAAIxT,MAAM,+CACzD,OAAOb,EAAO2X,UAAUlZ,KAAKu3C,iBAAiBrN,G,QAIzC2W,GAAb,WAAA9gD,GACWC,KAAMsoC,OAAW,EACRtoC,KAAWurC,YAAiB,GAC5BvrC,KAAQ8gD,SAAc,GACtB9gD,KAAI+gD,KAAa,GAC1B/gD,KAAKghD,OAAY,EACjBhhD,KAAImE,KAAW,E,QAGb88C,GA2DT,WAAAlhD,CAAYmhD,GAnCLlhD,KAAWmhD,YAAc,GAIzBnhD,KAAQohD,SAAW,EAaVphD,KAAQqhD,SAAc,GAC/BrhD,KAAUshD,WAAW,EACrBthD,KAASuhD,UAAW,IACpBvhD,KAAoBwhD,qBAAW,EAC/BxhD,KAAcyhD,eAAW,EACzBzhD,KAAgB0hD,iBAAW,EAC3B1hD,KAAU2hD,WAAW,EACrB3hD,KAAU4hD,WAAW,EACrB5hD,KAAW6hD,YAAW,EACtB7hD,KAAY8hD,aAAW,EACvB9hD,KAAA06B,SAA2B,IAAIiX,GAC/B3xC,KAAYg7B,cAAY,EACxBh7B,KAAAg1C,kBAA4BzzC,EAAOwT,qBAAuB,EAC1D/U,KAAkBi1C,mBAAW,EAC7Bj1C,KAAYo1C,aAA8B,GAa1Cp1C,KAAgB+hD,iBAAG,CAACC,EAAgBC,EAAqBC,EAAwB9mC,KACpF,GAAK4mC,GAAuBrzB,MAAdszB,GAA4CtzB,MAAjBuzB,GAA0CvzB,MAAZvT,EAElE,CAEDA,EAAW7Z,EAAO6Z,SAAWA,EAAW,EAExC,IAAI+mC,EAA0B5gD,EAAO0d,WAAWjf,KAAKqhD,SAASY,GAAY1W,YAAY2W,GAAejjC,WAAW7D,IAAWgE,WAGvHgjC,EAAqB7gD,EAAO0d,WAAWta,WAAkB,MAAEF,MAK/D,OAJIzE,KAAKqhD,SAASY,GAAY1W,YAAY2W,GAAejjC,WAAW7D,IAAagnC,IAC7ED,EAAMniD,KAAKqiD,MAAQ9gD,EAAO0d,WAAWmjC,GAAY9iC,mBAG1CqP,MAAPwzB,EACOA,EAEA,CACd,CAjBG,OAAO,CAiBV,EAIEniD,KAAYsiD,aAAG,CAACN,EAAgBC,EAAqBC,EAAwB9mC,KAChF,GAAK4mC,GAAuBrzB,MAAdszB,GAA4CtzB,MAAjBuzB,GAA0CvzB,MAAZvT,EAElE,CAEDA,EAAW7Z,EAAO6Z,SAAWA,EAAW,EAExC,IAAI4b,EAAyBh3B,KAAKqhD,SAASY,GAAY1W,YAAY2W,GAC/DK,EAAYhhD,EAAO0d,WAAW+X,EAAW/X,WAAW7D,IACpDonC,EAA0BD,EAAUpjC,UAExC,OAAWwP,MAAP6zB,GAEsB,aAAlBD,EAAUp+C,MAAyC,eAAlBo+C,EAAUp+C,OAI3Cq+C,EAAMjhD,EAAOuT,iBAAmB,EAC5BkiB,EAAWiV,eAAe7wB,GAAY,GAAK4b,EAAWiV,eAAe7wB,GAAY,EACjFonC,EAAMjhD,EAAO6S,gBACN4iB,EAAWiV,eAAe7wB,GAAY,IAC7ConC,EAAMjhD,EAAOkT,kBAGd+tC,GAGA,CACd,CA1BG,OAAO,CA0BV,EAGExiD,KAAsBgsC,uBAAG,CAACgW,EAAgBS,EAAoBC,KACjE,GAAKV,EAEA,CACD,IAAIQ,EAA0BjhD,EAAO0d,WAAWwjC,GAAYtjC,UAC5D,OAAWwP,MAAP6zB,GAGkB7zB,MAAd+zB,GAAkE,aAAtCnhD,EAAO0d,WAAWwjC,GAAYt+C,MAA6D,eAAtC5C,EAAO0d,WAAWwjC,GAAYt+C,OAI/Gq+C,EAAMjhD,EAAOuT,iBAAmB,EAC5B4tC,EAAa,GAAKA,EAAa,EAC/BF,EAAMjhD,EAAO6S,gBACNsuC,EAAa,IACpBF,EAAMjhD,EAAOkT,kBAId+tC,GAGAjhD,EAAOkV,WACrB,CAtBG,OAAOlV,EAAOkV,WAsBjB,EAtFakY,MAAVuyB,EACAlhD,KAAK2iD,iBAAiBzB,GAEtBlhD,KAAK4iD,eAAc,E,CAsFpB,eAAAC,GACH,OAAO7iD,KAAKspB,kBAAoBtpB,KAAK+qB,kBAAoB/qB,KAAK8iD,e,CAG3D,2BAAAC,GACH,OAAOl4C,KAAKiN,IACR9X,KAAKgjD,mBAAqBzhD,EAAO8Q,0BAA4B9Q,EAAO6Q,mBACpEpS,KAAK2sC,mBAAqBprC,EAAO+Q,0BAA4B/Q,EAAO6Q,mB,CAGrE,2BAAA6wC,CAA4BC,GAC/B,OAAOljD,KAAKktC,sCAAsCltC,KAAKqhD,SAAS6B,G,CAG7D,qCAAAhW,CAAsC5pB,GACzC,OAAOtjB,KAAKgjD,mBACNn4C,KAAKsC,IAAI5L,EAAO8Q,0BAA2BiR,EAAQioB,YAAYzoC,QAC/D,C,CAGH,iBAAAqgD,CAAkBD,GACrB,OAAQA,GAAgBljD,KAAKspB,mBAAqB45B,EAAeljD,KAAKspB,kBAAoBtpB,KAAK+qB,iB,CAG5F,eAAAq4B,CAAgBF,GACnB,OAAQA,GAAgBljD,KAAKspB,kBAAoBtpB,KAAK+qB,iB,CAGnD,aAAA63B,CAAcS,GAA4B,GAyB7C,GAxBArjD,KAAKsjD,MAAQ,EACbtjD,KAAKmhD,YAAc,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAE3FnhD,KAAK8T,IAAM,EACX9T,KAAKsoC,OAAS,EACdtoC,KAAKujD,UAAY,EACjBvjD,KAAKwjD,WAAa,EAClBxjD,KAAKqiD,MAAQ,IACbriD,KAAKohD,SAAW,EAChBphD,KAAKu9B,OAAS,EACdv9B,KAAKotC,YAAc,EACnBptC,KAAKyjD,SAAW,GAChBzjD,KAAK0jD,mBAAqB,EAC1B1jD,KAAKqsC,OAAS,EACdrsC,KAAKgjD,oBAAqB,EAC1BhjD,KAAK2sC,oBAAqB,EAE1B3sC,KAAK2jD,MAAQ,WACb3jD,KAAK4jD,OAAS,GACd5jD,KAAK6jD,YAAc,GACnB7jD,KAAK8jD,iBAAkB,EACvBtgD,SAASmgD,MAAQ3jD,KAAK2jD,MAAQ,MAAQ3tB,GAAaiE,mBACnDj6B,KAAK+jD,aAAe,OAEhBV,EAAkB,CAClBrjD,KAAKspB,kBAAoB,EACzBtpB,KAAK+qB,kBAAoB,EACzB/qB,KAAK8iD,gBAAkB,EACvB,IAAK,IAAII,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,MAAMpW,EAA0BoW,GAAgBljD,KAAKspB,mBAAqB45B,EAAeljD,KAAKspB,kBAAoBtpB,KAAK+qB,kBACjH6gB,EAAwBsX,GAAgBljD,KAAKspB,kBAAoBtpB,KAAK+qB,kBACxE/qB,KAAKqhD,SAASv+C,QAAUogD,IACxBljD,KAAKqhD,SAAS6B,GAAgB,IAAIrC,IAEtC,MAAMv9B,EAAmBtjB,KAAKqhD,SAAS6B,GACvC5/B,EAAQglB,OAASz9B,KAAKiN,IAAI,EAAIorC,EAAc,GAE5C,IAAK,IAAIc,EAAkB,EAAGA,EAAUhkD,KAAK0jD,mBAAoBM,IACzD1gC,EAAQw9B,SAASh+C,QAAUkhD,EAC3B1gC,EAAQw9B,SAASkD,GAAW,IAAI3Y,GAEhC/nB,EAAQw9B,SAASkD,GAAStY,QAGlCpoB,EAAQw9B,SAASh+C,OAAS9C,KAAK0jD,mBAE/B,IAAK,IAAI1sB,EAAqB,EAAGA,EAAaz1B,EAAO6Q,mBAAoB4kB,IACjE1T,EAAQioB,YAAYzoC,QAAUk0B,IAC9B1T,EAAQioB,YAAYvU,GAAc,IAAI8d,GAAWhI,EAAgBlB,IAErEtoB,EAAQioB,YAAYvU,GAAYihB,gBAAgBrM,EAAkC,GAAGkB,EAAgB,EAAuB,EAAuBA,EAAgBlB,GAEvKtoB,EAAQioB,YAAYzoC,OAASvB,EAAO6Q,mBAEpC,IAAK,IAAI6xC,EAAc,EAAGA,EAAMjkD,KAAKyjD,SAAUQ,IAC3C3gC,EAAQy9B,KAAKkD,GAAOA,EAAM,EAAI,EAAI,EAEtC3gC,EAAQy9B,KAAKj+C,OAAS9C,KAAKyjD,QAC9B,CACDzjD,KAAKqhD,SAASv+C,OAAS9C,KAAK6iD,iBAC/B,C,CAGE,cAAAqB,GACH,IAAIC,EACAte,EAAmB,GAEvBA,EAAOp7B,KAAKw2C,GAAKmD,GAEtBve,EAAOp7B,KAAK28B,GAAoB6Z,GAAKoD,IAGhCxe,EAAOp7B,KAAI,IACX,IAAI65C,EAA2BC,mBAAmBvkD,KAAK2jD,OACvD9d,EAAOp7B,KAAK28B,GAAoBkd,EAAiBxhD,QAAU,GAAIskC,GAA8C,GAA1Bkd,EAAiBxhD,SAGpG,IAAK,IAAIyH,EAAY,EAAGA,EAAI+5C,EAAiBxhD,OAAQyH,IACjDs7B,EAAOp7B,KAAK65C,EAAiB7c,WAAWl9B,IAI5C,IAAIi6C,EAA6BD,mBAAmBvkD,KAAK4jD,QACzD/d,EAAOp7B,KAAK28B,GAAoBod,EAAmB1hD,QAAU,GAAIskC,GAAgD,GAA5Bod,EAAmB1hD,SAExG,IAAK,IAAIyH,EAAY,EAAGA,EAAIi6C,EAAmB1hD,OAAQyH,IACnDs7B,EAAOp7B,KAAK+5C,EAAmB/c,WAAWl9B,IAI9C,IAAIk6C,EAAkCF,mBAAmBvkD,KAAK6jD,aAC9Dhe,EAAOp7B,KAAK28B,GAAoBqd,EAAwB3hD,QAAU,GAAIskC,GAAqD,GAAjCqd,EAAwB3hD,SAElH,IAAK,IAAIyH,EAAY,EAAGA,EAAIk6C,EAAwB3hD,OAAQyH,IACxDs7B,EAAOp7B,KAAKg6C,EAAwBhd,WAAWl9B,IAGnDs7B,EAAOp7B,KAAK28B,GAAoBpnC,KAAK8jD,gBAAgB,EAAE,IAEvDje,EAAOp7B,KAAI,IACX,IAAIi6C,EAA2BH,mBAAmBvkD,KAAK+jD,cACvDle,EAAOp7B,KAAK28B,GAAoBsd,EAAiB5hD,QAAU,GAAIskC,GAA8C,GAA1Bsd,EAAiB5hD,SAGpG,IAAK,IAAIyH,EAAY,EAAGA,EAAIm6C,EAAiB5hD,OAAQyH,IACjDs7B,EAAOp7B,KAAKi6C,EAAiBjd,WAAWl9B,IAK5C,GAFAs7B,EAAOp7B,KAAI,IAA2B28B,GAAoBpnC,KAAKspB,mBAAoB8d,GAAoBpnC,KAAK+qB,mBAAoBqc,GAAoBpnC,KAAK8iD,kBACzJjd,EAAOp7B,KAAI,IAAoB28B,GAAoBpnC,KAAKsjD,QACpDtjD,KAAKsjD,OAAS/hD,EAAO6O,OAAmB,WAAU,OAAE3L,MACpD,IAAK,IAAI8F,EAAI,EAAGA,EAAIhJ,EAAO0Z,iBAAkB1Q,IACzCs7B,EAAOp7B,KAAK28B,GAAoBpnC,KAAKmhD,YAAY52C,GAAG,EAAE,IAG9Ds7B,EAAOp7B,KAAsB,IAAA28B,GAAoBpnC,KAAK8T,KAAMszB,GAAoBpnC,KAAKsoC,OAAS/mC,EAAOsP,YACrGg1B,EAAOp7B,KAA4B,IAAA28B,GAAoBpnC,KAAKujD,WAAa,GAAInc,GAAqC,GAAjBpnC,KAAKujD,YACtG1d,EAAOp7B,KAA0B,IAAA28B,GAAqBpnC,KAAKwjD,WAAa,GAAM,GAAIpc,GAAqBpnC,KAAKwjD,WAAa,EAAK,KAC9H3d,EAAOp7B,KAAwB,IAAA28B,GAAoBpnC,KAAKqiD,OAAS,GAAIjb,GAAiC,GAAbpnC,KAAKqiD,QAC9Fxc,EAAOp7B,KAA4B,GAAA28B,GAAoBpnC,KAAKotC,YAAc,IAC1EvH,EAAOp7B,KAA2B,IAAA28B,GAAqBpnC,KAAKyjD,SAAW,GAAM,GAAIrc,GAAqBpnC,KAAKyjD,SAAW,EAAK,KAC3H5d,EAAOp7B,KAA+B,IAAA28B,GAAqBpnC,KAAK0jD,mBAAqB,GAAM,GAAItc,GAAqBpnC,KAAK0jD,mBAAqB,EAAK,KACnJ7d,EAAOp7B,KAAI,IAAqB28B,GAAoBpnC,KAAKqsC,SACzDxG,EAAOp7B,KAAI,GAAuB28B,GAAoBpnC,KAAKohD,WAG3Dvb,EAAOp7B,KAAI,IACkB,GAAzBzK,KAAK0hD,kBAA8C,GAAnB1hD,KAAK2hD,YAAuC,KAAlB3hD,KAAKuhD,WAA0C,GAAnBvhD,KAAKshD,YAA4C,GAAvBthD,KAAKyhD,gBAAsD,GAA7BzhD,KAAKwhD,sBAAkD,GAAnBxhD,KAAK4hD,YACvL/b,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAM9L,KAAK0hD,iBAAmB,EAA4B,GAAxB1hD,KAAK0hD,iBAAwB,GAAmC,IAA7B1hD,KAAK0hD,iBAAmB,MAClI7b,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAM9L,KAAK2hD,WAAa,EAAsB,GAAlB3hD,KAAK2hD,WAAkB,EAAI3hD,KAAK2hD,cACjG9b,EAAOp7B,KAAK28B,GAAoBpnC,KAAKshD,aACrCzb,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,OAAO9L,KAAKuhD,UAAY,KAAU,OACvE1b,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAkC,GAA5B9L,KAAKwhD,wBAChD3b,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAA4B,GAAtB9L,KAAKyhD,kBAChD5b,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAwB,GAAlB9L,KAAK4hD,aAAoB,GAAIxa,GAAuD,GAAnCv8B,KAAKiB,MAAwB,GAAlB9L,KAAK4hD,eAG5G/b,EAAOp7B,KAAK28B,GAAoB,KAGpCvB,EAAOp7B,KAAI,IACX,IAAK,IAAI6Y,EAAkB,EAAGA,EAAUtjB,KAAK6iD,kBAAmBv/B,IAAW,CAEvE,IAAIqhC,EAA6BJ,mBAAmBvkD,KAAKqhD,SAAS/9B,GAASnf,MAC3E0hC,EAAOp7B,KAAK28B,GAAoBud,EAAmB7hD,QAAU,GAAIskC,GAAgD,GAA5Bud,EAAmB7hD,SAGxG,IAAK,IAAIyH,EAAY,EAAGA,EAAIo6C,EAAmB7hD,OAAQyH,IACnDs7B,EAAOp7B,KAAKk6C,EAAmBld,WAAWl9B,GAEjD,CAGD,GADAs7B,EAAOp7B,KAAI,IAA8B28B,GAA0BpnC,KAAKgjD,oBAAsB,EAAUhjD,KAAK2sC,qBACzG3sC,KAAKgjD,oBAAsBhjD,KAAK2sC,mBAChC,IAAK,IAAIuW,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtErd,EAAOp7B,KAAK28B,GAAoBpnC,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAASvB,EAAO6Q,qBAIhGyzB,EAAOp7B,KAAI,KACX,IAAK,IAAIy4C,EAAuB,EAAGA,EAAeljD,KAAKspB,kBAAmB45B,IACtErd,EAAOp7B,KAAK28B,GAAoBpnC,KAAKqhD,SAAS6B,GAAc5a,SAGhE,IAAK,IAAI4a,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAAQyH,IAAK,CAC7E,MAAMysB,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYhhC,GAOvE,GANAs7B,EAAOp7B,KAAI,GAA8B28B,GAAoBpQ,EAAWphB,OACxEiwB,EAAOp7B,KAAI,IAAqB28B,GAAqBpQ,EAAW+D,OAASx5B,EAAOmV,YAAc,GAAM,GAAI0wB,GAAqBpQ,EAAW+D,OAASx5B,EAAOmV,YAAc,EAAK,KAC3KmvB,EAAOp7B,KAAyB,IAAA28B,GAAoBpQ,EAAWN,QAAU,GAAI0Q,GAAwC,GAApBpQ,EAAWN,SAE5GmP,EAAOp7B,KAAI,KACXo7B,EAAOp7B,KAAK28B,IAAqBpQ,EAAWgE,eACxChE,EAAWgE,aACX6K,EAAOp7B,KAAK28B,GAAoBpQ,EAAWge,oBAC3CnP,EAAOp7B,KAAK28B,GAAoBpQ,EAAWie,yBAE1C,CACD,GAA2B,MAAvBje,EAAW0D,SAEXmL,EAAOp7B,KAAK28B,GAAoB,IAChCjkC,QAAQiH,IAAI,uEAAyE84C,EAAe,qBAAuB34C,OACxH,CACHs7B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW0D,SAASmX,oBACpD,IAAK,IAAIhY,EAAY,EAAGA,EAAI7C,EAAW0D,SAASmX,kBAAmBhY,IAAK,CACpE,MAAMgV,EAA4B7X,EAAW0D,SAASkX,cAAc/X,GACpEgM,EAAOp7B,KAAK28B,GAAoByH,EAAMj5B,MAAOwxB,GAAoBv8B,KAAKiB,MAAM+iC,EAAMsB,OAAQ/I,GAAoBv8B,KAAKiB,MAAM+iC,EAAMuB,OAClI,CACJ,CAGD,IAAIwU,EAAiC,EACrC,IAAK,IAAI/qB,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD+qB,KAA+D,MAAlC5tB,EAAWoe,aAAavb,EAAI,KAAeA,EAG5EgM,EAAOp7B,KAAK28B,GAAoBwd,GAA0B,GAAIxd,GAA6C,GAAzBwd,IAElF,IAAK,IAAI/qB,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD,GAAI+qB,EAA0B,GAAK/qB,EAAI,CACnCgM,EAAOp7B,KAAK28B,GAAoBpQ,EAAWoe,aAAavb,EAAI,GAAIgY,oBAChE,IAAK,IAAIxE,EAAY,EAAGA,EAAIrW,EAAWoe,aAAavb,EAAI,GAAIgY,kBAAmBxE,IAAK,CAChF,MAAMwB,EAA4B7X,EAAWoe,aAAavb,EAAI,GAAI+X,cAAcvE,GAChFxH,EAAOp7B,KAAK28B,GAAoByH,EAAMj5B,MAAOwxB,GAAoBv8B,KAAKiB,MAAM+iC,EAAMsB,OAAQ/I,GAAoBv8B,KAAKiB,MAAM+iC,EAAMuB,OAClI,CACJ,CAER,CAYD,GATAvK,EAAOp7B,KAEH,IAAA28B,GAAqBpQ,EAAWloB,UAAO,GAAgB,IACvDs4B,GAAqBpQ,EAAWloB,UAAO,GAAgB,IACvDs4B,GAAqBpQ,EAAWloB,UAAO,GAAgB,IACvDs4B,GAAqBpQ,EAAWloB,UAAO,GAAgB,IACvDs4B,GAAqBpQ,EAAWloB,UAAO,EAAgB,IACvDs4B,GAAqBpQ,EAAWloB,UAAO,EAAgB,KAEvDK,EAAyB6nB,EAAWloB,SAEpC,GADA+2B,EAAOp7B,KAAK28B,IAAqBpQ,EAAW0F,iBACxC1F,EAAW0F,eACXmJ,EAAOp7B,KAAK28B,GAAoBpQ,EAAWke,sBAC3CrP,EAAOp7B,KAAK28B,GAAoBpQ,EAAWme,2BAE1C,CACD,GAA6B,MAAzBne,EAAW6F,WAEXgJ,EAAOp7B,KAAK28B,GAAoB,IAChCjkC,QAAQiH,IAAI,yEAA2E84C,EAAe,qBAAuB34C,OAE5H,CACDs7B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW6F,WAAWgV,oBACtD,IAAK,IAAIhY,EAAY,EAAGA,EAAI7C,EAAW6F,WAAWgV,kBAAmBhY,IAAK,CACtE,MAAMgV,EAA4B7X,EAAW6F,WAAW+U,cAAc/X,GACtEgM,EAAOp7B,KAAK28B,GAAoByH,EAAMj5B,MAAOwxB,GAAoBv8B,KAAKiB,MAAM+iC,EAAMsB,OAAQ/I,GAAoBv8B,KAAKiB,MAAM+iC,EAAMuB,OAClI,CACJ,CAGD,IAAIwU,EAAiC,EACrC,IAAK,IAAI/qB,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD+qB,KAAiE,MAApC5tB,EAAWqe,eAAexb,EAAI,KAAeA,EAG9EgM,EAAOp7B,KAAK28B,GAAoBwd,GAA0B,GAAIxd,GAA6C,GAAzBwd,IAElF,IAAK,IAAI/qB,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD,GAAI+qB,EAA0B,GAAK/qB,EAAI,CACnCgM,EAAOp7B,KAAK28B,GAAoBpQ,EAAWqe,eAAexb,EAAI,GAAIgY,oBAClE,IAAK,IAAIxE,EAAY,EAAGA,EAAIrW,EAAWqe,eAAexb,EAAI,GAAIgY,kBAAmBxE,IAAK,CAClF,MAAMwB,EAA4B7X,EAAWqe,eAAexb,EAAI,GAAI+X,cAAcvE,GAClFxH,EAAOp7B,KAAK28B,GAAoByH,EAAMj5B,MAAOwxB,GAAoBv8B,KAAKiB,MAAM+iC,EAAMsB,OAAQ/I,GAAoBv8B,KAAKiB,MAAM+iC,EAAMuB,OAClI,CACJ,CAER,CAiFL,GA/EIvhC,EAAyBmoB,EAAWloB,WACpC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW2D,aACa,GAApDp5B,EAAO8T,YAAY2hB,EAAW2D,YAAYnlB,QAAgBqwB,EAAOp7B,KAAK28B,GAAoBpQ,EAAWvhB,cAEzG1G,EAAoBioB,EAAWloB,WAC/B+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW6D,QAEQ,GAA/Ct5B,EAAOwW,OAAOif,EAAW6D,OAAO5iB,aAChC4tB,EAAOp7B,KAAK28B,GAAoBpQ,EAAWif,gBAC3CpQ,EAAOp7B,KAAK28B,IAAqBpQ,EAAWkf,kBACrC30C,EAAOwW,OAAOif,EAAW6D,OAAO3iB,WAAa,GACpD2tB,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9e,cAG/ClJ,EAAyBgoB,EAAWloB,UACpC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWye,aAE3CxmC,EAAqB+nB,EAAWloB,UAChC+2B,EAAOp7B,KAAK28B,GAAqBpQ,EAAW0e,OAASn0C,EAAOsa,WAAc,GAAIurB,GAAqBpQ,EAAW0e,OAASn0C,EAAOsa,UAAa,KAE3I3M,EAAsB8nB,EAAWloB,WACjC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWsH,UAEvCtH,EAAWsH,SAAW/8B,EAAOoU,SAAS7S,SACtC+iC,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAgC,GAA1BkrB,EAAWuH,gBACtDsH,EAAOp7B,KAAK28B,GAAoBpQ,EAAWyH,eAC3CoH,EAAOp7B,KAAK28B,GAAoBv8B,KAAKiB,MAAMkrB,EAAWwH,gBACtDqH,EAAOp7B,KAAK28B,GAAoBpQ,EAAW0H,gBAG/CtvB,EAAyB4nB,EAAWloB,WACpC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW+F,aAE3C8I,EAAOp7B,KAAK28B,IAAqBpQ,EAAWgG,WAE5CttB,EAAiBsnB,EAAWloB,WAC5B+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWwf,iBAC3C3Q,EAAOp7B,KAAK28B,GAAoBpQ,EAAWyf,mBAC3C5Q,EAAOp7B,KAAK28B,GAAoBpQ,EAAW0f,kBAC3C7Q,EAAOp7B,KAAK28B,GAAqBpQ,EAAuB,cAAK,GAAIoQ,GAAgD,GAA3BpQ,EAAuB,eAC7G6O,EAAOp7B,KAAK28B,GAAqBpQ,EAAW4f,WAAar1C,EAAO6V,eAAkB,GAAIgwB,GAAqBpQ,EAAW4f,WAAar1C,EAAO6V,cAAiB,MAE3JzH,EAAqBqnB,EAAWloB,WAChC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWoG,aAC3CyI,EAAOp7B,KAAK28B,GAAoBpQ,EAAWqG,iBAC3CwI,EAAOp7B,KAAK28B,GAAoBpQ,EAAWsG,eAC3CuI,EAAOp7B,KAAK28B,GAAoBpQ,EAAWmG,aAE3CttB,EAAyBmnB,EAAWloB,UACpC+2B,EAAOp7B,KAAK28B,IAAqBpQ,EAAW+f,aAE5C1nC,EAAyB2nB,EAAWloB,UACpC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW6f,gBAAiBzP,GAAoBpQ,EAAWkG,yBAE3F5tB,EAAsB0nB,EAAWloB,WACjC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWqE,KAAO,GAAI+L,GAAqC,GAAjBpQ,EAAWqE,MACrFwK,EAAOp7B,KAAK28B,GAAoBpQ,EAAWsE,YAE3C/rB,EAAqBynB,EAAWloB,UAChC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW2H,SAE3CnvB,EAAmBwnB,EAAWloB,UAC9B+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW+G,aAAcqJ,GAAoBpQ,EAAW8f,YAExFrnC,EAAqBunB,EAAWloB,UAChC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWuG,SAG3C3tB,EAAwBonB,EAAWloB,WACnC+2B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW4gB,gBAAkB,GAAIxQ,GAAgD,GAA5BpQ,EAAW4gB,iBAChG/R,EAAOp7B,KAAK28B,GAAoBpQ,EAAW6gB,gBAAkB,GAAIzQ,GAAgD,GAA5BpQ,EAAW6gB,kBAGjF,GAAf7gB,EAAWphB,OACXiwB,EAAOp7B,KAAI,IAAwB28B,GAAoBpQ,EAAWse,QAASlO,GAAoBpQ,EAAWue,UAE1G1P,EAAOp7B,KAAK28B,IAAqBpQ,EAAWuF,uBAG7B,GAAfvF,EAAWphB,MAAmD,GAAfohB,EAAWphB,KAAqC,CAC/FiwB,EAAOp7B,KAAI,IACX,MAAMo6C,EAAgC,IAAIzb,GAC1C,IAAK,IAAI7+B,EAAY,EAAGA,EAAIhJ,EAAOuY,uBAAwBvP,IACvDs6C,EAAcvb,MAAM/nC,EAAO0Y,0BAA2B+c,EAAWsgB,cAAcnZ,UAAU5zB,IAE7Fs6C,EAAcjb,aAAa/D,EAC9B,CAED,GAAmB,GAAf7O,EAAWphB,KAA6B,CACpCiwB,EAAOp7B,KAAI,IAAmB28B,GAAoBpQ,EAAW11B,SAAW,IAAK8lC,GAAoBv8B,KAAKme,MAAMgO,EAAW11B,SAAW,MAClIukC,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,cAGzOnQ,EAAOp7B,KAAI,KAOX,MAAMq6C,EACJpe,GAAM,EAAG,GAAQ1P,EAAW2G,mBAAqB,GAC/C3G,EAAWwG,4BAA8B,EAAI,GAEjDqI,EAAOp7B,KAAK28B,GAAoB0d,IAGhC,MAAMC,EACJre,GAAM,EAAG,GAAQ,IAAM,GACrB1P,EAAW4G,sBAAwB,EAAI,GAE3CiI,EAAOp7B,KAAK28B,GAAoB2d,IAChC5d,GAAkBtB,EAAQ7O,EAAWyG,mBACrC0J,GAAkBtB,EAAQ7O,EAAW0G,iBACrCyJ,GAAkBtB,EAAQ7O,EAAW6G,oBAE1B,MAAM,GAAmB,GAAf7G,EAAWphB,MAA4C,IAAfohB,EAAWphB,KAA8B,CACxF,GAAmB,GAAfohB,EAAWphB,KACXiwB,EAAOp7B,KAAI,GAAwB28B,GAAoBpQ,EAAWyE,YAClEoK,EAAOp7B,KAAI,GAA2B28B,GAAoBpQ,EAAW0E,mBAClE,CAEH,GADAmK,EAAOp7B,KAAI,GAAwB28B,GAAoBpQ,EAAWggB,eACnC,GAA3BhgB,EAAWggB,aAAmB,CAC9BnR,EAAOp7B,KAAwB,GAAA28B,GAAoBpQ,EAAWkgB,gBAAgB1+B,eAC9EqtB,EAAOp7B,KAAI,KACX,IAAK,IAAIm9B,EAAY,EAAGA,EAAI5Q,EAAWkgB,gBAAgBx+B,YAAY5V,OAAQ8kC,IAAK,CAC5E,IAAK,IAAI/N,EAAY,EAAGA,EAAI7C,EAAWkgB,gBAAgBx+B,YAAYkvB,GAAG9kC,OAAQ+2B,IAC1EgM,EAAOp7B,KAAK28B,GAAoBpQ,EAAWkgB,gBAAgBx+B,YAAYkvB,GAAG/N,KAE9EgM,EAAOp7B,KAAI,GACd,CACDo7B,EAAOp7B,KAAI,IACd,CAED,GADAo7B,EAAOp7B,KAAI,GAA2B28B,GAAoBpQ,EAAWigB,kBACnC,GAA9BjgB,EAAWigB,gBAAsB,CACjCpR,EAAOp7B,KAAI,KACX,IAAK,IAAIm9B,EAAY,EAAGA,EAAI5Q,EAAWmgB,mBAAmB79B,QAAQxW,OAAQ8kC,IAAK,CAC3E,IAAK,IAAI/N,EAAY,EAAGA,EAAI7C,EAAWmgB,mBAAmB79B,QAAQsuB,GAAG9kC,OAAQ+2B,IACzEgM,EAAOp7B,KAAK28B,GAAoBpQ,EAAWmgB,mBAAmB79B,QAAQsuB,GAAG/N,KAE7EgM,EAAOp7B,KAAI,GACd,CACDo7B,EAAOp7B,KAAI,IACd,CACJ,CACDo7B,EAAOp7B,KAAI,GAAgC28B,GAAoBpQ,EAAW2E,oBAE1EkK,EAAOp7B,KAAI,IACX,IAAK,IAAIm9B,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA6B,EAAErU,EAAO8W,eAAgBuvB,IAC1F/B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW4E,UAAUgM,GAAG/L,YAE5DgK,EAAOp7B,KAAI,IACX,IAAK,IAAIm9B,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAC9F/B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW4E,UAAUgM,GAAGp6B,YAE5Dq4B,EAAOp7B,KAAI,IACX,IAAK,IAAIm9B,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAC9F/B,EAAOp7B,KAAK28B,GAAoBpQ,EAAW4E,UAAUgM,GAAG9L,WAEhB,GAApC9E,EAAW4E,UAAUgM,GAAG9L,UACxB+J,EAAOp7B,KAAK28B,GAAoBpQ,EAAW4E,UAAUgM,GAAGz8B,YAGnE,MAAM,GAAmB,GAAf6rB,EAAWphB,KAAuC,CACzDiwB,EAAOp7B,KAAI,IAAmB28B,GAAoBpQ,EAAW11B,SAAW,IAAK8lC,GAAoBv8B,KAAKme,MAAMgO,EAAW11B,SAAW,MACjJukC,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC5C9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,cACvNnQ,EAAOp7B,KAAI,IAEX,IAAK,IAAIovB,EAAY,EAAGA,EAAI,GAAIA,IAC5BgM,EAAOp7B,KAAK28B,GAAqBpQ,EAAWogB,eAAevd,GAAK,IAEvE,MAAM,GAAmB,GAAf7C,EAAWphB,KAClBiwB,EAAOp7B,KAAI,IAAmB28B,GAAoBpQ,EAAW+d,YAC7DlP,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,mBACpN,GAAmB,GAAfhf,EAAWphB,KAAiC,CACnDiwB,EAAOp7B,KAAI,IACX,MAAMu6C,EAA+B,IAAI5b,GACzC,IAAK,IAAI7+B,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDy6C,EAAa1b,MAAM/nC,EAAOqY,yBAA0Bod,EAAW+gB,aAAazJ,SAAS/jC,IAEzFy6C,EAAapb,aAAa/D,GAC1BA,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,aAC1N,MAAM,GAAmB,GAAfhf,EAAWphB,KAAgC,CAClDiwB,EAAOp7B,KAAI,KACX,IAAK,IAAIovB,EAAY,EAAGA,EAAIt4B,EAAO2Z,UAAW2e,IAC1CgM,EAAOp7B,KAAK28B,GAAoBpQ,EAAWugB,iBAAiB1d,KAGhEgM,EAAOp7B,KAAI,IACX,MAAMu6C,EAA+B,IAAI5b,GACzC,IAAK,IAAIvP,EAAY,EAAGA,EAAIt4B,EAAO2Z,UAAW2e,IAC1C,IAAK,IAAItvB,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDy6C,EAAa1b,MAAM/nC,EAAOqY,yBAA0Bod,EAAWwgB,qBAAqB3d,GAAGyU,SAAS/jC,IAGxGy6C,EAAapb,aAAa/D,EAC7B,MAAM,GAAmB,GAAf7O,EAAWphB,KAClBiwB,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,mBACpN,GAAmB,GAAfhf,EAAWphB,KAClBiwB,EAAOp7B,KAA6B,GAAA28B,GAAoBpQ,EAAW7rB,YAAc,GAAIi8B,GAA4C,GAAxBpQ,EAAW7rB,aACpH06B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWuE,eAAiB,GAAI6L,GAA+C,GAA3BpQ,EAAWuE,gBAC/FsK,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,mBACpN,GAAmB,GAAfhf,EAAWphB,KACjCiwB,EAAOp7B,KAAI,IAAuB28B,GAAoBpQ,EAAWof,kBAAmBhP,GAAoBpQ,EAAWqf,gBAAiBjP,GAAoBpQ,EAAWsf,gBACnKzQ,EAAOp7B,KAA6B,GAAA28B,GAAoBpQ,EAAW7rB,YAAc,GAAIi8B,GAA4C,GAAxBpQ,EAAW7rB,aACrG06B,EAAOp7B,KAAK28B,GAAoBpQ,EAAWuE,eAAiB,GAAI6L,GAA+C,GAA3BpQ,EAAWuE,qBACxG,GAAmB,GAAfvE,EAAWphB,KAAqC,CAC3C,GAAIrU,EAAOic,mBAAqB,GAC9C,MAAM,IAAIpb,MAAM,iFAEFyjC,EAAOp7B,KAAI,IAAqB28B,GAAoBpQ,EAAW8D,SAC3D9D,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,QAAQ4kC,GAAqB7B,EAAQ7O,EAAW2e,aAAc3e,EAAW4e,aAAc5e,EAAW6e,aAAc7e,EAAW8e,iBAAkB9e,EAAW+e,WAAY/e,EAAWgf,cACvNnQ,EAAOp7B,KAAI,GAA4B28B,GAAoBpQ,EAAWoH,cAAiBpH,EAAWuf,mBAAqB,GAC1H,MAAM,GAAmB,IAAfvf,EAAWphB,KAGlB,MAAM,IAAIxT,MAAM,4BAGpByjC,EAAOp7B,KAAI,GAAwB28B,GAAoBpQ,EAAWwe,gBAElE3P,EAAOp7B,KAAK28B,GAAoBpQ,EAAWmE,gBAC3C0K,EAAOp7B,KAAK28B,IAAqBpQ,EAAWoE,mBAC5C,IAAK,IAAIqlB,EAAwB,EAAGA,EAAgBzpB,EAAWwe,cAAeiL,IAC1E5a,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAevkB,SAChE36B,EAAO0c,4BAA4B+Y,EAAW9d,UAAUunC,GAAevkB,QAAQ5d,SAAW,GAC1FunB,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAeh8C,QAExEohC,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAetkB,WAEU,SAA1E56B,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,KAC7D6yB,EAAW8gB,mBAIZjS,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAehM,qBACpE5O,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAe/L,qBAJpE7O,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAehM,oBAAsB,GAAIrN,GAA6E,GAAzDpQ,EAAW9d,UAAUunC,GAAehM,qBACtJ5O,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAe/L,kBAAoB,GAAItN,GAA2E,GAAvDpQ,EAAW9d,UAAUunC,GAAe/L,oBAKvE,UAA1EnzC,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,MACzE0hC,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAejM,QACpE3O,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAe7a,OACpEC,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAe3kB,YACa,OAA1Ev6B,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,OACzE0hC,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAe3kB,WACpB,GAA5C9E,EAAW9d,UAAUunC,GAAe3kB,UAAoF,GAA5C9E,EAAW9d,UAAUunC,GAAe3kB,UAChH+J,EAAOp7B,KAAK28B,GAAoBpQ,EAAW9d,UAAUunC,GAAejM,SAI5E3O,EAAOp7B,KAAK28B,IAAsBpQ,EAAW9d,UAAUunC,GAAevyC,SAAYk5B,IAAsBpQ,EAAW9d,UAAUunC,GAAevyC,SAAYk5B,GAAoB,IAE9F,SAA1E7lC,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,MAA6F,aAA1E5C,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,MAAiG,SAA1E5C,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,MAA6F,QAA1E5C,EAAO6X,aAAa4d,EAAW9d,UAAUunC,GAAetkB,UAAUh4B,MACrU0hC,EAAOp7B,KAAK28B,GAAoB7lC,EAAOub,0BAA0Bka,EAAW9d,UAAUunC,GAAerkB,oBAEzGyJ,EAAOp7B,KAAK28B,GAA8E,GAA1DpQ,EAAW9d,UAAUunC,GAAepkB,wBACpEwJ,EAAOp7B,KAAK28B,GAA8E,GAA1DpQ,EAAW9d,UAAUunC,GAAenkB,uBAE3E,CAGLuJ,EAAOp7B,KAAI,IACX05C,EAAO,IAAI/a,GACX,IAAI6b,EAAqB,EACzB,KAAQ,GAAKA,EAAcjlD,KAAK0jD,mBAAqB,GAAGuB,IACxD,IAAK,IAAI/B,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKyjD,SAAUl5C,IACjI45C,EAAK7a,MAAM2b,EAAYjlD,KAAKqhD,SAAS6B,GAAcnC,KAAKx2C,IAE5D45C,EAAKva,aAAa/D,GAElBA,EAAOp7B,KAAI,KACX05C,EAAO,IAAI/a,GACX,MAAM8b,EAA4B,IAAI9b,GAChC+b,EAA0BlE,GAAKmE,cAAc7jD,EAAOkV,aAC1D,IAAK,IAAIysC,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,MAAM5/B,EAAmBtjB,KAAKqhD,SAAS6B,GACjCmC,EAAmCrlD,KAAKijD,4BAA4BC,GACpEpW,EAA0B9sC,KAAKmjD,kBAAkBD,GACjDtX,EAAwB5rC,KAAKojD,gBAAgBF,GAC7CoC,EAAoCrE,GAAKmE,cAAcC,EAA2B9jD,EAAO6Q,oBACzFmzC,EAAoCtE,GAAKmE,cAAc9hC,EAAQioB,YAAYzoC,OAAS,GAG1F,GAAI8oC,EAAc,CACd,MAAM4Z,EAAuCvE,GAAKmE,cAAcplD,KAAK+iD,8BAAgC,GACrG,IAAK,IAAI0C,EAA0B,EAAGA,EAAkBniC,EAAQioB,YAAYzoC,OAAQ2iD,IAAmB,CAEnG,IAAIzuB,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYka,GAErE,IAAK,IAAI3Z,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAAO,CACpD,MAAMmW,EAAqBjrB,EAAWpT,YAAYkoB,GAC5CoW,EAAwBlrB,EAAWygB,eAAe3L,GAClD2W,EAAqBzrB,EAAW/X,WAAW6sB,GAC3C4Z,EAAoB1uB,EAAWiV,eAAeH,GAC9C6Z,EAAsB3uB,EAAW0gB,mBAAmB5L,GAQ1D,IAAI8Z,EAAiBrkD,EAAO0d,WAAWwjC,GAAYpjC,QAAU,EAAI,EAC7DojC,GAAclhD,EAAO0d,WAAWta,WAAiB,KAAEF,QACnDmhD,EAAS,GAEbzB,EAAK7a,MAAM,EAAGsc,GAGA,GAAVA,GAAyB,GAAVA,IACfzB,EAAK7a,MAAM,EAAG2Y,GACdkC,EAAK7a,MAAMkc,EAA8BtD,IAI/B,GAAV0D,GACAzB,EAAK7a,MAAM,EAAGmZ,GAIwC,aAAtDlhD,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,MAA6E,eAAtD5C,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,MACnHggD,EAAK7a,MAAM,EAAGoc,GAIwC,6BAAtDnkD,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,MAC9CggD,EAAK7a,MAAM,EAAGqc,EAErB,CACJ,CACJ,CACD,MAAME,EAAwB/Y,GAAkBlB,EAAgB,EAAItoB,EAAQglB,OAAS/mC,EAAO0Z,iBAC5F,IAAI6qC,EAAqBhZ,EAAiB,EAAI+Y,EAC9C,MAAME,EAA0Bna,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMkB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,IACpIkZ,EAAyB,GAC/B,IAAK,IAAIz7C,EAAY,EAAGA,EAAIw7C,EAAcjjD,OAAQyH,IAC9Cw7C,EAAcx7C,IAAMs7C,EAExB,IAAK,MAAM7B,KAAW1gC,EAAQw9B,SAAU,CACpC,GAAI9gD,KAAK2sC,mBAAoB,CACzB,MAAMM,EAA0BrG,GAAcrlC,EAAO6Q,mBAAoBizC,EAA0BrB,EAAQzY,YAAYzoC,QACvHqhD,EAAK7a,MAAMgc,EAA2BrY,EAAkB1rC,EAAO6Q,oBAC/D,IAAK,IAAI7H,EAAY,EAAGA,EAAI0iC,EAAiB1iC,IACzC45C,EAAK7a,MAAMic,EAA2BvB,EAAQzY,YAAYhhC,GAEjE,CAED,GAAIy5C,EAAQ1Y,MAAMxoC,OAAS,EAAG,CAC1BqhD,EAAK7a,MAAM,EAAG,GAEd,IAAI2c,EAAkB,EACtB,IAAK,MAAMxa,KAAQuY,EAAQ1Y,MAAO,CAG1BG,EAAK1G,MAAQkhB,GAAWra,IACxBuY,EAAK7a,MAAM,EAAG,GACd6a,EAAK7a,MAAM,EAAG,GACd6a,EAAK3a,kBAAkByc,EAAUxa,EAAK1G,QAGtC0G,EAAK1G,MAAQkhB,IACb9B,EAAK7a,MAAM,EAAG,GACVsC,GAAcuY,EAAK7a,MAAM,EAAG,GAChC6a,EAAK3a,kBAAkBiC,EAAK1G,MAAQkhB,IAGxCf,EAAU9hC,QAOiB,GAAvBqoB,EAAKrB,QAAQtnC,OACboiD,EAAU5b,MAAM,EAAG,IAEnB4b,EAAU5b,MAAM,EAAG,GACnB4b,EAAU5b,MAAM,EAAGmC,EAAKrB,QAAQtnC,OAAS,IAG7CoiD,EAAUzb,cAAcgC,EAAKpB,KAAKvnC,OAAS,GAEtC8oC,EAIDsZ,EAAU5b,MAAM,EAAGmC,EAAKpB,KAAK,GAAGzK,MAHhCslB,EAAU5b,MAAM6b,EAAiB1Z,EAAKpB,KAAK,GAAGzK,MAMlD,IAAIsmB,EAAoB,EACpBC,EAAqB1a,EAAKrB,QAAQ,GAClCgc,EAAuBD,EAC3B,MAAME,EAAuB,GAC7B,IAAK,IAAI97C,EAAY,EAAGA,EAAIkhC,EAAKpB,KAAKvnC,OAAQyH,IAAK,CAC/C,MAAMwgC,EAAeU,EAAKpB,KAAK9/B,GACzB+7C,EAAoBH,EAAapb,EAAIhB,SACvCqc,GAAgBE,GAChBpB,EAAU5b,MAAM,EAAG,GACnB+c,EAAW57C,KAAK67C,GAChBF,EAAeE,GAEfpB,EAAU5b,MAAM,EAAG,GAEvB4b,EAAU1b,kBAAkBuB,EAAIf,KAAOkc,GACvCA,EAAYnb,EAAIf,KACX4B,EAGDsZ,EAAU5b,MAAM,EAAGyB,EAAInL,MAFvBslB,EAAU5b,MAAM6b,EAAiBpa,EAAInL,KAI5C,CAED,MAAM2mB,EAAsBC,OAAOC,aAAaC,MAAM,KAAMxB,EAAUtb,aAAa,KAC7E+c,EAAqBX,EAAavlB,QAAQ8lB,IAC7B,GAAfI,GACAxC,EAAK7a,MAAM,EAAG,GACd6a,EAAKzsC,OAAOwtC,KAEZf,EAAK7a,MAAM,EAAG,GACd6a,EAAK5a,cAAc,EAAG,EAAGod,GACzBX,EAAatlB,OAAOimB,EAAY,IAEpCX,EAAaY,QAAQL,GACjBP,EAAaljD,OAAS,IAAIkjD,EAAa5lB,MAE3C,MAAMymB,EAAuBpb,EAAKrB,QAAQ1yB,OAAO2uC,GACjD,IAAK,IAAI97C,EAAY,EAAGA,EAAIs8C,EAAW/jD,OAAQyH,IAAK,CAChD,MAAM2/B,EAAgB2c,EAAWt8C,GAC3Bu8C,EAAqBf,EAActlB,QAAQyJ,GACjD,IAAmB,GAAf4c,EAAkB,CAClB,IAAI/c,EAAmB,EACnBgd,EAAoBjB,EACxB,GAAIiB,EAAY7c,EACZ,KAAO6c,GAAa7c,GAChB6c,KACyC,GAArChB,EAActlB,QAAQsmB,IAAkBhd,SAGhD,KAAOgd,GAAa7c,GAChB6c,KACyC,GAArChB,EAActlB,QAAQsmB,IAAkBhd,IAGpDoa,EAAK7a,MAAM,EAAG,GACd6a,EAAKza,mBAAmBK,EAC3B,MACGoa,EAAK7a,MAAM,EAAG,GACd6a,EAAK7a,MAAM,EAAGwd,GACdf,EAAcrlB,OAAOomB,EAAY,GAErCf,EAAca,QAAQ1c,GAClB6b,EAAcjjD,OAAS,IAAIijD,EAAc3lB,MAGzC0lB,EADAv7C,GAAKkhC,EAAKrB,QAAQtnC,OAAS,EACf2oC,EAAKrB,QAAQ,GAEbF,CAEnB,CAEiB,GAAduB,EAAK1G,OACLof,EAAK7a,MAAM,EAAGmC,EAAKnB,qBAAuB,EAAI,GAGlD2b,EAAUxa,EAAKzG,GAClB,CAEGihB,EAAUjmD,KAAKotC,YAAc7rC,EAAOgR,eAAiBq5B,IACrDuY,EAAK7a,MAAM,EAAG,GACVsC,GAAcuY,EAAK7a,MAAM,EAAG,GAChC6a,EAAK3a,kBAAkBxpC,KAAKotC,YAAc7rC,EAAOgR,eAAiBq5B,EAAgBqa,GAEzF,MACG9B,EAAK7a,MAAM,EAAG,EAErB,CACJ,CACD,IAAI0d,EAAuB7C,EAAKta,eAC5Bod,EAAmB,GACvB,KAAOD,EAAe,GAClBC,EAAOL,QAAQxf,GAAmC,GAAf4f,IACnCA,IAA+B,EAEnCnhB,EAAOp7B,KAAK28B,GAAoB6f,EAAOnkD,SACvCL,MAAMykD,UAAUz8C,KAAKi8C,MAAM7gB,EAAQohB,GACnC9C,EAAKva,aAAa/D,GAElB,MAAMshB,EAAuB,KACjB,IAAIC,EAAmB,GAMnC,GALqCz4B,MAA9BqH,GAAaqxB,eAA8BrxB,GAAaqxB,cAAcvkD,OAAS,IAChFskD,EAAmB,IAAMpxB,GAAaqxB,cAAcrmC,KAAK,MAI3D6kB,EAAO/iC,OAASqkD,EAEA,OAAOX,OAAOC,aAAaC,MAAM,KAAM7gB,GAAUuhB,EAE9D,CACH,IAAIx4C,EAAiB,GACrB,IAAK,IAAIrE,EAAY,EAAGA,EAAIs7B,EAAO/iC,OAAQyH,GAAK48C,EAC5Cv4C,GAAU43C,OAAOC,aAAaC,MAAM,KAAM7gB,EAAOyhB,MAAM/8C,EAAGA,EAAI48C,IAEpD,OAAOv4C,EAASw4C,CAEjC,C,CAGG,QAAOG,CAAyBC,GAGpC,OADmB,GAAfA,EAAkBA,EAAc,EAA2B,GAAfA,IAAkBA,EAAc,GACzEjmD,EAAO2X,UAAUwtB,GAAM,EAAGnlC,EAAO2X,UAAUpW,OAAQ0kD,G,CAGvD,gBAAA7E,CAAiBrb,EAAoBn3B,EAAqB,QAC7D,GAAkB,MAAdm3B,GAAoC,IAAdA,EAItB,OAHA2Z,GAAKwG,SAELznD,KAAK4iD,eAAc,GAGvB,IAAIrb,EAAoB,EAExB,KAAOD,EAAWG,WAAWF,IAA4B,IAAEA,IAI3D,GAFqD,IAAjDD,EAAWG,WAAWF,IAA6BA,IAEnB,KAAhCD,EAAWG,WAAWF,GAEtB,YADAvnC,KAAK4sC,eAAe8a,KAAKC,MAAmB,GAAbpgB,EAAiBD,EAAaA,EAAWsgB,UAAUrgB,IAAap3B,GAInG,MAAM03C,EAAsBvgB,EAAWG,WAAWF,GAClD,IAAIugB,GAAuB,EACvBC,GAAuB,EACvBC,GAAuB,EAC1BC,GAAwB,EAGrBC,GAAwB,EACxBC,GAA2B,EAGZ,KAAfN,GACAE,GAAc,EACdxgB,KACsB,KAAfsgB,GACPG,GAAc,EACdzgB,KACsB,KAAfsgB,GACbI,GAAe,EACT1gB,KACqB,KAAfsgB,GACNM,GAAkB,EAClB5gB,KACsB,IAAfsgB,GACPK,GAAe,EACf3gB,KAEJugB,GAAc,EAGd,MAAM9tB,EAAkBwN,GAAoBF,EAAWG,WAAWF,MAClE,GAAIugB,KAA4B,GAAZ9tB,GAAiBA,EAAUinB,GAAKmH,GAAyBpuB,EAAUinB,GAAKoH,GAAwB,OACpH,GAAIN,KAA4B,GAAZ/tB,GAAiBA,EAAUinB,GAAKqH,GAAyBtuB,EAAUinB,GAAKsH,GAAwB,OACpH,GAAIP,KAA4B,GAAZhuB,GAAiBA,EAAUinB,GAAKuH,GAAyBxuB,EAAUinB,GAAKwH,GAAwB,OACvH,GAAIR,KAA6B,GAAZjuB,GAAiBA,EAAUinB,GAAKyH,GAA0B1uB,EAAUinB,GAAK0H,GAAyB,OACpH,GAAIR,KAAgC,GAAZnuB,GAAiBA,EAAUinB,GAAK2H,GAA6B5uB,EAAUinB,GAAK4H,GAA4B,OAChI,GAAIX,KAA6B,GAAZluB,GAAiBA,EAAUinB,GAAKoD,GAA0BrqB,EAAUinB,GAAK6H,GAAyB,OACvH,MAAMC,EAAqB/uB,EAAU,EAC/BgvB,EAAuBhvB,EAAU,EACjCivB,EAAsBjvB,EAAU,EAChCkvB,EAAsBlvB,EAAU,EAChCmvB,EAAqBnvB,EAAU,EAC/BovB,EAAuBpvB,EAAU,EACjCqvB,EAAuBrvB,EAAU,EACjCsvB,EAAsBtvB,EAAU,EACtCh6B,KAAK4iD,cAAekF,GAAewB,GAAiBvB,GAAemB,GAAgBD,GAAcjB,GACjG,MAAM7P,EAA8B2P,GAAewB,GAAcvB,GAAemB,EAEhF,IAAIK,GAA4C,EAEhD,GAAItB,GAAgBD,GAAeE,GAAgBC,EAAiB,CAE5D,IAAIqB,GADRliB,EAAaA,EAAWmiB,WAAW,MAAO,MACJ9mC,MAAM,KAExC,GADA2kB,EAAakiB,EAAiBE,QACG,MAA9B1zB,GAAaqxB,eAAyBrxB,GAAaqxB,cAAcrmC,KAAK,OAASwoC,EAAiBxoC,KAAK,MAAO,CAE3GigC,GAAK0I,IAEL,IAAIC,GAAwB,EACxBC,GAA4B,EAC5BC,GAA+B,EACnC,MAAMC,EAAmB,GACnBC,EAAgC,GACtClqD,EAAmBG,YAAc,GACjCH,EAAmBI,SAAW,GAC9BJ,EAAmBK,aAAe,EAClCL,EAAmBM,cAAgB,EACnCN,EAAmBS,cAAgB,EACnCI,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACnBN,EAAmBS,gBAEvB,IAAK,MAAMM,KAAO2oD,EACd,GAA0B,kBAAtB3oD,EAAImsC,cACC4c,IACDA,GAAwB,EACxBG,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,SAGtB,GAA0B,sBAAtBlD,EAAImsC,cACJ6c,IACDA,GAA4B,EAC5BE,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,SAGtB,GAA0B,yBAAtBlD,EAAImsC,cACJ8c,IACDA,GAA+B,EAC/BC,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,QAItB,CAGD,MAAMkmD,EAA2BhC,GAAgBe,EAEjD,IADoB/H,GAAKiJ,EAA+BrpD,EAAKkpD,EAAkBC,EAAqBlqD,EAAoBmqD,GAEpH,QAEP,CAKL,GAHIF,EAAiBjnD,OAAS,IAC1BkzB,GAAaqxB,cAAgB0C,GAE7BC,EAAoBlnD,OAAS,EAAG,CAChC,MAAMqnD,EAAkD17C,EAAUu7C,GAClEh0B,GAAaK,iBAAiBL,GAAaK,iBAAiBvzB,QAAU,CAClEqB,KAAM,wBACNmyB,QAAS6zB,EACT1lD,MAAOuxB,GAAaK,iBAAiBvzB,OAO5C,CAGJ,CAER,CAED,GAAIkmD,GAAelB,EAAa,CAE5B,IAAK,MAAMxkC,KAAWtjB,KAAKqhD,SACvB/9B,EAAQioB,YAAY,GAAG5Q,WAAap5B,EAAO8T,YAAY1Q,WAAsB,UAAEF,MAC/E6e,EAAQioB,YAAY,GAAGz8B,SAAW,KAEtC9O,KAAKqhD,SAAS,GAAG9V,YAAY,GAAGwJ,UAAY,CAC/C,CAED,IAAIqV,EAAiD,KACrD,GAAKtC,GAAewB,GAAiBvB,GAAemB,GAAgBD,GAAcjB,EAAe,CAO7FoC,EAAsB,GACtB,IAAK,IAAI7/C,EAAY6/C,EAAoBtnD,OAAQyH,EAAIvK,KAAK6iD,kBAAmBt4C,IAAK,CAC9E6/C,EAAoB7/C,GAAK,GACzB,IAAK,IAAIsvB,EAAY,EAAGA,EAAIt4B,EAAO6Q,mBAAoBynB,IAAKuwB,EAAoB7/C,GAAGsvB,GAAK,EAC3F,CACJ,CAED,IAIIwwB,EAJAzQ,EAA6B,EAE7B0Q,EAAoC,EACpCC,GAAmC,EAEnCC,GAA6B,EAC7Bn8C,GAA6B,EACjC,KAAOk5B,EAAYD,EAAWxkC,eAAgBunD,EAAU/iB,EAAWG,WAAWF,MAC1E,QAEI,IAAIkjB,GAAkBjjB,GAAoBF,EAAWG,WAAWF,OAAiB,IAAMC,GAAoBF,EAAWG,WAAWF,MAMjI,GALAvnC,KAAK2jD,MAAQ+G,mBAAmBpjB,EAAWsgB,UAAUrgB,EAAWA,EAAYkjB,IAC5EjnD,SAASmgD,MAAuB,IAAd3jD,KAAK2jD,MAAc3jD,KAAK2jD,MAAQ,MAAQ3tB,GAAaiE,mBAAqBjE,GAAaiE,mBAEzGsN,GAAakjB,EAERxC,IAAiBkB,GAAajB,IAAiBc,EAAc,CAE9D,IAAI2B,GAAoBnjB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAClIvnC,KAAK4jD,OAAS8G,mBAAmBpjB,EAAWsgB,UAAUrgB,EAAWA,EAAYojB,IAE7EpjB,GAAaojB,EAGb,IAAIC,GAAyBpjB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MACvIvnC,KAAK6jD,YAAc6G,mBAAmBpjB,EAAWsgB,UAAUrgB,EAAWA,EAAYqjB,IAElFrjB,GAAaqjB,EAEb5qD,KAAK8jD,gBAA6E,GAA3Dtc,GAAoBF,EAAWG,WAAWF,KACpE,CACH,MACF,QAEI,IAAIsjB,IAAmBrjB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MACjIvnC,KAAK+jD,aAAe2G,mBAAmBpjB,EAAWsgB,UAAUrgB,EAAWA,EAAYsjB,KACnFtjB,GAAasjB,GACf,MACF,SACI7qD,KAAKspB,kBAAoBke,GAAoBF,EAAWG,WAAWF,MACnEvnC,KAAK+qB,kBAAoByc,GAAoBF,EAAWG,WAAWF,MAG/DvnC,KAAK8iD,gBAFLgF,GAAgBC,GAAegB,EAER,EAEAvhB,GAAoBF,EAAWG,WAAWF,MAErEvnC,KAAKspB,kBAAoBsd,GAAcrlC,EAAOmZ,qBAAsBnZ,EAAOoZ,qBAAsB3a,KAAKspB,mBACtGtpB,KAAK+qB,kBAAoB6b,GAAcrlC,EAAOqZ,qBAAsBrZ,EAAOsZ,qBAAsB7a,KAAK+qB,mBACtG/qB,KAAK8iD,gBAAkBlc,GAAcrlC,EAAOuZ,mBAAoBvZ,EAAOwZ,mBAAoB/a,KAAK8iD,iBAEhG,IAAK,IAAII,EAAeljD,KAAKqhD,SAASv+C,OAAQogD,EAAeljD,KAAK6iD,kBAAmBK,IACjFljD,KAAKqhD,SAAS6B,GAAgB,IAAIrC,GAGtC,GADA7gD,KAAKqhD,SAASv+C,OAAS9C,KAAK6iD,kBACvBiF,GAAewB,GAAiBvB,GAAemB,GAAgBD,GAAcjB,EAC9E,IAAK,IAAIz9C,EAAY6/C,EAAqBtnD,OAAQyH,EAAIvK,KAAK6iD,kBAAmBt4C,IAAK,CAC/E6/C,EAAqB7/C,GAAK,GAC1B,IAAK,IAAIsvB,EAAY,EAAGA,EAAIt4B,EAAO6Q,mBAAoBynB,IAAKuwB,EAAqB7/C,GAAGsvB,GAAK,EAC5F,CAEP,MACF,SAGI,GAFA75B,KAAKsjD,MAAQ5c,GAAM,EAAGnlC,EAAO6O,OAAOtN,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAElFvnC,KAAKsjD,OAAS/hD,EAAO6O,OAAmB,WAAU,OAAE3L,MACpD,IAAK,IAAI8F,GAAI,EAAGA,GAAIhJ,EAAO0Z,iBAAkB1Q,KACzCvK,KAAKmhD,YAAY52C,IAAgE,GAA3Di9B,GAAoBF,EAAWG,WAAWF,MAGpEugB,IAAa9nD,KAAKsjD,MAAQ,GAChC,MACF,SACI,GAAI8F,GAAetB,EACf9nD,KAAK8T,IAAM4yB,GAAM,EAAGnlC,EAAOgP,KAAKzN,OAAQ,GAAK0kC,GAAoBF,EAAWG,WAAWF,OACvFvnC,KAAKsoC,OAAS,OACX,GAAIwf,GAAeC,EACtB/nD,KAAK8T,IAAM4yB,GAAM,EAAGnlC,EAAOgP,KAAKzN,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAClFvnC,KAAKsoC,OAAS,OACX,GAAI0f,GAAgBgB,GAAef,EAAe,CAMrD,MAAM5f,EAAsBb,GAAoBF,EAAWG,WAAWF,OAC/DzzB,EAAKw0B,GAA4BF,GAA+BC,GACvEroC,KAAK8T,IAAMA,EACX9T,KAAKsoC,OAASA,CACjB,MACGtoC,KAAK8T,IAAM4yB,GAAM,EAAGnlC,EAAOgP,KAAKzN,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAClFvnC,KAAKsoC,OAAS5B,GAAMnlC,EAAOsP,UAAWtP,EAAOuP,UAAY,EAAG02B,GAAoBF,EAAWG,WAAWF,MAAgBhmC,EAAOsP,WAEnI,MACF,SAEQ7Q,KAAKujD,UADL2F,GAAcpB,EACGtgB,GAAoBF,EAAWG,WAAWF,OAEzCC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAElI,MACF,SAEQvnC,KAAKwjD,WADL0F,GAAcpB,EACItgB,GAAoBF,EAAWG,WAAWF,OAEzCC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEnJ,MACF,SAEQvnC,KAAKqiD,MADL4G,GAAcnB,EACD,CAAC,GAAI,IAAK,IAAK,KAAKtgB,GAAoBF,EAAWG,WAAWF,OACpE6hB,GAAetB,EACT,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKtgB,GAAoBF,EAAWG,WAAWF,OAEnHC,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MAE7HvnC,KAAKqiD,MAAQ3b,GAAMnlC,EAAOoP,SAAUpP,EAAOqP,SAAW,EAAG5Q,KAAKqiD,OAChE,MACF,QACIriD,KAAKohD,SAAW5Z,GAAoBF,EAAWG,WAAWF,MAC5D,MACF,SACQ+hB,GAAcxB,GACdlO,EAA+E,GAA1DpS,GAAoBF,EAAWG,WAAWF,MAC/DqS,EAAqBlT,GAAM,EAAGnlC,EAAO+P,YAAasoC,KAC1CmO,GAAemB,GAAgBD,GAAcjB,KACrDpO,EAAqBpS,GAAoBF,EAAWG,WAAWF,MAC/DqS,EAAqBlT,GAAM,EAAGnlC,EAAO+P,YAAasoC,IAIxD,MACF,QAEQ55C,KAAKotC,YADL4b,GAAelB,EACI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAItgB,GAAoBF,EAAWG,WAAWF,OAE3DC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEjFvnC,KAAKotC,YAAcviC,KAAKiN,IAAIvW,EAAOyQ,eAAgBnH,KAAKsC,IAAI5L,EAAO0Q,eAAgBjS,KAAKotC,cAC1F,MACF,SAA2B,CACvB,MAAMqW,GAAoBjc,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EACpJvnC,KAAKyjD,SAAW7c,GAAcrlC,EAAO2Q,YAAa3Q,EAAO4Q,YAAasxC,GACtE,IAAK,IAAIP,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,IAAK,IAAIe,EAAMjkD,KAAKqhD,SAAS6B,GAAcnC,KAAKj+C,OAAQmhD,EAAMjkD,KAAKyjD,SAAUQ,IACzEjkD,KAAKqhD,SAAS6B,GAAcnC,KAAKkD,GAAQA,EAAM,EAAK,EAAI,EAE5DjkD,KAAKqhD,SAAS6B,GAAcnC,KAAKj+C,OAAS9C,KAAKyjD,QAClD,CACJ,CAAC,MACF,SAA+B,CAC3B,IAAIC,EAEAA,EADA2F,GAAevB,EACMtgB,GAAoBF,EAAWG,WAAWF,MAAgB,GAEzDC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEpJvnC,KAAK0jD,mBAAqB9c,GAAc,EAAGrlC,EAAO4Q,YAAauxC,GAC/D,MAAMoH,EAAuB9qD,KAAK6iD,kBAClC,IAAK,IAAIK,EAAuB,EAAGA,EAAe4H,EAAc5H,IAAgB,CAC5E,MAAMpC,EAAsB9gD,KAAKqhD,SAAS6B,GAAcpC,SACxD,IAAK,IAAIkD,EAAUlD,EAASh+C,OAAQkhD,EAAUhkD,KAAK0jD,mBAAoBM,IACnElD,EAASkD,GAAW,IAAI3Y,GAE5ByV,EAASh+C,OAAS9C,KAAK0jD,kBAC1B,CACJ,CAAC,MACF,SACI,GAAK4F,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAAe,CAC7F,MAAM+C,EAAgCnkB,GAAcrlC,EAAO6Q,mBAAoB7Q,EAAO+Q,0BAA2Bk1B,GAAoBF,EAAWG,WAAWF,MAAgBhmC,EAAO6Q,oBAClLpS,KAAKgjD,oBAAqB,EAC1BhjD,KAAK2sC,mBAAsBoe,EAAwB,EAEnD,IAAK,IAAI7H,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,MAAMpW,EAA0BoW,GAAgBljD,KAAKspB,mBAAqB45B,EAAeljD,KAAKspB,kBAAoBtpB,KAAK+qB,kBACjH6gB,EAAwBsX,GAAgBljD,KAAKspB,kBAAoBtpB,KAAK+qB,kBAE5E,IAAK,IAAI06B,EAA0BzlD,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAAQ2iD,EAAkBsF,EAAuBtF,IACxHzlD,KAAKqhD,SAAS6B,GAAc3X,YAAYka,GAAmB,IAAI3Q,GAAWhI,EAAgBlB,GAG9F,GADA5rC,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAASioD,EAC7C5B,GAAarB,EACb,IAAK,IAAIrC,EAA0B,EAAGA,EAAkBsF,EAAuBtF,IAC3EzlD,KAAKqhD,SAAS6B,GAAc3X,YAAYka,GAAiBxN,gBAAgBnL,EAAgB,EAAuB,EAAsBA,EAAgBlB,GAI9J,IAAK,IAAI/R,EAAYuwB,EAAqBlH,GAAcpgD,OAAQ+2B,EAAIkxB,EAAuBlxB,IACvFuwB,EAAqBlH,GAAcrpB,GAAK,EAE/C,CACJ,KAAM,CACH,MAAMmxB,EAA8BxjB,GAAoBF,EAAWG,WAAWF,MAC9EvnC,KAAKgjD,mBAAyD,IAAhB,EAAnBgI,GAC3BhrD,KAAK2sC,mBAAyD,IAAhB,EAAnBqe,GAC3B,IAAK,IAAI9H,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,IAAIjW,EAA0B,GAC1BjtC,KAAKgjD,oBAAsBhjD,KAAK2sC,sBAChCM,EAAkBrG,GAAcrlC,EAAO6Q,mBAAoBpS,KAAK+iD,8BAA+Bvb,GAAoBF,EAAWG,WAAWF,MAAgBhmC,EAAO6Q,qBAEpK,MAAMkR,EAAmBtjB,KAAKqhD,SAAS6B,GACjCpW,EAA0B9sC,KAAKmjD,kBAAkBD,GACjDtX,EAAwB5rC,KAAKojD,gBAAgBF,GACnD,IAAK,IAAI34C,EAAY+Y,EAAQioB,YAAYzoC,OAAQyH,EAAI0iC,EAAiB1iC,IAClE+Y,EAAQioB,YAAYhhC,GAAK,IAAIuqC,GAAWhI,EAAgBlB,GAE5DtoB,EAAQioB,YAAYzoC,OAASmqC,CAChC,CACJ,CACH,MACF,SACI,GAAKgb,GAAiBC,GAAiBC,EAiBpDnoD,KAAKqsC,OAAS7E,GAAoBF,EAAWG,WAAWF,UAjBa,CACrE,IAAI0jB,EAAYzjB,GAAoBF,EAAWG,WAAWF,MAC1DvnC,KAAKqsC,OAAS3F,GAAM,EAAGnlC,EAAOmR,QAAQ5P,OAAQmoD,EAAY,IACtDlD,GAAeiB,GAAelB,KAC7B9nD,KAAKqsC,QAAU9qC,EAAOmR,QAAQ/N,WAAW,iBAAiBF,OAASzE,KAAKqsC,QAAU9qC,EAAOmR,QAAQ/N,WAAW,mBAAmBF,QAClI+lD,GAAoB,GAEjBxqD,KAAKqsC,QAAU9qC,EAAOmR,QAAQ/N,WAAW,mBAAmBF,QAK/D4J,GAAoB,GAItB,CAIW,MACF,SACI,GAAI26C,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACvEvnC,KAAKqhD,SAAS6B,GAAc5a,OAAS5B,GAAM,EAAGnlC,EAAO4Z,aAAcqsB,GAAoBF,EAAWG,WAAWF,MAAgB,GACzH2b,GAAgBljD,KAAKspB,oBAAmBtpB,KAAKqhD,SAAS6B,GAAc5a,OAAS,EACpF,MAAM,GAAKghB,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EACrF,IAAK,IAAI9E,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtEljD,KAAKqhD,SAAS6B,GAAc5a,OAAS5B,GAAM,EAAGnlC,EAAO4Z,aAAcqsB,GAAoBF,EAAWG,WAAWF,MAAgB,GACzH2b,GAAgBljD,KAAKspB,oBAAmBtpB,KAAKqhD,SAAS6B,GAAc5a,OAAS,OAElF,CACH,IAAK,IAAI4a,EAAuB,EAAGA,EAAeljD,KAAKspB,kBAAmB45B,IACtEljD,KAAKqhD,SAAS6B,GAAc5a,OAAS5B,GAAM,EAAGnlC,EAAO4Z,aAAcqsB,GAAoBF,EAAWG,WAAWF,OAEjH,IAAK,IAAI2b,EAAuBljD,KAAKspB,kBAAmB45B,EAAeljD,KAAK6iD,kBAAmBK,IAC3FljD,KAAKqhD,SAAS6B,GAAc5a,OAAS,CAE5C,CACH,MACF,QAAkC,CAC9BiiB,IACIA,GAA2BvqD,KAAKqhD,SAASiJ,GAA2B/e,YAAYzoC,SAChFwnD,IACAC,EAA0B,GAE9B3jB,GAAc,EAAG5mC,KAAKqhD,SAASv+C,OAAS,EAAGwnD,GAC3C,MAAMtzB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAEpF,IAAI7a,EAAyB9I,GAAc,EAAG,GAA2BY,GAAoBF,EAAWG,WAAWF,OAC9GwgB,GAAemB,GAAgBD,GAAcjB,EAC5B,GAAdtY,GAA+D,GAAdA,IACjDA,GAAkB,IAIhBqY,GAAeoB,GAAenB,IAAgBiB,GAAgBhB,GAAgBiB,KAClE,GAAdxZ,GAA2D,GAAdA,GAAiE,IAAdA,IAChGA,GAAkB,IAG1B1Y,EAAWihB,gBAAgBvI,EAAgB4a,GAA6BtqD,KAAKspB,mBAAqBghC,EAA4BtqD,KAAKspB,kBAAoBtpB,KAAK+qB,kBAAmBu/B,GAA6BtqD,KAAKspB,kBAAoBtpB,KAAK+qB,qBAGpOq+B,GAAetB,GAAiBiB,GAAahB,IAAgC,GAAdrY,GAAuD,GAAdA,GAAuF,GAApCA,IAC7J1Y,EAAWgG,SAAU,EACrBhG,EAAW+F,WAAa,EACxB/F,EAAWloB,SAAW,GAEtB07C,IACAxzB,EAAWif,cAAgB,GAE3B5nC,IACA2oB,EAAWkf,gBAAiB,GAG5BkT,GAAetB,GAIX9wB,EAAW6D,OAASt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,QAE7DuyB,EAAWloB,SAAW,KAGjC,CAAC,MACF,SAAyB,CACrB,MAAMonB,EAAuBsR,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACxIvnC,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,OAASR,EAElF6xB,GAAemB,GAAgBD,GAAcjB,EAC0C,GAApFhoD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,SAC9E12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,OAAM,EACpF12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB30C,KAAI,IAIhFmyC,GAAeoB,GAAelB,GAAgBiB,KACoC,GAApFlpD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,SAC9E12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,OAAM,EACpF12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB30C,KAAI,GAGE,IAApF5V,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,SAC9E12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,OAAM,GACpF12B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB30C,KAAI,KAItFkyC,GAAe5xB,GAAeF,GAAaa,kBAAkB,mBAC7D72B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB7zB,OAASV,GAAaa,kBAAkB,iBAE7H,CAAC,MACF,SACI,GAAImyB,GAAelB,EAAa,CAC5B,MAAMoD,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjDhI,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACjEvQ,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAY,GACvEvU,EAAW11B,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAA+E,EAAvEooD,EAAY1jB,GAAoBF,EAAWG,WAAWF,QAI9GvQ,EAAWwb,sBAAsB4X,EAAqBlH,GAAc,GAAI/K,EAE3E,MAAM,GAAIgR,GAAarB,EAAa,CACjC,MAAMoD,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,IAAK,IAAIhI,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,MAAMlsB,KAAch3B,KAAKqhD,SAAS6B,GAAc3X,YAC7C2X,GAAgBljD,KAAKspB,kBACrB0N,EAAW+d,UAAYrO,GAAM,EAAGnlC,EAAOgK,WAAWzI,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAEpGvQ,EAAW11B,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAA+E,EAAvEooD,EAAY1jB,GAAoBF,EAAWG,WAAWF,OAI7H,MAAM,GAAI6hB,GAAetB,EAAa,CACnC,MAAMoD,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDZ,GAA6BtqD,KAAKspB,kBAClCtpB,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBxV,UAAYrO,GAAM,EAAGnlC,EAAOgK,WAAWzI,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAEvKvnC,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBjpD,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAA+E,EAAvEooD,EAAY1jB,GAAoBF,EAAWG,WAAWF,OAExL,KAAM,CACH,MAAMvQ,EAAah3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAExE,GAAmB,GAAfvzB,EAAWphB,KACXohB,EAAW+d,UAAYrO,GAAM,EAAGnlC,EAAOiK,gBAAiBg8B,GAAoBF,EAAWG,WAAWF,YAElG,GAAI0gB,GAAgBC,GAAgBC,EAChC,GAAKF,GAAgBkB,GAAajB,GAAgBc,EAAc,CAC5D,MAAMmC,EAAe3jB,GAAoBF,EAAWG,WAAWF,MACzD6jB,EAAkB5jB,GAAoBF,EAAWG,WAAWF,MAI9DvQ,EAAW11B,SADQ,GAAnB8pD,EACsBD,EAAe,IACX,GAAnBC,EACeD,EAAe,IACX,GAAnBC,EACeD,EAAe,GAEfA,EAGC,IAAvBn0B,EAAW11B,SACX01B,EAAW11B,SAAW,GACf01B,EAAW11B,SAAW,KAC7B01B,EAAW11B,UAAY,GAE3B01B,EAAW11B,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQk0B,EAAW11B,SACtE,MACG01B,EAAW11B,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQ0kC,GAAoBF,EAAWG,WAAWF,MAA2E,GAA1DC,GAAoBF,EAAWG,WAAWF,YAIjKvnC,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBjpD,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQ0kC,GAAoBF,EAAWG,WAAWF,MAGvL,CACI,MACF,SACI,GAAK+hB,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAC7E,GAAIoB,GAAetB,EAAa,CAC5B,MAAMtI,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/CC,EAA6B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,UAAW,WAE1F,GAAIuJ,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACjEvQ,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAY,GACjE2M,EAAiCkS,EAAqBlH,GAAc,GACpEvP,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAGjN,GAAM,EAAG8Y,EAAe18C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QACpH2Q,EAAeE,aAAeoH,EAAe7L,GAC7CuE,EAAehW,gBAAkB,EACjCgW,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAW86C,EAAiB9L,IAC7E3c,EAAWwb,sBAAsB0F,EAAgBC,EACpD,MAAM,GAAIgR,GAAarB,EACpB,IAAK,IAAI5E,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAAQyH,IAAK,CAC7E,MAAMysB,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYhhC,GACjE2tC,EAAiCkS,EAAqBlH,GAAc34C,GACpEopC,EAAuBjN,GAAM,EAAG8Y,EAAe18C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,MAAgB,GACnH2b,EAAeljD,KAAKspB,mBACpB4uB,EAAeE,aAAeoH,EAAe7L,GAC7CuE,EAAehW,gBAAkB,EACjCgW,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAW86C,EAAiB9L,MAE7EuE,EAAeE,aAAe,GAC9BF,EAAehW,gBAAkB,EACjCgW,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAiB,MAEtEqyB,EAAWwb,sBAAsB0F,EAAgBC,EACpD,KAEF,CACH,MAAMxE,EAAuBjN,GAAM,EAAG8Y,EAAe18C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OACjGvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9ErS,EAAiCkS,EAAqBE,GAA2BC,GACvFrS,EAAeE,aAAeoH,EAAe7L,GAC7CuE,EAAehW,gBAAkB,EACjCgW,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAW86C,EAAiB9L,IAC7E3c,EAAWwb,sBAAsB0F,EAAgBC,EACpD,CACJ,KAAM,CACH,MAAMkH,EAA4B,GAC5BroB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9ErS,EAAiCkS,EAAqBE,GAA2BC,GACvFrS,EAAeE,aAAe1R,GAAM,EAAG2Y,EAAmB7X,GAAoBF,EAAWG,WAAWF,OACpGvQ,EAAWwb,sBAAsB0F,EAAgBC,EACpD,KACE,CACH,MAAMnhB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,IAAIc,EAAoB7jB,GAAoBF,EAAWG,WAAWF,MAElE,GAAIugB,GAA4B,GAAbuD,EAAgB,CAC/Br0B,EAAWgE,cAAe,GACtB+sB,GAAeC,GAAeC,GAAgBC,GAAgBC,KAC9DkD,EAAY7jB,GAAoBF,EAAWG,WAAWF,OAC1D,MAAM+jB,EAAoCD,EAC1Cr0B,EAAW0D,SAASmX,kBAAoBnL,GAAM,EAAGnlC,EAAOqT,gBAAkB,EAAG02C,GAC7E,IAAK,IAAI/gD,EAAYysB,EAAW0D,SAASkX,cAAc9uC,OAAQyH,EAAIysB,EAAW0D,SAASmX,kBAAmBtnC,IACtGysB,EAAW0D,SAASkX,cAAcrnC,GAAK,IAAI2lC,GAE/C,IAAK,IAAI3lC,EAAY,EAAGA,EAAIysB,EAAW0D,SAASmX,kBAAmBtnC,IAAK,CACpE,MAAMskC,EAA4B7X,EAAW0D,SAASkX,cAAcrnC,GACpEskC,EAAMj5B,KAAO8wB,GAAM,EAAC,EAAqBc,GAAoBF,EAAWG,WAAWF,OACnFsH,EAAMsB,KAAOzJ,GAAM,EAAGnlC,EAAO6S,gBAAiBozB,GAAoBF,EAAWG,WAAWF,OACxFsH,EAAMuB,KAAO1J,GAAM,EAAGnlC,EAAOkT,gBAAiB+yB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIh9B,EAAYysB,EAAW0D,SAASmX,kBAAmBtnC,EAAI+gD,EAA2B/gD,IACvFg9B,GAAa,EAKjB,GADAvQ,EAAWoe,aAAa,GAAKpe,EAAW0D,SACnCqtB,IAAgBmB,GAAgBlB,IAAgBiB,GAAehB,GAAgBC,GAAgBC,EAAiB,CACjH,IAAIvD,EAAkCpd,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACjJ,IAAK,IAAI1N,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD,GAAI+qB,EAA0B,GAAK/qB,EAAI,CAEnC,MAAM0xB,EAA6C/jB,GAAoBF,EAAWG,WAAWF,MACvD,MAAlCvQ,EAAWoe,aAAavb,EAAI,KAC5B7C,EAAWoe,aAAavb,EAAI,GAAK,IAAI8X,IACzC3a,EAAWoe,aAAavb,EAAI,GAAIgY,kBAAoBnL,GAAM,EAAGnlC,EAAOqT,gBAAkB,EAAG22C,GACzF,IAAK,IAAIhhD,EAAYysB,EAAWoe,aAAavb,EAAI,GAAI+X,cAAc9uC,OAAQyH,EAAIysB,EAAWoe,aAAavb,EAAI,GAAIgY,kBAAmBtnC,IAC9HysB,EAAWoe,aAAavb,EAAI,GAAI+X,cAAcrnC,GAAK,IAAI2lC,GAE3D,IAAK,IAAI3lC,EAAY,EAAGA,EAAIysB,EAAWoe,aAAavb,EAAI,GAAIgY,kBAAmBtnC,IAAK,CAChF,MAAMskC,EAA4B7X,EAAWoe,aAAavb,EAAI,GAAI+X,cAAcrnC,GAChFskC,EAAMj5B,KAAO8wB,GAAM,EAAC,EAAqBc,GAAoBF,EAAWG,WAAWF,OACnFsH,EAAMsB,KAAOzJ,GAAM,EAAGnlC,EAAO6S,gBAAiBozB,GAAoBF,EAAWG,WAAWF,OACxFsH,EAAMuB,KAAO1J,GAAM,EAAGnlC,EAAOkT,gBAAiB+yB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIh9B,EAAYysB,EAAWoe,aAAavb,EAAI,GAAIgY,kBAAmBtnC,EAAIghD,EAAoChhD,IAC5Gg9B,GAAa,CAEpB,CAER,CACJ,MAEGvQ,EAAWgE,cAAe,EAC1BhE,EAAWge,kBAAoBtO,GAAM,EAAGnlC,EAAOwT,qBAAsByyB,GAAoBF,EAAWG,WAAWF,OAC/GvQ,EAAWie,mBAAqBvO,GAAM,EAAGnlC,EAAOyT,sBAAuBwyB,GAAoBF,EAAWG,WAAWF,MAExH,CACH,MACF,SACI,GAAI0gB,GAAgBC,GAAgBC,EAChC,GAAIF,GAAgBe,EAAa,CAE7B,MAAMwC,EAA8BnkB,GAAkBC,EAAYC,GAClEA,GAAa,EACb,MAAMkkB,EAAwBnkB,EAAWggB,MAAM/f,EAAWA,EAAYikB,GACtEjkB,GAAaikB,EAcb,MAAME,EAAwChE,KAAKC,MAAMgE,KAAKF,IAC9D,IAAK,MAAMG,KAASF,EAAgB,CAChC,MAAMxI,EAAuB0I,EAAe,QACtCnG,EAA0BmG,EAAkB,WAC5CC,EAAuBD,EAAY,KACnC50B,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYka,GACvEzuB,EAAWwG,4BAA8BquB,EAAkC,4BAC3E70B,EAAWyG,kBAAoBouB,EAAwB,kBACvD70B,EAAW0G,gBAAkBmuB,EAAsB,gBACnD70B,EAAW2G,iBAAmBkuB,EAAuB,iBACrD70B,EAAW4G,sBAAwBiuB,EAA4B,sBAC/D70B,EAAW6G,oBAAsBguB,EAA0B,mBAE9D,CACJ,KAAM,CAGH,MAAM/G,EAA0Btd,GAAoBF,EAAWG,WAAWF,MACpE/J,EAAuCqX,QAA0B,EAAlBiQ,GAC/CnnB,EAA2BmnB,GAAmB,EAC9CC,EAA6Bvd,GAAoBF,EAAWG,WAAWF,MACvE3J,EAAiCiX,QAA6B,EAArBkQ,GAEzCtnB,EAA4B4J,GAAkBC,EAAYC,GAChEA,GAAa,EACb,MAAM7J,EAA0B2J,GAAkBC,EAAYC,GAC9DA,GAAa,EACb,MAAM1J,EAA8BwJ,GAAkBC,EAAYC,GAClEA,GAAa,EACb,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWwG,4BAA8BA,EACzCxG,EAAWyG,kBAAoBA,EAC/BzG,EAAW0G,gBAAkBA,EAC7B1G,EAAW2G,iBAAmBA,EAC9B3G,EAAW4G,sBAAwBA,EACnC5G,EAAW6G,oBAAsBA,CAEpC,MAEA,GAAImqB,IAAgBiB,GAAcE,EACmC,iBAAlE3lD,SAASsoD,IAAIlE,UAAUpkD,SAASsoD,IAAIhpD,OAAS,IAAIkqC,gBACxCuc,IACDA,GAAmC,EACnChoD,EAAO+B,4BAA6B,EACpC0yB,GAAaqxB,cAAgB,CAAC,iBAC9BtjD,EAAmB,KAG/B/D,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBjpD,SAAWolC,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQ0kC,GAAoBF,EAAWG,WAAWF,MAAgB,UAClL,GAAK+hB,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAAe,CACpG,MAAM1I,EAA+B,EAC/BtoB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9ErS,EAAiCkS,EAAqBE,GAA2BC,GACvFrS,EAAehW,gBAAkBwE,GAAM,EAAG4Y,EAAsB9X,GAAoBF,EAAWG,WAAWF,OAC1GvQ,EAAWwb,sBAAsB0F,EAAgBC,EAEpD,CAGH,MACF,SAAmC,CAC/B,MAAMnhB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9EwB,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7I,GAAKzC,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAI7E,GAAmB,GAAfhxB,EAAWphB,KACX,IAAK,IAAIrL,EAAY,EAAGA,EAAIhJ,EAAO2Z,UAAW3Q,IAAK,CAC/C,IAAIyhD,EAAaxkB,GAAoBF,EAAWG,WAAWF,OACvDwhB,GAAaf,IAAkBA,IAAgBC,IAAiBC,IAAiBC,KAAkB6D,EAAKD,EAAkBC,IAC9Hh1B,EAAWugB,iBAAiBhtC,GAAK02C,GAAKsG,EAAyByE,GAAIvnD,KACtE,KACE,CAIH,MAAMyzC,EAAiCkS,EAAqBE,GAA2BC,GACvF,IAAIyB,EAAaxkB,GAAoBF,EAAWG,WAAWF,OACvDwhB,GAAaf,IAAkBA,IAAgBC,IAAiBC,IAAiBC,KAAkB6D,EAAKD,EAAkBC,IAC9H9T,EAAeI,eAAiB2I,GAAKsG,EAAyByE,GAC9Dh1B,EAAWwb,sBAAsB0F,EAAgBC,EACpD,MAGD,IAAK,IAAI5tC,EAAY,EAAGA,EAAIhJ,EAAO2Z,UAAW3Q,IAAK,CAC/C,IAAIyhD,EAAaxkB,GAAoBF,EAAWG,WAAWF,OACvDwhB,GAAaf,IAAkBA,IAAgBC,IAAiBC,IAAiBC,KAAkB6D,EAAKD,EAAkBC,IAC9Hh1B,EAAWugB,iBAAiBhtC,GAAKm8B,GAAM,EAAGnlC,EAAO2X,UAAUpW,OAAQkpD,EACtE,CAER,CAAC,MACF,QAA6B,CACzB,MAAMh1B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAcpF,GAZIvzB,EAAW7rB,WADV+8C,IAAiBc,EACMtiB,GAAM,EAAG,IAAMc,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,OAE7IugB,EAIuBj9C,KAAKiB,MAAMjB,KAAKmB,IAAI,IAAM,EAAIgrB,EAAW7rB,YAAc5J,EAAO8Y,qBAAuB9Y,EAAO6Y,iBAH5FssB,GAAM,EAAGnlC,EAAO6Y,gBAAgB,IAAK,EAAkB,EAAGotB,GAAoBF,EAAWG,WAAWF,OAS/H+hB,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAAc,CAC3F,MAAM+D,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvI7T,EAAiCkS,EAAqBE,GAA2BC,GACvF,IAAIyB,EAAaxkB,GAAoBF,EAAWG,WAAWF,OACvDwhB,GAAaf,IAAkBA,IAAgBC,IAAiBC,IAAiBC,KAAkB6D,EAAKD,EAAkBC,IAC9H9T,EAAeM,cAAgByI,GAAKsG,EAAyByE,GAC7Dh1B,EAAWwb,sBAAsB0F,EAAgBC,EACpD,EAEI8P,IAAiBgB,GAAef,GAAgBC,KACjDnxB,EAAWuE,cAAgBmL,GAAM,EAAG,KAASc,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,OAG9J,CAAC,MACF,QAAgC,CAC5B,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9E0B,EAAuBzkB,GAAoBF,EAAWG,WAAWF,MACnFvQ,EAAWoH,cAAgBsI,GAAM,EAAGnlC,EAAOic,mBAAmC,GAAfyuC,GAC/Dj1B,EAAWuf,kBAAoBh1C,EAAOmc,sBAAwBgpB,GAAM,EAAC,EAAsBulB,GAAgB,GAAE,CACpG,CAAC,MACF,SACI,GAAK3C,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAAe,CAE7F,MAAM9P,EAAiB,CACnB,CAAEvd,WAAY,YAAaC,cAAe,EAAK1lB,cAAe,GAC9D,CAAEylB,WAAY,SAAUC,cAAe,EAAK1lB,cAAe,GAC3D,CAAEylB,WAAY,SAAUC,cAAe,KAAO1lB,cAAe,GAC7D,CAAEylB,WAAY,mBAAoBC,cAAe,KAAO1lB,cAAe,GACvE,CAAEylB,WAAY,SAAUC,cAAe,IAAM1lB,aAAc,GAC3D,CAAEylB,WAAY,SAAUC,cAAe,EAAK1lB,aAAc,IAC1D,CAAEylB,WAAY,SAAUC,cAAe,MAAQ1lB,aAAc,IAC7D,CAAEylB,WAAY,SAAUC,cAAe,IAAM1lB,aAAc,IAC3D,CAAEylB,WAAY,mBAAoBC,cAAe,KAAO1lB,cAAe,IAE3E,GAAI8zC,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACjE9M,EAAWyd,EAAexR,GAAM,EAAGwR,EAAep1C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QACpGvQ,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAY,GACvEvU,EAAWse,OAAS3G,GAAM2L,uBAAuB7f,EAASG,eAC1D5D,EAAWue,QAAU5G,GAAM4L,sBAAsB9f,EAASvlB,cAC1D8hB,EAAW2D,WAAap5B,EAAO8T,YAAY1Q,WAAW81B,EAASE,YAAYl2B,MACvEuyB,EAAW2D,YAAcp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,QAEjEuyB,EAAWloB,SAAW,KAE7B,MAAM,GAAIq6C,GAAarB,EACpB,IAAK,IAAI5E,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,MAAMlsB,KAAch3B,KAAKqhD,SAAS6B,GAAc3X,YAAa,CAC9D,MAAM9Q,EAAWyd,EAAexR,GAAM,EAAGwR,EAAep1C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QAC1GvQ,EAAWse,OAAS3G,GAAM2L,uBAAuB7f,EAASG,eAC1D5D,EAAWue,QAAU5G,GAAM4L,sBAAsB9f,EAASvlB,cAC1D8hB,EAAW2D,WAAap5B,EAAO8T,YAAY1Q,WAAW81B,EAASE,YAAYl2B,MACvEuyB,EAAW2D,YAAcp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,QAEjEuyB,EAAWloB,SAAW,KAE7B,MAEF,GAAKm6C,IAAejB,IAAgBC,IAAiBC,IAAiBC,GAAoBL,EAAa,CAC1G,MAAMrtB,EAAWyd,EAAexR,GAAM,EAAGwR,EAAep1C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QACpGvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWse,OAAS3G,GAAM2L,uBAAuB7f,EAASG,eAC1D5D,EAAWue,QAAU5G,GAAM4L,sBAAsB9f,EAASvlB,cAC1D8hB,EAAW2D,WAAap5B,EAAO8T,YAAY1Q,WAAW81B,EAASE,YAAYl2B,MACvEuyB,EAAW2D,YAAcp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,QAEjEuyB,EAAWloB,SAAW,KAE7B,KAAM,CACH,MAAM2rB,EAAWyd,EAAexR,GAAM,EAAGwR,EAAep1C,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QACpGvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWse,OAAS3G,GAAM2L,uBAAuB7f,EAASG,eAC1D5D,EAAWue,QAAU5G,GAAM4L,sBAAsB9f,EAASvlB,cAC1D8hB,EAAW2D,WAAap5B,EAAO8T,YAAY1Q,WAAW81B,EAASE,YAAYl2B,MAGvE+iC,GAAoBF,EAAWG,WAAWF,MAAgB,IAE1DvQ,EAAWmf,eAAgB,GAG/Bnf,EAAWuF,sBAAsBiL,GAAoBF,EAAWG,WAAWF,OAEvEvQ,EAAW2D,YAAcp5B,EAAO8T,YAAY1Q,WAAmB,OAAEF,OAASuyB,EAAWuF,uBAErFvF,EAAWloB,SAAW,KAE7B,CACJ,KAAM,CACH,MAAMkoB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWse,OAAS5O,GAAM,EAAGnlC,EAAO0T,YAAauyB,GAAoBF,EAAWG,WAAWF,OAC3FvQ,EAAWue,QAAU7O,GAAM,EAAGnlC,EAAO2T,aAAapS,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC/FugB,IACD9wB,EAAWuF,sBAAsBiL,GAAoBF,EAAWG,WAAWF,MAClF,CACH,MACF,QACI,GAAK+hB,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAC9E,GAAIoB,GAAetB,EACf,GAAIkB,GAAelB,EAAa,CAC5B,MAAMoE,EAA0B,CAAC,EAAG,EAAG,EAAG,GACpCC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,YACrDjJ,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACjEhpB,EAAiBmoB,GAAM,EAAGwlB,EAAcppD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC1FvQ,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAY,GACjE2M,EAAiCkS,EAAqBlH,GAAc,GAC1ElsB,EAAWsH,QAAU4tB,EAAc3tC,GACEoQ,MAAjCupB,EAAeI,gBAAiE,GAAlCJ,EAAeI,eAAe1iC,OAE5EsiC,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAWwnD,EAAgB5tC,IAC5EyY,EAAWwb,sBAAsB0F,EAAgBC,IAEjDnhB,EAAWsH,SAAW/8B,EAAOoU,SAAShR,WAAiB,KAAEF,QAEzDuyB,EAAWloB,SAAW,IAE7B,MAAM,GAAIq6C,GAAarB,EAAa,CACjC,MAAMoE,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,WAAY,YAC/E,IAAK,IAAIjJ,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAAQyH,IAAK,CAC7E,MAAMgU,EAAiBmoB,GAAM,EAAGwlB,EAAcppD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC1FvQ,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYhhC,GACjE2tC,EAAiCkS,EAAqBlH,GAAc34C,GAC1EysB,EAAWsH,QAAU4tB,EAAc3tC,GACEoQ,MAAjCupB,EAAeI,gBAAiE,GAAlCJ,EAAeI,eAAe1iC,OAE5EsiC,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAWwnD,EAAgB5tC,IAC5EyY,EAAWwb,sBAAsB0F,EAAgBC,IAEjDnhB,EAAWsH,SAAW/8B,EAAOoU,SAAShR,WAAiB,KAAEF,QAEzDuyB,EAAWloB,SAAW,MAEC,GAAtB8qC,GAA6BmO,GAAemB,GAAgBD,GAAcjB,KAAmBhoD,KAAKmjD,kBAAkBD,KAErHlsB,EAAWloB,SAAW,EACtBkoB,EAAWuG,OAASqc,EAE3B,CAER,KAAM,CACH,MAAMsS,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,WAAY,YACzE5tC,EAAiBmoB,GAAM,EAAGwlB,EAAcppD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC1FvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9ErS,EAAiCkS,EAAqBE,GAA2BC,GACvFvzB,EAAWsH,QAAU4tB,EAAc3tC,GACEoQ,MAAjCupB,EAAeI,gBAAiE,GAAlCJ,EAAeI,eAAe1iC,OAE5EsiC,EAAeI,eAAiB/2C,EAAO2X,UAAUvU,WAAWwnD,EAAgB5tC,IAC5EyY,EAAWwb,sBAAsB0F,EAAgBC,IAEjDnhB,EAAWsH,SAAW/8B,EAAOoU,SAAShR,WAAiB,KAAEF,QAEzDuyB,EAAWloB,SAAW,MAEA,GAAtB8qC,GAA6BmO,GAAemB,GAAgBD,GAAcjB,KAE1EhxB,EAAWloB,SAAW,EACtBkoB,EAAWuG,OAASqc,EAE3B,KACE,CACH,MAAM5iB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9EjsB,EAAkBoI,GAAM,EAAGnlC,EAAOoU,SAAS7S,OAAS,EAAG0kC,GAAoBF,EAAWG,WAAWF,OACvGvQ,EAAWsH,QAAUA,EACjBtH,EAAWsH,SAAW/8B,EAAOoU,SAAShR,WAAiB,KAAEF,QAEzDuyB,EAAWloB,SAAW,KAGtBwvB,GAAW/8B,EAAOoU,SAAS7S,QAC3Bk0B,EAAWuH,aAAemI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAAiB,GAC3JvQ,EAAWyH,aAAeiI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAC1IvQ,EAAWwH,aAAekI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAAiB,EAC3JvQ,EAAW0H,YAAcgI,GAAM,EAAGnlC,EAAOuU,aAAahT,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OACxGvQ,EAAWloB,SAAW,MAItBkoB,EAAWuH,aAAeh9B,EAAOoU,SAASqhB,EAAWsH,SAAS9wB,UAC9DwpB,EAAWyH,aAAe,GAC1BzH,EAAWwH,aAAej9B,EAAOoU,SAASqhB,EAAWsH,SAASzoB,WAAa,EAC3EmhB,EAAW0H,YAAcn9B,EAAOoU,SAASqhB,EAAWsH,SAAS1oB,KAEpE,CAIP,MACF,QAEI,GAAKmyC,GAAemB,GAAgBD,GAAcjB,EAAc,CAC5D,MAAMhxB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWif,cAAgBvP,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,aAAawa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OACvIvQ,EAAWkf,iBAAiB1O,GAAoBF,EAAWG,WAAWF,KACzE,CAIH,MACF,SAAyB,CACrB,GAAIyhB,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACvEvnC,KAAKqhD,SAAS6B,GAAc3X,YAAY,GAAGzQ,OAAS4L,GAAM,EAAGnlC,EAAO2U,QAAQpT,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC9H,MAAMvQ,EAAah3B,KAAKqhD,SAAS6B,GAAc3X,YAAY,GAC3DvU,EAAW2e,aAAep0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ3kB,OAC5D6gB,EAAW4e,aAAer0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ1kB,OAC5D4gB,EAAW6e,aAAet0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQzkB,OAC5D2gB,EAAW8e,iBAAmBv0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ12B,WAChE4yB,EAAW+e,WAAax0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQxkB,IAC7D,MAAM,GAAI6yC,GAAarB,EACpB,IAAK,IAAI5E,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,MAAMlsB,KAAch3B,KAAKqhD,SAAS6B,GAAc3X,YAAa,CAC9D,MAAM6gB,EAAwB5kB,GAAoBF,EAAWG,WAAWF,MACxE,IAAIzM,EAAiB4L,GAAM,EAAGnlC,EAAO2U,QAAQpT,OAAQspD,GAChC,GAAjBA,IAEAtxB,EAAS,EACT9D,EAAW6D,MAAQ,GAEvB7D,EAAW8D,OAASA,EACpB9D,EAAW2e,aAAep0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ3kB,OAC5D6gB,EAAW4e,aAAer0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ1kB,OAC5D4gB,EAAW6e,aAAet0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQzkB,OAC5D2gB,EAAW8e,iBAAmBv0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ12B,WAChE4yB,EAAW+e,WAAax0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQxkB,IAC7D,MAEF,GAAI8yC,GAAetB,EAAa,CACnC,MAAMsE,EAAwB5kB,GAAoBF,EAAWG,WAAWF,MACxE,IAAIzM,EAAiB4L,GAAM,EAAGnlC,EAAO2U,QAAQpT,OAAQspD,GAChC,GAAjBA,IAEAtxB,EAAS,EACT96B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB1vB,MAAQ,GAE1F76B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBzvB,OAASA,EACvF,MAAM9D,EAAah3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACxEvzB,EAAW2e,aAAep0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ3kB,OAC5D6gB,EAAW4e,aAAer0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ1kB,OAC5D4gB,EAAW6e,aAAet0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQzkB,OAC5D2gB,EAAW8e,iBAAmBv0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ12B,WAChE4yB,EAAW+e,WAAax0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQxkB,IAC7D,MACGtW,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBzvB,OAAS4L,GAAM,EAAGnlC,EAAO2U,QAAQpT,OAAS,EAAG0kC,GAAoBF,EAAWG,WAAWF,OAEzK,MAAMvQ,EAAah3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAExE,IAAMtC,IAAiBgB,GAAef,GAAgBC,IAAqBnxB,EAAW8D,QAAUv5B,EAAO2U,QAAQpT,OAAU,CAErHk0B,EAAW2e,aAAenO,GAAoBF,EAAWG,WAAWF,MAEpE,MAAM8kB,EAAuB7kB,GAAoBF,EAAWG,WAAWF,MACjEqO,EAAuBpO,GAAoBF,EAAWG,WAAWF,MAA8I,IAA5HC,GAAoBF,EAAWG,WAAWF,MAA2E,GAA1DC,GAAoBF,EAAWG,WAAWF,OAExL+kB,EAAuB9kB,GAAoBF,EAAWG,WAAWF,MACjEsO,EAAuBrO,GAAoBF,EAAWG,WAAWF,MAA8I,IAA5HC,GAAoBF,EAAWG,WAAWF,MAA2E,GAA1DC,GAAoBF,EAAWG,WAAWF,OAExLglB,EAA2B/kB,GAAoBF,EAAWG,WAAWF,MACrEuO,EAA2BtO,GAAoBF,EAAWG,WAAWF,MAA2E,GAA1DC,GAAoBF,EAAWG,WAAWF,MAEhIilB,EAAqBhlB,GAAoBF,EAAWG,WAAWF,MAC/DwO,EAAqBvO,GAAoBF,EAAWG,WAAWF,MAA2E,GAA1DC,GAAoBF,EAAWG,WAAWF,MAGhIvQ,EAAW4e,aAAeA,EAAe,IACb,GAAxByW,IAA2Br1B,EAAW4e,eAAiB,GAE3D5e,EAAW6e,aAAeA,EAAe,IACb,GAAxByW,IAA2Bt1B,EAAW6e,eAAiB,GAE3D7e,EAAW8e,iBAAmBA,EAAmB,IACjB,GAA5ByW,IAA+Bv1B,EAAW8e,mBAAqB,GAEnE9e,EAAW+e,WAAaA,EAAa,IACX,GAAtByW,IAAyBx1B,EAAW+e,aAAe,GAEvD/e,EAAWgf,eAAexO,GAAoBF,EAAWG,WAAWF,KACvE,MACGvQ,EAAW2e,aAAep0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ3kB,OAC5D6gB,EAAW4e,aAAer0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ1kB,OAC5D4gB,EAAW6e,aAAet0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQzkB,OAC5D2gB,EAAW8e,iBAAmBv0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQ12B,WAChE4yB,EAAW+e,WAAax0C,EAAO2U,QAAQ8gB,EAAW8D,QAAQxkB,KAC1D0gB,EAAWgf,cAAe,CAGjC,CAAC,MACF,QACI,GAAKsT,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAAe,CAC7F,MAAMhxB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAW6D,MAAQ6L,GAAM,EAAGnlC,EAAOwW,OAAOjV,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OACxFvQ,EAAW6D,OAASt5B,EAAOwW,OAAOpT,WAAyB,aAAEF,QAE7DuyB,EAAWloB,SAAW,KAE7B,CAGH,MACF,SAA0B,CACtB,MAAMkoB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,GAAKjB,GAAcxB,GAAkBC,GAAemB,GAAgBD,GAAcjB,EAAe,CAC7FhxB,EAAWloB,QAAkE,MAAvD04B,GAAoBF,EAAWG,WAAWF,MACtC,GAAtBqS,GAA8BmO,GAAemB,GAAgBD,GAAcjB,EAGpEv4C,EAAqBunB,EAAWloB,WACvCkoB,EAAWuG,OAASqc,GAFpB5iB,EAAWloB,UAAW,EAM1BkoB,EAAWloB,SAAW,EAElBkoB,EAAWsH,SAAW/8B,EAAOoU,SAAShR,WAAiB,KAAEF,QAEzDuyB,EAAWloB,SAAW,KAEtBkoB,EAAW0e,QAAUn0C,EAAOoa,eAE5Bqb,EAAWloB,SAAW,KAEtBkoB,EAAWgG,QACXhG,EAAWloB,SAAW,EAEtBkoB,EAAWloB,UAAW,EAI1B,MAAMopC,EAAiCkS,EAAqBE,GAA2BC,GACvFvzB,EAAWwb,sBAAsB0F,EAAgBC,EACpD,KAAM,CAgBH,GAZYnhB,EAAWloB,QADdo5C,IAAiBa,GAAWb,IAAiBc,GAAef,IAAiBkB,GAErE3hB,GAAoBF,EAAWG,WAAWF,OAAa,GACrDC,GAAoBF,EAAWG,WAAWF,OAAa,GACvDC,GAAoBF,EAAWG,WAAWF,OAAa,GACvDC,GAAoBF,EAAWG,WAAWF,OAAa,GACvDC,GAAoBF,EAAWG,WAAWF,OAAa,EACvDC,GAAoBF,EAAWG,WAAWF,OAAa,KACxD,EAEYC,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MAGrIp4B,EAAyB6nB,EAAWloB,SAAU,CAC9C,IAAIu8C,EAAoB7jB,GAAoBF,EAAWG,WAAWF,MAClE,GAAIugB,GAA4B,GAAbuD,EAAgB,CAC/Br0B,EAAW0F,gBAAiB,EACvBorB,IACDuD,EAAY7jB,GAAoBF,EAAWG,WAAWF,OAC1DvQ,EAAW6F,WAAWgV,kBAAoBnL,GAAM,EAAGnlC,EAAOqT,gBAAkB,EAAGy2C,GAC/E,IAAK,IAAI9gD,EAAYysB,EAAW6F,WAAW+U,cAAc9uC,OAAQyH,EAAIysB,EAAW6F,WAAWgV,kBAAmBtnC,IAC1GysB,EAAW6F,WAAW+U,cAAcrnC,GAAK,IAAI2lC,GAEjD,IAAK,IAAI3lC,EAAY,EAAGA,EAAIysB,EAAW6F,WAAWgV,kBAAmBtnC,IAAK,CACtE,MAAMskC,EAA4B7X,EAAW6F,WAAW+U,cAAcrnC,GACtEskC,EAAMj5B,KAAO8wB,GAAM,EAAC,EAAqBc,GAAoBF,EAAWG,WAAWF,OACnFsH,EAAMsB,KAAOzJ,GAAM,EAAGnlC,EAAO6S,gBAAiBozB,GAAoBF,EAAWG,WAAWF,OACxFsH,EAAMuB,KAAO1J,GAAM,EAAGnlC,EAAOkT,gBAAiB+yB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIh9B,EAAYysB,EAAW6F,WAAWgV,kBAAmBtnC,EAAI8gD,EAAW9gD,IACzEg9B,GAAa,EAKjB,GADAvQ,EAAWqe,eAAe,GAAKre,EAAW6F,WACrCkrB,IAAgBmB,GAAU,GAAkB,GAAkB,GAAqBf,EAAiB,CACrG,IAAIvD,EAAkCpd,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACjJ,IAAK,IAAI1N,EAAY,EAAGA,EAAIt4B,EAAOuT,iBAAmB,EAAG+kB,IACrD,GAAI+qB,EAA0B,GAAK/qB,EAAI,CAEnC,MAAM0xB,EAA6C/jB,GAAoBF,EAAWG,WAAWF,MACrD,MAApCvQ,EAAWqe,eAAexb,EAAI,KAC9B7C,EAAWqe,eAAexb,EAAI,GAAK,IAAI8X,IAC3C3a,EAAWqe,eAAexb,EAAI,GAAIgY,kBAAoBnL,GAAM,EAAGnlC,EAAOqT,gBAAkB,EAAG22C,GAC3F,IAAK,IAAIhhD,EAAYysB,EAAWqe,eAAexb,EAAI,GAAI+X,cAAc9uC,OAAQyH,EAAIysB,EAAWqe,eAAexb,EAAI,GAAIgY,kBAAmBtnC,IAClIysB,EAAWqe,eAAexb,EAAI,GAAI+X,cAAcrnC,GAAK,IAAI2lC,GAE7D,IAAK,IAAI3lC,EAAY,EAAGA,EAAIysB,EAAWqe,eAAexb,EAAI,GAAIgY,kBAAmBtnC,IAAK,CAClF,MAAMskC,EAA4B7X,EAAWqe,eAAexb,EAAI,GAAI+X,cAAcrnC,GAClFskC,EAAMj5B,KAAO8wB,GAAM,EAAC,EAAqBc,GAAoBF,EAAWG,WAAWF,OACnFsH,EAAMsB,KAAOzJ,GAAM,EAAGnlC,EAAO6S,gBAAiBozB,GAAoBF,EAAWG,WAAWF,OACxFsH,EAAMuB,KAAO1J,GAAM,EAAGnlC,EAAOkT,gBAAiB+yB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIh9B,EAAYysB,EAAWqe,eAAexb,EAAI,GAAIgY,kBAAmBtnC,EAAIghD,EAAoChhD,IAC9Gg9B,GAAa,CAEpB,CAER,CACJ,MACGvQ,EAAW0F,gBAAiB,EAC5B1F,EAAW6F,WAAW6O,QACtB1U,EAAWke,oBAAsBxO,GAAM,EAAGnlC,EAAOwT,qBAAsByyB,GAAoBF,EAAWG,WAAWF,OACjHvQ,EAAWme,qBAAuBzO,GAAM,EAAGnlC,EAAOyT,sBAAuBwyB,GAAoBF,EAAWG,WAAWF,MAG1H,CACG14B,EAAyBmoB,EAAWloB,WACpCkoB,EAAW2D,WAAa+L,GAAM,EAAGnlC,EAAO8T,YAAYvS,OAAQ0kC,GAAoBF,EAAWG,WAAWF,QACjG0gB,IAAiBkB,GAAajB,IAAiBc,IACQ,GAApDznD,EAAO8T,YAAY2hB,EAAW2D,YAAYnlB,SAAgBwhB,EAAWvhB,WAAa+xB,GAAoBF,EAAWG,WAAWF,QAGpIx4B,EAAoBioB,EAAWloB,WAC/BkoB,EAAW6D,MAAQ6L,GAAM,EAAGnlC,EAAOwW,OAAOjV,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAEzC,GAA/ChmC,EAAOwW,OAAOif,EAAW6D,OAAO5iB,aAAyB6vC,EAGlDvmD,EAAOwW,OAAOif,EAAW6D,OAAO3iB,WAAa,IAAO+vC,IAAiBkB,GAAajB,IAAiBc,KAC1GhyB,EAAW9e,WAAasvB,GAAoBF,EAAWG,WAAWF,QAHlEvQ,EAAWif,cAAgBzO,GAAoBF,EAAWG,WAAWF,MACrEvQ,EAAWkf,iBAAkB1O,GAAoBF,EAAWG,WAAWF,QAK3Ev4B,EAAyBgoB,EAAWloB,WACpCkoB,EAAWye,WAAa/O,GAAM,EAAGnlC,EAAOka,gBAAiB+rB,GAAoBF,EAAWG,WAAWF,QAEnGt4B,EAAqB+nB,EAAWloB,WAC5Bg5C,GAEA9wB,EAAW0e,OAAShP,GAAMnlC,EAAOsa,UAAWta,EAAOqa,UAAY,EAAG4rB,GAAoBF,EAAWG,WAAWF,OAC5GvQ,EAAW0e,OAAS7qC,KAAKiB,OAAOkrB,EAAW0e,OAAS,IAAM7qC,KAAKC,IAAIksB,EAAW0e,OAAS,GAAK,GAAK,EAAIn0C,EAAOoa,eAE5Gqb,EAAW0e,OAAShP,GAAMnlC,EAAOsa,UAAWta,EAAOqa,UAAY,GAAI4rB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAGjLr4B,EAAsB8nB,EAAWloB,WACjCkoB,EAAWsH,QAAUoI,GAAM,EAAGnlC,EAAOoU,SAAS7S,OAAS,EAAG0kC,GAAoBF,EAAWG,WAAWF,OAGhGvQ,EAAWsH,SAAW/8B,EAAOoU,SAAS7S,QAAYglD,GAQlD9wB,EAAWuH,aAAeh9B,EAAOoU,SAASqhB,EAAWsH,SAAS9wB,UAC9DwpB,EAAWyH,aAAe,GAC1BzH,EAAWwH,aAAej9B,EAAOoU,SAASqhB,EAAWsH,SAASzoB,WAAa,EAC3EmhB,EAAW0H,YAAcn9B,EAAOoU,SAASqhB,EAAWsH,SAAS1oB,OAV7DohB,EAAWuH,aAAemI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAAiB,GAC3JvQ,EAAWyH,aAAeiI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAC1IvQ,EAAWwH,aAAekI,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,iBAAiBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAC1IvQ,EAAW0H,YAAcgI,GAAM,EAAGnlC,EAAOuU,aAAahT,OAAQ0kC,GAAoBF,EAAWG,WAAWF,SAU5Gn4B,EAAyB4nB,EAAWloB,WACpCkoB,EAAW+F,WAAa2J,GAAM,EAAGnlC,EAAOgc,gBAAiBiqB,GAAoBF,EAAWG,WAAWF,QAC9FwgB,IAAgBmB,GAAelB,GAAeC,GAAgBC,GAAgBC,KAC/EnxB,EAAWgG,UAAUwK,GAAoBF,EAAWG,WAAWF,QAEnE73B,EAAiBsnB,EAAWloB,WAC5BkoB,EAAWwf,eAAiB9P,GAAM,EAAGnlC,EAAOyV,aAAcwwB,GAAoBF,EAAWG,WAAWF,OACpGvQ,EAAWyf,iBAAmB/P,GAAM,EAAGnlC,EAAO0V,eAAgBuwB,GAAoBF,EAAWG,WAAWF,OACvHvQ,EAAW0f,gBAAkBhQ,GAAM,EAAGnlC,EAAOkd,cAAc3b,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OACzF2gB,GAAgBc,EACjBhyB,EAAW2f,aAAejQ,GAAM,EAAGnlC,EAAO6Y,gBAAiBotB,GAAoBF,EAAWG,WAAWF,QAErGvQ,EAAW2f,aAAejQ,GAAM,EAAGnlC,EAAO6Y,iBAAkBotB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,OACrLvQ,EAAW4f,WAAalQ,GAAMnlC,EAAO6V,cAAe7V,EAAO4V,cAAgB,GAAIqwB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,SAG9K53B,EAAqBqnB,EAAWloB,WAChCkoB,EAAWoG,WAAasJ,GAAM,EAAGnlC,EAAOoQ,gBAAiB61B,GAAoBF,EAAWG,WAAWF,OACnGvQ,EAAWqG,eAAiBqJ,GAAM,EAAGnlC,EAAOmQ,oBAAqB81B,GAAoBF,EAAWG,WAAWF,OAC3GvQ,EAAWsG,aAAeoJ,GAAM,EAAGnlC,EAAOwQ,gBAAkB,EAAGy1B,GAAoBF,EAAWG,WAAWF,OACzGvQ,EAAWmG,UAAYuJ,GAAM,EAAGnlC,EAAOkQ,eAAgB+1B,GAAoBF,EAAWG,WAAWF,QAElG13B,EAAyBmnB,EAAWloB,WACnCkoB,EAAW+f,aAAavP,GAAoBF,EAAWG,WAAWF,OAElEl4B,EAAyB2nB,EAAWloB,WACpCkoB,EAAW6f,eAAiBnQ,GAAM,EAAGnlC,EAAOqc,oBAAqB4pB,GAAoBF,EAAWG,WAAWF,OAC3GvQ,EAAWkG,uBAAyBwJ,GAAM,EAAGnlC,EAAOuc,4BAA6B0pB,GAAoBF,EAAWG,WAAWF,QAE3Hj4B,EAAsB0nB,EAAWloB,WAG7BkoB,EAAWqE,IAAMqL,GAAM,EAAGnlC,EAAOsV,OAAS,EAF1CixC,EAE6Cj9C,KAAKiB,MAAM07B,GAAoBF,EAAWG,WAAWF,OAAkBhmC,EAAa,OAAI,KAGvFimC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAIvJwgB,IAAgBgB,GAAcf,GAAeC,GAAgBC,GAAgBC,KAC9EnxB,EAAWsE,SAAWkM,GAAoBF,EAAWG,WAAWF,QAEpEh4B,EAAqBynB,EAAWloB,WAG5BkoB,EAAW2H,OAFXmpB,EAEsH,EAAlGphB,GAAM,EAAInlC,EAAOwV,YAAc,EAAK,EAAGywB,GAAoBF,EAAWG,WAAWF,OAGjFb,GAAM,EAAGnlC,EAAOwV,YAAaywB,GAAoBF,EAAWG,WAAWF,QAG/F/3B,EAAmBwnB,EAAWloB,WAC9BkoB,EAAW+G,YAAc2I,GAAM,EAAGnlC,EAAO0P,iBAAkBu2B,GAAoBF,EAAWG,WAAWF,OACrGvQ,EAAW8f,UAAYpQ,GAAM,EAAGnlC,EAAOwP,eAAgBy2B,GAAoBF,EAAWG,WAAWF,QAEjG93B,EAAqBunB,EAAWloB,WAE5BkoB,EAAWuG,OAASmJ,GAAM,EAAGnlC,EAAO+P,YADpCw2C,EACiDj9C,KAAKiB,MAAM07B,GAAoBF,EAAWG,WAAWF,MAAgBhmC,EAAO+P,YAAc,GAE1Fk2B,GAAoBF,EAAWG,WAAWF,QAG/F33B,EAAwBonB,EAAWloB,WACnCkoB,EAAW4gB,gBAAkBpQ,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MACvIvQ,EAAW6gB,gBAAkBrQ,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAE9I,CAEDvQ,EAAWloB,SAAW,KACzB,CAAC,MACF,SACI,GAAIk6C,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACxCvnC,KAAKqhD,SAAS6B,GAAc3X,YAAY,GAC5DxQ,OAASlwB,KAAKiB,MAAM46B,IAAOnlC,EAAOmV,YAAc,EAAG,EAA8D,GAA1D8wB,GAAoBF,EAAWG,WAAWF,OAC/G,MAAM,GAAI4hB,GAAarB,EACpB,IAAK,IAAI5E,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,MAAMlsB,KAAch3B,KAAKqhD,SAAS6B,GAAc3X,YACjDvU,EAAW+D,OAASlwB,KAAKiB,MAAM46B,IAAOnlC,EAAOmV,YAAc,EAAG,EAA8D,GAA1D8wB,GAAoBF,EAAWG,WAAWF,aAGjH,GAAI6hB,GAAetB,EAAa,CACJ9nD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACzExvB,OAASlwB,KAAKiB,MAAM46B,IAAOnlC,EAAOmV,YAAc,EAAG,EAA8D,GAA1D8wB,GAAoBF,EAAWG,WAAWF,OAC/G,MAAM,GAAIugB,EAAa,CAEW9nD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACzExvB,OAASlwB,KAAKiB,MAAM46B,IAAOnlC,EAAOmV,YAAc,EAAG,EAA8D,IAA1D8wB,GAAoBF,EAAWG,WAAWF,MAAuB,GACtI,KAAM,CAC4BvnC,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAEzExvB,OAASlwB,KAAKiB,MAAM46B,IAAOnlC,EAAOmV,YAAc,EAAGnV,EAAOmV,YAAc,EAAI,GAAK8wB,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,OAAkBhmC,EAAOmV,YAAc,GACjP,CACH,MACF,QACI,GAAI4yC,GAAcxB,EAAa,CAEI9nD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACzElvB,IAAMqL,GAAM,EAAGnlC,EAAOsV,OAAS,EAAG2wB,GAAoBF,EAAWG,WAAWF,OAAkBhmC,EAAa,OAAI,GAC7H,MAAM,GAAKwmD,GAAemB,GAAgBD,GAAcjB,EAAc,CACnE,MAAMhxB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWqE,IAAMqL,GAAM,EAAGnlC,EAAOsV,OAAS,GAAI2wB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAEpJwgB,IAAgBiB,GAAehB,GAAeC,GAAgBC,GAAgBC,KAC9EnxB,EAAWsE,SAAWkM,GAAoBF,EAAWG,WAAWF,MAEvE,CAGH,MACF,QAAyB,CACrB,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,IAE/ExC,GAAemB,GAAgBD,GAAcjB,KAE9ChxB,EAAW0e,OAAShP,GAAMnlC,EAAOsa,UAAWta,EAAOqa,UAAY,EAAgI,IAA3H4rB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAC9KvQ,EAAWloB,SAAW,IAI7B,CAAC,MACF,QAAiC,CAC7B,IAAIkoB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAElF,IAAK,IAAI1wB,EAAY,EAAGA,EAAI,GAAIA,IAC5B7C,EAAWogB,eAAevd,GACpB6M,IAAO,GAAI,GAAIc,GAAoBF,EAAWG,WAAWF,MAAgB,IAGnF,IAAIj9B,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIysB,EAAWogB,eAAet0C,OAAQyH,IAC1DD,GAAO0sB,EAAWogB,eAAe7sC,GAErC,MAAMC,EAAkBF,EAAM0sB,EAAWogB,eAAet0C,OAGxD,IAAIkI,EAAqB,EACrBgtC,EAAmB,EACvB,IAAK,IAAIztC,EAAY,EAAGA,EAAIysB,EAAWogB,eAAet0C,OAAQyH,IAC1DS,GAAcgtC,EACdA,EAAWhhB,EAAWogB,eAAe7sC,GAAKC,EAC1CwsB,EAAWqgB,uBAAuB9sC,GAAKS,EAI3CgsB,EAAWqgB,uBAAuB,IAAM,CAE3C,CAAC,MACF,QAAkC,CAC9B,IAAIoV,EAAoBjlB,GAAoBF,EAAWG,WAAWF,MAGjD,IAAbklB,EACAzsD,KAAK0sD,0BAIL1sD,KAAK0hD,iBAAoB+K,EAAY,GAAKA,EAAY,GAAM,GAAKA,EAAY,IAAM,GACnFA,EAAYjlB,GAAoBF,EAAWG,WAAWF,MACtDvnC,KAAK2hD,WAAc8K,EAAY,GAAKA,EAAY,GAAMA,EAAY,EAClEzsD,KAAKshD,WAAa9Z,GAAoBF,EAAWG,WAAWF,MAC5DvnC,KAAKuhD,UAAuE,IAA1D/Z,GAAoBF,EAAWG,WAAWF,MAAyB,IACrFvnC,KAAKwhD,qBAAuBha,GAAoBF,EAAWG,WAAWF,MAAgB,GACtFvnC,KAAKyhD,eAAiBja,GAAoBF,EAAWG,WAAWF,MAAgB,GAChFvnC,KAAK4hD,aAAepa,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,OAAiB,GAEtJ,CAAC,MACF,QACI,IAAK,IAAIjkB,EAAkB,EAAGA,EAAUtjB,KAAK6iD,kBAAmBv/B,IAAW,CAEvE,IAAIqpC,GAIAA,IAHA1D,GAAejB,GAAgBC,GAAiBC,GAAiBC,GAG3C3gB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAF5GC,GAAoBF,EAAWG,WAAWF,MAGlEvnC,KAAKqhD,SAAS/9B,GAASnf,KAAOumD,mBAAmBpjB,EAAWsgB,UAAUrgB,EAAWA,EAAYolB,KAE7FplB,GAAaolB,EAChB,CACH,MACF,QAA4B,CACxB,MAAM31B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,GAAmB,GAAfvzB,EAAWphB,KACXohB,EAAWyE,UAAYiL,GAAM,EAAGnlC,EAAOgX,WAAWzV,OAAQ0kC,GAAoBF,EAAWG,WAAWF,YAKpG,GAFAvQ,EAAWggB,aAAetQ,GAAM,EAAGnlC,EAAOoX,cAAc7V,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC1GvQ,EAAWkgB,gBAAgBlJ,WAAWhX,EAAWggB,cACb,IAAhC1P,EAAWG,WAAWF,GAAiC,CACvD,IAAIqlB,EAAmBlmB,GAAM,EAAGnlC,EAAO8W,cAAgB,EAAE,EAAGmvB,GAAoBF,EAAWG,WAAWF,EAAY,KAClHA,IACA,IAAIslB,EAA2B,GAC/B,GAAsC,KAAlCvlB,EAAWG,WAAWF,EAAU,GAA2B,CAC3DA,IACA,IAAI1N,EAAY,EAEhB,IADA0N,IACuC,KAAhCD,EAAWG,WAAWF,IAAmC,CAC5DslB,EAAahzB,GAAK,GAClB,IAAI+N,EAAY,EAChB,KAAuC,IAAhCN,EAAWG,WAAWF,IACzBslB,EAAahzB,GAAG+N,GAAKlB,GAAM,EAAGnlC,EAAO8W,cAAgB,EAAGmvB,GAAoBF,EAAWG,WAAWF,KAClGK,IACAL,IAEJ1N,IACA0N,GACH,CACDvQ,EAAWkgB,gBAAgBlzC,IAAI4oD,EAAkBC,GACjDtlB,GACH,CACJ,CAEL,GAAK+hB,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAAc,CAE3F,MAAM9P,EAAiCkS,EAAqBE,GAA2BC,GACvFvzB,EAAWwb,sBAAsB0F,EAAgBC,EACpD,CACJ,CAAC,MACF,SACI,GAAI6P,IAAgBiB,GAAcE,EAAW,CAEzC,MAAM2D,EAAoBtlB,GAAoBF,EAAWG,WAAWF,MAC/DulB,EAAoB,GAAM,IAC2C,iBAAlEtpD,SAASsoD,IAAIlE,UAAUpkD,SAASsoD,IAAIhpD,OAAS,IAAIkqC,gBAC5Cuc,IACDA,GAAmC,EACnChoD,EAAO+B,4BAA6B,EACpC0yB,GAAaqxB,cAAgB,CAAC,iBAC9BtjD,EAAmB,KAM3B/D,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyBjpD,SAD7EwrD,EAAoB,GAAM,GAC8DpmB,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQgqD,EAAoB,IAEzIA,EAAoB,GAAM,GACyDpmB,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQgqD,EAAoB,IAEzIA,EAAoB,IAAO,GACwD,GAGApmB,GAAM,EAAGnlC,EAAOC,UAAUsB,OAAQgqD,EAAoB,GAEtJ,KAAM,CACH,MAAM91B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWof,iBAAmB1P,GAAM,EAAGnlC,EAAOgZ,oBAAsB,EAAGitB,GAAoBF,EAAWG,WAAWF,OACjHvQ,EAAWqf,eAAiB3P,GAAM,EAAGnlC,EAAOiZ,kBAAoB,EAAGgtB,GAAoBF,EAAWG,WAAWF,OAC7GvQ,EAAWsf,cAAgB5P,GAAM,EAAGnlC,EAAOkZ,iBAAmB,EAAG+sB,GAAoBF,EAAWG,WAAWF,MAC9G,CACZ,MACO,QAA+B,CAC3B,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,GAAmB,GAAfvzB,EAAWphB,KACXohB,EAAW0E,aAAegL,GAAM,EAAGnlC,EAAO8X,UAAUvW,OAAQ0kC,GAAoBF,EAAWG,WAAWF,WAErG,CACDvQ,EAAWigB,gBAAkBvQ,GAAM,EAAGnlC,EAAOgY,aAAazW,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC5GvQ,EAAWmgB,mBAAmBnJ,WAAWhX,EAAWigB,iBACpD,IAAI4V,EAA2B,GAC/B,GAAoC,KAAhCvlB,EAAWG,WAAWF,GAAmC,CACzD,IAAI1N,EAAY,EAEhB,IADA0N,IACuC,KAAhCD,EAAWG,WAAWF,IAAmC,CAC5DslB,EAAahzB,GAAK,GAClB,IAAI+N,EAAY,EAChB,KAAuC,IAAhCN,EAAWG,WAAWF,IACzBslB,EAAahzB,GAAG+N,GAAKlB,GAAM,EAAGnlC,EAAO8W,cAAgB,EAAGmvB,GAAoBF,EAAWG,WAAWF,KAClGK,IACAL,IAEJ1N,IACA0N,GACH,CACDvQ,EAAWmgB,mBAAmBnzC,IAAI6oD,GAClCtlB,GACH,CACJ,CAEJ,CAAC,MACF,QACIvnC,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAAyB5uB,kBAAoB+K,GAAM,EAAGnlC,EAAOsX,qBAAuB,EAAG2uB,GAAoBF,EAAWG,WAAWF,OACxL,MACF,QACI,GAAK+hB,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAAc,CAC3F,MAAM+D,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvI/0B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9ErS,EAAiCkS,EAAqBE,GAA2BC,GAEvF,IAAIyB,EAAYxkB,GAAoBF,EAAWG,WAAWF,OACrDwhB,GAAaf,IAAkBA,IAAgBC,IAAiBC,IAAiBC,KAAkB6D,EAAKD,EAAkBC,IAC/H9T,EAAeU,iBAAmBqI,GAAKsG,EAAyB/f,GAAoBwkB,IACpFh1B,EAAWwb,sBAAsB0F,EAAgBC,EACpD,CAGH,MACF,QAAsC,CAClC,MAAMnhB,EAAah3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC5D,GAAIvB,GAAehB,EAAa,CACpD,MAAM+E,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAExG,IAAK,IAAInlB,EAAI,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAC9D5Q,EAAW4E,UAAUgM,GAAG/L,UAAYkxB,EAAYrmB,GAAM,EAAGqmB,EAAYjqD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAE9H,MACjB,GAAKygB,GAAgBC,GAAiBC,GAAiBC,EASnC,IAAK,IAAIvgB,EAAI,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IACtF5Q,EAAW4E,UAAUgM,GAAG/L,UAAY6K,GAAM,EAAGnlC,EAAOuX,oBAAoBhW,OAAQ0kC,GAAoBF,EAAWG,WAAWF,WAV1E,CAC5E,MAAMylB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAE3G,IAAK,IAAIplB,EAAI,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAC9D5Q,EAAW4E,UAAUgM,GAAG/L,UAAYmxB,EAAetmB,GAAM,EAAGsmB,EAAelqD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAGzJ,CAMK,CAAC,MACF,QAAqC,CACjC,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,IAAK,IAAI3iB,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAC9F5Q,EAAW4E,UAAUgM,GAAGp6B,UAAYk5B,GAAM,EAAGnlC,EAAOsX,qBAAuB,EAAG2uB,GAAoBF,EAAWG,WAAWF,MAE/H,CAAC,MACF,QAA4B,CACxB,MAAMwkB,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvIkB,EAAgC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrHC,EAA6B,CAC/B,EACA,EACA,EACA,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EACN,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GAAI,GAChB,GAAI,GAAI,GAAI,GAAI,GAChB,GAAI,GAAI,GACR,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EACA,EACA,EACA,GAAI,GAAI,IAENl2B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,GAAKjB,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAAc,CAC3F,MAAM9P,EAAiCkS,EAAqBE,GAA2BC,GACvFrS,EAAeQ,kBAAoB,GACnC,IAAK,IAAI9Q,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAAK,CACnG,IAAIokB,EAAYxkB,GAAoBF,EAAWG,WAAWF,OACrDwhB,GAAaf,GAAW,KAAoBgE,EAAKD,EAAkBC,IACpEjE,IAAaiE,EAAKiB,EAAoBjB,IAC1C9T,EAAeQ,kBAAkB9Q,GAAKqZ,GAAKsG,EAAyByE,EACvE,CACDh1B,EAAWwb,sBAAsB0F,EAAgBC,EACpD,KAAM,CACH,MAAM3C,EAAwB9O,GAAM,EAAGnlC,EAAOwc,iBAAmB,EAAGypB,GAAoBF,EAAWG,WAAWF,QAEzGwgB,IAAgBoB,GAAelB,IAAiBiB,GAAW,GAAmBf,KAC/EnxB,EAAWmE,cAAgBuL,GAAM,EAAGnlC,EAAO0d,WAAWta,WAAW,kBAAkBwa,UAAY,EAAGqoB,GAAoBF,EAAWG,WAAWF,OAC5IvQ,EAAWoE,mBAAoBoM,GAAoBF,EAAWG,WAAWF,OAE7E,IAAK,IAAIh9B,EAAY,EAAGA,EAAIirC,EAAejrC,IAAK,CAC5C,MAAM2xB,EAAiBwK,GAAM,EAAGnlC,EAAO0c,4BAA4Bnb,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OACrH,IAAI9iC,EAAgB,EACpB,MAAM6Z,EAAmB/c,EAAO0c,4BAA4Bie,GAAQ5d,SAChEA,EAAW,IACX7Z,EAAQiiC,GAAM,EAAGpoB,EAAUkpB,GAAoBF,EAAWG,WAAWF,QAGzE,IAAI4lB,EAAuB3lB,GAAoBF,EAAWG,WAAWF,OAChEwhB,GAAaf,GAAW,KAAoBmF,EAAepB,EAAkBoB,IAClF,IAAI/wB,EAA2B,IACzB8rB,IAAeC,GAAmBD,GAAcc,KAClD5sB,EAAmB76B,EAAO2X,UAAUi0C,GAAch0C,MAClDg0C,EAAeD,EAAiBC,IAEpC,IAAIvY,GAAa,IACVsT,IAAeC,GAAqBD,GAAgBc,IAAiC,GAAhBmE,GACxEvY,GAAa,EACbuY,OAEUjF,IAAeC,GAAqBD,GAAgBc,IAAiBmE,EAAe,GAC9FA,IAGJ,MAAMhxB,EAAmBuK,GAAM,EAAGnlC,EAAO6X,aAAatW,OAAQqqD,GAC9D,IAAI1Y,EAA6B,EAC7BC,EAA2BnzC,EAAO8Z,SAClCykC,GAA2B,EAC/B1jB,EAAqB8rB,IAAiBc,GAAcb,EAAmB5mD,EAAO6X,aAAa+iB,GAAUhjB,MAAQijB,EAC7G,IAAIC,EAAgC,EAChCC,EAAgC,EAChCkY,EAAgB,EAChB5O,EAAe,EACf9J,EAAQ,EAEZ,GAAKosB,IAAiBc,GAAcb,EAAiB,CAWjD,GAV0C,OAAtC5mD,EAAO6X,aAAa+iB,GAAUh4B,MAC9B23B,EAAW4K,GAAM,EAAC,EAAwBc,GAAoBF,EAAWG,WAAWF,OACxE,GAARzL,GAAgD,GAARA,IACxC0Y,EAAQ9N,GAAM,EAAGnlC,EAAO2b,uBAAyB,EAAGsqB,GAAoBF,EAAWG,WAAWF,SAErD,UAAtChmC,EAAO6X,aAAa+iB,GAAUh4B,OACrCqwC,EAAQ9N,GAAM,EAAGnlC,EAAO2b,uBAAyB,EAAGsqB,GAAoBF,EAAWG,WAAWF,OAC9F3B,EAAOc,GAAM,EAAGnlC,EAAO0b,sBAAwB,EAAGuqB,GAAoBF,EAAWG,WAAWF,OAC5FzL,EAAW4K,GAAM,EAAC,EAA6Bc,GAAoBF,EAAWG,WAAWF,QAEnD,SAAtChmC,EAAO6X,aAAa+iB,GAAUh4B,KAC9B,GAAK6yB,EAAW8gB,kBAMZrD,EAAqB/N,GAAM,EAAGnlC,EAAO2Z,UAAU,EAAGssB,GAAoBF,EAAWG,WAAWF,OAC5FmN,EAAmBhO,GAAM,EAAGnlC,EAAO2Z,UAAY,EAAGssB,GAAoBF,EAAWG,WAAWF,WAP7D,CAC/B,IAAI6lB,EAA+B5lB,GAAoBF,EAAWG,WAAWF,MAC7EkN,EAAqB/N,GAAM,EAAGnlC,EAAO8Z,SAAiC,GAAvB+xC,EAA4B5lB,GAAoBF,EAAWG,WAAWF,OACrH6lB,EAAuB5lB,GAAoBF,EAAWG,WAAWF,MACjEmN,EAAmBhO,GAAM,EAAGnlC,EAAO8Z,SAAiC,GAAvB+xC,EAA4B5lB,GAAoBF,EAAWG,WAAWF,MACtH,CAKLuY,EAA6E,GAA3DtY,GAAoBF,EAAWG,WAAWF,MAClB,SAAtChmC,EAAO6X,aAAa+iB,GAAUh4B,MAAyD,aAAtC5C,EAAO6X,aAAa+iB,GAAUh4B,MAA6D,SAAtC5C,EAAO6X,aAAa+iB,GAAUh4B,MAAyD,QAAtC5C,EAAO6X,aAAa+iB,GAAUh4B,OACrLi4B,EAAmB76B,EAAOsb,wBAAwB2qB,GAAoBF,EAAWG,WAAWF,QAEhGlL,EAAwBmL,GAAoBF,EAAWG,WAAWF,MAAc,GAChFjL,EAAwBkL,GAAoBF,EAAWG,WAAWF,MAAc,EACnF,GACK2gB,IAAeC,GAAqBD,GAAgBc,IAClDpU,IACA9Y,EAAQ,EACJgkB,GACAxjB,EAAwBzxB,KAAKme,MAAOsT,EAAwB,EAAK,IAAM,GACvED,EAAwBxxB,KAAKme,MAAOqT,EAAwB,EAAK,IAAM,KAEvEC,EAAwBzxB,KAAKme,MAAoE,IAA7D,IAAOsT,EAAwBD,GAAyB,IAAW,GACvGA,EAAwB,KAIpCrF,EAAWgiB,YAAY9c,EAAQz3B,EAAO03B,GAAU,EAAMsY,EAAoBC,EAAkBoL,EAAiB1jB,EAAkBC,EAAuBC,EAAuBkY,EAAO5O,EAAM9J,EAC7L,CACJ,CACJ,CAAC,MACF,QAAgC,CAC5B,MAAM9E,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAEpF,GAAIvB,GAAehB,EACf,IAAK,IAAIpgB,EAAY,EAAGA,EAAIrmC,EAAO8W,cAAeuvB,IAAK,CACnD,MAAMylB,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCzf,EAAclH,GAAM,EAAG2mB,EAASvqD,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC7E,GAAPqG,EACA5W,EAAW4E,UAAUgM,GAAGz8B,WAAa,EACvB,GAAPyiC,EACP5W,EAAW4E,UAAUgM,GAAGz8B,WAAa,EACvB,GAAPyiC,IACP5W,EAAW4E,UAAUgM,GAAGz8B,WAAa,GAEzC6rB,EAAW4E,UAAUgM,GAAG9L,SAAWuxB,EAASzf,EAC/C,MAED,IAAK,IAAIhG,EAAY,EAAGA,GAA4C,IAAvC5Q,EAAWphB,KAA+B,EAAIrU,EAAO8W,eAAgBuvB,IAAK,CACnG,GAAImgB,EAAa,CACb,MAAMuF,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCt2B,EAAW4E,UAAUgM,GAAG9L,SAAWwxB,EAAQ5mB,GAAM,EAAGnlC,EAAOkd,cAAc3b,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAC9H,MACGvQ,EAAW4E,UAAUgM,GAAG9L,SAAW4K,GAAM,EAAGnlC,EAAOkd,cAAc3b,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAG/E,GAApCvQ,EAAW4E,UAAUgM,GAAG9L,WACxB9E,EAAW4E,UAAUgM,GAAGz8B,WAAau7B,GAAM,EAAGnlC,EAAOwd,iBAAiBjc,OAAQ0kC,GAAoBF,EAAWG,WAAWF,OAE/H,CAGR,CAAC,MACF,QAA2B,CACvB,MAAMvQ,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpF,GAAmB,GAAfvzB,EAAWphB,KAAiC,CAC5C,MAAM23C,EAAoB1iD,KAAK6U,KAAKne,EAAOmY,sBAAwBnY,EAAOqY,yBAA2B,GAC/FuqC,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYgmB,GACnF,IAAK,IAAIhjD,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDysB,EAAW+gB,aAAazJ,SAAS/jC,GAAK45C,EAAKxb,KAAKpnC,EAAOqY,0BAE3Dod,EAAW+gB,aAAatJ,sBACxBlH,GAAagmB,CAChB,KAAM,IAAmB,GAAfv2B,EAAWphB,KAWlB,MAAM,IAAIxT,MAAM,yDAXkC,CAClD,MAAMmrD,EAAoB1iD,KAAK6U,KAAKne,EAAO2Z,UAAY3Z,EAAOmY,sBAAwBnY,EAAOqY,yBAA2B,GAClHuqC,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYgmB,GACnF,IAAK,IAAI1zB,EAAY,EAAGA,EAAIt4B,EAAO2Z,UAAW2e,IAAK,CAC/C,IAAK,IAAItvB,EAAY,EAAGA,EAAIhJ,EAAOmY,sBAAuBnP,IACtDysB,EAAWwgB,qBAAqB3d,GAAGyU,SAAS/jC,GAAK45C,EAAKxb,KAAKpnC,EAAOqY,0BAEtEod,EAAWwgB,qBAAqB3d,GAAG4U,qBACtC,CACDlH,GAAagmB,CAChB,CAEA,CACJ,CAAC,MACF,QAA4B,CACxB,MAAMv2B,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GAC9EgD,EAAoB1iD,KAAK6U,KAAKne,EAAOuY,uBAAyBvY,EAAO0Y,0BAA4B,GACjGkqC,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYgmB,GACnF,IAAK,IAAIhjD,EAAY,EAAGA,EAAIhJ,EAAOuY,uBAAwBvP,IACvDysB,EAAWsgB,cAAcnZ,UAAU5zB,GAAK45C,EAAKxb,KAAKpnC,EAAO0Y,2BAE7D+c,EAAWsgB,cAAc7I,sBACzBlH,GAAagmB,CAChB,CAAC,MACF,QACI,GAAKxF,GAAemB,GAAgBlB,GAAeiB,EAAa,CAC5D,MAAMjyB,EAAyBh3B,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACpFvzB,EAAWgG,UAAWwK,GAAoBF,EAAWG,WAAWF,MAC5DvQ,EAAWgG,UACXhG,EAAW+F,WAAa,EACxB/F,EAAWloB,SAAW,EAE7B,MACG,GAAIm5C,GAAgBC,GAAgBC,EAAiB,CAClBnoD,KAAKqhD,SAASiJ,GAA2B/e,YAAYgf,GACzEhvB,cAAgBmL,GAAM,EAAG,GAAQc,GAAoBF,EAAWG,WAAWF,MACzF,CAGL,MACJ,QAAuB,CACnB,IAAIimB,EACJ,GAAIxE,GAAelB,EAAa,CAC5B,MAAM5E,EAAuB1b,GAAoBF,EAAWG,WAAWF,MACjEkc,EAAmBjc,GAAoBF,EAAWG,WAAWF,MACnEimB,EAAkB3iD,KAAK6U,KAAgB,GAAX+jC,GAC5B,MAAMU,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYimB,GACnF,IAAK,IAAIjjD,EAAY,EAAGA,EAAIk5C,EAAUl5C,IAClCvK,KAAKqhD,SAAS6B,GAAcnC,KAAKx2C,GAAK45C,EAAKxb,KAAK,GAAK,CAE5D,MAAM,GAAIugB,GAAcpB,EAAa,CAClC,IAAI7C,EAAqB,EACzB,KAAQ,GAAKA,EAAcjlD,KAAK0jD,oBAAoBuB,IACpDuI,EAAkB3iD,KAAK6U,KAAK1f,KAAK6iD,kBAAoB7iD,KAAKyjD,SAAWwB,EAAa,GAClF,MAAMd,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYimB,GACnF,IAAK,IAAItK,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKyjD,SAAUl5C,IACvCvK,KAAKqhD,SAAS6B,GAAcnC,KAAKx2C,GAAK45C,EAAKxb,KAAKsc,GAAc,CAGzE,KAAM,CACH,IAAIA,EAAqB,EACzB,KAAQ,GAAKA,EAAcjlD,KAAK0jD,mBAAqB,GAAGuB,IACxDuI,EAAkB3iD,KAAK6U,KAAK1f,KAAK6iD,kBAAoB7iD,KAAKyjD,SAAWwB,EAAa,GAClF,MAAMd,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYimB,GACnF,IAAK,IAAItK,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IACtE,IAAK,IAAI34C,EAAY,EAAGA,EAAIvK,KAAKyjD,SAAUl5C,IACvCvK,KAAKqhD,SAAS6B,GAAcnC,KAAKx2C,GAAK45C,EAAKxb,KAAKsc,EAG3D,CACD1d,GAAaimB,CAChB,CAAC,MACF,SAA2B,CACvB,IACItK,EADAuK,EAA0B,EAE1BC,IAA2BzE,GAAclB,GAAgBD,GACzD6F,EAAgCD,EAAe,EAAI,EACnDE,EAA6BF,EAAe,GAAK,EACrD,GAAI1E,GAAelB,EACf5E,EAAe1b,GAAoBF,EAAWG,WAAWF,MAGzDA,IAEAkmB,EAAkBjmB,GAAoBF,EAAWG,WAAWF,MAC5DkmB,IAAqC,EACrCA,GAAmBjmB,GAAoBF,EAAWG,WAAWF,UAC1D,CACH2b,EAAe,EACf,IAAI2K,EAAgCjnB,GAAc,EAAG,EAAGY,GAAoBF,EAAWG,WAAWF,OAClG,KAAOsmB,EAAwB,GAC3BJ,IAAqC,EACrCA,GAAmBjmB,GAAoBF,EAAWG,WAAWF,MAC7DsmB,GAEP,CAED,MAAM1J,EAAuB,IAAI5b,GAAejB,EAAYC,EAAWA,EAAYkmB,GACnFlmB,GAAakmB,EAEb,MAAMtI,EAA0BlE,GAAKmE,cAAc7jD,EAAOkV,aAC1D,IAAIq3C,GAA6B,EAC7BC,GAAgC,EAChCC,GAA2B,EAG/B,MAAMC,EAAkClG,EAClCmG,EAA0B,GAEhC,OAAa,CACT,MAAM5qC,EAAmBtjB,KAAKqhD,SAAS6B,GACjCpW,EAA0B9sC,KAAKmjD,kBAAkBD,GACjDtX,EAAwB5rC,KAAKojD,gBAAgBF,GAE7CmC,EAAmCrlD,KAAKijD,4BAA4BC,GACpEoC,EAAoCrE,GAAKmE,cAAcC,EAA2B9jD,EAAO6Q,oBAEzFmzC,EAAoCtE,GAAKmE,cAAc9hC,EAAQioB,YAAYzoC,OAAS,GAG1F,GAAI8oC,EAAc,CACd,IAAIuiB,EAAoBjF,GAAcnB,GAAiBkB,GAAcjB,EAGrE,MAAMxC,EAAuC,EAAYD,EAA4BtE,GAAKmE,cAAcplD,KAAK+iD,8BAAgC,GAE7I,IAAK,IAAI0C,EAA0B,EAAGA,EAAkBniC,EAAQioB,YAAYzoC,OAAQ2iD,IAAmB,CAEnG,IAAIzuB,EAAyB1T,EAAQioB,YAAYka,GAEjD,IAAK,IAAI3Z,EAAc,EAAGA,EAAMvqC,EAAO6Z,SAAU0wB,IAAO,CAMpD,IAAI8Z,EAAiBzB,EAAKxb,KAAK,GAE/B,OAAQid,GACJ,KAAK,EACD5uB,EAAWpT,YAAYkoB,GAAOpF,GAAM,EAAG1mC,KAAKspB,kBAAoBtpB,KAAK+qB,kBAAoB,EAAGo5B,EAAKxb,KAAK,IACtG3R,EAAWygB,eAAe3L,GAAOpF,GAAM,EAAG1mC,KAAKqhD,SAASrqB,EAAWpT,YAAYkoB,IAAMP,YAAYzoC,OAAS,EAAGqhD,EAAKxb,KAAK6c,IACvH,MACJ,KAAK,EAEDxuB,EAAWpT,YAAYkoB,GAAO9rC,KAAKspB,kBAAoBod,GAAM,EAAG1mC,KAAK+qB,kBAAoB,EAAGo5B,EAAKxb,KAAK,IACtG3R,EAAWygB,eAAe3L,GAAOpF,GAAM,EAAG1mC,KAAKqhD,SAASrqB,EAAWpT,YAAYkoB,IAAMP,YAAYzoC,OAAS,EAAGqhD,EAAKxb,KAAK4c,IACvH,MACJ,KAAK,EACDvuB,EAAWpT,YAAYkoB,IAAQ,EAC/B,MACJ,KAAK,EACD9U,EAAWpT,YAAYkoB,IAAQ,EAiBvC,GAZc,GAAV8Z,IACA5uB,EAAW/X,WAAW6sB,GAAOqY,EAAKxb,KAAK,IAGtCwlB,GAAkE,aAAtD5sD,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,MAA6E,eAAtD5C,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,OAChI6yB,EAAWiV,eAAeH,GAAOqY,EAAKxb,KAAK,IAGW,6BAAtDpnC,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAM3nC,OAC9C6yB,EAAW0gB,mBAAmB5L,GAAOqY,EAAKxb,KAAK,IAG/CwlB,GAAWn3B,EAAWpT,YAAYkoB,IAAQ,EAAG,CAC7C,IAAIkU,EAAyB7wC,EAAyBnP,KAAKqhD,SAASrqB,EAAWpT,YAAYkoB,IAAMP,YAAYvU,EAAWygB,eAAe3L,IAAMh9B,SAG3G,GAA9BkoB,EAAW/X,WAAW6sB,IAKlB9U,EAAW/X,WAAW6sB,GADtBkU,EAC6Bz+C,EAAO0d,WAAWta,WAAW,iBAAiBF,MAG9ClD,EAAO0d,WAAWta,WAAW,eAAeF,MAG7EuyB,EAAWiV,eAAeH,GAAO,GAGE,GAA9B9U,EAAW/X,WAAW6sB,KAGvB9U,EAAW/X,WAAW6sB,GADtBkU,EAC6Bz+C,EAAO0d,WAAWta,WAAW,kBAAkBF,MAG/ClD,EAAO0d,WAAWta,WAAW,gBAAgBF,MAG9EuyB,EAAWiV,eAAeH,GAAO,EAExC,MACQqiB,GAEDn3B,EAAW/X,WAAW6sB,IAAQvqC,EAAO0d,WAAWta,WAAW,eAAeF,QAC1EqpD,EAAoB5K,EACpB6K,EAAuBtI,EACvBuI,EAAkBliB,GAOtBqiB,GAAyE,IAA9D5sD,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAMvsB,mBACzDvf,KAAKqhD,SAASrqB,EAAWpT,YAAYkoB,IAAMP,YAAYvU,EAAWygB,eAAe3L,IAAMh9B,SAAW,GAAKvN,EAAO0d,WAAW+X,EAAW/X,WAAW6sB,IAAMvsB,iBAE5J,CACJ,CACJ,CAGD,MAAM6uC,EAA+B,GACrC,IAAK,IAAIv0B,EAAY,EAAGA,EAAIvW,EAAQioB,YAAYzoC,OAAQ+2B,IAAK,CACzDu0B,EAAiBv0B,GAAK,GACtB,IAAK,IAAItvB,EAAY,EAAGA,EAAIhJ,EAAO6Z,SAAU7Q,IACzC6jD,EAAiBv0B,GAAGt4B,EAAO6Z,SAAW,EAAI7Q,GAAK,EAAI,KAAQ2+C,GAAcnB,GAAiBkB,GAAYjB,IAAiBpc,GAAiBtoB,EAAQioB,YAAY1R,GAAG5a,WAAW1U,IAAMhJ,EAAO0d,WAAWta,WAAmB,OAAEF,MAE9N,CACD,MAAMohD,EAAwB/Y,GAAkBlB,EAAgB,EAAqB,GAAjBtoB,EAAQglB,OAC5E,IAAIwd,EAAsBhZ,GAAkBlB,EAAgB,EAAIia,EAChE,MAAME,EAA0Bna,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMkB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,IACpIkZ,EAAsB,GAC5B,IAAK,IAAIz7C,EAAY,EAAGA,EAAIw7C,EAAcjjD,OAAQyH,IAC9Cw7C,EAAcx7C,IAAMs7C,EAExB,IAAK,IAAIt7C,EAAY,EAAGA,EAAIvK,KAAK0jD,mBAAoBn5C,IAAK,CACtD,MAAM8jD,EAAsB/qC,EAAQw9B,SAASv2C,GAE7C,GAAK++C,GAAcxB,GAAiBoB,GAAcnB,GAAiBkB,GAAcjB,EAC7EqG,EAAW9iB,YAAY,GAAK3E,GAAc,EAAGtjB,EAAQioB,YAAYzoC,OAAS,EAAGqhD,EAAKxb,KAAK4c,IACvF8I,EAAW9iB,YAAYzoC,OAAS,OAEhC,GAAI9C,KAAK2sC,mBAAoB,CACzB,MAAMM,EAA0BrG,GAAcrlC,EAAO6Q,mBAAoBizC,EAA0BlB,EAAKxb,KAAK2c,GAA6B/jD,EAAO6Q,oBACjJ,IAAK,IAAIynB,EAAY,EAAGA,EAAIoT,EAAiBpT,IACzCw0B,EAAW9iB,YAAY1R,GAAK+M,GAAc,EAAGtjB,EAAQioB,YAAYzoC,OAAS,EAAsB,GAAlB,EAAqBqhD,EAAKxb,KAAK4c,IAEjH8I,EAAW9iB,YAAYzoC,OAASmqC,CACnC,MACGohB,EAAW9iB,YAAY,GAAK,EAC5B8iB,EAAW9iB,YAAYzoC,OAASvB,EAAO6Q,mBAI/C,KAAM01C,GAAekB,GAAgC,GAAhB7E,EAAKxb,KAAK,IAAS,CACpD0lB,EAAW/iB,MAAMxoC,OAAS,EAC1B,QACH,CAED,IAAImjD,EAAkB,EACtB,MAAMqI,EAAmBD,EAAW/iB,MACpC,IAAIijB,EAAoB,EAExB,KAAOtI,EAAUjmD,KAAKotC,YAAc7rC,EAAOgR,eAAiBq5B,GAAe,CAEvE,MAAM4iB,EAAuC,GAAhBrK,EAAKxb,KAAK,GACvC,IAAIsC,GAAmB,EACnB0b,EAAqB,EAOzB,GANI6H,EACA7H,EAAa/f,GAAc,EAAGof,EAAaljD,OAAS,EAAGqhD,EAAKvb,aAAa,EAAG,IAE5EqC,EAA0B,GAAhBkZ,EAAKxb,KAAK,GAGnB6lB,GAAgBvjB,EAkBd,CACH,IAAI/M,EA0DAuN,EAWAvB,EApEJ,GAAIskB,EACAtwB,EAAQ8nB,EAAaW,GACrBX,EAAatlB,OAAOimB,EAAY,OAC7B,CAGH,GAFAzoB,EAAQ,GAEHwvB,EASmB,GAAhBvJ,EAAKxb,KAAK,GACVzK,EAAM9vB,WAAa+1C,EAAKxb,KAAK,GAAK,EAGlCzK,EAAM9vB,WAAa,OAVvB,IADA8vB,EAAM9vB,WAAa,EACZ8vB,EAAM9vB,WAAa,GAAqB,GAAhB+1C,EAAKxb,KAAK,IAASzK,EAAM9vB,aAc5D8vB,EAAMuwB,SAAWtK,EAAKjb,eAElBhL,EAAMwwB,YADN5G,EACmC,EAAf3D,EAAKxb,KAAK,GACtBiD,EAGYuY,EAAKxb,KAAK,GAFVwb,EAAKxb,KAAKwc,GAKlCjnB,EAAMmM,KAAO,GACbnM,EAAMp7B,OAAS,EACfo7B,EAAMywB,UAAY,EAClB,IAAK,IAAI90B,EAAY,EAAGA,EAAIqE,EAAMuwB,SAAU50B,IAAK,CAC7C,IAAI+0B,EAAc,GAClBA,EAAOtiB,UAA4B,GAAhB6X,EAAKxb,KAAK,GACzBimB,EAAOtiB,WAAWpO,EAAMywB,YAC5BzwB,EAAMp7B,QAAWsmD,GAAetB,EAC1B3D,EAAKlb,yBAA2B1nC,EAAOgR,aAAehR,EAAOmR,QAAQ1S,KAAKqsC,QAAQ15B,aAClFwxC,EAAKnb,mBACX4lB,EAAO5kB,KAAO9L,EAAMp7B,OAEhB8rD,EAAOhvB,KADPkoB,EAC6B,EAAf3D,EAAKxb,KAAK,GAChBiD,EAIMuY,EAAKxb,KAAK,GAHVwb,EAAKxb,KAAKwc,GAK5BjnB,EAAMmM,KAAK5/B,KAAKmkD,EACnB,CACJ,CACD5I,EAAaY,QAAQ1oB,GACjB8nB,EAAaljD,OAAS,IAAIkjD,EAAa5lB,MAGvCkuB,EAASxrD,QAAUyrD,GACnB9iB,EAAO,IAAIxB,GAAK,EAAGgc,EAASA,EAAU/nB,EAAMp7B,OAAQo7B,EAAMwwB,aAC1DJ,EAASC,KAAe9iB,IAExBA,EAAO6iB,EAASC,KAChB9iB,EAAK1G,MAAQkhB,EACbxa,EAAKzG,IAAMihB,EAAU/nB,EAAMp7B,OAC3B2oC,EAAKpB,KAAK,GAAGzK,KAAO1B,EAAMwwB,aAI9B,IAAItgD,EAAqB,EACzB,MAAMi4C,EAAuB,GAC7B,IAAK,IAAIxsB,EAAY,EAAGA,EAAIqE,EAAM9vB,WAAa8vB,EAAMywB,UAAW90B,IAAK,CAEjE,GAD6C,GAAhBsqB,EAAKxb,KAAK,GAehC,CACH,MAAMme,EAAqBlgB,GAAc,EAAGmf,EAAcjjD,OAAS,EAAGqhD,EAAKxb,KAAKglB,IAChFzjB,EAAQ6b,EAAce,GACtBf,EAAcrlB,OAAOomB,EAAY,EACpC,KAlBiB,CAEd5c,EAAQ4b,EACR,IAAI+I,EAFqB1K,EAAKhb,oBAG9B,KAAO0lB,EAAe,GAAG,CAErB,IADA3kB,KACwC,GAAjC6b,EAActlB,QAAQyJ,IAAcA,IAC3C2kB,GACH,CACD,KAAOA,EAAe,GAAG,CAErB,IADA3kB,KACwC,GAAjC6b,EAActlB,QAAQyJ,IAAcA,IAC3C2kB,GACH,CACJ,CAMD9I,EAAca,QAAQ1c,GAClB6b,EAAcjjD,OAAS8qD,GAAmB7H,EAAc3lB,MAExDvG,EAAIqE,EAAM9vB,WACVq9B,EAAKrB,QAAQh8B,KAAgB87B,EAE7Bmc,EAAW57C,KAAKy/B,GAIhB4b,EADAjsB,GAAKqE,EAAM9vB,WAAa,EACZq9B,EAAKrB,QAAQ,GAEbF,CAEnB,CACDuB,EAAKrB,QAAQtnC,OAASsL,EACtBi4C,EAAWO,QAAQnb,EAAKrB,QAAQ,IAChC,MAAM0kB,EAA6BljB,GAAgBtoB,EAAQioB,YAAY8iB,EAAW9iB,YAAY,IAAItsB,WAAW1d,EAAO6Z,SAAW,EAAIqwB,EAAKrB,QAAQ,MAAQ7oC,EAAO0d,WAAWta,WAAkB,MAAEF,MAC9L,IAAIsqD,EAAsB,EACtBd,GAA0Ba,IAC1BrjB,EAAKpB,KAAK,GAAGzK,MAAQmvB,EACrBA,EAAcb,EAAkB3sD,EAAOoP,UAEvCi7B,IACAH,EAAKpB,KAAK,GAAGzK,MAAQwuB,EAAiBC,EAAW9iB,YAAY,IAAIE,EAAKrB,QAAQ,KAElF,IAAIqkB,EAAmB,EACvB,IAAK,MAAMG,KAAU1wB,EAAMmM,KAAM,CACzBukB,EAAOtiB,WAAW+Z,EAAWqD,QAEjC,MAAM3f,EAAmBsc,EAAW,GAAK5a,EAAKrB,QAAQ,GACtD,GAAIqB,EAAKpB,KAAKvnC,QAAU2rD,EAEhBhjB,EAAKpB,KAAKokB,KAAc3kB,GAAYC,EAAU6kB,EAAO5kB,KADrD4B,EAC2DgjB,EAAOhvB,KAAOwuB,EAAiBC,EAAW9iB,YAAY,IAAIE,EAAKrB,QAAQ,IAAM2kB,EAE7EH,EAAOhvB,UAEnE,CACH,MAAMmL,EAAeU,EAAKpB,KAAKokB,KAC/B1jB,EAAIhB,SAAWA,EACfgB,EAAIf,KAAO4kB,EAAO5kB,KAEde,EAAInL,KADJgM,EACWgjB,EAAOhvB,KAAOwuB,EAAiBC,EAAW9iB,YAAY,IAAIE,EAAKrB,QAAQ,IAAM2kB,EAE7EH,EAAOhvB,IAEzB,CACJ,CACD6L,EAAKpB,KAAKvnC,OAAS2rD,EAED,GAAdhjB,EAAK1G,QAKG0G,EAAKnB,qBAJNgf,GAAcxB,GAAiBoB,GAAcnB,GAAekB,GAAYjB,IAGtEiB,IAAehB,IAAiBC,IAAiBC,GAAoBL,IAG1CxkC,EAAQioB,YAAY8iB,EAAW9iB,YAAY,IAAI4K,cALlC,GAAhBgO,EAAKxb,KAAK,IAU/Csd,EAAUrf,GAAc,EAAG5mC,KAAKotC,YAAc7rC,EAAOgR,aAAck5B,EAAKzG,IAC3E,MA9KG,GAAI4G,EAAc,CACd,MAAMojB,EAAuC,GAAhB7K,EAAKxb,KAAK,GACjCsmB,EAAqB9K,EAAKnb,mBAC5BgmB,EACA/I,GAAWgJ,EAGXhJ,GAAWgJ,CAElB,KAAM,CAIHhJ,GAH4BmD,GAAetB,EACrC3D,EAAKlb,yBAA2B1nC,EAAOgR,aAAehR,EAAOmR,QAAQ1S,KAAKqsC,QAAQ15B,aAClFwxC,EAAKnb,kBAGd,CAgKR,CACDslB,EAASxrD,OAASyrD,CACrB,CAED,GAAIvF,GAAelB,EACf,MAGA,GADA5E,IACIA,GAAgBljD,KAAK6iD,kBAAmB,KAEnD,CAGD,IAAMkF,GAAemB,GAAcD,GAAcjB,IAAiBgG,GAAmB,EACjF,IAAK,IAAI9K,EAAuB,EAAGA,EAAeljD,KAAKqhD,SAASv+C,OAAQogD,IACpE,IAAK,IAAIuC,EAA0B,EAAGA,EAAkBzlD,KAAKqhD,SAAS6B,GAAc3X,YAAYzoC,OAAQ2iD,IAAmB,CACvH,MAAMzuB,EAAyBh3B,KAAKqhD,SAAS6B,GAAc3X,YAAYka,GAKvE,GAJIh2C,EAAqBunB,EAAWloB,WAChCkoB,EAAWuG,OAASh8B,EAAO+P,YAAc,GAGzCw8C,GAAqB5K,GAAgB6K,GAAwBtI,EAAiB,CAC9E,MAAMyJ,EAAuBlvD,KAAKqhD,SAAS6B,GAAcnC,KAAK,GAC9D,GAAImO,EAAe,EAAG,CAGlB,MAAMlL,EAAmBhkD,KAAKqhD,SAAS6B,GAAcpC,SAASoO,EAAe,GAC7E,IAAIC,EAAqB,EACzB,IAAK,MAAM1jB,KAAQuY,EAAQ1Y,MACnBG,EAAKrB,QAAQ,IAAM7oC,EAAO6Z,SAAW,EAAI4yC,IACzCmB,EAAatkD,KAAKsC,IAAIgiD,EAAY1jB,EAAK1G,QAI3CoqB,EAAa,GACbnL,EAAQ1Y,MAAM7gC,KAAK,IAAIw/B,GAAK1oC,EAAO6Z,SAAW,EAAI4yC,EAAiB,EAAGmB,EAAYvV,GAEzF,MAGG,GAAI55C,KAAKqhD,SAAS6B,GAAcpC,SAASh+C,OAASvB,EAAO4Q,YAAa,CAClE,MAAM6xC,EAAmB,IAAI3Y,GAG7B,GAFArrC,KAAKqhD,SAAS6B,GAAcpC,SAASr2C,KAAKu5C,GAC1ChkD,KAAKqhD,SAAS6B,GAAcnC,KAAK,GAAK/gD,KAAKqhD,SAAS6B,GAAcpC,SAASh+C,OACvE9C,KAAKqhD,SAAS6B,GAAcpC,SAASh+C,OAAS9C,KAAK0jD,mBAAoB,CACvE,IAAK,IAAI0L,EAAc,EAAGA,EAAMpvD,KAAKqhD,SAASv+C,OAAQssD,IAC9CpvD,KAAKqhD,SAAS+N,GAAKtO,SAASh+C,QAAU9C,KAAK0jD,oBAC3C1jD,KAAKqhD,SAAS+N,GAAKtO,SAASr2C,KAAK,IAAI4gC,IAG7CrrC,KAAK0jD,oBACR,CACDM,EAAQzY,YAAYzoC,OAAS,EAC7BkhD,EAAQzY,YAAY,GAAKwiB,EACzB/J,EAAQ1Y,MAAMxoC,OAAS,EACvBkhD,EAAQ1Y,MAAM7gC,KAAK,IAAIw/B,GAAK1oC,EAAO6Z,SAAW,EAAI4yC,EAAiB,EAAG,EAAGpU,GAC5E,CAER,CACJ,CAGZ,CAAC,MACF,QACI,MAAM,IAAIx3C,MAAM,8BAAgCokD,OAAOC,aAAa4D,GAAW,cAAgB9iB,EAAY,GAAK,IAAMD,EAAWsgB,UAA2B,EAAGrgB,IAInKhmC,EAAO+B,6BACP+rD,OAAOC,SAAS/gB,KAAOvuC,KAAKkkD,iBAC5BqL,YAAW,KAAQD,SAASE,QAAQ,GAAK,I,CAIzC,SAAOC,CAAavO,GACxB,IAIQ,OAAOrM,QAAQ,IAAIiX,IAAI5K,GAE9B,CACD,MAAMtpC,GACF,OAAO,CACV,C,CAIG,QAAOsyC,CAA+BrpD,EAAakpD,EAA4BC,EAA+BlqD,EAAwCmqD,GAC1J,MACMhmD,EAAyC1C,EAAOC,UADzB,GACiDe,QACxE2B,EAA+B3C,EAAOK,gBAFf,GAE6CW,QAEpEmtD,EAA+B3F,EAAiBjnD,OACtDinD,EAAiBt/C,KAAK5J,GAGtB,MAAMC,EAAwBS,EAAOC,UAAUsB,OAE/C,IAAI6sD,EAAoB9uD,EAEpBI,EAA2B,MAC3B2uD,GAA8B,EAC9BC,EAAwB,GACxBC,GAA6C,EAC7CC,EAAyC,KACzCC,EAAuC,KACvCC,EAA2C,KAC3CC,EAAwC,KACxCC,GAAuC,EAEvCC,GAA+B,EAC/BC,EAA4BxvD,EAAI4/B,QAAQ,KACxC6vB,GAA2B,EAC/B,GAA0B,IAAtBD,IACAC,EAAkBzvD,EAAI4/B,QAAQ,IAAK4vB,EAAoB,IAC9B,IAArBC,GAAwB,CACxB,MAAMC,EAAuB1vD,EAAIymD,MAAM+I,EAAoB,EAAGC,GAAiB3tC,MAAM,KACrF,IAAK,MAAM6tC,KAAaD,EAAY,CAChC,MAAME,EAAqBD,EAAUE,OAAO,GACtCC,EAAqBH,EAAUlJ,MAAM,EAAGkJ,EAAU1tD,QACrC,MAAf2tD,EACAxvD,EAAmBylC,GAAM,IAAM,MAAWG,GAAsB8pB,EAAY,QACtD,MAAfF,EACPZ,EAAgBhpB,GAAsB8pB,EAAY,IAC5B,MAAfF,EACPb,GAAqB,EACC,MAAfa,GACPV,EAA0B9oB,GAAoB0pB,EAAY,MAC3B,MAA3BZ,IACAD,GAAoC,IAElB,MAAfW,GACPT,EAAwB/oB,GAAoB0pB,EAAY,MAC3B,MAAzBX,IACAF,GAAoC,IAElB,MAAfW,GACPR,EAA4BhpB,GAAoB0pB,EAAY,MAC3B,MAA7BV,IACAH,GAAoC,IAElB,MAAfW,GACPP,EAAyBjpB,GAAoB0pB,EAAY,MAC3B,MAA1BT,IAGAA,EAAyBxpB,GAAM,EAAG,EAAOwpB,GACzCJ,GAAoC,IAElB,MAAfW,IACPN,GAA8B,EAC9BL,GAAoC,EAE3C,CACDH,EAAY9uD,EAAIymD,MAAMgJ,EAAkB,EAAGzvD,EAAIiC,QAC/CstD,GAAsB,CACzB,CAGL,IAAIQ,EAAiC,KACrC,IAAI3P,GAAKwO,GAAaE,GASlB,OADAkB,MAAMhwD,EAAM,wBACL,EAGX,GARQ+vD,EAAY,IAAI9E,IAAI6D,GAQxB1F,IACKmG,GAAoC,MAAbQ,EAAmB,CAY3C,SAASE,IACLnB,EAAY9uD,EAAIymD,MAAM,EAAGzmD,EAAI4/B,QAAQ,MAIjCmwB,EAAY,IAAI9E,IAAI6D,GAExB1uD,EAAmBylC,GAAM,IAAM,MAAWG,GAAsBhmC,EAAIymD,MAAMzmD,EAAI4/B,QAAQ,KAAO,GAAI,O,CAKrG,SAASswB,IACLpB,EAAY9uD,EAAIymD,MAAM,EAAGzmD,EAAI4/B,QAAQ,MAIjCmwB,EAAY,IAAI9E,IAAI6D,GAExBE,EAAgBhpB,GAAsBhmC,EAAIymD,MAAMzmD,EAAI4/B,QAAQ,KAAO,GAAI,G,EA9BlD,GAArB5/B,EAAI4/B,QAAQ,OAEZkvB,EAAY9uD,EAAI4oD,WAAW,IAAK,IAI5BmH,EAAY,IAAI9E,IAAI6D,GAExBC,GAAqB,IA0BA,GAArB/uD,EAAI4/B,QAAQ,OAAmC,GAArB5/B,EAAI4/B,QAAQ,KAClC5/B,EAAI4/B,QAAQ,KAAO5/B,EAAI4/B,QAAQ,MAC/BswB,IACAD,MAGAA,IACAC,OAIqB,GAArBlwD,EAAI4/B,QAAQ,MACZqwB,KAEqB,GAArBjwD,EAAI4/B,QAAQ,MACZswB,IAGX,CAGL,GAAiB,MAAbH,EAAmB,CAEnB,IAAII,EAAsBrB,EAC1B,MAAMsB,EAAyB,GAsB/B,IAAI9sD,EArBqB,QAArBlD,GAA4BgwD,EAAaxmD,KAAK,IAAMxJ,GAClC,KAAlB4uD,GAAsBoB,EAAaxmD,KAAK,IAAMolD,GAC9CD,GAAoBqB,EAAaxmD,KAAK,KACtCqlD,IAC+B,MAA3BC,GAAiCkB,EAAaxmD,KAAK,IAAMslD,GAChC,MAAzBC,GAA+BiB,EAAaxmD,KAAK,IAAMulD,GAC1B,MAA7BC,GAAmCgB,EAAaxmD,KAAK,IAAMwlD,GACjC,MAA1BC,GAAgCe,EAAaxmD,KAAK,IAAMylD,GACxDC,GAA6Bc,EAAaxmD,KAAK,MAEnDwmD,EAAanuD,OAAS,IACtBkuD,EAAsB,IAAMC,EAAajwC,KAAK,KAAO,IAAM2uC,GAE/D5F,EAAiB2F,GAAwBsB,EAcrC7sD,EAAOumD,mBAAmBkG,EAAUM,SAASluC,QAAQ,eAAgB,KAMzE,MAAM5e,EAAqB,EAC3B7C,EAAOC,UAAUV,GAAiB,CAC9BqD,KAAMA,EACNC,WAAYA,EACZ+sD,iBAAiB,EACjB7sD,aAAcsrD,EACdwB,QAASvB,EACTzuD,WAAYH,EACZsB,QAAS0B,EACTQ,MAAO3D,GAEXS,EAAOG,aAAaZ,GAAiB,CACjCqD,KAAMA,EACNC,WAAYA,EACZ+sD,iBAAiB,EACjB7sD,aAAcsrD,EACdwB,QAASvB,EACTzuD,WAAYH,EACZsB,QAAS2B,EACTO,MAAO3D,GAEXS,EAAOK,gBAAgBd,GAAiB,CACpCqD,KAAMA,EACNC,WAAYA,EACZ+sD,iBAAiB,EACjB7sD,aAAcsrD,EACdwB,QAASvB,EACTzuD,WAAYH,EACZsB,QAAS2B,EACTO,MAAO3D,GAEX,MAAMuwD,EAA8C,CAChDz7C,KAAQ,OACR8kB,SAAY,GACZ5rB,QAAW,GACX6rB,WAAc,SACdC,cAAiB,EACjB1lB,cAAiB,EACjB2lB,MAAS,UACTxwB,KAAQlG,EACR22B,OAAU,OACV5hB,UAAa,IAEb42C,IACAuB,EAAwD,6BAAI,EAC5DA,EAA8C,kBAA+B,MAA3BtB,EAAkCA,EAA0B,EAC9GsB,EAA4C,gBAA6B,MAAzBrB,EAAgCA,EAAwB,EACxGqB,EAA6C,iBAA8B,MAA1BnB,EAAiCA,EAAyB,EAC3GmB,EAAkD,sBAAIlB,EACtDkB,EAAgD,oBAAiC,MAA7BpB,EAAoCA,EAA4B,GAExH,MAAMqB,EAA6B,CAC/B7sD,MAAO,EACPN,KAAMA,EACNyyB,YAAa,GACb6D,SAAU42B,GAGd,GADArH,EAAoBv/C,KAAK6mD,IACpB/vD,EAAO+B,2BAA4B,CASpC1C,EAAmB+uD,EAAW7uD,EAAeuwD,EARjB,CACxB7zB,4BAA+BsyB,EAC/BryB,kBAAqBsyB,EACrBryB,gBAAmBsyB,EACnBryB,iBAAoBuyB,EACpBtyB,sBAAyBuyB,EACzBtyB,oBAAuBoyB,GAE8DhvD,EAC5F,CACDnB,EAAmBG,YAAYa,GAAc,EAC7ChB,EAAmBI,SAASY,GAAiB6uD,EAC7C7vD,EAAmBK,cACtB,CAED,OAAO,C,CAGH,QAAOwpD,GACXpoD,EAAOC,UAAYiN,EAAUlN,EAAOC,UAAU8lD,MAAM,EAAG/lD,EAAOyS,qCAC9DzS,EAAOG,aAAe+M,EAAUlN,EAAOG,aAAa4lD,MAAM,EAAG/lD,EAAOyS,qCACpEzS,EAAOK,gBAAkB6M,EAAUlN,EAAOK,gBAAgB0lD,MAAM,EAAG/lD,EAAOyS,oC,CAGtE,QAAOyzC,GACXzxB,GAAaqxB,cAAgB,KAE7BpG,GAAK0I,IAEL7pD,EAAmBG,YAAc,GACjCH,EAAmBI,SAAW,GAC9BJ,EAAmBK,aAAe,EAClCL,EAAmBM,cAAgB,EACnCN,EAAmBS,cAAgB,EACnCI,EAAiBoC,cAAc,IAAI1C,EAC/BP,EAAmBK,aACnBL,EAAmBM,cACnBN,EAAmBS,e,CAIpB,YAAAorC,CAAa4lB,GAAuB,EAAMC,EAAoB,EAAGC,GAAuB,GAC3F,MAAMC,EAAyB,GAC/B,IAAK,IAAIxO,EAAuB,EAAGA,EAAeljD,KAAK6iD,kBAAmBK,IAAgB,CACtF,MAAM5/B,EAAmBtjB,KAAKqhD,SAAS6B,GACjCyO,EAA4B,GAC5B7kB,EAA0B9sC,KAAKmjD,kBAAkBD,GACjDtX,EAAwB5rC,KAAKojD,gBAAgBF,GACnD,IAAK,MAAMlsB,KAAc1T,EAAQioB,YAC7BomB,EAAgBlnD,KAAKusB,EAAW2U,gBAGpC,MAAMimB,EAAyB,GAC/B,IAAK,MAAM5N,KAAW1gC,EAAQw9B,SAC1B8Q,EAAannD,KAAKu5C,EAAQrY,aAAa3rC,KAAMsjB,EAASsoB,IAG1D,MAAMimB,EAA0B,GAChC,GAAIN,EAAa,IAAK,IAAIhnD,EAAY,EAAGA,EAAIvK,KAAKujD,UAAWh5C,IACzDsnD,EAAcpnD,KAAK6Y,EAAQy9B,KAAKx2C,IAEpC,IAAK,IAAIunD,EAAY,EAAGA,EAAIN,EAAWM,IAAK,IAAK,IAAIvnD,EAAYvK,KAAKujD,UAAWh5C,EAAIvK,KAAKujD,UAAYvjD,KAAKwjD,WAAYj5C,IACnHsnD,EAAcpnD,KAAK6Y,EAAQy9B,KAAKx2C,IAEpC,GAAIknD,EAAa,IAAK,IAAIlnD,EAAYvK,KAAKujD,UAAYvjD,KAAKwjD,WAAYj5C,EAAIvK,KAAKyjD,SAAUl5C,IACvFsnD,EAAcpnD,KAAK6Y,EAAQy9B,KAAKx2C,IAGpC,MAAMwnD,EAAqB,CACvBn8C,KAAQg2B,EAAe,MAASkB,EAAiB,OAAS,QAC1D3oC,KAAQmf,EAAQnf,KAChBonC,YAAeomB,EACf7Q,SAAY8Q,EACZI,SAAYH,GAEX/kB,IAEDilB,EAA+B,gBAAIzuC,EAAQglB,OAAS,GAExDopB,EAAajnD,KAAKsnD,EACrB,CAED,MAAMnjD,EAAc,CAChBzK,KAAQnE,KAAK2jD,MACbl1B,MAASzuB,KAAK+jD,aACdhX,OAAUkU,GAAKgR,GACfj4B,QAAWinB,GAAKoD,EAChBT,OAAU5jD,KAAK4jD,OACfC,YAAe7jD,KAAK6jD,YACpBC,gBAAmB9jD,KAAK8jD,gBACxBR,MAAS/hD,EAAO6O,OAAOpQ,KAAKsjD,OAAOn/C,KACnC+tD,YAAelyD,KAAKmhD,YACpBrtC,IAAOvS,EAAOgP,KAAKvQ,KAAK8T,KAAK3P,KAC7BguD,UAAanyD,KAAKsoC,OAClB8Y,SAAYphD,KAAKohD,SACjBgR,UAAapyD,KAAKujD,UAClB8O,SAAYryD,KAAKwjD,WACjBpW,YAAeptC,KAAKotC,YACpBklB,aAAgB/wD,EAAOmR,QAAQ1S,KAAKqsC,QAAQ15B,aAC5C4/C,eAAkBvyD,KAAKqiD,MACvB9kB,OAAUv9B,KAAKu9B,OACfqkB,WAAc5hD,KAAK4hD,WACnBJ,qBAAwBxhD,KAAKwhD,qBAC7BC,eAAkBzhD,KAAKyhD,eACvBH,WAActhD,KAAKshD,WACnBC,UAAavhD,KAAKuhD,UAClBI,WAAc3hD,KAAK2hD,WACnBD,iBAAoB1hD,KAAK0hD,iBAGzBsB,mBAAsBhjD,KAAKgjD,mBAC3BrW,mBAAsB3sC,KAAK2sC,mBAC3B0U,SAAYqQ,GAOhB,OAJkC,MAA9B17B,GAAaqxB,eAAyBrxB,GAAaqxB,cAAcvkD,OAAS,IAC1E8L,EAAsB,cAAIonB,GAAaqxB,eAGpCz4C,C,CAGJ,cAAAg+B,CAAe4lB,EAAiBriD,EAAqB,QAExD,GADAnQ,KAAK4iD,eAAc,IACd4P,EAAY,OAKC,QAAdriD,GAC4B,WAAxBqiD,EAAmB,SAEO7jC,MAAtB6jC,EAAiB,OACjBriD,EAAa,UAKewe,MAA5B6jC,EAAuB,aACvBriD,EAAa,YAKzB,MAAM48B,GAAgC,QAAd58B,EAAuBqiD,EAAmB,OAAIriD,GAAY68B,cAqBlF,GApB0Bre,MAAtB6jC,EAAiB,OACjBxyD,KAAK2jD,MAAQ6O,EAAiB,MAGN7jC,MAAxB6jC,EAAmB,SACnBxyD,KAAK4jD,OAAS4O,EAAmB,QAGJ7jC,MAA7B6jC,EAAwB,cACxBxyD,KAAK6jD,YAAc2O,EAAwB,aAGV7jC,MAAjC6jC,EAA4B,kBAC5BxyD,KAAK8jD,gBAAkB0O,EAA4B,iBAG5B7jC,MAAvB6jC,EAAkB,QAClBxyD,KAAK+jD,aAAeyO,EAAkB,OAGP7jC,MAA/B6jC,EAA0B,cAAgB,CAC1C,MAAMnL,EAA0BmL,EAA0B,cAC1D,GAAkC,MAA9Bx8B,GAAaqxB,eAAyBrxB,GAAaqxB,cAAcrmC,KAAK,OAASqmC,EAAcrmC,KAAK,MAAO,CAKzGzf,EAAO+B,4BAA6B,EAEpC29C,GAAK0I,IAEL,IAAIC,GAAiC,EACjCC,GAAqC,EACrCC,GAAwC,EAC5C,MAAMC,EAA6B,GAC7BC,EAAgC,GACtC,IAAK,MAAMnpD,KAAOwmD,EACd,GAA0B,kBAAtBxmD,EAAImsC,cACC4c,IACDA,GAAwB,EACxBG,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,SAGtB,GAA0B,sBAAtBlD,EAAImsC,cACJ6c,IACDA,GAA4B,EAC5BE,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,SAGtB,GAA0B,yBAAtBlD,EAAImsC,cACJ8c,IACDA,GAA+B,EAC/BC,EAAiBt/C,KAAK5J,GACtBkD,EAAmB,QAGtB,CAKD,MAAMkmD,GAA0B,EAChChJ,GAAKiJ,EAA+BrpD,EAAKkpD,EAAkBC,EAAqBlqD,EAAoBmqD,EACvG,CAKL,GAHIF,EAAiBjnD,OAAS,IAC1BkzB,GAAaqxB,cAAgB0C,GAE7BC,EAAoBlnD,OAAS,EAAG,CAChC,MAAMqnD,EAAkD17C,EAAUu7C,GAClEh0B,GAAaK,iBAAiBL,GAAaK,iBAAiBvzB,QAAU,CAClEqB,KAAM,wBACNmyB,QAAS6zB,EACT1lD,MAAOuxB,GAAaK,iBAAiBvzB,OAE5C,CACJ,CACJ,KAAM,CAIH,IAAI2vD,GAAmC,EACvC,GAA8B9jC,MAA1B6jC,EAAqB,SACrB,IAAK,IAAItP,EAAuB,EAAGA,EAAesP,EAAqB,SAAE1vD,OAAQogD,IAAgB,CAC7F,MAAM6O,EAAqBS,EAAqB,SAAEtP,GAClD,GAA8B,UAA1B6O,EAAoB,MAIpBtvD,MAAM8d,QAAQwxC,EAA2B,aAAI,CAC7C,MAAMW,EAA2BX,EAA2B,YAC5D,IAAK,IAAIxnD,EAAY,EAAGA,EAAImoD,EAAkB5vD,OAAQyH,IAAK,CACvD,MAAM0uC,EAAwByZ,EAAkBnoD,GAChD,GAAiC,SAA7B0uC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAM0Z,EAAmB1Z,EAAuB,KAE1C2Z,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YACA,cACA,UACA,YACA,UACA,YACA,eAEAF,EAAMG,SAASJ,GACfF,GAA0B,EACnBI,EAASE,SAASJ,IACzBF,GAA0B,EAG1BxZ,EAAuB,KAAI2Z,EAAMC,EAASzX,WAAUxjC,GAAKA,IAAM+6C,MACxDG,EAAaC,SAASJ,KACX,YAAbA,GAAuC,UAAbA,GAAoC,gBAAV5lB,KAKrD0lB,GAA0B,EAG1BxZ,EAAuB,KAAI2Z,EAAME,EAAa1X,WAAUxjC,GAAKA,IAAM+6C,KAG9E,CACJ,CACJ,CAEDF,GACAlxD,EAAO+B,4BAA6B,EAEpC29C,GAAK0I,IAEL5lD,EAAmB,GACnBiyB,GAAaqxB,cAAgB,CAAC,kBAII,MAA9BrxB,GAAaqxB,eAAyBrxB,GAAaqxB,cAAcvkD,OAAS,IAG1EvB,EAAO+B,4BAA6B,EACpC29C,GAAKwG,IAGhB,CAGD,GADAznD,KAAKsjD,MAAQ,EACc30B,MAAvB6jC,EAAkB,MAAgB,CAClC,MAAMQ,EAAoC,CACtC,YAAa,qBACzB,YAAa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"}